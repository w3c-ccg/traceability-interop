{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fa14da24-ee3a-42ac-8634-107b09db7200",
        "name": "Clear Cache",
        "item": [
          {
            "id": "87b8f5b7-9323-40c3-a809-09252630cb71",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42b44f46-c935-4c51-8b9f-bc883753bfa1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d9cee2bd-4400-4dd4-853f-8adba3c75a32"
                }
              }
            ]
          },
          {
            "id": "cf8e5dfa-6e9b-4c3b-b744-85a371162e99",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e74f671a-d067-45ac-a985-fe31c9e36100",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c4f2fe31-269c-44a4-a856-ca2297ea0cc7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7c80c7af-d037-417d-9f61-06fe94c92973",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "75861a3a-2dbc-4f02-a875-7bf044f1ba85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c60b310b-83f9-4b85-850d-41b9506cd2a0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85f495e7-1bdf-42ab-99bf-cca75728f617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b87adc5-c04a-444e-bb5a-863fe240d061"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd548238-009f-4934-a707-7bb3066e2951",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1527de5a-dac8-4516-8c78-8a8e01e92f51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0427075b-8eed-453e-96e9-502978c65cfd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e502a8d0-9ecd-4ec2-b5a9-80104efbd2da"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73c911d5-e9e4-47f0-a3fb-a365c6c0e3c7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1e5a3581-70b0-4043-af51-c18f7c8bb8b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4c1982f-b3d3-4f38-854f-015da78d93d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e6ad90d-c3d0-46ae-b04d-2995dc441b1d"
            }
          }
        ]
      },
      {
        "id": "a23ee92d-32cc-42b9-a8ca-468de746e862",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "15b20a5f-bc8e-4e09-ad60-fafc87e7d97b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6853268e-2029-49e9-8706-31a85d0a0b45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bf9ed57-3d5e-46b8-bb45-dc1586475bf8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f857a4f2-c179-48fc-b13e-28c10c868ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c41fb7b-592d-408f-b31f-8ba4459ba416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a913005-1b03-442b-bc6c-83b443245050",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dceab56-9dc3-462d-b38d-a14a5891bd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20da8e5e-062f-4c15-86ef-0844caf22352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fd6e44-8557-4fc8-adbe-5736b21cc891",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e74739f-a5ee-41cf-96f4-eeb18c40f3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46f286c5-8894-44b0-8329-d075d0fee12d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81058aa7-bb0a-4c84-a0c8-e03676a8fdfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2501c1f-35f4-4fae-a49e-d5e6075d5556",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0876b5ac-083c-45a7-8b64-ee584e8073ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1aabdbd6-12ec-431d-ac7b-44a6b1759f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fb1e7a-dc5b-45fc-a1c7-86102ab7d9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ed264f-3d95-43ec-afa7-bdf61e7aaafa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a6beaff-4851-4437-9d4d-1f24911587fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "443bbfa8-1475-42e8-abad-042f0fac7829",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b1abfed-418e-45df-9dcd-69a6bd9cfe04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ece8c57b-ca6c-45e5-8d61-047944930634"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "333ca271-a971-49a8-ab8f-1dae7a575d7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e92bcf41-5f30-49c7-8fde-68eecfb3e44f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "544723d1-e65e-426c-a327-7bdcb5838163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cf5491b-0390-4787-88fe-2a1f8d2f05e9"
            }
          }
        ]
      },
      {
        "id": "7b6e1a73-f895-4758-81f0-cc98eff63267",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "98982e8f-83dd-4265-b04f-166057f0cb41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d73aa0c7-bdaf-45ba-82af-7cef59641062",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "08080880-ec78-4185-b604-77003cc5d68e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8bfc18-188e-43e0-9c48-c0ab75f8ea1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40260725-b0d2-41b7-8d27-afc5d80184a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc50b3f-e14f-460e-b33a-1ba856a8bcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65d12e29-0f60-46da-a137-27c76d9b2fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a83f65-e0d6-43db-b208-e5d913f284c2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600106e3-46fe-44f6-9d28-e2776a96bdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd11c3c1-68f6-428e-8bbc-fa87b9a694e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ebe15b-60f5-4718-a418-1ebc21164ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3492da65-a8c6-4706-b885-794de4d63a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ceadaa-658c-4883-b11e-2c2ed851521f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa57a16-7919-4d51-b7b3-0156b847626c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ff71e8-0ed9-4a97-9e02-8ec22e1e0518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196e18b2-9181-4209-8139-96dd19aeee63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b4d5813-ceeb-405a-afee-6b5f9db35dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dd300b-0b1c-47bb-b153-54f5ed815541",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9487583e-b720-44ce-9f11-def2428a1506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eb216d-64ff-4b47-a7f2-970182a0b49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351227fc-cde3-46ee-acf3-432f07ff9149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7a9140f-fbbe-43c6-aaf3-01dedffdb1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9745cc-0105-4595-b60a-a6adbbed017c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce71f8b-9ac3-493d-b922-6f389510046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a9cf3f-329c-4ac7-8a06-8e216a1c555e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411e8a68-5bc2-4afe-9af1-33944ed8adf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fae0cdfc-c51a-4d87-bb04-ef9cbe2de77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b241aa33-5663-4f50-bdb4-031f6b0e993a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eae2e52-c590-4da3-9432-6994855bb958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a036c3-26b8-4638-8c0d-81095d70be59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61fc5d4-c92b-42b0-be69-00689632e1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f3b9ef6-1c0a-46bf-8c5f-bfe9b93b1427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5e3712-a612-4d5d-aa15-dc92a3ce2e77",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b59b165-e16e-4709-877e-7044f9704697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0071914b-97b3-4452-8ea4-e22ad7ad6929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685ba7c7-62f7-416a-848c-6c1f1bf56952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6cf4f4f-f757-4e32-87a5-56456bce19cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599a6f15-7a15-4143-abef-5c6615e25a18",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a02311-4115-459f-b1d4-a687cd03dce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260a12b7-e62b-492c-b156-4357e52a868b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128c0f3a-9246-44d7-be73-526cd4a02f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3a01f18-6659-45c8-8153-bb704fd6cc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69d96e0-327e-4856-af73-03c7ae28de28",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19efd556-a776-4936-ae90-f08e6efef77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2935bfe-b141-4f93-b4e6-f5ec5508b840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75055d6-bff3-42de-8795-e2e3e98861e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "462da94c-9754-4078-a20b-17252c3c5f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78169f4-3780-4023-a9f3-a5e8d588b09e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a048aaaf-9784-4e7d-9ae5-d42de43ff62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2effcd-0d31-4740-a804-8aff3a095bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddb6469-eeb1-418a-8002-f1cf838abce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "812a5924-417b-4dc1-82b3-5c8f7772d757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50eaec1-2888-4021-b026-fb63c5164439",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a797ee46-e749-4755-8348-7db31d08afbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2607fbfc-2760-4259-83f4-701dca3b0949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153bb354-0266-4907-9126-3c7232743944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6735a0a-1f98-4667-a451-bb0ba496e458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d122a1a-ef2b-40a4-b33d-b5cbbfd0c912",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc38a1f-1584-4d73-be09-b147560e71ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3937e6fa-f9d0-4b12-a76d-649381d568c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5bc737-b3ee-4eb2-9db0-9e5442f18b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08133115-feed-45b5-bd00-c871fe20bd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca05a724-2e30-4676-b07c-36650b43c459",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbd8be4-545d-46da-b6a6-81b67b7d8c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a718c3e-9b56-4840-82bd-17600b034167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a987b9ee-f048-4068-b29a-705e54732d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c122e288-7c1b-40b9-947c-212567767c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1472c3b-f7cb-4d66-9950-8cc3a54bc377",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3d24d0-1f59-4bb7-8b00-3670c2499bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00483a7d-aea1-43c8-9b0c-4f27d7277bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90250c7c-84bb-484f-a322-a82e7f709ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fdea117-f4e0-4719-8d46-b44a8b695c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276888ac-ed32-4f0e-bcc1-0f344598acfe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fae77c-5529-4696-b122-dc0f11c3d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0469215e-df98-459d-8662-80b469a1603e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8761ec-0bd2-4f18-91a0-2fcb0a9f99f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b152c6e5-df0f-4820-862f-d76732b076ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c7c91e-cb15-471e-9c48-d5644869a00a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c969c9a8-d5d6-4838-829d-4c3db291bd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ef65c7-acd2-4f9d-a168-ae1a6612f424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abbede7-5bb4-4ff8-ba25-1426ccba393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9da520c5-0331-4bcf-858c-867dbdd5fd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cc4021-5959-41d5-8c85-d79047813a72",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eae7430-539a-4a27-9a8c-76e049948f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05d2567-9e66-422d-98e4-58bf4bf19208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2967c392-14cb-48cb-884a-1058ac93fe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dfff27c-27ed-4c59-a596-c6c2c1563eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d41dce-ee66-4fc1-87d0-f59884cc9b0d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b933fcd-8e9e-4cda-9ac2-6990036fde2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a434298b-b91d-4081-a2dd-0d396e7426e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc73ac4a-458d-4ee9-9705-e495b900c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d418a02-e3dd-403d-b773-a7e04a185f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b6633c-e584-45aa-a38b-31550da185c0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfd65f2-157f-4b16-967c-70947f943a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d538a8-e848-428b-80f0-e9045221acc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5a010e-8d00-46cb-a5de-7f26ecc22af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4eb2490-b7f1-4dfe-865f-75653afaddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e320f15d-ccf3-4747-af81-1a16186f5314",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b303d75-b5c9-4f81-b3ab-09b776ecce7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ded179-5a42-4a55-b553-90cf8439b9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8ef510-b2c5-468f-b98b-1081396ee147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efab620-f59f-4254-af61-f2cd6f90524f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef31650b-1e5f-47e8-add3-41ce45871042",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc14fce-0a3d-4a66-8129-98240b044d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dae4c82-769d-427c-9e48-20f5a0f7bf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9464f031-debd-46ed-a9c0-404e3dbc292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ed7cdb-a3cb-44b9-bd7f-b703694fb52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c7add2-35a0-4105-8a40-6a32bd7ea4d0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc21a12-4004-4c1d-844d-17cd4a3e3669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9db7411-bad0-418c-bf5d-2bd730547931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb124d8-5555-4e01-8eb8-2461c199bad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb2eaec-4f47-4e18-8778-20eb999c2e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0321ac51-1a08-4aef-9225-00147b554706",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4201bc-a82b-4d6f-bd20-339a5d1b3da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dafca8-a260-4b02-a603-647b821f6e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfb85de-55f3-4a77-8fe6-8565cc708ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d359c07f-3823-490a-bbe4-cc0810a9a84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d277a06-7901-48b9-b1cb-deca07ac1a75",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27053e79-b206-4c88-b668-4ba6dd36ea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d31c98e-9240-4a87-bc87-357c633c52cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb67c6b0-a75f-4a95-a10f-dabb6b70ad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6272d43-8383-41fc-8db6-ee94c410042b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d5c6d2-27af-49d4-be04-b6a167fc1a29",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2c5333-d10c-46ad-a405-7cc005b26bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bc3288-d0c2-425d-94a4-f430d0203000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888bbe7f-2ebd-4718-a060-0c3c64b80446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce0cb77-d1bf-42ab-81d0-4a876920c8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832e490-0606-4d14-bd6f-74014f564819",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72092f3-a16c-4cc7-aab5-d1edcd9ab1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14ad381-4b66-41dc-9288-6c783485f467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59990025-7681-409a-8f01-64f84e24e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15865c3-2efe-4b6d-81da-1573f6b59147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafc2da7-f003-4dde-93aa-9ad1f79202ee",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717fc841-59af-4bd9-b195-68997402affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0730ca9d-e7ef-475e-9b69-8b76cc245e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dac92ec-5088-457b-9e28-b6ff9f3aed9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30bf5674-552a-4c98-b6fa-3006619aeb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18c312c-9fa9-4356-9506-81c96068f9e0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3512b0e4-9de6-48ee-b0cc-7500e978eed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb6f6bd-98c9-4154-b20d-a63bb534b094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21231c8c-2f86-49e0-970a-d83f9ec372e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3309026a-b75f-4121-a77a-0c7054df9b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792d5037-ffdf-46b1-a78c-82122e946a1d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbec201e-7d9a-45d3-8cfc-5d5fd36b3acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52fa1f6-0dbe-4003-bb8f-c459c94cf7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96111116-5411-42fc-bc40-2f7f688bebfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a242e0cb-35ef-424e-99a4-c9357dbb557a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cc76ee-610d-4cfe-a83f-58b4fa08d92a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce9f0b9-8c42-4ef2-931f-17035bcf1cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6442491a-6e20-4266-8180-6cc09beb3fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412f512b-7288-40d3-b8a7-73ba76b484e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1840031d-3e88-4888-ba28-1ef78e1cf034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1026dd91-38b6-4ff9-b523-ca13cf324745",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e08e90c-5e7d-4d77-9d04-169efe22c15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f219079b-05af-4fac-ab24-1b85d2f20a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4406a4c3-6742-4833-a24e-6c136505488d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed62875-2ba3-4f88-837d-f259a6fd60ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505d6145-986c-49a4-9718-b7f96a31db52",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c615a535-4b22-486e-a948-2e088e5613aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417e476e-0a88-44bf-9f9d-6333258c1c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4050c9a2-a543-4216-aef4-f55ecae16938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8624eea0-f046-4973-8a2a-14b0004569f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dc29fe-056d-4014-bd09-7c052756172a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04242e4d-73e8-4d39-8b59-125a682290ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78b8088-f0e7-48c5-8bbf-dd722bfb7fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c66b12-af32-4049-8507-59b2f078a1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de34da3-3ff0-49bb-ba51-e4418b4f1cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aac03cb-80fe-4492-9126-6ea602580e55",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ac3dc-061d-4f6e-bd43-f3701acc159b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ef49da-1f09-4eae-84e8-ec991f7b822a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42004fa-91b6-4d4b-b750-32852c13f2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e71f113-9225-4247-9fcb-4a7a83aefb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e0543d-6b39-4770-ade4-de265b6ed2fb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dcc0eb-1a3b-423d-b483-1fc74c10421f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376cb26d-629e-4451-90af-78b003da40a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d9a8d0-6c58-4f15-9566-59193cbfaf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "50c0b192-d0d7-4bcb-97ce-6481116ee890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1141574d-dbf8-4592-9922-cc94c78f84f5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f345d7-5ddb-4001-8dd4-4205d461f502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4ae0768-e848-47f3-be38-a2209b45b88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32acffee-782a-4be3-b788-47b3e8a851a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "419da30d-a41a-490b-b29f-54434958d3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dddf428-f322-4750-ad86-603a567a675e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38d0b20-4a1c-492f-bc2a-eb229df284b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b8cfd-6364-4c34-8d7b-d5802b5e1c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c12eb40-18df-4167-b975-302a31cdec2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25d29c8a-9b79-45b9-9f54-6bad719dc740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30b7b95-69d4-4312-b6f8-777bcf650985",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb24cd6-5e51-402c-ad89-ecf9411842fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6eb5461-5b0a-4d18-9ac2-286e7a9fa632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7281d724-7c71-43db-a174-ea435ad24646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "491734cd-b523-4c38-a069-6143717947b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc52bead-f309-4097-8235-5e3c2c814d1b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c907e0fc-4582-4033-a79f-20cf64e50a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ae2e63-6d1c-48b6-9a5d-f49c240349e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78417fe-7fd8-4b68-adaa-87f4995bb074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "19bc3a23-2cda-4f94-861c-4d07b5a77197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c2fc77-f873-4d70-a433-c4455a7fe1b0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5a2630-fd2a-4ab4-85b9-672276cf6e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1719a957-4e6e-4c7b-b7e5-f556a303d0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163c7db2-9c59-4adc-b868-b33e10abb2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a0f196-501f-4b91-8a8b-db52192e56f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4477bbba-0634-4df2-a72a-6ede56ebe52e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0795bdc8-275b-483d-a94d-ff9e8249cb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3758cbb0-fc94-45b0-921c-1cc305e8f37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ceb21aa-7be7-4b8a-baec-a4475613a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0643ad11-c856-40f3-a394-081d883255c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6757e1f6-8ebb-4153-8487-ec57aafdd8cc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50875a9a-0ea7-4055-952f-f1b1d0cbdd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b99ffad-b0fd-4475-ade8-24938e12c765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba7c247-7379-414b-ba18-3adf152848dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "de503692-1f78-4372-a266-e12fe2bbdb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b28cf-4d71-4c27-8849-1e5876a7011c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3107a8-5f57-4709-b9a7-a2160b87cbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ff40c3-4b80-4a6b-9200-478df8cc49d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232cebe0-a2d5-4a0b-be68-0d23e9c1d59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a642d7-95f1-4077-b1e2-00f674078e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b380df7-d3d0-441f-98e8-531c31011aed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd179ca-b878-4ffe-9948-e548992398b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7fe869d-bf69-4ecf-ac40-da0be803d0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbdd787-14a4-41db-9f92-ece8d49999c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "51988c36-a0e2-4486-a01f-28cb899f8ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235735d4-27c9-4d20-9ad4-85043054e8d5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef858b8-545b-45de-9a58-ffac8bd65d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79f42af-5a8e-45bf-9f5e-135a523f3351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946af2bd-bb06-4a67-977c-8b8d2dc930cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad377e4-fcbc-4ff6-bf08-b13b24ea211e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a859adf4-4f55-4525-8e39-90be97f7a92e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e5a28e-bf88-445a-afd8-a6cc0fd7db48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f1deef-c8f8-44cf-ba16-e8a02f51c3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113c94ba-a80e-4c2d-98c3-3c4ea3824aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a211282b-5046-4962-be60-1e96b696a5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b1fb9f-f2ff-4a78-9ec2-9773e1266850",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fc3c45-24d0-4d1e-8d5d-096243217d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e87cdfc-8b93-4076-a838-c40113d65eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cda34c2-ea98-4f26-845c-c1293cdf6596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a79cd80d-5a23-48ee-a090-a2c9d18f0c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2979fee1-b61d-42c3-a1b0-659e74ee9a6d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469842dc-c880-43ce-b547-b7c74ba96d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e71bbda-d386-4e0a-9c05-445a6b338e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737d3121-aa1b-4aa9-a63e-47e6fba346e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2570277e-7d3b-4ab3-aa4a-dfb8de0dc77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb5100b-8015-46fa-bbe3-f2eb5a128611",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98b04da-d0a4-4b81-9ffc-9daeb9bd7c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e09eb9-3f6b-4828-980f-bf97bf216be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85716fb0-5e62-4e90-9f04-857cf1e77805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12e49033-9e93-4e47-a71a-67df8c53b806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1f1e39-5325-49b9-884d-1e372d7142c0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa477eb9-9f65-4837-a36f-f7894dc24780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62876920-c1c6-4976-801d-f693c164c13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1fc647-6ed0-4b1e-8d94-d93836e06f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d5161f-827e-4c51-b2d7-6fbc8d3ebe12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29475936-9e2b-4244-acba-954546d860ff",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd51cf6b-5d14-4b93-84a2-01d836d61869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392ff538-75d3-48bc-9116-9c91cd077f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0793c6b8-d28b-4d00-ab97-4c450a64073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "92743374-8937-4ea3-bd63-288d3304433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e956288a-bc54-44bb-b10e-3143b5e3857b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c19a59-6bef-4a02-a673-9900c9223527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9417f4-f41c-4588-8575-30a2a0ef2bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dad882b-b9b7-4a8b-961e-e9fc154af4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf599d9-f70c-48ee-ba00-244140605f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fa20a3-34fe-426b-925c-72e2ebb35851",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c815d777-51ea-44e8-8106-da4d56f9b032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffe5609-f870-434c-84e9-7e4d648d46c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8753a0e-8e4b-4203-937f-1ed27f7d3c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9325f9a5-168c-468c-919f-8c25bdccc3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ae5852-143e-4d54-a058-32f0ee01a18d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c13e35f-47cd-4cad-bff4-ebe03bfb7bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f066c6a8-3806-483e-a073-2f0675283d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6eac65-2ac4-4e1e-b058-e5b2574d85e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea82cd84-b43c-42f8-be4c-6d53e08dff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a3566-b890-40ac-82dc-0dbf6a8b74d3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aebecde-6ca5-4f78-8e0d-387bc6372a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f599e51-f1b9-4c43-b485-07852a86090e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf82b452-ffd7-426e-8c67-3b39102cca2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a42658d-c754-4000-af6c-e356b73b751e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2de3b8-e006-4aa7-99eb-7601be6dcdb3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6530b132-4d28-41f7-ae0c-fb482550c930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae33ff7-bac4-44b2-a32d-945aa30702ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb492f09-b0ca-4cac-8c9f-287a47236e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "da506f9f-6b48-452e-b1bb-133bacb21433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab073ec1-c244-4bf8-afae-d5a74c29fbe3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43162ebc-9857-43db-aefb-b44a25d765a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98749642-5e95-47e3-97b3-9e6efa9c61e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa999853-b1ba-443a-89c7-4688a016d042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a424bb48-857c-46fe-a836-487215ebf205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63fb156-4feb-4fe6-b6c9-9027af19180f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2c9488-cc44-4f7a-b9cc-c60773eb8494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11753dff-36aa-451f-9891-d15dcb59a040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8077459-bad8-48d9-8f2d-534705fbe0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc39726-8b44-43fa-856b-6674b7045a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd15117-3fcf-408e-8528-96436f12352f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4970a0bb-89bb-4455-9ad8-9b3141593dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842e2834-3342-4a75-9ef1-f0d38208fdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e144a7-05fb-45a2-83da-a6183e2a0fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f12ddc2-bd4b-45ca-b96a-d13f055b65bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc9c69b-0e87-4a4e-92e8-3f7620f314c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2167711c-7ec0-49ff-b214-5a034c3937a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9170f6ca-88a4-4b0e-b399-a5db8fc0676b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20f99a2-9832-45f0-ab26-d167dd7e08bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0be482e3-e174-4b8f-912b-e604e353f65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563399ac-e54f-4f99-a2a4-ceee029257c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cd0359-3095-4922-bca6-1a68df5d8c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6936e53a-9969-45d6-a4c7-ce596ab03db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7d6365-b499-4c45-85ec-59c21b4e959a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8d87ea-6fb0-4bda-b599-efccf8afc688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84c6060-7e5e-4260-91cf-c4876973d8eb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d03b29b-9505-4a24-8e2a-6d68bebbeed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadfaa47-040c-4eb9-9249-cf3a3e12be68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be28e79a-9aad-42a4-bb6c-1fc7d4ca48b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "40427202-3e3d-4d99-93fd-91db8a151e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c65b03-e4ee-4307-84ca-352232fbd1d9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94446af8-b4ab-403b-9602-eeae5b9a300e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cf0fd5-67f8-472e-9f18-8c86dd7ff215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd1b5ef-bd23-4fa8-a671-10e659e58a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b4a467-14eb-4be7-9918-c436733f5d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6650cfc-4d6b-424f-b101-eabed5fb1354",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86141da-64d6-4e27-a81b-feec86a6725c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b482a8-b8c8-4f0c-9db3-25cdb4645eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b5dbd3-b4c9-4228-b858-db7fbe69bdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf02e217-ee6b-4ea3-9f2a-62d019bbd77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145f5e53-47e2-4957-87eb-71e07b62b5db",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870c9ed9-2451-45e0-8150-cad7af002f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab1b318-b1f1-4af4-9146-0742c236b283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6f1ee5-532d-4cd0-b892-a149a1d7175d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "142c006d-fbc7-452a-b684-eb32ba287d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b71b29-80c2-421b-9c00-a268cdf57353",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fb116d-84ee-4002-9f8c-12040bd0579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3feacd-b6b0-4629-92b5-ab1f91408837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794e07f9-e640-4f2b-b39a-8529513726a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a66ce84-90a7-4867-b5f3-2dbfc2c84221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ae1ed9-457a-4f61-8cd4-cd5b89634da4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddaea5a-c377-401d-8657-c37ef8a7f174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8a79dc-7b00-4aad-863e-2748ee471132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2aec9d-a5c2-4b35-b4a7-9e277418e628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e546954f-dfd6-4d30-b48d-eb815287f391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f717135-fabf-4bb1-8fd5-2e522cc44cb9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26abe0c0-94df-42e9-9154-7328da3a9fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b40079-e6a9-45de-82d6-53a93d605135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21f2091-6df5-4722-acbb-2eb26675276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bcf1a42-7e37-4333-a058-93189f088489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346cfac5-d209-4673-88fc-eca53b4215f4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0dce14-98ce-4435-9616-99ad7cc3519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27669797-88e4-42c5-8d4e-638847932fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1441ce-a14f-4a28-a5bf-a733d3092bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92dba82f-925c-4577-9bad-1463cd0f9c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43909a31-6038-43e5-be81-953a83f6a31f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e955f1-b30a-4fe8-b2c3-a8cb5b424c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d562e16-dc53-495f-9638-1747e35dc243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c86dec-e016-4a1c-90c6-cdaad1334371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd30f924-3713-4b42-956e-b3788576c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e11608a-e0ca-4a72-96e8-07fa3521f9fa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7bc937-f494-43f8-86b7-3387a99f3dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab806789-ed35-4b1a-a7ab-f9de9d2e0b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5997437-ea90-4c30-87ef-17a8c77ccd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e1b5e3-3f90-4815-9efb-707737d1a7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad65a47-d603-45e5-a402-07a17d0b21a7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f805f498-437e-418d-a663-6124e3d48ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58e63fb-1497-41d5-81fe-410f568b2ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f81a74-1413-4080-8a3b-e16e78f5428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "473e98da-3906-4729-8ce2-c020b6939d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5719a6d9-b3a6-4f87-89de-c40e24f63524",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e412bdbc-aea9-4576-95aa-98c77b39a4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac21c92-0da4-4359-af40-d9ffb6ff14b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3740bded-7074-47bd-be52-e6c4f4d16fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3568360-1376-434d-b628-8cd13e8dbc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934dd679-92c0-481e-8379-57eef8ad1ef5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623040a3-32e4-4b69-a03b-4d15a2d44547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5213bc8c-9063-405c-8c56-88a7cb258247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4239ec8e-7e6e-476a-be35-c834ffd9a2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9396cba3-fe90-41d6-a8e0-f8009c99d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41255ab-274e-4cae-bd46-68e68609cdb3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56da8d0e-addd-4fd0-a1ed-b238ded118e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e464dd48-5bea-4fb2-b2dd-a675b1552c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b668532-2173-40d2-a346-55432a5d1814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a04ed37-15be-47e9-9551-63d2ba9de328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d962367c-e10b-4379-a96d-443587cfeeec",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ef4bd2-3756-4bdd-81de-af51ee8613f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0924ef0c-0780-4c63-8e2e-e1d7194e7cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8a5f65-c4b9-4f8d-a932-2f049ffc679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "310500fb-3642-4ef1-a95e-d02e9d6cea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf3f436-f43f-4c37-a8ff-9e1048e6c1cc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40aba6af-bef8-4019-af94-82ef091b5b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633b174a-c289-4e97-8b2f-13fc8c89901d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4064b2e-2021-4cf6-a47f-886b0dd512fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69aeade-53bc-4cfd-aa87-da38b15f3009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3459b903-83a9-481e-b1c3-9f1abe5684e4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab370a9-a687-458a-a157-b7a830dc4bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380fcbce-bf86-410e-86c1-e1a49350de00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea2eb43-4c6a-4775-8fc4-62cf134af216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d597cd-480d-4c1d-8d01-6a6529e2efdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c0bbac-d9ae-40ea-ae8e-31b2b9125257",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417db386-9b04-4f7c-8213-ace50ddd30ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a77150b-1470-4752-9aaa-ce614571831d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28249007-8ee8-4151-80f5-57646c4d6c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c36437-838c-4bfd-aac4-a9ed637b684f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bfbf56-f637-4aec-b14f-6b8d54be8b30",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d24ae8-f4ae-42e5-ae17-875a2bede1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d10e68b-07e4-48a0-b397-a4a8c567bab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d29e499-b698-44fe-be6c-72be08b7d8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "815e1b5a-c120-43ab-9e23-da40784b4df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53a9df7-1414-45b6-87be-be65d10a3ad1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81393cc7-3322-437e-b49f-67e80d0f4dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ddbab0-67f2-4fdb-a326-f1144ec18458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdaa983-5d78-46a4-88d3-3b73ae55f79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fe5dd2-c115-490a-be53-777a71f42547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806b0a98-f38e-41ac-b2a6-e652a0437229",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3972266b-04b4-4677-ac40-175317b4e14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20978e3a-8ce5-4692-8260-d1835b5ba33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3e67c5-710d-4cb6-8ef7-dffe093665c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a2ba45-a200-46a2-9dda-79aedaf4118b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb8e842-1e84-4ad9-90d7-9f017e7d8e41",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cb7e95-f5de-465a-aa95-8cf8f76404ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a1432f-c9c5-4a78-9229-b8e8be20e646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14edb8cd-71f9-414e-bf65-55bb86014078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd64056-0259-4b0c-8046-5f737582dd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b75ca28-d32d-4e0f-8f11-69a735169ad9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2193f31a-3cd3-4088-a51c-d93e50453899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5868b837-8f01-49ef-8fee-7bc6fd4689c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac879f9-a9d5-4698-8add-677e8e3d6467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97be16f6-7466-4e06-99f9-3199ac2991a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa8d3ea-31a2-47c3-a7e1-d4b95d1b9e80",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cd79d8-a06c-49a8-acb5-b5700371b2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bf50b0-e780-4a5a-8412-ebb4a1d398e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b586ab-4e29-49c7-9314-63244bfe4829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "630e48e1-86e7-4fad-9341-cd9c9369427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a783384c-8a44-4512-a153-76f2b33856d0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b34b88-5918-4ee3-9913-ff35945a277b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8938cb-0f9e-4f5d-9b02-5067cd3f02ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db62794-732b-4328-9613-fa40520cd33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07cd2f7d-7d59-42ac-b43e-8a5d052bf788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330d57e9-889b-4cda-9a16-7ff65d1129b1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dd37b8-ca5c-48d3-a1e2-9d4b5becdf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a620f5b-2f51-4898-bfde-191e86118ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eadbd4-5b33-451a-b4bc-6391d475374e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1a316c-7ed3-4d89-95a5-0e95d80941d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17953571-cd56-4259-b784-91e4cbca4f29",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04af187-1c41-4e26-a3ad-9175d08b9983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f71813b-54d2-4532-b747-c9b15580f479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a3143f-4ca2-455f-9e68-37440b7873fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c792f654-234c-44fd-901a-2b9846b21089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7bd6b2-1061-4ab4-8195-480ab8459343",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34218f1-e05a-499c-bd1c-4f19e67c78cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06471e0-33fc-42a8-affd-bef821550f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66ffea7-1273-4113-a4c7-cdfb093200f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d766c00-6414-41c3-8824-a5572686c41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8a3756-5eee-4403-91e4-b45603da00ae",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7842fde2-d61f-4c55-bb77-c2713555deea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d3f804-97f1-4f65-8e6d-d0d72a69a545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bef5af-25f2-437a-9bf2-9ba5f016b4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd5eb91-139d-4b9f-be1c-4770719ab565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3903ff6b-190e-4f38-b102-129a91c947ad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9384ae1-39b0-40f6-96cf-eb57130779ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78a8883-3cfd-4a1d-a88f-1805c1c48fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47c28e2-50ea-4830-8a63-7c98ff3a7295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5ee9f0-4cd2-4bb9-adc6-c9415fefbd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe842ee-1993-4a60-9b0c-a3229202fdf3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc09c3d-d2e4-41d9-a84d-c7e90e51ff40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b9be099e-63fa-49da-8d02-9ecd0a4317bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88050116-5d4f-4787-bf1a-9de0b6bfef4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e61ff6e-a9b8-44d2-9bd5-0b85897f6146"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e91955c0-f10a-4516-bb0d-21bfe2ac5c97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d385983-eb63-4f1c-80dd-5db17432983d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99af720-9fda-4aad-b16e-3f5fd91b5ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe03c0d2-2e0c-4d18-baa9-e54ebf422a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1f1474-a718-47af-938d-a018200ebc58",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d27bf5a7-e646-46d5-9a42-bf0ebb4367e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "291e639d-0dba-40d8-81d5-4d940e08bce2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da5b35fd-26cb-4663-9273-263950de5b0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7e40bc1-9df1-462c-ae03-73daafc0e7a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce595f09-75ae-452d-b3bc-c92ba2ba673c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d9d4217-3964-4c0c-96bc-2473e8831a32",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bba22274-f853-46aa-b165-f7b3be59f279"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d2fe1d7-8876-4fc9-96f9-b6e694984b95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bfa6fdf9-4b6e-4f7d-bbf2-42ba1303910c"
                }
              }
            ]
          },
          {
            "id": "cb38146e-5e23-434b-ac23-6518a1d05b1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "875b7011-dee3-4744-9970-1aae3e40c98f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a1020e23-9a57-4ee6-bff1-635ba6142f15",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885aa7dd-4b64-48f8-b5d6-910865b6232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b71f3cff-51d4-4f09-a296-8afa31018b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1f5a4d-b6a3-4fd6-84eb-44676330a197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5faae4-fdc5-4065-9f54-ed03c21568b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2584300b-e0da-4cb6-9d10-30d7a08831ad",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea66554f-eabc-4bb3-beb1-92220a690b4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "188fbbd2-c138-4d10-94d3-60597849ef33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c66f827f-9357-491d-8e00-58c85918aea3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2addd6f-d049-4b97-959b-aefc63efcc04"
                    }
                  }
                ]
              },
              {
                "id": "e1a3d221-054b-4405-8ef0-ae7a090143c9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d94a531-bbf7-4f3a-9e9b-95e7cdba53f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d192d18d-764f-411e-9119-6ac4b2a87f0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14c9f68f-3015-42f0-89a7-b4388add671e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df9cc812-74d4-40b8-8742-cd7215314c87"
                    }
                  }
                ]
              },
              {
                "id": "f6fcf90d-29cc-4f81-b94e-5e086a33cb71",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da63d77b-5d10-4745-8d6e-89282b029f65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "609905eb-b950-454b-bea5-52ff33c94ed4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0a60bd4-59d0-4f44-b9e9-315748fea4fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27adfeca-6f60-48c0-a439-2602820ded02"
                    }
                  }
                ]
              },
              {
                "id": "4156f6af-dcdc-4890-bd22-a26fe277be11",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d205e9fe-31ba-43ed-afd7-174e77409c1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d15ed60e-45d0-4c67-a1f3-cf23f0e1a43c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3944bc41-a713-4488-8d03-081684d7a1c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e0ed429f-facd-465a-97b8-6ab11045dac2"
                    }
                  }
                ]
              },
              {
                "id": "b314403a-ed42-4393-a492-8beec2af8edd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74c756d9-3d57-4dd8-8abd-4ad9ee40ae81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5b19f6f-1727-46e9-ac53-83fbdeab6d80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18534d89-14b8-4c67-8e22-701df16f3769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8515888e-e5d1-47ee-972f-72c2ffba665c"
                    }
                  }
                ]
              },
              {
                "id": "e7e966c7-70dc-4162-9843-bae9b8f872e7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9ecead1-9a61-4ccb-ac01-d72611f9f10d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb9af380-1d7a-4c54-ada8-0c00ad4e7900"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9efdf66-f1ef-4ed0-9d6a-f98a662e1708",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "acf68842-e7c3-4adb-aafc-645c9cb05ac5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5007665c-8ca4-41f9-9a18-cb131e1d7220",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0397f9a-be8d-4f48-934d-6b7a62f5caf9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f1a4268-e843-440e-b311-56a4f4519ed7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2f06616-a48a-4606-8134-054c92664fae"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7d92482-6566-405e-b9a9-a57eb08eae53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7e3a0770-d6c1-43fc-bb39-8017313ba9e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1edb2fec-08c1-4602-9da3-fe966e2decb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "562175b8-7cf0-4e1f-b27c-d8bc7d320ad9"
            }
          }
        ]
      },
      {
        "id": "b2188f53-a312-4635-9945-d49fd049516f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "860d74f0-6b46-4738-87b8-c225d1208bfa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26b2f9d6-e503-4ce2-9a43-21e0b8fe7cec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1a33e92-2b79-49f0-a32a-655f9753d7d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618e90fa-2714-4ec4-b8db-88322bb6ce04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797ad0d9-f7b3-4237-bf78-1b917122216b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c315d1f-d6eb-431d-9e11-abe5df8f51f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "63526002-cc65-4813-8832-ad9c2262135a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd28c059-ad0f-49ed-906f-fa63ed0eeed1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b2269f-9ffd-4b10-ad49-d0dafcf8c116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0420e87b-bc05-490a-bb95-80b68515c065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241e5a54-c70e-4091-b636-dc72cabc7e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d1ec03-6644-4616-899f-67e0d0119a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd19123e-e171-4332-a1cb-efdf4fb08350",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fc56ea-744e-4b93-8306-ec3b149e334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a530be-4bf4-4c87-9a85-f86541a9799a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da9217f-2a65-445a-b96f-a9b4a4ca037c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f17506-7df5-4cde-889c-e0069eefc73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a55581-21c8-4e8f-ba47-f18920f68715",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e06ccf-4033-456d-9bb6-fca09d07f9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ab34d9-5991-4caa-a936-5823ea49097a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a7acde-6089-4c7e-bdcf-dde17c83c2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccddea9-c9d3-4190-be6f-ad1288f23944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30e6e55-a2cd-4b70-84e3-6df5114f088a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f531f51e-d946-4ac1-ac57-6b34f2d7482b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1614edf-499c-43f9-959b-ece1971900ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80104fc-9285-458b-8a99-2c96c2f88936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c054d2c-a1d5-4540-8ad4-53640e817a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391b4467-e77b-4404-a953-fd1af496a2c4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a007f8-1c4a-415b-b811-34c4a7e06b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214ab77d-44c8-4805-b12a-0a9d1064007b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b9eab5-d5d4-4b95-9575-cf5d13c18785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b914e10-20b9-4c2f-8fa0-26c6c3e6c8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf9bcd0-35bf-4c07-be34-01961ce90ee3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0768d3-0985-4769-9f8a-3f46dfe8789b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f815c3b-e9f6-4b73-a5c9-da3597cec416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdc3c63-bfc7-4a8c-b080-c6a51e461eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab917597-133e-4670-b0ac-0a3f392005d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fc623f-0d50-4a9b-801d-691377326f85",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e7f7e-3e58-448b-bbb9-9fc038193c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f10bbb-ca82-4143-ad34-a8213dccacec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33478904-87eb-4990-a4fc-952690f96512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "612ca1d6-4e2d-4a3f-8437-af7183227fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15aff4a-630d-4db2-9ba1-5bc4cb34d8d8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bded6168-b352-42c5-a665-904fba1f8caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34cb57f-b90c-41f3-aeda-3c083c18578a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5406b3-9e93-436a-a331-028775963248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "745afe80-38af-47d8-ab5a-8693d60e6781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636bc1d6-728f-49f1-9495-132a1032b80a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9691ab3e-4c06-415f-81fb-838737170bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb21cdb-ef95-4350-b218-26ccf49966bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5dc108-bae8-43e9-82ba-c7e32e056da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "477c2919-aaf7-4e63-aa61-c8385d9f0b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e8c2b0-081b-4ab5-87c3-381a106536fe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1244399d-ca3b-4158-8358-c1c113213f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1b3340-e38c-44b6-ba89-5353cd499281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc41d27-fb76-4467-a8a5-bff93000ba06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f082e2a9-6730-4762-8a3c-0287324e8a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68c84f6-d390-430c-bc24-4a38884e383e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ea0487-63f7-4a48-9117-9c3e79f3b29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8054317-d7c6-4eba-9349-b13b5a4e7b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90f3672-e5c4-4c2b-a847-5d7342d59d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47d6a675-2224-446b-ae9e-e1232da467a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559f0e5e-1175-44af-9fca-473d2bbfb06c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383eb442-5eec-4e92-a514-90e814683556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7169c72-e995-4410-a16f-5f53b5ddeb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8403cf-039a-4c32-b449-492f26bae9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c191769a-4d8c-4eb3-bf65-cdbe65b239da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab11303e-655f-4549-b4ce-020381de5acd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f364110e-8d94-4020-819b-597e352d87e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea2c484-65f1-448c-9639-810b061f604d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a433ebc-a135-4c36-afe0-62a3ba2c1f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe3c8f9-a6d6-4ac0-a87f-8999faa6eb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c6b6db-9226-48c2-9620-cded85b5eeb7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8491ff-1245-49d2-91e3-ac33eaa8bb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e8689e-de29-47b3-9519-68500a6837e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e49479-4290-4eed-ab16-c56928611389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cebe29f-b989-431c-817f-d9c00ac2dbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef6ce21-28d9-4fe8-9862-74af83edbc68",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7550172f-dbfc-4cda-a879-96642a668f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc0c651-b0e6-4444-90c9-0eeee9fa05a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38002963-9d9e-4a0b-bf5f-5aef69b4f147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9360bf-20c0-4665-a4f8-486624ae4e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba5c1ed-c70d-4675-89ca-7d977fea5e79",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d3a161-897a-4a73-95e1-a73adb181015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6324a144-0e38-49c3-808e-0ac06fb3bd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b295933-f311-474f-a25b-41afd70fd4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccd1a71-2610-43b2-a1ba-9d719ff076e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b082a329-b24a-4305-98d6-ab821c9868db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc94432-38dd-4f3e-ba67-0c48a77e2d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92a3d29-9511-4079-a019-1166ce0b5005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaabf519-8987-4c4c-9a13-3d72e26dc7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43a56e9-b4c3-4d48-836e-5342d1e358ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e26697e-e91f-4963-ba39-7b886af8796d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7526333d-bf81-4e8d-96b4-e7384b008b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34c9342-3186-4aaf-b17f-3b7f25e84077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446f2ba9-6475-433d-b81f-8d99c3000943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2782c306-be6c-4961-92ba-5619e1c9c3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d538f-10ca-41ab-9ade-f0bd896f2724",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3553fd-5259-46ea-998b-4225d8c38571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6945f96-b58e-4dd4-8975-e9251cb62f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301209b3-26e2-4f76-8c96-4c6486da284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "964799c0-4947-480d-9707-85d65cabe53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951a9960-dfca-4e8f-8869-cba77a2f72e2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0959ba5-ad6a-4a6e-a763-0b2e18f5396a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e511afb6-3f3a-44d6-8e22-1723cf1548a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ab613f-a5e6-408d-8c62-a7c3196f7331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "378b0e21-814e-4770-90ec-094d1c8a9618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbd5b47-d7cd-4fb4-832f-c44f8c156622",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a6296a-16ba-4b22-a393-0dad67d41f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2779d3-fe70-454b-b5cd-f44e5fa6afa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c577c54-c9d0-4c28-b0fa-46ba7ad36558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a0e7d6-86f0-4829-bed0-65765a49535f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddd76d1-bae3-4e13-a7ac-75c38389d22c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9b2eba-66e2-4ac6-9cdc-411dde84af7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6613ab-24dc-4183-bf91-344e72e3030d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9406244e-86f0-4868-a1f9-23cea14ee87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfbde05-53de-4781-a6a5-7fd19e13d3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1aa797a-7ead-48e7-aae2-a5a62ebb5d39",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb21f00-b9e1-4a12-939f-8bfe9843af46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6f70d2-614e-4df0-ab7e-a9a69be6ffda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95352578-e780-4973-adf1-32b952c0d333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76ec171-59b0-437a-88e0-32ceb24d0c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dc3757-9112-4121-81c3-5248ede06f20",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc391c0-bce6-4a9f-9eed-5f5020389db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7087a996-8af4-4620-ab24-37b6793356d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97831df5-e7f3-4f7f-a1d6-e679cc5992ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc78ea9-af3e-49f8-931d-8435e28e3dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856d3ac8-6f3f-4849-b33a-69bdba1628a9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a91967-deda-460d-a5f5-9794bc801091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ae8bf3-6195-47c1-bfa3-30197786ae3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d09fa1-87d3-41fd-8d14-db500b27a838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9b9db3-b7bf-4d60-8df0-863bb083c1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8cd8f2-ddce-4254-9d83-8bdd56e242d6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9778682-67d8-435e-b10c-81f8e8c801e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7604ef5d-7151-4d2a-9eb4-b3de07edc103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2a1efe-e1d6-43bd-8816-a271a9c8b4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8884554a-53a1-4abe-b25a-01dc5a24dc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf0e12e-0d43-4eac-8bd2-c4bb601e3d66",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30895f7f-1aee-4d40-a40f-96deac300d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eab6ce7-7dc4-440a-814e-6e67725c42c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2743ccc8-a6e2-4052-8ed3-b1405a8f2147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3f3df9-5932-4aa6-be24-ad9c019c678c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e3dd50-f14b-4eae-8fb3-a8dfac344535",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ac3a29-bb25-4f1e-a45e-eb11a6c1a532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae21720d-c085-4372-a4a6-b15233296e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eb337a-2076-47c5-95a4-498a65b0473f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c6668a-612f-44bb-bb7a-038f8d788356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019b483b-238b-4140-a286-40668cdcb708",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5cd3dd-5d60-4e91-8e6e-dfa3688ef210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afdc25d-5793-45ea-9331-77e01122070f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f85ba1-cc69-48af-9761-76a8bdb3d7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb089c12-2fda-4bf3-befb-b975c0112ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8521ec-60d8-4fd5-aa8a-fa7c5b1fe351",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fade4b1-524a-4f6f-ad21-317505d00a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2966e1ef-eb03-4f6a-bc90-4f43b0073b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b96a052-7bf5-474f-a7f1-f11b95312cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6e858b-9ec1-46f8-89dd-2c20f65599df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc8e90d-4f4d-45ca-ae93-cb7d998bbbcf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204b917b-c7e6-4a45-b7d3-6683a3b3c2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98a8b1e-c80b-4828-b8b0-61c44003accc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbab09c7-e36a-47e1-b3ed-d3928fa814eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "743d2b7b-107f-4093-93bc-ac2b41d6db4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cb45c1-65b5-47c2-ab49-35fbc0d7ef7a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ba957b-752c-457d-8111-000d97695fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec8103c-cce5-4a8d-9dc2-564daca8219a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12416751-ae60-42f2-8e4e-31400ce56f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57047490-36df-4e53-aeef-77b8b051898a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e6c686-3f78-4dc2-9795-2f78eee3b7d1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79541dc0-7988-46d6-b013-6e0346a0ee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a028c30e-88a0-4149-b728-c90ecf6880d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d967913-4b91-48ab-a6f8-7cfcb4d8f87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4e1763-e0c7-4994-a523-ab785fda2706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b83337-0ff1-4029-9490-66879793630f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a7045c-05b8-40f2-830a-63fe1650d3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2a7e91-dd73-4974-956a-da24c17c13cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35409f93-2a7d-4568-8ff5-ce358964efad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a941bc-1904-438f-a887-e20bd2b7855b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059a42a9-8d9f-4b68-ba1e-07516bff1268",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53d62f9-6090-4ca2-881b-6bbacae91d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7315fefa-5c6d-4617-b751-51f4e2cfa227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1580702d-b84f-49e5-a277-007650d47d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d85e3b-98a9-4a0a-b8e1-14632cc93703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a029afe-ced1-4f5b-81a6-1b94967d664f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c36f429-a45a-4617-9bda-4ebf19dd8986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5935fdd-01ed-432f-a561-044b7f8356f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3619707-88d7-49ac-85ce-da55a0595e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f307ac9-ec0a-4abd-be18-3c93fee49e8b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c6b7c15-e07e-46cc-b365-00c63d2e7c7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee146649-885b-4aee-884b-dc739cccaffe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20627143-963e-4384-beb2-9fcc06e2db1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4277a3d0-3c1f-40b6-9e28-7bdca5aa9210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d075a859-2404-46c7-827f-6ffd28493376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "711666ab-1175-4ebf-b67e-8f504c37e7b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "381f609e-4c39-4972-955d-648f5cf67c5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "245abb92-824f-45b2-9d83-76a9acd47b87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3e59e7c-47f7-4ace-8245-20d352ce60df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c70a9151-4f94-4100-ac9d-7bb61a9cc2ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "693c40a7-7da6-45c9-9451-d88e4cc980ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5078a0a-817b-4e29-80bb-eef443941f9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "378595b9-55e3-42b9-b6c7-ecbf1e0c99ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "235a1145-13da-4ba5-9c88-56e4675ec2aa"
            }
          }
        ]
      },
      {
        "id": "5e758b13-bf1b-4399-b2ff-666e4e5661e5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "59247587-13a5-40ba-9452-935b4b28ad9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ab66f83-9a62-41ec-b337-c7c4859f7820",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a461c52-89f8-481d-b103-9ced00894997",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0d389b-5fab-4852-8509-13066bc4f707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98ee90e-f0ad-48cf-944c-319d634baf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6183c5ab-c374-432c-a5ab-5b451c1d19b2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab0ef8a-7bab-44c0-a63b-5b20aa0522bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a4dcad-2063-4084-89fb-cd9a34bf0697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cd3fb7-b87e-4f4a-8ebc-96eb4c9c75cd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88c385a-642e-4ee8-bf79-47ade853e0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c1b6d5-fb4c-4245-b3fa-db2e32c7dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb77765-2859-4051-96f0-af56756b295d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1be2e5c-f883-4806-8075-817ce6748179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddef2ffe-3b8a-4150-b055-d14d42e0e2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480c5e82-2675-43e1-8bef-3694ebc39709",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264b115f-ab47-41a2-bd72-a1ac5bcb93e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09f03d0-5a3b-4ed7-93bb-87c38475a21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9bbe21-26d8-4741-aba2-a22a4c53f0fe",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f86b58-68f9-4c86-b302-d512ca17b256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5aaa329-c564-451a-991a-25be5e2b068b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b667a329-013a-4f4b-b4be-a80961753bde",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de573b55-306d-4e0a-bade-ad2beb0ac5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a48571-510b-4e49-ab9d-0fad3a5b3a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cf9b8a-2fef-445e-a97d-99199ae2cc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422a725e-e5ca-416e-9f79-98fad8c23818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2672a5a-5042-45c1-afdb-84be611d6c82",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73d8ac9-8ad4-4efe-a804-efe152a0407c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca541a00-ec05-4b98-bf09-b97eaf7da64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6552a73a-a20f-4d2f-afd4-d06eb22125ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47e8d1c-6a35-4f5a-8b73-01728482383a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39855adc-2013-4c16-abbc-a249d716d90b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742f4957-9976-4df5-a8ce-0a9db27b8449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73d5d08-8bee-41da-8a6d-bdf769cb1c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb2bc55-25ea-4538-9866-5b05c07a21b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a01311c-7aa0-4d2a-8dfc-e446cfeace0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc99bbf6-ffc4-4237-8a5c-7f321cb3e5cb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a202d6-b8eb-40b5-bb38-76e315370c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244dc764-3a9e-4e48-b786-8db6081cc6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6607bab-a6ad-439b-a64e-083c0316a22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a607bb-4fb3-45a2-99ba-42ca4f351f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccef52d-b539-4f93-94fe-e03d61ebb7e2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af196e88-ef2e-47aa-adce-a73db64a74eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73c678b-f473-4eb1-810e-99dfc9f2c14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a771a6d-43bf-4260-83cb-bff02fd4a4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82156423-1ca1-401a-a9b7-4801d911e50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8709dea-fcfb-40c8-a7f7-3ddc39c56022",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cb767f-0a87-4c7c-ab54-8d4807f5de3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f3b3e6-cc7f-4fd2-a831-56897aba9358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7159a1c4-2424-4756-821b-a9c29bb51e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37be971-a805-485d-af3a-1677cc56ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfbcf54-6430-40c2-9577-efad3a1bf341",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5225b84a-c5e3-43e7-ac76-5ec65240d226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a98bdcf-fabd-44aa-b1e9-c0beb4495106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e79175-a3ad-4e4c-acaa-18e05bded410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24149e33-e07a-41dd-879f-ce0e5574ef34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1619eed9-08b2-4630-a467-6818043377c3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0eddf65-9406-4b96-a2f7-fb9596d69345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2340581d-3e60-4179-b30b-fde674458cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd42564-b20a-444c-8a2c-75cc8b72cefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5c307f-c3c2-4639-9294-d7e9cf8c0a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b871786-97ba-4ebc-a1b0-d6c606ce3df6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e6240e-6b2e-424c-aa3a-ff536507b24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5c7e5f-f6e2-4ecc-ad51-9856c954d54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff0545-a085-4d61-b9e7-9153ef47f4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e09770-a62f-477d-81a9-7aeab5793b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27618d1-7d80-4d6c-a39a-e9ba1e3fee62",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8be523-3486-4eae-ae41-48cc5fd9b131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fec5258-470a-4937-9e37-2302b24138b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdffed71-aec8-45af-a634-7baa78f8d565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991b4920-c868-43f9-adb4-05ddff33ba80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c2bfc5-8b10-4cc5-861d-cc558504fd1f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d8031a-a723-4340-a749-b9632095adc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7475f897-dbf8-4c67-8b9d-bc9c76763c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152a6b56-7457-4608-9dd5-c4f467034ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78249e53-ee6b-4e4e-9ffe-48ab4d76f616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e4e727-3146-451d-a01b-a71dcfe88e82",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab460b5-ba30-44bf-a658-e941ce2638ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1237688-9350-4663-8f2a-8cc421344c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3928ee6d-5205-45d3-8764-2862aac0c20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b019b7d0-70b8-4af5-a6d3-278e4978ba7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05c173d-ef41-4fdb-a7ed-4084c63de782",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6750f9-c25e-40f2-996f-65ebc84be66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd15a0a9-4d65-4776-884d-f72504bf64fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd58cb20-f348-4a7f-a7f6-602eab820bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5050e5f8-3a33-4305-8082-5a26558ec6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10eec71-59b0-439d-a533-a9d21d997493",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef02bbfc-fc89-4839-a525-2e39c90d938d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7c815e-86e8-4794-bf65-fc81069edde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966e5cc6-3977-4d28-84a5-a8135b235b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba3858b-f4a6-4df1-af72-e1cd23e35b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250cce54-83b2-4b0e-bafc-89c8fa824246",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6ebe24-2c30-4788-b110-12097c890a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8343020b-c268-427f-9ad7-7ffcbe3f22ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6ca07d-b9d6-4ed6-94b1-2ec85bc095ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af68d688-60b2-4277-a562-33cdff1d690f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3e3630-8ff5-4254-b05b-2e56e21f686e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7d33b4-0589-4eb6-9e6e-7d33383d172d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7403e6a0-0281-42bf-9551-c5c53b75417d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43714ab-4eb2-4e23-80e2-63d86426451f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f9fcae-8528-4738-849c-8792f39a2b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed58281-15d1-4357-91d3-23d3420b3eb4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd1a766-4330-409c-abcf-624ce5dda5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301bbea8-3b22-4f56-b834-4223127bb87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab914ed0-83cf-4507-96a7-add3050a723a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58f4f7a-e60f-463b-b779-eef2e37c632a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c77440-aa73-45e5-8bbe-54993d030ca6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a304b51-8464-4e55-8f8d-8061d251899d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "068303e8-5de5-4d02-888c-3d2d772c80e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3eb300b-7736-4fb2-b165-b002e9877650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ea4c9e-4b8a-4686-bb3c-512c18c3380b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23849597-de49-416b-b561-13f075711f32",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35c2cae-496d-4bde-9533-d4265ba7fcfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50076b97-0cd7-4c89-ad25-12a949d14e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cdeab0-08e7-4099-a766-a3cadded8b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43985378-ed8d-411e-83be-d4cd1a54c78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7069cf-c6df-4b86-9109-4b8f407fe761",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880c6039-9999-411a-bdc6-a24b6a3b1bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77cc80fb-7ad1-43a8-bdeb-1226d3d0bfd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc81b778-e7dd-4bad-bc8f-c08592031bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d90d645-7995-4fda-85c8-b7b506168b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5357a0-d741-47bb-b2b9-0de017687cd6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82a7aa2-5101-4278-8859-d1d67eed8363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba3a33cb-c443-4c97-98a2-851700bda3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d695d30f-eb26-475f-a1e4-66970edb193f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76a2b0c-9964-45d3-b7ed-2e5761b58668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f52965c-14bb-4751-a806-13b8f2f6e17c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20430d50-6a5d-4cf4-9f29-482e8d145a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f353746-a8f0-40c8-b484-3a6dafedfc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596d8686-7f22-4a24-adc8-9e43347660c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dc445a-22d3-45cc-b5c6-51ac4ea38932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1966887-4b20-4a2e-af4b-317599cdcc1e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7c458a-cb35-4e1c-9b16-1cb043b04697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d6d2b39-afd0-4384-85aa-d84fc13b14d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8e1d0e-2cc3-421d-b54d-629c52d79e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2945e778-b446-4649-a6c6-ee3a800038d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cd8a86-1b87-4f45-a962-c1c97b9a408a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc39f19-47b9-4068-a37c-8e229cc8e628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c97830e-672a-4ba9-941a-6a7721443fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8415fc0-1898-4041-bbbe-b3449f057562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43438be4-bac0-47c1-8297-121c57670ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bd6aa1-ba27-4c3b-a446-4e465e0a1db0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d3893c-bbe4-4862-80ea-4fb008381714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4b3604-6002-42ce-8bb6-7636ace61077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c83805-ea1f-4b9f-9c46-fb630fc51a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ab2dfa-886e-48fb-826a-d38010447725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4248a7-42d8-43fb-ad27-e1224a51e598",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba1e7dd-9c2a-4841-91c8-5b14fa2dec57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77477c78-2307-414b-8d8f-7a1407ac8ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53792b0c-911b-4231-b45c-61bd3182beda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438ecb7c-e45f-47f8-a2cc-d563500bc1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3f1523-afb9-4f82-bd65-62c34f7232d5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cd949a-c8b3-40a8-95df-f7fbb0c7f748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6bc5f04-7259-483b-95fd-14302f151314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64a3e5a-8e12-4267-a13f-b70539a095d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a944c89-9263-474b-a7ba-083b716c9801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5919c656-761f-44a0-ab26-32d807d10ef6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6328244d-2b36-4710-88c8-e03c314525ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c46571b9-49d5-4e26-9a30-7916ad87ba2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb20a1b-b87f-4109-b31a-94991cf5cefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1571a1fc-ccc3-4c6b-af0f-ddb78c58b7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0df1e2-a94f-4559-a952-25811f96904a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087f2ad2-f8a4-4a46-be75-0155c595f984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6477f51-994c-4a19-a749-24cbc1c8056b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d213e8eb-fc4d-4f35-af6c-f3af3f71aff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68af375-0779-4355-89ba-dc3e7a14a257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cbf3b7-ed51-4ce4-80e5-4578a6bb0ef5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2d18f8-2cf8-4644-abed-e54de1a8fbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11662bb0-5710-4534-8bb7-a99f5f92e8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75eaf31-b6d9-47c8-9dfb-2142a5726215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18da730-1111-48b7-9291-df966700b4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74247476-339a-4b94-8457-1d3b0088c9a7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27513a6-1dc3-42b3-ae50-f1cb68a70749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c178d6-e2a1-461f-8aae-8a8e5d142f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71086cee-01a6-4902-bc33-b7554182cc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc107607-2b08-4272-bc29-652fff1e938b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b219c2-76fe-4d1b-a928-220d119f2648",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880476ad-62cd-4260-a0f5-973765f025ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e7167c-9561-4c1a-8408-ad27cd5f86db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc8c4ac-8a18-474b-a361-3e88ab9a9def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61334ef9-5292-4777-b1e3-8e39070e5daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4a0a33-be82-47b3-ab32-e95caa3f9d35",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332f5730-8494-4049-ba69-473d8e50b8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1833a3c4-6c06-4216-8df7-6350193c1d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87e3de0-1591-4e51-a491-459b91ac0ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dde9114-b8a1-4cf2-b48c-efc9c1c8aef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09dcc56e-a330-4fea-aeec-b457caf77a83",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9941c02-b716-455b-a029-d4b99991b803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3bda45-c1e8-4cc4-8b4a-59fb58ac6e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5d0e6a-162d-45e2-a900-6c9c5d205f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cc7e87-8e2b-4dd8-ac01-925f2b087b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdeb7ab-d467-48ea-a198-557059ebece0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1402ac6f-4ca5-455f-960e-eee2206c3d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1660ce34-9af8-44c7-bab0-6d04ec7516fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2684e417-e51e-4cde-b820-3f1490c06184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad92e629-daf2-4341-b5ff-17913a41ff52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b577ffac-e620-4ab2-a7a4-f7eab9303d27",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375f0c56-6b8b-4ca4-81fe-966efb467451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ee70ff-723c-4077-845c-75e4b137e5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a98b17-9850-44e7-844c-0dd313c8cc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7156b5-d129-4f0d-bceb-776944b0fb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411c6ddc-e145-4ddc-bc86-87b8c93045f6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2d824a-47a8-4a2d-8958-05463b038441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cb956f-b257-4e0f-be60-ba52c764af8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf958027-6039-4fad-a5fb-b81097f59b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86803334-4b37-4b18-bc91-f31e005d893d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e347f4-cbf9-44d0-b918-cda55ac9ffd0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4a42e7-b497-4185-b517-19e86fc1f2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a273b7c-0ac7-443b-a69f-31586b6bd7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b2ea5-d142-48ed-a7ae-82f1a4ccd7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b97038e-7eb7-4d4a-ab09-83d76c563aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caee33fa-8d1c-41ba-8833-5727cbbab3e7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953aaef4-9b48-48b5-ab58-ff4cafcf0cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1b751b-aa5d-40ff-96a8-b2f7c36dce92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245c4165-d4dd-4b14-8acf-0626a62df187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bb28f9-4646-4140-87eb-bc0f04d0d218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9e1126-94a4-45b2-8758-ea9fcee9d4c2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41036918-b6c0-4ca5-9a4f-792c8b210c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e53a9ef-08ca-4967-9155-9a7da5c777b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cdcfce-1a40-4c51-adae-ec469036a0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e4cab4-cd5c-4b69-af90-8005e326925a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30aef9a7-92fd-49fe-9775-d6b1fc23b021",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94355f7c-01b3-46ee-b1fb-45c402229b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdfa691-3bf1-4e71-a0bb-c40d5bb95a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6981c8a9-e2a9-4ff1-a592-dbd87ced606e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61fd5f4-cdd8-4a39-a851-2c2c4a9887f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dac0e2e-9551-459b-8439-6a2f90943c21",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8121d26b-e949-4c07-bce2-963f9471bc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d6b0ca-83a4-43ee-b323-678e29482297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7742c5ae-c9d2-4ccc-b60a-f77dd8c2ebfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98ac7b8-6666-460f-a855-e0f72eef2532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b489263-31e0-4d75-bd16-0112885e09c6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a24ef5d-0901-4bbb-b76e-b3c265dd6dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a593be32-65da-4029-a0cd-c27b40677b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dc627f-4216-44dc-86e0-769921bd5342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d8c5b6-8c70-44e9-aaed-e4cbb49ea26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c43434-ad4a-4c57-975a-39d887d0f285",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0661a4f-f7bc-4960-b733-49fecc6a0dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f130e0-273e-4a06-8872-38828a7b0d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7314d081-29da-4f15-8d2e-ff4132b340ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261c9b48-dd10-48a2-8111-aeb482ac4992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ecf2f3-f0d0-4132-b334-420ba825a1a5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553fe0a9-9628-437f-9594-cef31b9922f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe918eb2-b0ec-45ae-9172-39e56cdafb1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e09808-1ecd-4720-b9b3-9d204bad20be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1e85b8-02a9-4006-93cc-aaf4198dfd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1e1283-82ce-4222-9abd-f85302cc6c8e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250b9da4-65da-459a-877c-c34d92002c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149847a4-834d-4a87-90b7-63fc9fda110f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2798d5-515d-485c-bf1f-604472c122b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecafbe8-5182-4af3-a5fa-a74c07b385bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad451d0e-bedb-4000-aa19-0061ba4b1a03",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc190192-78a3-4004-b777-af7e77bc7adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06522453-1495-4a25-8337-6e003399c374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ffd78e-e5b1-47b3-acfd-f498fcbe7d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b006281-4211-45ba-b7d3-3cc407d4a399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1415aff0-53a7-4791-ab0f-d6a1eafb4c74",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fae6148-cfb2-415e-9513-ae1acd0f5519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133550e7-bfe2-4398-b4a5-bd4a1a6ca152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10d389a-35f8-4eec-a637-7f257d474572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0030e7e-b2e5-48e1-a202-d6949fb9d83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf027fa6-d3b3-4a3e-96ce-97bdfb385979",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6848a63-a281-4c86-a355-62efb1ec0fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ef5b00-9498-4d21-b5ea-6bc9e85ac3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2f2dac-1976-4ffc-ac7f-a43fd5400efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94259d63-6b76-43cf-9fde-df35080a7192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7dfb2d-51e7-4909-bd30-5c9427a3360b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595f5dd7-e70b-438f-b315-6ae5fcaf55bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040490c6-de2b-4ad8-8f00-16c27e6ca60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66a21f9-22ab-40c1-8e30-0b8e524721af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdaf293-3c30-4c4d-9911-76d6c56a2254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925c5300-758e-4f7c-86db-aaf1373b2357",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb286607-9282-4154-9528-89d69fd70c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e14a79-aed0-4cde-bcf6-3e748d784491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75857493-6e94-4087-b200-1c7b85adaeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7af8b2-ae79-4f2f-94b7-49d5e399cb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb59cfa-ddcc-4861-a162-f3cdceaa2c8c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464cbf37-c153-4e43-b341-cd27dd7f20a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5c260f-d41a-4856-8a2e-0970c7d95ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572e74e0-09f0-4c1c-a5c6-556c28833189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340f3d34-cb47-471f-bbd3-267b11e05558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689f7d35-8f5c-4eaa-b5f6-2b5c4fba2a6d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b5dbde-b5c4-4c59-8321-4e9bd12897e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71dc8a94-4bb1-4ea2-9d3b-d0cf86c470b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c2b3ed-6da5-4a0a-86b8-f2ad557ac997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafc058a-6ca8-4b4f-acba-3ce66165b688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0620bcb-c1c5-43c3-abde-e972b5583b88",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa3c90a-541a-48ae-976b-b81fadfab5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f8a674-7555-4730-911a-46e9a4b656f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c985072-1ef8-434f-890a-aa3e790441de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da285804-496e-4e9d-91dc-53c69fc680b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8500f699-4dc2-4b32-b264-1c2611c7ca71",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0605c688-bb7a-4643-a1a8-9fd08cfc9ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cc4229-4735-4602-b330-1ab5ce2b870d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253d63b4-acbd-4150-b70a-2683e75dd2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4687f4-dc6f-4c11-b492-267b803b3a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5e5adb-050f-4e26-803a-818effd408dc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bdda42-0178-4a11-a21e-62d0487de866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5b9f7a-9392-47fb-b03b-102e42ca1725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417bcbb9-b951-4806-8c92-e5221b38b088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1a738e-ddaa-40bd-8c4c-834417c6cc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f522e14e-1ad5-44e6-9eb5-e922d82e1d10",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34df6c5c-4f75-473a-b333-67e31e66d578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528ae5c7-1129-4baf-9c19-737036f4f4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eba001d-1dc8-4357-bf1b-23ff5aa79437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26af0b72-301f-4cef-bfc2-16df3a6b699a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4193d456-3330-4116-9044-d06645bc0c46",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acf5ff7-a118-4c5b-a60d-adf20144bf4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34f0a3a-eda9-4071-aadb-50c8d35330c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c3180d-5f3b-451c-b189-fa53ee59b85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17bd58e-5318-42e9-b471-87349360cb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0de56db-94b1-44ac-82a6-47cc6a74890b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0520a779-83d3-48f6-aefe-2edc6bf14871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf2cbee-5ed6-4bb9-90be-54417611b988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87571af-ae44-44d7-b353-2332f417625a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c91b65c-1f5e-4e5e-8c4f-7c1acad8ab5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4046dd45-df58-4899-a55d-d9f271a76fb6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945c94b3-ef83-415b-81ee-4b4f0fc0c73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09fec87-8a83-4bcc-9cee-bcbcaf5fa576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418b5b26-a4ee-4dda-9ca4-c11b9d277da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558a3262-aebd-41f1-8276-0d3aa20f5526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d54f765-c7ab-46c2-b5a0-d54e1ac12b43",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c44f27-fc15-4d37-b5f1-fec6fc923aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef386e8-cddf-486a-b74b-dc1da69baa12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e64331e-b9a9-481f-bfe0-ac146ce066ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62aefff1-49d5-4158-a4ca-89f5f65ba7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e05672f-73df-4b38-95f6-f7f65180059e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982098c7-ea46-4e9f-a085-b1335d58d6a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb782b3-f79d-415c-88e9-e0d28d0f6d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a343d734-b587-443f-b394-7cbc2d737ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f45fb5e-cda8-4c40-808f-30d32a6fd154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77cd417-ccf5-4610-8aa0-18b72781b420",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45310c5-a281-4db2-946e-5104bfe34732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d0e938-a493-4562-9e9a-6a597c6deb2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a3bdaf-abe7-4aa8-bf05-1d137582617a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a8e287-1c77-44e0-ba22-b95c7841d54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fe8ea6-83b4-4ef7-9b74-f6c78ff4b6d8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d998673c-2cae-4456-9864-e117fcdad6f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1213686-f975-43e8-b926-523591ae0eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7098d05b-6540-47d6-a482-dca7ba114ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f94a0ab-0e6f-4737-b9dd-b013534d43c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550a315-6d6f-4d2f-8d9e-18b66fa8cc43",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2e860a-88a9-400a-ad8b-87ebdbd5ac2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4e87e1-3268-4731-84da-8bf67e05d339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c343728-0a8a-445f-b566-7471c4e61fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec20366-b9a3-40b0-993c-64fada7659fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f87988c-b802-4d68-b37b-edff465c90bf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebe1c2f-9003-447b-a3e1-e7da855b3289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5241141a-a40c-4185-a944-ccbc8c7b3c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7011c42b-3bfe-4599-b8e6-1defe28f3428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e90044-7649-4910-b042-7c8e53fd36ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fbd6ed-9ca3-445b-988f-278631b58cc8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468e9888-9b8f-4836-b1e1-1bef6cb84240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78652b19-c224-44e5-ae6a-fdd1d0dc4800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469a0f79-6085-4f6b-85c6-457ed59a56ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe66742-775e-4b08-89ce-93eba5955b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b42810-369e-4866-a307-9b035c13c833",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62ad8a5-7045-45b4-9ec0-13d7df1d06e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a5cbf1-85b9-484a-b847-4790bee50b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f8334-aead-4d36-bfda-6ab2af1963af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31292b3a-8356-4350-a543-06f16a68628b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771bee7c-b9e5-447b-8805-54f16213ff83",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738f0e3b-333a-47fe-b48a-a83d45f6a794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a27ef7-a270-4d86-a6ac-32560a2c59c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f7329b-f33b-4219-a47e-aa08353f4fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf3e9f3-ebe8-448e-8d42-ac6634422c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c27d6f1-532a-487a-b118-fdca3de8d6db",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81d4118-18d4-4153-a155-4d4f66691318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc4d321-0dd1-47dc-99db-2c333fa48bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278dde87-35ab-4043-854b-2f7b0e2d7b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd15da7-b236-4e0f-b1d4-b4d61cbeca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224f575f-6bb0-4751-960d-827d72b44a86",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c49b7f-2963-40f1-9e5b-391fdf7053b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31bbe3f-b134-44f3-be56-5f6b23c26a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50ed8b7-a997-4e99-8952-2be70d418112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bcca1b-ebef-4ccb-b488-d4bc6a806f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee65953-0013-485d-8ef8-75465a7c4a6e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65881dd-9036-49ed-b8bb-b802de36219a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6112bc4-dd42-4889-ba5b-708276fda81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdde7795-fbc0-4d45-9286-06e4296face2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f34dbe9-3817-40c6-bb3f-077971d70c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fbf21f-3d5f-4d70-bb1a-6f37c3da0b2b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece62155-45d9-40e0-b83e-a67d82a587e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7aeab1-f675-48fe-bc64-98d1655f8ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbbf1fc-a146-4ff3-bea5-5d4e99756884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae27e401-585b-4165-bdc6-8b1c3056d704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48290284-5524-4d71-9d2c-715239b2ebd7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea9a7e0-127d-40de-b2c3-b2bd0dd21fff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17a6b40-521b-4b45-8b91-27c33fb46600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8960513-a23f-4d29-8c88-f2175f2291e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1878ec92-7549-40c8-8c2c-9e3264a76922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d45bb62-4253-4102-b00f-b042981ffcdd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac98cb6-db0b-4059-9f38-5fed3b88b03c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac275da-a807-417d-8c11-f2968473a92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5dffc7-dcad-4314-a0c1-f50ce78b5fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8be038d-942b-4b04-be40-e3e804b62d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d105d3fe-c391-49b7-8063-ea7b604418c8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869715ea-ab4d-4d4a-ab96-383d91f54a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a7d1b5-65b4-4769-baea-28a48936f124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca12c295-f351-45e3-ac39-0148dae928d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138533dd-27bd-4e35-92a8-254d8f17873f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8b3e18-8651-4980-b79c-e9c08b2e8b09",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5235c6a-035c-4662-9692-ef6721fcfec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e50f6678-9772-4ff7-a87a-8d33a7398ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568389bb-dc77-404a-954c-c7597f03c561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b22455-48dd-451c-bcec-e141eb25aedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0553e4-d9c5-4a89-918f-15ddeb8e9209",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2102e4e7-4fec-4779-bc0e-7229c87204c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26887b4-b920-4ad8-9234-7c20398d78f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8495451c-d8db-49c2-80f7-60e8378e51cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12406fd0-ad92-4fca-8610-8ab433b57556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722df370-3cd6-4c3d-a56e-d41eb8a5da61",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbfd5e9-72e0-47ba-bdc4-2efbd101e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe1d18e-b6f7-41fe-b395-8323ed553b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d426353b-5383-40df-9b85-1e29246f6ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163b908b-0202-447b-a207-1a19d96852a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc0eda1-5fb3-4b7d-ac0f-ed4931388f0f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9da4c1f-62b0-4073-b4cb-f7976e9c92fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6032b585-6877-454c-9c77-a60fa5d93659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400ee988-bbc2-4bc6-9d62-2f3864d7fb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ca413c-cddd-4481-ad3c-4f3c46caa169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2917435-64af-4316-a82d-f7cb26eb3309",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6cbb2e-66ef-4a1f-8bc5-71499e86cbe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6e94a5-bb5f-49f3-be8c-f3e1dbb17a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37eac36-ae0e-4ad1-936f-13c09fa01c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e164295-8cc5-473b-984b-cd8cdf55710f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3154cd-de6b-44b5-8c7d-98ae6975aeeb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1873a529-e8b3-4224-b2b8-0f8adc77b2b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f62167-77c4-4be2-904d-c838fe5260f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c07d09c-172a-441d-b7d7-0293a786255f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fe7ad0-55c1-4945-baed-bb19816e649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbb3be4-a7d9-42a8-b0e9-24cc9c7d47f2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d29007-e5ef-45af-b47d-c53a258ba759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f1c641-7833-4bbb-8f48-053807ebcd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32a7e96-8920-46f5-b1db-96c07c717e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbda02bb-0cd1-4e4b-93d4-03476d8b832e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86905f9-9db3-412d-a097-700f7f920968",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55952a7c-0b2b-40f2-b938-0d766b0e12ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a459d2-f8de-47be-9d4e-698d67c88b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e109f7f-4a4a-4ab9-947c-07e8adf6882a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fbd13c-7f5a-46fb-8548-9cfe58f206df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70a65da-e4fd-4302-8047-7b37451b9af5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356d516c-8c7e-47e9-8465-679187c7310f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f218d911-6512-4a50-8ff9-95cf8690c391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30212f78-8eac-48e0-b225-2fa89c683fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fe712f-93c6-47c1-b01f-66c9c3e26bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9af6b6-a564-4d40-a68e-d4f3ed889743",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881f179c-2fe2-4fbb-a1ec-d08492ff5ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1f9f73-22e4-4fed-97fe-f66e742c55fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61ff20d-541c-4cb3-a836-e91b4406b5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e28cf02-063a-4a8d-8dd9-c8c93998f2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e42510-0dc9-4704-ab11-8fb6771ad26e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae466414-dd0f-47be-ab7d-e84e87a7cda0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26923490-9dc6-4930-ae7f-b14d0beff221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5250a127-fd82-41b3-a1b1-c63766340b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaaca19-c4ec-457f-87a8-cbdad9a5ac17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b83a4a-87b1-494c-b98a-6bf6f2ed6beb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4139a0c7-3265-4328-9506-ef21bf8e0f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b772af81-cbb4-4b63-b65b-7c8956b9462d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b318f4-5b38-41b4-9eb0-e5d20197b651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc11cd6-33bb-4b94-8a8b-15a4b6d0bcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da031df5-74b5-47b7-bd59-ea9482b7c97a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cefce73-fd33-40e3-a05a-76f31ff6a703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75640d55-52f6-4da2-8c3c-4863d0e5f457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887f12a2-09f9-42ca-ae7e-1aeeda5a3826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62e6855-c076-42b8-a0b1-cdec7473ed32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f78d195-a37b-4915-9d8d-8fa45efd365f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b5cef4-7bd8-4273-9d12-8828e768940e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd3a6919-24c5-4fa2-8365-f365f9c9fe59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b7630-61f4-4452-996f-8b2f9181e784",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7b7ae6-7496-4fce-9510-892fadaa3917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2470a8-9dfe-4548-b6ec-fd6935c7ffe2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2711a190-e7cb-4e17-9704-25f9320566ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f483ff82-a901-498a-a048-a9c14857c82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a2eead-a0fd-4d1b-b4c8-0d50a48f26d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4500036a-1741-4ef4-97b0-95897d8dee01"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d393279b-75c8-475b-920d-8de7bac5bcda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "008a766b-f5cc-4334-bed0-3ece7e74377a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1c8cf88-dfc2-42d9-89b0-0c0b40f991e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e93b672a-349e-4c76-a2ed-03d27ef56693"
                    }
                  }
                ]
              },
              {
                "id": "46d73e6f-cacb-4022-abc8-41b353630028",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cc38c44-1b86-4edc-a0d2-f93418f4d209",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c80fd4-a5c1-4468-b272-ae1305ecc1a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b60273c9-14fb-40f3-9092-19f6a957bd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ba626e-691e-4685-917f-3b25907a89e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afe5d176-72a6-4adb-afb8-c9893c0fe300"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d182fff3-3912-4a2b-acb5-981d68ef7784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ebfb48e-5af8-402b-b8d4-008fb6f22a56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c1432a7-aac5-4462-85d5-973187a0fd19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dab465c-3ebe-43ba-8b9c-de7e3469a770"
                    }
                  }
                ]
              },
              {
                "id": "93fb92d8-926a-4655-bfbc-995d249a58d9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "52b180cb-f4e2-4a30-b2f4-461a2539282d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ef22f5-a98d-4114-89dc-a9438c3712fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "564a0549-cbd0-4af8-960c-b7b4530f8061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3091761-2d13-419b-8c17-3c484a8f0254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03197d4-e2ed-4025-9586-783419ea7fb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e57f0a3-0e60-4301-8ca1-f047c9e2114e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d25db91-188f-4941-b771-81cda9f16cb0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a1a1d4-5275-4fb7-8bc7-777a85a76362",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7dd78cc2-be48-4933-872f-8b6daec694bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35976f1f-c71c-487f-a027-faeb9182a026",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1448152-c971-4dcc-945c-6bc5e02fd032"
                    }
                  }
                ]
              },
              {
                "id": "0b1e317d-b2ef-4a19-98d0-ae5c6fae488d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c90e07f5-75fc-4b43-8ef3-b82fcaa1334e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30b54cfe-591a-4fe3-82f2-2b2034486cd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3cc7dac-0326-4992-8a9d-d6f7ad9819c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2f8effe-949e-4291-9eaa-8bda8ba7646e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5dbc109-53bf-4ace-881d-b54f53aca27b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e26cdf33-12ce-4bcc-958e-98e8ae0a022a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05113f35-deba-4b7e-b504-f1a080c8d8b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7c24b85-3ee6-4d89-89bc-8774af1a4303"
            }
          }
        ]
      },
      {
        "id": "a176a38b-eccc-40c8-b7e9-fd2dcc421a7e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6b6d34df-d873-42ef-bb80-6f6ea6cd8843",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5485f50-12e9-451f-910f-9830a5d347bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb36f0ab-794f-4a10-8e5f-88ff2d4008b1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0564b4f7-19f4-4c76-995b-525059300f2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b5b12d8b-17c9-4ca1-9710-8c07fbf99a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7867d6-c186-4cb5-9463-cfe8b4ca41be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdf9eb16-9cf0-4e9b-87ab-9ae79fccb232"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfd3e754-22cc-4406-bbcc-adc8bc3923d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6159772e-0e64-43da-a93b-e4227a0a0986"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "727cd50f-e5fa-4020-865d-775e48e49087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76607454-bac2-4c1d-95bd-f2cf9419cba9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39136557-8cb4-45f8-ba4b-3c9d269e7221",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a22e56f7-a94d-4eb8-9a77-8a34c555e7e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9b86f4d-937e-4ff8-904a-57fc90336772",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57fa932c-be87-4921-bfeb-d69f6a33f399"
            }
          }
        ]
      },
      {
        "id": "7cd3a57b-84ef-4121-85cf-bc4d6b3902e6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5850525f-86c6-4cf8-87e8-6431ef521c3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a75ef3e3-08b3-436a-aea7-0c26a62cc5b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f75c30fc-cacf-4613-9b17-5cd287cdde1b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce3b416-b66d-4c4f-8adb-4b8763ce25c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bc77265-68c4-429f-bfcf-29b01104f218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf27d8b-8af2-42c5-8c81-50811840cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60af0b43-c401-4cce-8f69-ae49aaf0ce07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c8c44c6-3571-4ec2-ab46-04966ccc3de6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "414da945-6981-44b5-80e6-a79c48710385"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "457e2967-3bee-4408-afd7-326db8b6d202",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ca3809b-cca6-42c5-ae6b-6d0cf6ffc4f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c81475f3-80cd-447e-9779-828988a17450",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0584b758-8fa8-43cb-a5df-c54e69c19e6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b301aeba-0201-4ac0-ae27-0ba282d7dab8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e548c2f-b056-4f96-a55c-4410979b148b"
            }
          }
        ]
      },
      {
        "id": "778a84df-f034-4cb2-b103-9b2198e5913f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bd3781df-084d-4550-9caa-ade83eed74e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efe9ced1-eb30-431f-a04f-9eb5d012a004",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85f8ea0e-7751-427c-b03f-366699c29ea9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e903b2-ef30-4bfd-ace6-d6993ec07523",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "892c439b-4d2b-4027-ac81-8313a2d8dfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c61af2c-b336-4e8f-a005-a0e9a499f970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d369f021-619d-48b7-b94c-8884cc323688"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "585bdbc6-6f24-4cda-b8f6-37b46532c83b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00ba36a1-6602-47b4-99d4-1808832e3306"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4740471-10a8-45ee-8330-fe4a6170d480",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ba40805-6e8c-48d7-9d3d-eb203e328474"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46b4c93b-934b-4295-a0f3-f7705b069bbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa039fa6-7292-4709-b2ca-fae497e22fdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "663ecf38-0326-479f-8394-e458901f6e28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa3b48aa-758e-43ed-81ca-ef8f6e700f6c"
            }
          }
        ]
      },
      {
        "id": "0d7cd8f9-2468-4173-8bf8-ae03f8a1ecbe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "927f0279-7665-495b-83a5-ca095ca69784",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46fd0e0b-1d73-4470-b164-4e998b5fabcd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6ab48a06-1d05-4795-b6f3-e07f9655cf59",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9c8a661-e7b1-44c4-b3af-f9e7b7f1e7fd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b62d1d9-f8be-4acf-bc82-ea7ec9b25d87",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 94.49603174603178,
      "responseMin": 4,
      "responseMax": 8402,
      "responseSd": 620.2833869635574,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718498502334,
      "completed": 1718498534261
    },
    "executions": [
      {
        "id": "87b8f5b7-9323-40c3-a809-09252630cb71",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fb354b9d-f280-44ef-b7cf-f7f05e2c3eef",
          "httpRequestId": "460a010b-2aae-4bed-96dd-757078d92d43"
        },
        "item": {
          "id": "87b8f5b7-9323-40c3-a809-09252630cb71",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ad4c963a-314f-4a5d-b198-94725e832bf6",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "cf8e5dfa-6e9b-4c3b-b744-85a371162e99",
        "cursor": {
          "ref": "e6e31316-1955-474d-8121-cd1b9d6f52f4",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "41f4f507-a2f6-4d99-aebe-f0f4706b68dd"
        },
        "item": {
          "id": "cf8e5dfa-6e9b-4c3b-b744-85a371162e99",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3888333a-f7e9-4c1e-9523-ac9313187c6b",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "c60b310b-83f9-4b85-850d-41b9506cd2a0",
        "cursor": {
          "ref": "5832b494-50a6-4e00-b412-ad14c30871d6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d3918065-b766-4f2d-b32f-da77e4b517fb"
        },
        "item": {
          "id": "c60b310b-83f9-4b85-850d-41b9506cd2a0",
          "name": "did_json"
        },
        "response": {
          "id": "bb2d1ba1-67a2-4a3d-bd64-e1d08248cd20",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf9ed57-3d5e-46b8-bb45-dc1586475bf8",
        "cursor": {
          "ref": "a79fd493-fad7-496a-8b62-4a9d46823086",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "762bc0c1-0e54-4d9c-bc5f-ff3329de6dbe"
        },
        "item": {
          "id": "3bf9ed57-3d5e-46b8-bb45-dc1586475bf8",
          "name": "did:invalid"
        },
        "response": {
          "id": "67c73173-9d1d-4af4-adc6-610586523d93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 464,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf9ed57-3d5e-46b8-bb45-dc1586475bf8",
        "cursor": {
          "ref": "a79fd493-fad7-496a-8b62-4a9d46823086",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "762bc0c1-0e54-4d9c-bc5f-ff3329de6dbe"
        },
        "item": {
          "id": "3bf9ed57-3d5e-46b8-bb45-dc1586475bf8",
          "name": "did:invalid"
        },
        "response": {
          "id": "67c73173-9d1d-4af4-adc6-610586523d93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 464,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a913005-1b03-442b-bc6c-83b443245050",
        "cursor": {
          "ref": "f05357f2-8e82-4fac-a37f-47caf047126e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d87b3183-c8b7-4d34-8fb4-7e06b9de90e8"
        },
        "item": {
          "id": "7a913005-1b03-442b-bc6c-83b443245050",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a84d76d6-0394-4496-8f9b-8d0dc723930b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fd6e44-8557-4fc8-adbe-5736b21cc891",
        "cursor": {
          "ref": "a8f660db-5abc-4190-bec3-d96a2b7d40d0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cb3e8a8a-ce51-4752-bcbf-04a1f6ee0cc6"
        },
        "item": {
          "id": "82fd6e44-8557-4fc8-adbe-5736b21cc891",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e659b7c1-13cf-48ed-9b6b-7bf25097a342",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2501c1f-35f4-4fae-a49e-d5e6075d5556",
        "cursor": {
          "ref": "909ae374-b952-41e0-8f55-8cf008251516",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7fc49032-e0f1-4325-92eb-b50aba464540"
        },
        "item": {
          "id": "c2501c1f-35f4-4fae-a49e-d5e6075d5556",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e5311262-aae8-4ee0-b73e-8db132e30967",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443bbfa8-1475-42e8-abad-042f0fac7829",
        "cursor": {
          "ref": "223dabdf-df2d-4974-9bfb-2f31de60496a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8a76463d-e5a0-438a-b034-d7c28d86bfcd"
        },
        "item": {
          "id": "443bbfa8-1475-42e8-abad-042f0fac7829",
          "name": "identifiers"
        },
        "response": {
          "id": "5b6cf600-3fc3-40e5-9258-06d77b6a8025",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08080880-ec78-4185-b604-77003cc5d68e",
        "cursor": {
          "ref": "4e39ac02-eb10-4038-ab69-deb89937f74f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "380c8e72-82e8-4e1c-a9f6-bf070e0a709f"
        },
        "item": {
          "id": "08080880-ec78-4185-b604-77003cc5d68e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b182bcff-a157-4144-9e5c-8863c703d239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a83f65-e0d6-43db-b208-e5d913f284c2",
        "cursor": {
          "ref": "2b195ffc-c591-46e5-be9f-75f325ca8051",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2ec9b3c1-4ee8-4c30-99e8-0f00d87ace32"
        },
        "item": {
          "id": "b1a83f65-e0d6-43db-b208-e5d913f284c2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "313d0386-5a4d-4bad-bb6e-49d4e8da020c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ceadaa-658c-4883-b11e-2c2ed851521f",
        "cursor": {
          "ref": "7ed75f14-aa81-4b09-ae34-3fa7da2f06f0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "45030758-5be8-4ca4-8aec-51b80e5a2331"
        },
        "item": {
          "id": "f2ceadaa-658c-4883-b11e-2c2ed851521f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "19f84ac8-de0f-4cc4-b480-5f8b02afb54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dd300b-0b1c-47bb-b153-54f5ed815541",
        "cursor": {
          "ref": "5bbc7c6f-5e34-4eee-b02b-4af5c9ae1637",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "699ed1d7-83ae-486c-af38-93bec4c22949"
        },
        "item": {
          "id": "64dd300b-0b1c-47bb-b153-54f5ed815541",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c567901e-d201-4e08-b33a-df1c9b12b3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9745cc-0105-4595-b60a-a6adbbed017c",
        "cursor": {
          "ref": "7fd8c775-a368-4a6f-998c-734be7f45c64",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8321eb09-7ef9-4ce8-a3cb-f2b0f45e2dd0"
        },
        "item": {
          "id": "3b9745cc-0105-4595-b60a-a6adbbed017c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "660bc570-6270-4e76-a04a-beebed4d5672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b241aa33-5663-4f50-bdb4-031f6b0e993a",
        "cursor": {
          "ref": "7683ba03-c5b0-4093-95cd-ff28cb7a4ec6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "866620df-e3f9-4565-87be-b19121a731f8"
        },
        "item": {
          "id": "b241aa33-5663-4f50-bdb4-031f6b0e993a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4e3df48f-3adf-4b34-9e6c-3a9f4d631031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5e3712-a612-4d5d-aa15-dc92a3ce2e77",
        "cursor": {
          "ref": "89ed2025-ab39-4c7b-8ee8-b87a2e1fdf36",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "220c488f-e991-4d4f-bb78-d0b72c4b08a6"
        },
        "item": {
          "id": "2a5e3712-a612-4d5d-aa15-dc92a3ce2e77",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "14210d30-32b2-47ac-928a-03400f1a476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599a6f15-7a15-4143-abef-5c6615e25a18",
        "cursor": {
          "ref": "4e532063-67e0-4d66-bce6-88b3a2e3180c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f1f3f03a-ac00-4c69-bcdc-88cb430382ac"
        },
        "item": {
          "id": "599a6f15-7a15-4143-abef-5c6615e25a18",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fa8cd21e-c262-4dcc-a713-f56bcb108c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69d96e0-327e-4856-af73-03c7ae28de28",
        "cursor": {
          "ref": "070ae0a9-4e7d-44d2-881f-8aad411e6722",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2c169fb9-c942-42e2-9ccd-79edc9fb8328"
        },
        "item": {
          "id": "d69d96e0-327e-4856-af73-03c7ae28de28",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9d869d3d-8894-40a7-adf0-aaa09583a0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78169f4-3780-4023-a9f3-a5e8d588b09e",
        "cursor": {
          "ref": "c54e29e1-1af5-4f86-8fdf-57b7c62cb075",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "39ebed09-c4ec-48fe-ac55-c4cb0a547742"
        },
        "item": {
          "id": "c78169f4-3780-4023-a9f3-a5e8d588b09e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "643d1bf9-b761-499b-a9d1-25d9d6610f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50eaec1-2888-4021-b026-fb63c5164439",
        "cursor": {
          "ref": "f6a62f86-3280-4658-8901-6843ade3d9be",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "27bc43d2-d390-48db-8d5e-33cb17728c8d"
        },
        "item": {
          "id": "d50eaec1-2888-4021-b026-fb63c5164439",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "afdd81d2-5291-4722-9282-dd581595c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d122a1a-ef2b-40a4-b33d-b5cbbfd0c912",
        "cursor": {
          "ref": "0122128c-38c2-4362-81e5-246a965c24f5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0e1ef65e-3af9-4e44-82d1-3e19bbb9c406"
        },
        "item": {
          "id": "2d122a1a-ef2b-40a4-b33d-b5cbbfd0c912",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c2ceabf0-2455-4e17-9361-8b3a68c022a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca05a724-2e30-4676-b07c-36650b43c459",
        "cursor": {
          "ref": "21c155aa-ff41-4475-868f-3696bc8ad250",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b66350c6-8d6f-4076-88bd-fb4a7283a592"
        },
        "item": {
          "id": "ca05a724-2e30-4676-b07c-36650b43c459",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c2bc5c76-a0a9-4efe-931f-21deebad8049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1472c3b-f7cb-4d66-9950-8cc3a54bc377",
        "cursor": {
          "ref": "20cbd019-e6c1-4e4f-925f-282c09f67e56",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d74f4e3f-ebf6-4051-aca1-d160f556960f"
        },
        "item": {
          "id": "a1472c3b-f7cb-4d66-9950-8cc3a54bc377",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "01911760-2524-4e5e-8561-b7b3f39c9944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276888ac-ed32-4f0e-bcc1-0f344598acfe",
        "cursor": {
          "ref": "840d22de-0932-4976-81cc-96b3a55b6c39",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6ce4ae9b-9038-416a-ac75-320e78067ab2"
        },
        "item": {
          "id": "276888ac-ed32-4f0e-bcc1-0f344598acfe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f6a39a20-91da-4ed3-892c-e0cb1a4ae1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c7c91e-cb15-471e-9c48-d5644869a00a",
        "cursor": {
          "ref": "5b5b4291-d360-4f8d-be37-829f50bf11f6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bf4a64bc-36c3-494e-bc44-d9b8dfe98676"
        },
        "item": {
          "id": "b9c7c91e-cb15-471e-9c48-d5644869a00a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d9c2594f-faef-447e-8958-46e3c0e1122b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cc4021-5959-41d5-8c85-d79047813a72",
        "cursor": {
          "ref": "5823ddfe-06b6-4339-8493-01f0000413e8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5ff1f28a-9935-403c-b00c-73b3ed4e9757"
        },
        "item": {
          "id": "96cc4021-5959-41d5-8c85-d79047813a72",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6052b759-069b-4629-9f02-f1974e307e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d41dce-ee66-4fc1-87d0-f59884cc9b0d",
        "cursor": {
          "ref": "059d0b5c-c9ba-4df3-bccb-e9549b72667b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1a45492f-b0b0-4ae0-b9ee-654b51277ce5"
        },
        "item": {
          "id": "c2d41dce-ee66-4fc1-87d0-f59884cc9b0d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "af56302d-4822-48e4-8ae4-d6e440347863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b6633c-e584-45aa-a38b-31550da185c0",
        "cursor": {
          "ref": "5fcc79ab-7f6f-4261-8d12-e925fd3c96e3",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3f452212-e28a-4df1-b961-6b5f18849940"
        },
        "item": {
          "id": "b9b6633c-e584-45aa-a38b-31550da185c0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "84a903f8-ea56-4cc8-8e8f-ab69f0e20a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e320f15d-ccf3-4747-af81-1a16186f5314",
        "cursor": {
          "ref": "3a5aca50-0181-48c3-9065-04b8299e5fb7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0387f04e-e420-4122-a902-7c83856b8222"
        },
        "item": {
          "id": "e320f15d-ccf3-4747-af81-1a16186f5314",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1f625a23-53ff-4c89-aa95-c529ffd8cf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef31650b-1e5f-47e8-add3-41ce45871042",
        "cursor": {
          "ref": "8ee525f7-a347-4a17-9d0f-a32e8a9c6dac",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ac8f8f5c-2fe2-4cd3-9051-85becf9baeb3"
        },
        "item": {
          "id": "ef31650b-1e5f-47e8-add3-41ce45871042",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "133100d9-1e80-4c27-8405-82d254a7293f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c7add2-35a0-4105-8a40-6a32bd7ea4d0",
        "cursor": {
          "ref": "398dcd83-07d8-4ec2-a57d-70c704557df0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "86d080f7-2764-4a1a-8819-55408257f142"
        },
        "item": {
          "id": "90c7add2-35a0-4105-8a40-6a32bd7ea4d0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "15110584-a2ff-4022-82db-e1be43e1e64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0321ac51-1a08-4aef-9225-00147b554706",
        "cursor": {
          "ref": "7a786265-52f5-48b8-8ed0-e79c6bc5757b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ab943666-ab75-4711-8ed6-34f167743daf"
        },
        "item": {
          "id": "0321ac51-1a08-4aef-9225-00147b554706",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1f2be1b7-c443-46d5-9a22-6c70d655be4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d277a06-7901-48b9-b1cb-deca07ac1a75",
        "cursor": {
          "ref": "114d09d1-03de-451f-aed1-161d8582899d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "df6e3fbc-23bf-4073-9099-179bef2655ba"
        },
        "item": {
          "id": "2d277a06-7901-48b9-b1cb-deca07ac1a75",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "56dcbf9b-bd84-4bd8-aa3d-8a43d8404162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d5c6d2-27af-49d4-be04-b6a167fc1a29",
        "cursor": {
          "ref": "daeeb17d-0bfc-4fb7-87f0-45139f9c9f9b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e98b522c-62a9-416d-8490-fecf886bbfc4"
        },
        "item": {
          "id": "38d5c6d2-27af-49d4-be04-b6a167fc1a29",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8f352db3-0a88-47b5-a977-bc946f39f1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832e490-0606-4d14-bd6f-74014f564819",
        "cursor": {
          "ref": "e3139fe0-31a5-48d1-a5e9-7c4dacbac3e9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f85493bc-2230-4c76-82ed-f8f45f30f445"
        },
        "item": {
          "id": "c832e490-0606-4d14-bd6f-74014f564819",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8a0411e7-4b66-4f1f-9ed0-b203ae6a9728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc2da7-f003-4dde-93aa-9ad1f79202ee",
        "cursor": {
          "ref": "75d136e0-fe31-4a85-b762-52cfb50f1787",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7f2d63ec-8138-4133-99ba-84e1305c10bd"
        },
        "item": {
          "id": "fafc2da7-f003-4dde-93aa-9ad1f79202ee",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9d23188c-1ab4-4891-a940-5af20afd2588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18c312c-9fa9-4356-9506-81c96068f9e0",
        "cursor": {
          "ref": "8c6355a4-72e5-4352-87e1-c312a9fe4b3f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e937b1e3-d289-4a29-9949-2c3aeb0a2647"
        },
        "item": {
          "id": "c18c312c-9fa9-4356-9506-81c96068f9e0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "25680785-6332-493b-940c-29971e7bc606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792d5037-ffdf-46b1-a78c-82122e946a1d",
        "cursor": {
          "ref": "21bb6314-d3ea-44e7-b951-dba69e2cd953",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2e0a3285-6be1-4ffe-bf8e-fab9fa734398"
        },
        "item": {
          "id": "792d5037-ffdf-46b1-a78c-82122e946a1d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e7c7e4f-b60b-42e6-8c0b-ce731363620f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cc76ee-610d-4cfe-a83f-58b4fa08d92a",
        "cursor": {
          "ref": "3350c1f4-38fc-4363-8b87-16e9f3d502e9",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9fad3e91-bb48-41fe-8737-38e29711b859"
        },
        "item": {
          "id": "15cc76ee-610d-4cfe-a83f-58b4fa08d92a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d6452390-2478-4dbc-8b80-51beb928ee94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1026dd91-38b6-4ff9-b523-ca13cf324745",
        "cursor": {
          "ref": "0f641a75-b066-4650-9d0d-c849ac04afb6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "39920069-daa9-43f9-ad62-03c4f9187a7a"
        },
        "item": {
          "id": "1026dd91-38b6-4ff9-b523-ca13cf324745",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e4c0d7e9-a342-48b5-bc7e-5c7ee106e39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505d6145-986c-49a4-9718-b7f96a31db52",
        "cursor": {
          "ref": "195d4de3-bb13-48f7-9de7-de02e4aa4bc1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f0e2949d-4e75-4d28-9112-446f3814f534"
        },
        "item": {
          "id": "505d6145-986c-49a4-9718-b7f96a31db52",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1deb41d5-28c1-41c1-9290-a3652727dcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dc29fe-056d-4014-bd09-7c052756172a",
        "cursor": {
          "ref": "a5a8a820-4cab-4f17-80ef-74b8e62197b6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7d9829c6-5979-4921-a7b6-0e1f607643cc"
        },
        "item": {
          "id": "45dc29fe-056d-4014-bd09-7c052756172a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e0a7108a-4119-43e5-96cf-08f2826edf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aac03cb-80fe-4492-9126-6ea602580e55",
        "cursor": {
          "ref": "8cea9645-708a-4824-b5e9-c773ee2a9532",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9c4b147e-15b3-47f1-aa2d-fe495d2ff634"
        },
        "item": {
          "id": "9aac03cb-80fe-4492-9126-6ea602580e55",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "85cbc3e8-1198-46aa-b78d-0f251c0cf469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e0543d-6b39-4770-ade4-de265b6ed2fb",
        "cursor": {
          "ref": "1746843d-21cf-49a2-b4df-73739f1943d8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bb24956f-0f41-4bf6-b383-d2b46acc14c5"
        },
        "item": {
          "id": "06e0543d-6b39-4770-ade4-de265b6ed2fb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "227677c6-42b9-4f56-a526-ae64a1f8fb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1141574d-dbf8-4592-9922-cc94c78f84f5",
        "cursor": {
          "ref": "9ddd5d7e-3370-4b4a-97d4-5921caa55125",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4e8cb7f8-54ae-4600-ad09-fa0d1abde357"
        },
        "item": {
          "id": "1141574d-dbf8-4592-9922-cc94c78f84f5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3c5d4a9c-38ec-4607-90bc-46fb49de3c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dddf428-f322-4750-ad86-603a567a675e",
        "cursor": {
          "ref": "45688872-9d8f-42e5-8644-6de7fb010061",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "49525bc9-83c1-4c60-83e3-ee6b04669015"
        },
        "item": {
          "id": "1dddf428-f322-4750-ad86-603a567a675e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3e6e0cd7-75b4-4be4-a8a9-bf871b0c1279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30b7b95-69d4-4312-b6f8-777bcf650985",
        "cursor": {
          "ref": "4dfd46e9-481e-41e2-89ac-9902bf33e3fb",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a74cdec7-4fb8-4fa7-a598-024889993daf"
        },
        "item": {
          "id": "e30b7b95-69d4-4312-b6f8-777bcf650985",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6702edfd-f856-40f0-87bd-6786e2753d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc52bead-f309-4097-8235-5e3c2c814d1b",
        "cursor": {
          "ref": "e26ecb02-55d6-4c72-93fc-b5fb6bc500cd",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7fd58cde-0218-4478-93f0-84af9db98cdd"
        },
        "item": {
          "id": "dc52bead-f309-4097-8235-5e3c2c814d1b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "18002ec8-8080-4d71-8aba-d95d4c8f4997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c2fc77-f873-4d70-a433-c4455a7fe1b0",
        "cursor": {
          "ref": "677154f7-0de4-48af-8475-6c68d68bcc9b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c736cbaa-073c-46d4-a1db-e38ce05a957e"
        },
        "item": {
          "id": "f3c2fc77-f873-4d70-a433-c4455a7fe1b0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aeacaefb-a730-4af3-bcdd-141049c99bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4477bbba-0634-4df2-a72a-6ede56ebe52e",
        "cursor": {
          "ref": "322135cb-3312-4d52-b2b3-3cf63f514a78",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "077b8aa7-9ecf-4132-8752-db3c415434e6"
        },
        "item": {
          "id": "4477bbba-0634-4df2-a72a-6ede56ebe52e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f524e374-a9c3-4705-aae6-a73ff5bc9651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6757e1f6-8ebb-4153-8487-ec57aafdd8cc",
        "cursor": {
          "ref": "59c6f60f-8d40-488c-ab9a-8e2842754b91",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "01024d76-c8ad-4555-b9d4-92c7431d7a25"
        },
        "item": {
          "id": "6757e1f6-8ebb-4153-8487-ec57aafdd8cc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "76502560-0616-42d5-bba4-6c02181c4a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b28cf-4d71-4c27-8849-1e5876a7011c",
        "cursor": {
          "ref": "5f265f34-4a10-43ec-864a-0080f3409806",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3755be8b-41b0-4c93-bf0a-bf6fede43ae7"
        },
        "item": {
          "id": "b64b28cf-4d71-4c27-8849-1e5876a7011c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6104d49a-b4ea-4461-bdb3-f4afd4a63d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b380df7-d3d0-441f-98e8-531c31011aed",
        "cursor": {
          "ref": "3769d78e-b6c7-4a91-a81b-f696c309826d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "279cf674-f95c-4c83-b918-85c747106f67"
        },
        "item": {
          "id": "0b380df7-d3d0-441f-98e8-531c31011aed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "377b78d5-e5b2-44be-88f3-d2662ff5a182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235735d4-27c9-4d20-9ad4-85043054e8d5",
        "cursor": {
          "ref": "d72139c1-8ad6-42bd-af69-3f5874aeea54",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a9f384a1-f1ec-4dee-b40c-6cd3db0bc1db"
        },
        "item": {
          "id": "235735d4-27c9-4d20-9ad4-85043054e8d5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5ea8e91a-4c27-4f04-8d4e-9280f105ef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a859adf4-4f55-4525-8e39-90be97f7a92e",
        "cursor": {
          "ref": "69b4749a-ff1d-4263-9a0d-8ad5858f07f0",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6533d625-c3d1-4668-9c51-d57d28bc8a1f"
        },
        "item": {
          "id": "a859adf4-4f55-4525-8e39-90be97f7a92e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "306c7aaf-2c02-4a83-8ffc-2c0b4930fe7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b1fb9f-f2ff-4a78-9ec2-9773e1266850",
        "cursor": {
          "ref": "bacb4a67-3f33-48e8-aa44-26e7b67826a9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d2d02637-5942-486c-9869-3d8ccbef4322"
        },
        "item": {
          "id": "61b1fb9f-f2ff-4a78-9ec2-9773e1266850",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "973fddd8-deba-4400-85ac-02026b0d515a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2979fee1-b61d-42c3-a1b0-659e74ee9a6d",
        "cursor": {
          "ref": "c9e68856-6394-44b9-b183-bd28ac4090c1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ce973fba-a684-48b7-a3bd-9187269d141e"
        },
        "item": {
          "id": "2979fee1-b61d-42c3-a1b0-659e74ee9a6d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e43b68ca-6057-4251-95cd-4fd176ef0b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb5100b-8015-46fa-bbe3-f2eb5a128611",
        "cursor": {
          "ref": "d10c43c6-d8b5-4b6e-b539-645381d3d262",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b89665bf-2628-4dff-9a36-c9ca417ec929"
        },
        "item": {
          "id": "dfb5100b-8015-46fa-bbe3-f2eb5a128611",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f6e6aca5-1967-4f61-80ee-e71ee1a12010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1f1e39-5325-49b9-884d-1e372d7142c0",
        "cursor": {
          "ref": "42c99fb3-781e-4595-8de6-8adf2cfaf23a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "52df858c-17ba-423a-b271-64be9cad2918"
        },
        "item": {
          "id": "5f1f1e39-5325-49b9-884d-1e372d7142c0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f1860a1b-29ed-49ed-8d69-99fe8f460ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29475936-9e2b-4244-acba-954546d860ff",
        "cursor": {
          "ref": "eca6d830-ac73-4bd4-b64b-e98a355a364b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "eac17770-b74d-4de3-b41c-ddf780c51f0b"
        },
        "item": {
          "id": "29475936-9e2b-4244-acba-954546d860ff",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5022863c-51f5-4fa8-a076-3e3025db18aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e956288a-bc54-44bb-b10e-3143b5e3857b",
        "cursor": {
          "ref": "6625519f-d484-4b92-8532-2a584a5b76fc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "79004d5c-d76f-4a65-9384-31af09aeb83c"
        },
        "item": {
          "id": "e956288a-bc54-44bb-b10e-3143b5e3857b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "88a3d72d-c094-4f52-92ca-b6ba109091c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fa20a3-34fe-426b-925c-72e2ebb35851",
        "cursor": {
          "ref": "587a4575-4a52-4b43-bb9b-314ed1a05008",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a91ae13b-970a-4f5b-86a8-7f8b16ce2694"
        },
        "item": {
          "id": "46fa20a3-34fe-426b-925c-72e2ebb35851",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1356f6ca-05bc-4cfb-a695-af68fc2853f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ae5852-143e-4d54-a058-32f0ee01a18d",
        "cursor": {
          "ref": "8876478e-3a54-4cc5-9303-2eccf5d0ee06",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "35227151-db99-4c84-973b-30c2879cedfa"
        },
        "item": {
          "id": "75ae5852-143e-4d54-a058-32f0ee01a18d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "13bf75d8-79f4-477d-8701-17d39173a7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a3566-b890-40ac-82dc-0dbf6a8b74d3",
        "cursor": {
          "ref": "7516fbc7-bfe7-4ac0-9d82-df52cf7a0605",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "35aa0370-eaf9-48d9-aa33-1a56a027fc99"
        },
        "item": {
          "id": "567a3566-b890-40ac-82dc-0dbf6a8b74d3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a1f0ca06-bc38-4e19-bcf6-6d3ec1f4787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2de3b8-e006-4aa7-99eb-7601be6dcdb3",
        "cursor": {
          "ref": "d2be243c-9f08-4ec4-9e8a-b84163fe8a7d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2b34e880-e248-4349-8b60-91eb7a953bd1"
        },
        "item": {
          "id": "2d2de3b8-e006-4aa7-99eb-7601be6dcdb3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "834df146-387a-472e-bd97-bae440a0253c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab073ec1-c244-4bf8-afae-d5a74c29fbe3",
        "cursor": {
          "ref": "67beb5b9-c51e-4fd2-82c2-ed6c40adff63",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d157f338-bc72-4d6a-b366-5eed30480a62"
        },
        "item": {
          "id": "ab073ec1-c244-4bf8-afae-d5a74c29fbe3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "adca6f55-7953-4a89-9cf1-9a2505f1e0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63fb156-4feb-4fe6-b6c9-9027af19180f",
        "cursor": {
          "ref": "36851e87-5936-4417-9ce7-a0930a6ac77e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "35fde0d1-3768-43c3-a785-dec395df67e1"
        },
        "item": {
          "id": "a63fb156-4feb-4fe6-b6c9-9027af19180f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "376e4485-6ffc-48cb-a7dd-1be228e6de9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd15117-3fcf-408e-8528-96436f12352f",
        "cursor": {
          "ref": "a787c5df-19aa-4b91-b45d-ce22a69ea270",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "13e2cea8-d7f4-4e33-8663-531f093a7d66"
        },
        "item": {
          "id": "ebd15117-3fcf-408e-8528-96436f12352f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9683183a-9a13-4d28-84ef-61480702c211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc9c69b-0e87-4a4e-92e8-3f7620f314c4",
        "cursor": {
          "ref": "a865caa4-de8b-4559-bdaa-45dfbd37d0c2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b420c173-df23-46e0-84ec-76582b8ac704"
        },
        "item": {
          "id": "afc9c69b-0e87-4a4e-92e8-3f7620f314c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34c84094-38ca-4cb6-a671-7596e1b50d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563399ac-e54f-4f99-a2a4-ceee029257c2",
        "cursor": {
          "ref": "bc709ed1-f447-4bdb-af43-27ce311e839a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2300107-644b-4e36-b5a3-f905e2073c74"
        },
        "item": {
          "id": "563399ac-e54f-4f99-a2a4-ceee029257c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "127b0ba4-c0e6-4f7a-9d8b-73a1b9b40a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84c6060-7e5e-4260-91cf-c4876973d8eb",
        "cursor": {
          "ref": "a9d423a3-4ffa-479b-b383-cc695c3c0c4b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "25125f76-7c47-4c76-941d-96699d109bd5"
        },
        "item": {
          "id": "d84c6060-7e5e-4260-91cf-c4876973d8eb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "94512d4a-d3ff-440d-8e9e-96f3d39e05a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c65b03-e4ee-4307-84ca-352232fbd1d9",
        "cursor": {
          "ref": "bc6f3fc2-35f9-4c1a-bc10-c68ff6c82405",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f8e62473-12c2-4585-91b2-488f1d21def2"
        },
        "item": {
          "id": "19c65b03-e4ee-4307-84ca-352232fbd1d9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "706f3bea-d973-46f4-8e6e-935830448667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6650cfc-4d6b-424f-b101-eabed5fb1354",
        "cursor": {
          "ref": "2234e1ae-9b4d-490a-9e4f-40dab65454cb",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2f892420-249b-4f82-86fe-1c095cd0e38b"
        },
        "item": {
          "id": "b6650cfc-4d6b-424f-b101-eabed5fb1354",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "da140cbe-044b-46cf-bdc0-d27a2f3763cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145f5e53-47e2-4957-87eb-71e07b62b5db",
        "cursor": {
          "ref": "f32e99fa-5950-4d26-8596-db17ec0f235f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d4ac224a-fc3b-464e-97f6-318b30428a7b"
        },
        "item": {
          "id": "145f5e53-47e2-4957-87eb-71e07b62b5db",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8e3e72a2-d29c-4e4f-9758-91aef8a44927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b71b29-80c2-421b-9c00-a268cdf57353",
        "cursor": {
          "ref": "0fb4c06a-f187-485b-932f-82f6da38e156",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8f651a7f-41ba-4e50-a1a8-d71011c9e17e"
        },
        "item": {
          "id": "47b71b29-80c2-421b-9c00-a268cdf57353",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3f3b6c8f-fba8-4959-bd9e-c733d8590f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ae1ed9-457a-4f61-8cd4-cd5b89634da4",
        "cursor": {
          "ref": "f4d64edc-b2c0-435a-90e3-a0a5c393554a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f939044a-a299-42ab-9311-0f32d99268b0"
        },
        "item": {
          "id": "c9ae1ed9-457a-4f61-8cd4-cd5b89634da4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "415abf8f-f0ec-4bca-af80-8a12246911c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f717135-fabf-4bb1-8fd5-2e522cc44cb9",
        "cursor": {
          "ref": "cb1d043e-92dc-4afe-aff8-f2270b3dfe77",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4a94978d-5088-457b-bc40-25a4d6aa261d"
        },
        "item": {
          "id": "4f717135-fabf-4bb1-8fd5-2e522cc44cb9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0c4e19bb-28fe-4d1b-951f-383892d0b83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346cfac5-d209-4673-88fc-eca53b4215f4",
        "cursor": {
          "ref": "c4dc85ce-3647-45fe-80c4-6586571db3da",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e4771bfc-2e39-4b22-9be0-407630469026"
        },
        "item": {
          "id": "346cfac5-d209-4673-88fc-eca53b4215f4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "986447e1-9da4-4161-a086-819d7274c34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43909a31-6038-43e5-be81-953a83f6a31f",
        "cursor": {
          "ref": "90052da7-ec8d-4cd8-ba6e-f208285f754a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ce8715be-8c24-4a45-8caa-a10ffea0e022"
        },
        "item": {
          "id": "43909a31-6038-43e5-be81-953a83f6a31f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b843bfd8-522d-402d-bba9-f39e97f9556a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e11608a-e0ca-4a72-96e8-07fa3521f9fa",
        "cursor": {
          "ref": "2825610b-e37d-4509-bfb8-05f128ffa450",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1e06ab63-f05a-4cff-93c2-84cf0ca290ce"
        },
        "item": {
          "id": "5e11608a-e0ca-4a72-96e8-07fa3521f9fa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ccc77171-e886-4af8-8e53-0db37f32d6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad65a47-d603-45e5-a402-07a17d0b21a7",
        "cursor": {
          "ref": "ca238978-6236-418b-872a-4047076071fe",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b7ce0404-f104-426a-8abd-60065bc02b4f"
        },
        "item": {
          "id": "bad65a47-d603-45e5-a402-07a17d0b21a7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c5a05077-4670-48dd-8b7b-57e76fdf89b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5719a6d9-b3a6-4f87-89de-c40e24f63524",
        "cursor": {
          "ref": "da80787a-d224-40ee-9e57-ce1994d615bb",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "384d1d07-22f1-4aeb-8dcb-9c051cee4f94"
        },
        "item": {
          "id": "5719a6d9-b3a6-4f87-89de-c40e24f63524",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b59bfff0-b8cc-4357-9613-84d2661fa0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934dd679-92c0-481e-8379-57eef8ad1ef5",
        "cursor": {
          "ref": "70e385a8-b795-4c56-84cc-2a9a124c59cb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b9196418-4076-47b6-bf5a-97b6f8fb63d3"
        },
        "item": {
          "id": "934dd679-92c0-481e-8379-57eef8ad1ef5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c361bbf-f219-4ca5-aa3f-75bab0c261bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41255ab-274e-4cae-bd46-68e68609cdb3",
        "cursor": {
          "ref": "54059949-b425-4498-b38c-b72c72c48e8c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "49f2c3f1-c66c-445e-a5af-9c578a0b0e4e"
        },
        "item": {
          "id": "c41255ab-274e-4cae-bd46-68e68609cdb3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e4c2b51f-5dfe-41bc-a47b-8ce65bba445e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d962367c-e10b-4379-a96d-443587cfeeec",
        "cursor": {
          "ref": "21a270c0-6366-49a8-bc10-5359584fb935",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "859a45b4-435f-4608-952c-6d6f3602e5a6"
        },
        "item": {
          "id": "d962367c-e10b-4379-a96d-443587cfeeec",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "04ad2b9d-328f-4d3a-b2bf-77be48395fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf3f436-f43f-4c37-a8ff-9e1048e6c1cc",
        "cursor": {
          "ref": "b220d9ce-2399-4090-846d-67e50069eae0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2b29086b-7ae0-4334-9a94-75ca1bb5fd07"
        },
        "item": {
          "id": "1bf3f436-f43f-4c37-a8ff-9e1048e6c1cc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6d5bc368-38e4-4af9-8a3f-70844bfabecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3459b903-83a9-481e-b1c3-9f1abe5684e4",
        "cursor": {
          "ref": "9c52865f-8275-498c-910a-34255d19ffca",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a21be21c-075c-4e51-af7c-aedd80b2b2e4"
        },
        "item": {
          "id": "3459b903-83a9-481e-b1c3-9f1abe5684e4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "26f2d11c-ede6-49e5-aae6-8be5aedf2d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c0bbac-d9ae-40ea-ae8e-31b2b9125257",
        "cursor": {
          "ref": "e2714c25-809c-4bd4-97bc-59c959af2217",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7caaaf1f-1b83-4365-839e-4f7ead387d9c"
        },
        "item": {
          "id": "d6c0bbac-d9ae-40ea-ae8e-31b2b9125257",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "261e4105-fe94-4502-8049-ac1a0a709a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bfbf56-f637-4aec-b14f-6b8d54be8b30",
        "cursor": {
          "ref": "871036f3-a589-4ed2-ae38-74becac757d7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0f58bfcd-0188-4594-8c75-cee9b9d843da"
        },
        "item": {
          "id": "b2bfbf56-f637-4aec-b14f-6b8d54be8b30",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9422917a-1f51-4a4b-8df0-6b1d389f923f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53a9df7-1414-45b6-87be-be65d10a3ad1",
        "cursor": {
          "ref": "b878088d-5adb-4fe5-9d8d-76973b0acf7e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd1379e7-81dc-4985-b96a-149b0da8cd9b"
        },
        "item": {
          "id": "f53a9df7-1414-45b6-87be-be65d10a3ad1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d7e149c4-309a-4117-88c3-ddd85fb92613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806b0a98-f38e-41ac-b2a6-e652a0437229",
        "cursor": {
          "ref": "3ed493dc-a03f-49b0-87e2-17cdb7bd3c11",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ce4ad989-181a-4d1d-a232-b9fb4f19a7b7"
        },
        "item": {
          "id": "806b0a98-f38e-41ac-b2a6-e652a0437229",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9f9351d5-12b2-457f-b3ae-abdd151f78b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb8e842-1e84-4ad9-90d7-9f017e7d8e41",
        "cursor": {
          "ref": "d1e0bc42-717a-4f45-b4cc-702063723d3d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5936b953-e806-43a7-bfab-906b4ec85506"
        },
        "item": {
          "id": "8fb8e842-1e84-4ad9-90d7-9f017e7d8e41",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eed6e2bf-d015-45d4-a81b-80d2c5d6d307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b75ca28-d32d-4e0f-8f11-69a735169ad9",
        "cursor": {
          "ref": "f0547b48-7bc0-4ca3-8d89-e3193e67e013",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "df9d3ae2-ce73-4b8d-893a-4ca085775ca8"
        },
        "item": {
          "id": "0b75ca28-d32d-4e0f-8f11-69a735169ad9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5ed78249-f871-45a5-8ffe-518091377bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa8d3ea-31a2-47c3-a7e1-d4b95d1b9e80",
        "cursor": {
          "ref": "5fffc05a-c915-4645-bea9-edd392664953",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4fda0161-f9e5-42c1-bf84-0344ece94fc1"
        },
        "item": {
          "id": "6fa8d3ea-31a2-47c3-a7e1-d4b95d1b9e80",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e86397a5-0ee0-4070-94c2-4c892baa441f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a783384c-8a44-4512-a153-76f2b33856d0",
        "cursor": {
          "ref": "923ff78c-6a2d-4a29-b84e-61b4ea307a6c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "60a0440a-faab-4c66-a1da-619f6aab2f31"
        },
        "item": {
          "id": "a783384c-8a44-4512-a153-76f2b33856d0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d124fd15-edaf-4f40-b80d-1baf4a546f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330d57e9-889b-4cda-9a16-7ff65d1129b1",
        "cursor": {
          "ref": "cd560d6d-e6ba-4af0-a4c0-4d7795b4ac51",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5f02506b-c926-4304-846d-726eddc0e8f4"
        },
        "item": {
          "id": "330d57e9-889b-4cda-9a16-7ff65d1129b1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3e9bcc5a-b726-4dee-950e-e90d6a92b4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17953571-cd56-4259-b784-91e4cbca4f29",
        "cursor": {
          "ref": "a2f221e4-5449-4367-ad2f-9b5e9bcf30b5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "24eb5301-865b-46be-ab0e-d019702de613"
        },
        "item": {
          "id": "17953571-cd56-4259-b784-91e4cbca4f29",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b8983b37-98ab-48cc-84db-5913deb59f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7bd6b2-1061-4ab4-8195-480ab8459343",
        "cursor": {
          "ref": "2c1fbd7f-68f7-41be-b0a8-441e6e5c6975",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "14a3f395-24d1-43b6-ba29-d6616a5d8d9a"
        },
        "item": {
          "id": "ee7bd6b2-1061-4ab4-8195-480ab8459343",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d913101e-1a08-4bc2-b5ec-f2ac1931b680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8a3756-5eee-4403-91e4-b45603da00ae",
        "cursor": {
          "ref": "58e1bf6f-4779-4d93-ae8e-1fadf4aa842b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f3f3aa09-d1ce-427a-ab3d-f384db0af7dc"
        },
        "item": {
          "id": "3c8a3756-5eee-4403-91e4-b45603da00ae",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0a805245-074d-447d-88e9-76ca0e81106f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3903ff6b-190e-4f38-b102-129a91c947ad",
        "cursor": {
          "ref": "34795e75-91b6-44a2-b29e-58a97b7aa7b8",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b28ade50-97a8-4662-8f92-96d1b09d12c2"
        },
        "item": {
          "id": "3903ff6b-190e-4f38-b102-129a91c947ad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c29ee7a6-4f93-4eb2-9fa0-92894de48c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe842ee-1993-4a60-9b0c-a3229202fdf3",
        "cursor": {
          "ref": "f93f77c6-564a-4ecc-9155-c88a7d30d60a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "94d6cde1-4693-449e-a1d5-93131b626290"
        },
        "item": {
          "id": "bfe842ee-1993-4a60-9b0c-a3229202fdf3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3d46a903-e295-47b4-9be6-fd2c7718c863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d385983-eb63-4f1c-80dd-5db17432983d",
        "cursor": {
          "ref": "330dcd7f-ccb0-49cd-9c04-591d661c025b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "af020082-0a99-42b3-8d3f-f14a45cdb309"
        },
        "item": {
          "id": "2d385983-eb63-4f1c-80dd-5db17432983d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d2176a26-de41-40b4-b87f-186ac922d99f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1020e23-9a57-4ee6-bff1-635ba6142f15",
        "cursor": {
          "ref": "d723f0a8-8654-4ed9-9a90-ae2b296dfe0d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "11493e2c-aec3-49b1-a7d4-60647513bc0a"
        },
        "item": {
          "id": "a1020e23-9a57-4ee6-bff1-635ba6142f15",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "72157d35-7d1a-4a2b-bcf6-863bd14247a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2584300b-e0da-4cb6-9d10-30d7a08831ad",
        "cursor": {
          "ref": "5d4baa77-a7cf-433c-8c21-5632307ab35b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "942f6d56-edcf-4f36-a503-72d1bea566c0"
        },
        "item": {
          "id": "2584300b-e0da-4cb6-9d10-30d7a08831ad",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a4296258-d599-49a8-bf6c-8a2f4975782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e1a3d221-054b-4405-8ef0-ae7a090143c9",
        "cursor": {
          "ref": "446e864c-95d5-45db-8330-3003f4ec5e24",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4e218a87-e26d-47b1-a014-d9bfc33c1424"
        },
        "item": {
          "id": "e1a3d221-054b-4405-8ef0-ae7a090143c9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4e3c69ab-277e-49b1-9241-a9eaa7365eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f6fcf90d-29cc-4f81-b94e-5e086a33cb71",
        "cursor": {
          "ref": "b0de6501-1dfd-40b1-ae56-2a2e60f4ccd3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4268d961-7081-466d-9e34-51bbaed4784a"
        },
        "item": {
          "id": "f6fcf90d-29cc-4f81-b94e-5e086a33cb71",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "719532f3-9179-42c9-b8d1-300e34560e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4156f6af-dcdc-4890-bd22-a26fe277be11",
        "cursor": {
          "ref": "181d76bd-2ccc-4fb1-983c-6cafffb27380",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fdc09265-69c4-4894-b8f1-4cd650ac0466"
        },
        "item": {
          "id": "4156f6af-dcdc-4890-bd22-a26fe277be11",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ed4b0454-2129-4a00-8a3c-ba929f19063d",
          "status": "Created",
          "code": 201,
          "responseTime": 8402,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b314403a-ed42-4393-a492-8beec2af8edd",
        "cursor": {
          "ref": "2498a704-9302-41b5-b2dc-f5ebfc2dd5f3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b8891407-aaaa-4350-a56f-b07e1de9a9f4"
        },
        "item": {
          "id": "b314403a-ed42-4393-a492-8beec2af8edd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "00740a39-e17e-49a1-aff4-671a35c2c731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e7e966c7-70dc-4162-9843-bae9b8f872e7",
        "cursor": {
          "ref": "f825561b-bcfc-42a5-ace9-f68bf8f6f9b0",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4e746d97-f744-4dbd-a82d-3d24fa59d673"
        },
        "item": {
          "id": "e7e966c7-70dc-4162-9843-bae9b8f872e7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "73b0795e-3e5d-4fb9-8474-c719c1d70ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c1a33e92-2b79-49f0-a32a-655f9753d7d0",
        "cursor": {
          "ref": "f26e9763-9b4d-4d35-a65e-2c86931db376",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "26114e78-5952-4789-b11a-34b08502df7a"
        },
        "item": {
          "id": "c1a33e92-2b79-49f0-a32a-655f9753d7d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "da4634b5-3b05-4534-ba55-6bd17ecd9148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd28c059-ad0f-49ed-906f-fa63ed0eeed1",
        "cursor": {
          "ref": "c28321d5-35e1-488f-b619-e79a51514512",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d2184eca-439f-4f62-8582-a4087d8f0b99"
        },
        "item": {
          "id": "dd28c059-ad0f-49ed-906f-fa63ed0eeed1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a7a4ea95-267f-4296-82ad-483af6d3f481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd19123e-e171-4332-a1cb-efdf4fb08350",
        "cursor": {
          "ref": "2959c8c3-57d9-421b-89a2-bdd60164391d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bdaf0b7b-c721-4943-8219-9ae6822c803f"
        },
        "item": {
          "id": "cd19123e-e171-4332-a1cb-efdf4fb08350",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f86016dd-e39c-4073-8707-3bc6e8eb8361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a55581-21c8-4e8f-ba47-f18920f68715",
        "cursor": {
          "ref": "7acbb255-1d5a-49b4-b3e5-c6dee4689296",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9079d2d0-080a-4e08-ab01-313046535744"
        },
        "item": {
          "id": "f9a55581-21c8-4e8f-ba47-f18920f68715",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cdb98016-2e06-4b37-a1e2-06063b663ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30e6e55-a2cd-4b70-84e3-6df5114f088a",
        "cursor": {
          "ref": "f0335fc7-c7d3-4093-8462-36c9cfebbb67",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "da63bbbf-eb01-4db7-86bf-795fb688f00b"
        },
        "item": {
          "id": "f30e6e55-a2cd-4b70-84e3-6df5114f088a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b4294b2d-f51f-46f4-939d-cd642ee2a32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391b4467-e77b-4404-a953-fd1af496a2c4",
        "cursor": {
          "ref": "5f63c824-77d7-4b5e-b8df-880729ac35cb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f1451137-508a-40cb-9ba7-fa6db547a728"
        },
        "item": {
          "id": "391b4467-e77b-4404-a953-fd1af496a2c4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "51f50163-7d6b-4da6-961d-aee8fe97ee0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf9bcd0-35bf-4c07-be34-01961ce90ee3",
        "cursor": {
          "ref": "2d113eae-f45a-45cc-9f49-076deb26e001",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c76cc742-c4d6-4da5-bf51-c93d2e459fb1"
        },
        "item": {
          "id": "bcf9bcd0-35bf-4c07-be34-01961ce90ee3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "abde0aa7-704e-40a4-8c53-d3f43c0a33d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fc623f-0d50-4a9b-801d-691377326f85",
        "cursor": {
          "ref": "b723f7df-c55e-46b3-b9a9-aef8b3a989fb",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "011b53c9-a259-4c2a-bc35-2d111ac1faa4"
        },
        "item": {
          "id": "98fc623f-0d50-4a9b-801d-691377326f85",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cbc1727b-9170-4fbd-b40a-aeaca8fcbd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15aff4a-630d-4db2-9ba1-5bc4cb34d8d8",
        "cursor": {
          "ref": "0225c05b-59ac-4c9b-af0b-7e3e0bed4ec9",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4b738e7b-2f28-4c6b-99bc-1a807b9f269d"
        },
        "item": {
          "id": "b15aff4a-630d-4db2-9ba1-5bc4cb34d8d8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "76833a65-b545-42df-9865-37895c94b4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636bc1d6-728f-49f1-9495-132a1032b80a",
        "cursor": {
          "ref": "c8ebbc26-2081-4159-86a5-e8b1665ea532",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ce51172b-ce31-431f-968c-19f7984ee434"
        },
        "item": {
          "id": "636bc1d6-728f-49f1-9495-132a1032b80a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eef090a2-5fd1-4312-9424-1198441380a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e8c2b0-081b-4ab5-87c3-381a106536fe",
        "cursor": {
          "ref": "aebe0c42-9f83-4a02-89ff-a0609005c8fe",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ab0eb9e0-d024-4229-893a-cd8735c32224"
        },
        "item": {
          "id": "27e8c2b0-081b-4ab5-87c3-381a106536fe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "135e00f3-5628-42a3-8387-3aabf7fa6558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68c84f6-d390-430c-bc24-4a38884e383e",
        "cursor": {
          "ref": "f163bb2c-7f95-4318-96f8-a3fdb04b4ad1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5fe4d6bc-4ef2-4029-b9c7-5a51ae53f51e"
        },
        "item": {
          "id": "f68c84f6-d390-430c-bc24-4a38884e383e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "de26da4a-2399-4377-a901-8421796befd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559f0e5e-1175-44af-9fca-473d2bbfb06c",
        "cursor": {
          "ref": "0f520871-40c4-4753-940e-482ec01910b6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "50534d0a-8bce-4ec4-8f43-aea5b4b242cc"
        },
        "item": {
          "id": "559f0e5e-1175-44af-9fca-473d2bbfb06c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e9067bca-1735-4b5c-a1ab-1aaec8563873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab11303e-655f-4549-b4ce-020381de5acd",
        "cursor": {
          "ref": "01567198-61e0-44e4-a845-1e4ea89a0a97",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b4faf973-85b5-4a95-86a0-92a3fd11de98"
        },
        "item": {
          "id": "ab11303e-655f-4549-b4ce-020381de5acd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "26fc5674-32ee-4443-b0ca-d3d51a990076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c6b6db-9226-48c2-9620-cded85b5eeb7",
        "cursor": {
          "ref": "676b4754-0e9f-4be1-9a4b-752b64e78602",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "09e9c825-b07d-49c4-a9dc-73f645d10f7d"
        },
        "item": {
          "id": "13c6b6db-9226-48c2-9620-cded85b5eeb7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d31b049c-923e-43c4-af74-c60d04a0a33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef6ce21-28d9-4fe8-9862-74af83edbc68",
        "cursor": {
          "ref": "a66164e5-b3f3-431b-8096-2290bc70e281",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "afe87c7a-8cff-48cb-b4f8-4efad2be2e4a"
        },
        "item": {
          "id": "cef6ce21-28d9-4fe8-9862-74af83edbc68",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ffdc1bc2-a2d8-47dc-b5db-3940401c6ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba5c1ed-c70d-4675-89ca-7d977fea5e79",
        "cursor": {
          "ref": "46e91426-9ea2-4acd-847e-cd1b0eb7d5ff",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "08c19acb-1044-464b-8da7-a1fd9e40be02"
        },
        "item": {
          "id": "0ba5c1ed-c70d-4675-89ca-7d977fea5e79",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a3cbe2f-61ae-4b6e-96bb-fd1e83123b54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b082a329-b24a-4305-98d6-ab821c9868db",
        "cursor": {
          "ref": "0a85ba83-4fc0-46b0-b054-f844b28ace09",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8bfeb85a-fc1c-4ebe-a849-72686f51639b"
        },
        "item": {
          "id": "b082a329-b24a-4305-98d6-ab821c9868db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e2255239-7e14-43f4-83c0-a38723624cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e26697e-e91f-4963-ba39-7b886af8796d",
        "cursor": {
          "ref": "66111991-65ec-42b3-85ad-fc7607332d2c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "037188c5-60e1-41f1-935c-e74fab754f54"
        },
        "item": {
          "id": "7e26697e-e91f-4963-ba39-7b886af8796d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "adc1a6c0-4d07-4376-a6b7-cee37056f1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d538f-10ca-41ab-9ade-f0bd896f2724",
        "cursor": {
          "ref": "28c933d7-a0b8-4370-ab79-562a5af78f8f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a46dc440-14c8-4420-a932-0510103f20c5"
        },
        "item": {
          "id": "9a8d538f-10ca-41ab-9ade-f0bd896f2724",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2073de28-f76e-4852-a061-c0e8577e91b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951a9960-dfca-4e8f-8869-cba77a2f72e2",
        "cursor": {
          "ref": "3a69b8b5-8bc7-40d0-8c75-994f787928be",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5d3b3d7b-ca3b-475d-970f-b43d95be85aa"
        },
        "item": {
          "id": "951a9960-dfca-4e8f-8869-cba77a2f72e2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "abe131c0-a4c6-4c12-ba54-02aa23d97330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbd5b47-d7cd-4fb4-832f-c44f8c156622",
        "cursor": {
          "ref": "a85af265-8d71-4ac8-8129-96eec4acb9a3",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d76f470a-5881-4be1-8de3-35ea3ce7224f"
        },
        "item": {
          "id": "1cbd5b47-d7cd-4fb4-832f-c44f8c156622",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c30ede0-71e1-4a6c-a125-0f20e386d3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddd76d1-bae3-4e13-a7ac-75c38389d22c",
        "cursor": {
          "ref": "622dda00-5f09-4650-8345-a2b028fcd594",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "104427cc-f514-4ea2-b2e8-90796cd42dab"
        },
        "item": {
          "id": "0ddd76d1-bae3-4e13-a7ac-75c38389d22c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "181a2674-ad3a-4646-9d0d-48f5751023f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1aa797a-7ead-48e7-aae2-a5a62ebb5d39",
        "cursor": {
          "ref": "3499c7e6-1619-4ed2-a174-40789d523b82",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "45be07d5-6489-46f0-baab-83cf50fedd70"
        },
        "item": {
          "id": "b1aa797a-7ead-48e7-aae2-a5a62ebb5d39",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1c1a871a-d437-4571-87e9-42eb951fd6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dc3757-9112-4121-81c3-5248ede06f20",
        "cursor": {
          "ref": "cd5e628b-f456-4d58-bfc8-f814d61e5d64",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "74e5cb79-fc77-4057-ad75-dfc83cbeef83"
        },
        "item": {
          "id": "d3dc3757-9112-4121-81c3-5248ede06f20",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b92c90d7-d71f-47a9-b797-d38b15a17291",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "856d3ac8-6f3f-4849-b33a-69bdba1628a9",
        "cursor": {
          "ref": "982ba432-ea24-40b6-a3f8-6cb90675f6b8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "960698fa-5d7e-4dd2-a9f9-357413d5d5e4"
        },
        "item": {
          "id": "856d3ac8-6f3f-4849-b33a-69bdba1628a9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d3718d62-d299-4173-8e30-2689de4ff49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8cd8f2-ddce-4254-9d83-8bdd56e242d6",
        "cursor": {
          "ref": "06fd49b0-99c8-4f3f-bc54-df81c777bd4b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bb3e9d82-568a-450c-abc5-5418ff4f7ebd"
        },
        "item": {
          "id": "ac8cd8f2-ddce-4254-9d83-8bdd56e242d6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f8127d04-6ab7-4846-b81b-7b3674286401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf0e12e-0d43-4eac-8bd2-c4bb601e3d66",
        "cursor": {
          "ref": "0e41287c-5115-4567-8479-08f1e232ebad",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "499f3ac2-7ef5-4b19-9918-699f695f07e1"
        },
        "item": {
          "id": "1cf0e12e-0d43-4eac-8bd2-c4bb601e3d66",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a3ae609-b148-41e7-90a9-a95379e4d249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e3dd50-f14b-4eae-8fb3-a8dfac344535",
        "cursor": {
          "ref": "9de519d5-182a-4c96-82e7-69c21336539e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "85e0a311-1576-4352-809a-09396d3878ae"
        },
        "item": {
          "id": "44e3dd50-f14b-4eae-8fb3-a8dfac344535",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7464332d-e034-4dfa-a72a-f44990fb7170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019b483b-238b-4140-a286-40668cdcb708",
        "cursor": {
          "ref": "f0fbdf60-1dc7-4e41-a085-d68c0c1903a1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "da7d8e24-2b8b-4d2f-8221-453dbba24c6f"
        },
        "item": {
          "id": "019b483b-238b-4140-a286-40668cdcb708",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e4b4cdd-ebc7-4921-a41f-e06df9782e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8521ec-60d8-4fd5-aa8a-fa7c5b1fe351",
        "cursor": {
          "ref": "dd30aa6c-9bfb-4774-ba35-241e86252fa8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "039fac37-0dc0-4ed6-94f0-c4f1bd5f0506"
        },
        "item": {
          "id": "8c8521ec-60d8-4fd5-aa8a-fa7c5b1fe351",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "73d25850-bb99-4020-869d-146d037baf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc8e90d-4f4d-45ca-ae93-cb7d998bbbcf",
        "cursor": {
          "ref": "b3384e16-23b3-43ff-9068-9d0bbb1d9fc4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "13d26b60-8c06-4dd4-9108-ac5a0fde765e"
        },
        "item": {
          "id": "1fc8e90d-4f4d-45ca-ae93-cb7d998bbbcf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f556f3e0-455a-47e6-a8f5-a41967460031",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e8cb45c1-65b5-47c2-ab49-35fbc0d7ef7a",
        "cursor": {
          "ref": "afa4336a-7c10-4236-9724-8da145546c49",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5ab8beb1-59a9-4721-af0e-c6f93e34a329"
        },
        "item": {
          "id": "e8cb45c1-65b5-47c2-ab49-35fbc0d7ef7a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cafe844a-32e8-4be6-8216-213f801eca59",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "38e6c686-3f78-4dc2-9795-2f78eee3b7d1",
        "cursor": {
          "ref": "fd6c4f9f-1485-4328-b22d-27fb7b6142db",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fe6a918f-d014-4207-9b0a-c6a5f7b46e86"
        },
        "item": {
          "id": "38e6c686-3f78-4dc2-9795-2f78eee3b7d1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "60b7c7b0-6d18-4593-966d-070ad84f9c71",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "b7b83337-0ff1-4029-9490-66879793630f",
        "cursor": {
          "ref": "6e2cfe40-4979-409e-8679-b16d0299faad",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0e5df48b-4eec-47b8-a997-8fab4930cbba"
        },
        "item": {
          "id": "b7b83337-0ff1-4029-9490-66879793630f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c88c800a-2ce5-4918-b808-b69f03eada7b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "059a42a9-8d9f-4b68-ba1e-07516bff1268",
        "cursor": {
          "ref": "e98ceb77-bb51-4cda-bdcf-b6b63f1d7da9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "baaddd85-d36f-4182-b338-8f8b60795a58"
        },
        "item": {
          "id": "059a42a9-8d9f-4b68-ba1e-07516bff1268",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "869a8b20-280c-4b29-b7d6-1ada7628a766",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "3a029afe-ced1-4f5b-81a6-1b94967d664f",
        "cursor": {
          "ref": "ff77a452-bf1c-4e04-8663-ebcca9eb17b2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2b84f485-aa55-4fed-a604-d47b7b74e7ab"
        },
        "item": {
          "id": "3a029afe-ced1-4f5b-81a6-1b94967d664f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ad57397f-8032-4a2a-a94e-8d8ff63bf8f7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "ee146649-885b-4aee-884b-dc739cccaffe",
        "cursor": {
          "ref": "89d3bd37-e88f-4927-9095-fd2f6668c3d8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0a2c2d64-80ab-43d7-b86f-461a2957e9c6"
        },
        "item": {
          "id": "ee146649-885b-4aee-884b-dc739cccaffe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d21cc413-b02c-43c0-b916-447714d5719e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a461c52-89f8-481d-b103-9ced00894997",
        "cursor": {
          "ref": "ae837691-f7f0-4221-b16f-16f3ae0ff095",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4f3c982d-f249-444b-ac87-3eae0f80d713"
        },
        "item": {
          "id": "8a461c52-89f8-481d-b103-9ced00894997",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9591d97c-742c-469c-abae-41ebd6942581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6183c5ab-c374-432c-a5ab-5b451c1d19b2",
        "cursor": {
          "ref": "47133fb5-c695-4f7a-a047-d2aaebb16fd6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "68aed746-447d-42cd-a940-c8ee6b929f8f"
        },
        "item": {
          "id": "6183c5ab-c374-432c-a5ab-5b451c1d19b2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "536036ca-ecc9-4596-af97-260e315e832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cd3fb7-b87e-4f4a-8ebc-96eb4c9c75cd",
        "cursor": {
          "ref": "3f2f1223-bd33-48ba-b564-4efa65fe2dae",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c440a652-000d-4397-9bd5-7510c5c1dbf1"
        },
        "item": {
          "id": "05cd3fb7-b87e-4f4a-8ebc-96eb4c9c75cd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d997f36f-98de-42f7-9026-056462216b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb77765-2859-4051-96f0-af56756b295d",
        "cursor": {
          "ref": "15e17a4f-1fe9-4777-9d59-9423a195cb61",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "78096a03-601b-4772-bb28-3782c1cd4471"
        },
        "item": {
          "id": "0fb77765-2859-4051-96f0-af56756b295d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c8730515-adb1-4d74-8394-11d09deeca4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480c5e82-2675-43e1-8bef-3694ebc39709",
        "cursor": {
          "ref": "a12e768d-6c0f-4747-a39c-c4017d165f7e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9f31aed9-7f5b-49c6-b61f-a25644741762"
        },
        "item": {
          "id": "480c5e82-2675-43e1-8bef-3694ebc39709",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0e3acef5-4267-46e4-8edf-b0d21ef52cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9bbe21-26d8-4741-aba2-a22a4c53f0fe",
        "cursor": {
          "ref": "15bfb1dc-9ef8-4903-9768-523daf5ce3f8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8475d9e3-a341-4b86-b101-a098ae765153"
        },
        "item": {
          "id": "fc9bbe21-26d8-4741-aba2-a22a4c53f0fe",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d683603c-dda9-4bd5-84f4-5ae2a45dda76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b667a329-013a-4f4b-b4be-a80961753bde",
        "cursor": {
          "ref": "31a07314-cf19-483e-941a-aaac6cd6fdba",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "adedfefb-09c1-4a3c-9d76-5461c0b79e60"
        },
        "item": {
          "id": "b667a329-013a-4f4b-b4be-a80961753bde",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cc3b09ea-3fe4-48a3-8c1d-d83e42ed83fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2672a5a-5042-45c1-afdb-84be611d6c82",
        "cursor": {
          "ref": "d20f3f62-809d-4734-b83c-5e6123571028",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4afa7fba-99f5-4e82-b391-df6b14aec0c2"
        },
        "item": {
          "id": "c2672a5a-5042-45c1-afdb-84be611d6c82",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "60e8b3a2-b3ee-4b75-888a-4418843d8db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39855adc-2013-4c16-abbc-a249d716d90b",
        "cursor": {
          "ref": "52df51bd-7acc-47fd-92eb-d0b5642cc4b9",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "988ea882-85ac-4be1-a56c-81e4b874ff79"
        },
        "item": {
          "id": "39855adc-2013-4c16-abbc-a249d716d90b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1e27026a-1273-4349-8d67-1212ae8d178d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc99bbf6-ffc4-4237-8a5c-7f321cb3e5cb",
        "cursor": {
          "ref": "db35bfb3-5636-4181-a85f-6b371b18ae67",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e3a3286c-66e8-4d8b-8770-18852c2a2ca8"
        },
        "item": {
          "id": "cc99bbf6-ffc4-4237-8a5c-7f321cb3e5cb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e4db8216-0e59-48d5-8a1f-1f33a72b8831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccef52d-b539-4f93-94fe-e03d61ebb7e2",
        "cursor": {
          "ref": "57732032-205f-42c5-ba9f-2fbd0a29b88f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "edae33ec-7a9b-4a1e-8b9e-3756d1c7405c"
        },
        "item": {
          "id": "bccef52d-b539-4f93-94fe-e03d61ebb7e2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c1255b34-73b4-4e4d-992b-986a3669d59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8709dea-fcfb-40c8-a7f7-3ddc39c56022",
        "cursor": {
          "ref": "fb2626be-1a4f-430e-beb2-09b6c0b3d4e6",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c107ee8d-7554-4caa-8ede-3ec962e2e9df"
        },
        "item": {
          "id": "a8709dea-fcfb-40c8-a7f7-3ddc39c56022",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "022c675b-c3cd-491a-9c91-f4e96d42cfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfbcf54-6430-40c2-9577-efad3a1bf341",
        "cursor": {
          "ref": "fbe39d62-9940-44e8-b3cc-11e524328d1b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "dd15c17d-34eb-4196-86d2-6ab5118bb424"
        },
        "item": {
          "id": "9dfbcf54-6430-40c2-9577-efad3a1bf341",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b5727dc2-6970-41e6-9782-1ccf77ccb7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1619eed9-08b2-4630-a467-6818043377c3",
        "cursor": {
          "ref": "4679d2e9-ce3c-4094-b907-63cd6ce23fb4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2d0ea1a3-b1d9-4e66-804b-1f2b74e39d8e"
        },
        "item": {
          "id": "1619eed9-08b2-4630-a467-6818043377c3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ab24d571-b8ac-4a15-9975-fabeae446b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b871786-97ba-4ebc-a1b0-d6c606ce3df6",
        "cursor": {
          "ref": "0fcccbee-5ef0-4f9c-8975-bb81775d4ee7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dcfb1ec1-59e6-49a5-a92c-344d5a992354"
        },
        "item": {
          "id": "4b871786-97ba-4ebc-a1b0-d6c606ce3df6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f2f877c3-9535-400f-8cbd-89b1b9f105da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27618d1-7d80-4d6c-a39a-e9ba1e3fee62",
        "cursor": {
          "ref": "2ed18729-1d7c-4014-8d48-355a505b955d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b2d65bb9-5e68-451c-bcfe-5dae1aba703a"
        },
        "item": {
          "id": "c27618d1-7d80-4d6c-a39a-e9ba1e3fee62",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4bbdb4d3-ed25-42e4-8891-062b6b3f4663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c2bfc5-8b10-4cc5-861d-cc558504fd1f",
        "cursor": {
          "ref": "ecfee359-6e32-41d1-8620-870ce09f26cc",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "367f8ae3-b987-4201-8c83-4daae7d768bc"
        },
        "item": {
          "id": "b5c2bfc5-8b10-4cc5-861d-cc558504fd1f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a9cf5ca0-ca0c-4e54-8701-d37ac95ecbc7",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "f2e4e727-3146-451d-a01b-a71dcfe88e82",
        "cursor": {
          "ref": "94e5bb01-d1a4-4efa-9a71-fa324d672a07",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ded3d86b-d0a7-4b85-bf3c-82fb79d23d7b"
        },
        "item": {
          "id": "f2e4e727-3146-451d-a01b-a71dcfe88e82",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "62f22aff-b7a7-45ec-9d06-3f1b4f94f6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05c173d-ef41-4fdb-a7ed-4084c63de782",
        "cursor": {
          "ref": "834b41fa-29c3-431f-b69f-adc8e252beca",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cf0563fa-4d0b-4971-8554-f1ee4a67722f"
        },
        "item": {
          "id": "c05c173d-ef41-4fdb-a7ed-4084c63de782",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e2843da4-9cd6-4c5a-826f-d15496e8d3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10eec71-59b0-439d-a533-a9d21d997493",
        "cursor": {
          "ref": "8e491fff-fd2e-4152-b250-a1d1bc22a970",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7f7a4a82-be54-40ad-88f0-36ed12fc4918"
        },
        "item": {
          "id": "d10eec71-59b0-439d-a533-a9d21d997493",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ae4d5a53-b9a9-43fd-a187-5b5534d83300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250cce54-83b2-4b0e-bafc-89c8fa824246",
        "cursor": {
          "ref": "61fd2c71-00a9-4c21-8c73-97ad3ef94187",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7b34da53-4c82-4a33-b123-5dadafa92941"
        },
        "item": {
          "id": "250cce54-83b2-4b0e-bafc-89c8fa824246",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c72485eb-2111-492e-80b3-ca5fcbf50c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3e3630-8ff5-4254-b05b-2e56e21f686e",
        "cursor": {
          "ref": "082fdaf1-98f4-4476-b41f-4b5fa52b154e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "72a341dd-13d8-41d2-9c7c-ff08a4fb559f"
        },
        "item": {
          "id": "7c3e3630-8ff5-4254-b05b-2e56e21f686e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "712e4013-56a1-4947-8a64-deed9715b90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed58281-15d1-4357-91d3-23d3420b3eb4",
        "cursor": {
          "ref": "681cf8d1-3553-4cf5-8501-5ad1a73a92d9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ae27853b-afed-4860-a4c6-85804140339e"
        },
        "item": {
          "id": "aed58281-15d1-4357-91d3-23d3420b3eb4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "42180a0a-46e7-491a-9073-e4dd0f448ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c77440-aa73-45e5-8bbe-54993d030ca6",
        "cursor": {
          "ref": "083c87e4-2d37-4dbd-8d7d-d3d4d3da3156",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2270756f-cf98-4dd2-bc8a-fdb8e68eda68"
        },
        "item": {
          "id": "c3c77440-aa73-45e5-8bbe-54993d030ca6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3e3b6599-8045-49f3-96ab-ad6bfae2101d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23849597-de49-416b-b561-13f075711f32",
        "cursor": {
          "ref": "344d0739-0517-4b5b-adb9-5cb1ef8150b6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "86fb7c29-ed0b-45ac-b7c0-7a01f8f01791"
        },
        "item": {
          "id": "23849597-de49-416b-b561-13f075711f32",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c5fe30ce-a07f-4407-93ab-bbe58ed901d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7069cf-c6df-4b86-9109-4b8f407fe761",
        "cursor": {
          "ref": "6ddc51f5-5b22-4d4d-ba94-ce5164dd30f0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70b6855f-c7df-48be-8b02-c66212ca16a5"
        },
        "item": {
          "id": "0e7069cf-c6df-4b86-9109-4b8f407fe761",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5e104024-6128-491d-bef3-400f01fdc94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5357a0-d741-47bb-b2b9-0de017687cd6",
        "cursor": {
          "ref": "4191f06f-8654-4692-8f62-3c97067c3de0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1d15e547-821d-41df-b2e1-e771ee75d108"
        },
        "item": {
          "id": "9e5357a0-d741-47bb-b2b9-0de017687cd6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c26f21c4-b3f5-431c-89f1-e624af884e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f52965c-14bb-4751-a806-13b8f2f6e17c",
        "cursor": {
          "ref": "1cd4b9e9-fa0b-4a39-a994-d087b97c4472",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "964a4f4b-4788-401b-9c22-5ab66d9e01e9"
        },
        "item": {
          "id": "7f52965c-14bb-4751-a806-13b8f2f6e17c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a682547e-8cc1-4732-8b80-1624f28d4d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1966887-4b20-4a2e-af4b-317599cdcc1e",
        "cursor": {
          "ref": "751234ae-6a36-4193-bc53-307818abeba5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7699bd23-e460-49e8-9e30-576d67114365"
        },
        "item": {
          "id": "d1966887-4b20-4a2e-af4b-317599cdcc1e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b9d2a01a-b0bb-40ab-807d-bb92a4517fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cd8a86-1b87-4f45-a962-c1c97b9a408a",
        "cursor": {
          "ref": "619d1314-219f-4789-b975-82acaa36ca22",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "14f2f9e7-4b40-4738-8b7a-96adeda197b7"
        },
        "item": {
          "id": "21cd8a86-1b87-4f45-a962-c1c97b9a408a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8fc9d07f-2b6e-45ef-8680-a88ed12d3e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bd6aa1-ba27-4c3b-a446-4e465e0a1db0",
        "cursor": {
          "ref": "06579a72-9451-4510-b9e7-22c5976f82e2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e8384fc1-0a0b-421a-a7c7-e774750cf63b"
        },
        "item": {
          "id": "13bd6aa1-ba27-4c3b-a446-4e465e0a1db0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e9eae654-aaac-48f3-bbd9-8d9aaca266eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4248a7-42d8-43fb-ad27-e1224a51e598",
        "cursor": {
          "ref": "169fd2ea-2087-40e4-b632-f4ff0372ad95",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "201d5e90-8a36-400b-af12-c727f1a4e980"
        },
        "item": {
          "id": "bb4248a7-42d8-43fb-ad27-e1224a51e598",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3d5b685c-9d26-468a-beaf-3eb040358922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3f1523-afb9-4f82-bd65-62c34f7232d5",
        "cursor": {
          "ref": "1d1d3799-e77e-4555-bd64-963f9278a48e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fcc9de65-97c2-4b56-8de1-c14973e20b62"
        },
        "item": {
          "id": "2a3f1523-afb9-4f82-bd65-62c34f7232d5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5e1aced1-8079-4e5e-9686-4e1c118cce93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5919c656-761f-44a0-ab26-32d807d10ef6",
        "cursor": {
          "ref": "f0301b35-1285-409e-9e81-77f5fc37d088",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "92e0d39c-9a5b-4d2e-bbb4-614b9aa06fc8"
        },
        "item": {
          "id": "5919c656-761f-44a0-ab26-32d807d10ef6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0e26089c-abfb-4323-8eca-2aa72c5599ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0df1e2-a94f-4559-a952-25811f96904a",
        "cursor": {
          "ref": "df79678f-d24f-483b-8fc0-af0b06d6024e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "664e6695-ee4d-41f1-8e33-87b14a1a970c"
        },
        "item": {
          "id": "1d0df1e2-a94f-4559-a952-25811f96904a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d2eb60c5-2c40-48a1-be97-e7efd28683dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cbf3b7-ed51-4ce4-80e5-4578a6bb0ef5",
        "cursor": {
          "ref": "451b0cb2-4048-4632-89cb-e02f8d6fab07",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bb388430-d3b4-4c86-8094-91faefcdd1e4"
        },
        "item": {
          "id": "b1cbf3b7-ed51-4ce4-80e5-4578a6bb0ef5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bfa3ce97-affa-434a-9df6-f99539a8cf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74247476-339a-4b94-8457-1d3b0088c9a7",
        "cursor": {
          "ref": "8b530790-ada6-4758-b339-86113fa3d494",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bfa33e02-8ceb-4348-90b9-4ea149faf12a"
        },
        "item": {
          "id": "74247476-339a-4b94-8457-1d3b0088c9a7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c224d9d2-6d36-4e6c-bb5e-5d8f43083cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b219c2-76fe-4d1b-a928-220d119f2648",
        "cursor": {
          "ref": "71ee1d52-55c8-42e7-a0ec-d516880211c8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1808ef67-8e27-48d3-aa59-662b563ac28e"
        },
        "item": {
          "id": "20b219c2-76fe-4d1b-a928-220d119f2648",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e7dc1b1b-954a-4e70-b072-23aab833b4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4a0a33-be82-47b3-ab32-e95caa3f9d35",
        "cursor": {
          "ref": "8e44269a-f70a-4be7-ae6f-9a0dfc093751",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8cc5d169-3efc-4546-b9df-8147ec592a27"
        },
        "item": {
          "id": "fb4a0a33-be82-47b3-ab32-e95caa3f9d35",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4712b9b2-2531-4ba5-9b2d-8f303280102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dcc56e-a330-4fea-aeec-b457caf77a83",
        "cursor": {
          "ref": "eeb20964-826e-457b-9868-f705dd37b97d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "802789fc-051d-4496-94c1-27697f484bd6"
        },
        "item": {
          "id": "09dcc56e-a330-4fea-aeec-b457caf77a83",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "127d89a9-b0ee-47b3-826c-9cb90e9ff516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdeb7ab-d467-48ea-a198-557059ebece0",
        "cursor": {
          "ref": "88e70d79-0ec9-4508-8acf-bf46f4cfe714",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b985a018-596a-4272-a712-40c2b1144bd1"
        },
        "item": {
          "id": "3bdeb7ab-d467-48ea-a198-557059ebece0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "63816f65-4a7f-4652-a21e-c78858a4d1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b577ffac-e620-4ab2-a7a4-f7eab9303d27",
        "cursor": {
          "ref": "6b3175ee-13be-4e2d-b55a-6fe541d1e835",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "28a7f176-b0c2-4de1-b0a4-775d8ae4b3c3"
        },
        "item": {
          "id": "b577ffac-e620-4ab2-a7a4-f7eab9303d27",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0c4918cf-9c92-4c03-89d5-bb76434bdc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411c6ddc-e145-4ddc-bc86-87b8c93045f6",
        "cursor": {
          "ref": "104894ac-cd74-482c-b29a-86a1b071092e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6c65ba03-404a-44c7-94c0-1c39d92dfca6"
        },
        "item": {
          "id": "411c6ddc-e145-4ddc-bc86-87b8c93045f6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "be7e9af9-9c02-41f5-894e-896a17e6f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e347f4-cbf9-44d0-b918-cda55ac9ffd0",
        "cursor": {
          "ref": "57377dc9-9e84-4f50-8dba-e08cfc674536",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "74401efc-c0d8-4500-b63a-c9881a683bf0"
        },
        "item": {
          "id": "57e347f4-cbf9-44d0-b918-cda55ac9ffd0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c0f774ff-fa19-4090-9854-deed5a7e6a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caee33fa-8d1c-41ba-8833-5727cbbab3e7",
        "cursor": {
          "ref": "d0286373-399e-4ef2-981b-3989bc5091ce",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7a05c8c1-9fb7-4ba9-9d12-22a70150871a"
        },
        "item": {
          "id": "caee33fa-8d1c-41ba-8833-5727cbbab3e7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "413518a3-e6c5-415f-bd00-78fbb7129d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9e1126-94a4-45b2-8758-ea9fcee9d4c2",
        "cursor": {
          "ref": "8e97f30e-e4a8-49fc-9f2c-32309908040b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4e48dcdc-c63d-4d68-89b2-402e1e2b8125"
        },
        "item": {
          "id": "3e9e1126-94a4-45b2-8758-ea9fcee9d4c2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "58c92de4-2ad7-4663-956f-5b3ae3c23858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30aef9a7-92fd-49fe-9775-d6b1fc23b021",
        "cursor": {
          "ref": "a6181a5e-9c67-44ba-aebe-547932e91a34",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bb9dece8-f05f-4b7f-aeb4-e3abd6478ae6"
        },
        "item": {
          "id": "30aef9a7-92fd-49fe-9775-d6b1fc23b021",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "90634c1e-bd7d-40e4-b90a-bb1bd487d10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dac0e2e-9551-459b-8439-6a2f90943c21",
        "cursor": {
          "ref": "9de05425-ccf7-4626-8f3f-606a40b1eb6f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d443d905-f67b-4eda-93b6-2e1d6e46a5b9"
        },
        "item": {
          "id": "7dac0e2e-9551-459b-8439-6a2f90943c21",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "16815aa1-9a57-459b-bfff-31cf605d2a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b489263-31e0-4d75-bd16-0112885e09c6",
        "cursor": {
          "ref": "1b053d8b-59e2-48f9-a8ab-cd745d61a5da",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0813f72d-8f7a-4710-b13c-4512f84eaa49"
        },
        "item": {
          "id": "6b489263-31e0-4d75-bd16-0112885e09c6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3b60a3b2-add4-4b8f-8d19-ec2f18d75962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c43434-ad4a-4c57-975a-39d887d0f285",
        "cursor": {
          "ref": "955aca9e-1a1f-4b51-b980-969d5fb3efbd",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bf1fd304-091d-4a01-b74f-63c07c881046"
        },
        "item": {
          "id": "d1c43434-ad4a-4c57-975a-39d887d0f285",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6d40ce98-e25e-4950-b270-8703da660e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ecf2f3-f0d0-4132-b334-420ba825a1a5",
        "cursor": {
          "ref": "7438abb8-4944-425a-a16c-97000db9329b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9fd207e7-9f23-4fda-bd9f-cb372bfb2396"
        },
        "item": {
          "id": "61ecf2f3-f0d0-4132-b334-420ba825a1a5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e2690f0b-4bbb-4759-bd5a-efd425e9fa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1e1283-82ce-4222-9abd-f85302cc6c8e",
        "cursor": {
          "ref": "603f319c-7b97-4437-a831-17dcb3ebab73",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "099f4d8e-caff-4b8e-b5a1-82e420418afc"
        },
        "item": {
          "id": "5d1e1283-82ce-4222-9abd-f85302cc6c8e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aad79189-5a16-4095-bc62-eb08084f31e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad451d0e-bedb-4000-aa19-0061ba4b1a03",
        "cursor": {
          "ref": "cb1c8f73-e34e-4749-a2e4-3ce72c9b5977",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d3fa0cae-7a3b-4574-814d-187d3fe20403"
        },
        "item": {
          "id": "ad451d0e-bedb-4000-aa19-0061ba4b1a03",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "27cf91d8-ad6d-4c2b-9757-e2b262e44714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1415aff0-53a7-4791-ab0f-d6a1eafb4c74",
        "cursor": {
          "ref": "3e386439-1ab0-4a16-a3bc-74ff1dcf3508",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "454d63a9-1c0b-4431-87b9-61f88e4649f3"
        },
        "item": {
          "id": "1415aff0-53a7-4791-ab0f-d6a1eafb4c74",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5b7ca902-721b-4cca-918b-f5b21fa5b781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf027fa6-d3b3-4a3e-96ce-97bdfb385979",
        "cursor": {
          "ref": "0f84e45d-68ca-4f65-b45f-7b42c83250da",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "76303783-c698-4be7-96b5-a7a4b13c9c25"
        },
        "item": {
          "id": "bf027fa6-d3b3-4a3e-96ce-97bdfb385979",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7ece7898-c1c1-428e-ae4d-4b91a6e7f486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7dfb2d-51e7-4909-bd30-5c9427a3360b",
        "cursor": {
          "ref": "5c6b992b-4422-42f6-ac31-6cd8ec78b25c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "80878f2b-ad21-489b-b87b-56c8f38171c9"
        },
        "item": {
          "id": "ff7dfb2d-51e7-4909-bd30-5c9427a3360b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c97f9c51-efda-4c8a-8045-4334eca7d359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925c5300-758e-4f7c-86db-aaf1373b2357",
        "cursor": {
          "ref": "1733a646-d824-4989-b232-518f49af47f9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ef318fe3-580c-414c-b946-87561a00abed"
        },
        "item": {
          "id": "925c5300-758e-4f7c-86db-aaf1373b2357",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "66a13331-bb15-46e6-9e11-5340234891f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb59cfa-ddcc-4861-a162-f3cdceaa2c8c",
        "cursor": {
          "ref": "45cb59d4-4146-4a46-a3ff-7b7c3e0ff7a5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "90b7cacb-4692-45d3-8a1d-66d766b287da"
        },
        "item": {
          "id": "7cb59cfa-ddcc-4861-a162-f3cdceaa2c8c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "774142b8-c960-4812-b175-935fc477f295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689f7d35-8f5c-4eaa-b5f6-2b5c4fba2a6d",
        "cursor": {
          "ref": "9dfa0d1e-1591-472b-809d-6010d522e545",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "77374809-ea58-47b6-b3b5-1de62b913f19"
        },
        "item": {
          "id": "689f7d35-8f5c-4eaa-b5f6-2b5c4fba2a6d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aec30bb2-6d73-4dbc-badb-26727ed07949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0620bcb-c1c5-43c3-abde-e972b5583b88",
        "cursor": {
          "ref": "19489e52-910b-4365-91b4-e69097e86468",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cc020be6-5b1a-4a89-9e50-640fdaa6dc08"
        },
        "item": {
          "id": "b0620bcb-c1c5-43c3-abde-e972b5583b88",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b5ff6d64-d681-411d-aaf1-64d8ab9a765a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8500f699-4dc2-4b32-b264-1c2611c7ca71",
        "cursor": {
          "ref": "c908eeb3-3639-4e6e-b1b9-9dea5b46b823",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a2fc07ba-4d78-419f-8b96-b4b38b54c034"
        },
        "item": {
          "id": "8500f699-4dc2-4b32-b264-1c2611c7ca71",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "687b38b7-c184-4eb6-80f9-848bdd88e5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5e5adb-050f-4e26-803a-818effd408dc",
        "cursor": {
          "ref": "3c8263c0-adf6-4ec7-9a1e-2a94fd9b2a80",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "563a1ae1-5bf8-44f1-a150-f1c02f40c25d"
        },
        "item": {
          "id": "3b5e5adb-050f-4e26-803a-818effd408dc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "27f96ec9-54ed-45a3-8b19-c0ed04a6c06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f522e14e-1ad5-44e6-9eb5-e922d82e1d10",
        "cursor": {
          "ref": "5285abb1-6bf1-49c3-9ef6-b8aaa4a1b64b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4d12d86a-71b9-46f9-93c3-2de2711138d9"
        },
        "item": {
          "id": "f522e14e-1ad5-44e6-9eb5-e922d82e1d10",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3f1d4452-c3b4-4d09-8321-070a8dd77579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4193d456-3330-4116-9044-d06645bc0c46",
        "cursor": {
          "ref": "1d5bc0e6-93de-4601-a7f5-fc1dee11c48d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8c424a42-4de7-472a-89ec-99efaa225bef"
        },
        "item": {
          "id": "4193d456-3330-4116-9044-d06645bc0c46",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d59279e6-3dbb-437f-ab4e-cccb50249d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0de56db-94b1-44ac-82a6-47cc6a74890b",
        "cursor": {
          "ref": "4771545c-83ce-4422-8194-938114137183",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0aefc940-3b2b-4422-9777-689fa0a699f5"
        },
        "item": {
          "id": "d0de56db-94b1-44ac-82a6-47cc6a74890b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d85da3bf-1af3-465a-8b3d-a6733363d501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4046dd45-df58-4899-a55d-d9f271a76fb6",
        "cursor": {
          "ref": "23bf1b08-5b13-49fa-80a5-2d556ec8b686",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "82a8662e-09c6-44e2-8bc0-d1924c2c431c"
        },
        "item": {
          "id": "4046dd45-df58-4899-a55d-d9f271a76fb6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7916b10f-0f21-4665-b603-42d12bee6032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d54f765-c7ab-46c2-b5a0-d54e1ac12b43",
        "cursor": {
          "ref": "5c3c8b57-d62a-4584-8449-66092a088f57",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5777dbcb-c55e-4794-89b3-c3bd867fb5ad"
        },
        "item": {
          "id": "8d54f765-c7ab-46c2-b5a0-d54e1ac12b43",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e2e7d584-c562-4f95-b3e8-ae94ce8f8791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e05672f-73df-4b38-95f6-f7f65180059e",
        "cursor": {
          "ref": "e00e5038-8ec7-40b4-bdb9-79b4e410f1c4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8d3c2db5-488e-487d-aa91-a2673cb33ccc"
        },
        "item": {
          "id": "7e05672f-73df-4b38-95f6-f7f65180059e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6fd3729d-8485-4ae3-9f0d-c7a6b179f496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77cd417-ccf5-4610-8aa0-18b72781b420",
        "cursor": {
          "ref": "437c9467-b7a3-46d5-9fdd-2f2868674987",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0a8cac8f-ba4d-4f1e-87e8-4c7243bc5157"
        },
        "item": {
          "id": "b77cd417-ccf5-4610-8aa0-18b72781b420",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eb320ed9-1872-4f01-ae38-e954f38632c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fe8ea6-83b4-4ef7-9b74-f6c78ff4b6d8",
        "cursor": {
          "ref": "fc7e0815-af54-40a9-926b-2bb280196af4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "70914f77-47fb-4148-8b12-a898ce82321e"
        },
        "item": {
          "id": "92fe8ea6-83b4-4ef7-9b74-f6c78ff4b6d8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "636d5d33-a10e-4b7d-8627-8f899ee6d924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550a315-6d6f-4d2f-8d9e-18b66fa8cc43",
        "cursor": {
          "ref": "26c0c084-dedd-423f-983e-40efa47e3e92",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "26c8c4f3-fe63-4485-af0f-3abd8238801c"
        },
        "item": {
          "id": "d550a315-6d6f-4d2f-8d9e-18b66fa8cc43",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ecc5a9b5-5c66-46f8-a7dd-816e14545914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f87988c-b802-4d68-b37b-edff465c90bf",
        "cursor": {
          "ref": "104af9a7-a82f-44f2-bd4e-9b3f117a99af",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f30742b8-58c4-4f6b-b699-8f00958433d9"
        },
        "item": {
          "id": "7f87988c-b802-4d68-b37b-edff465c90bf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5439a599-ce2c-4a17-849d-9358c3964b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fbd6ed-9ca3-445b-988f-278631b58cc8",
        "cursor": {
          "ref": "3227e7f4-a9c1-4f2b-8a67-2a145a61055c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ba71d038-b7c9-4220-bf2c-722f07ae40c2"
        },
        "item": {
          "id": "24fbd6ed-9ca3-445b-988f-278631b58cc8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d4697f38-3a83-4054-8ae3-055ec0a4d82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b42810-369e-4866-a307-9b035c13c833",
        "cursor": {
          "ref": "851595d1-be2b-409d-9cab-ed05a3fa4af4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b7919f06-d1cc-45f5-a635-b4594c5d9ab2"
        },
        "item": {
          "id": "74b42810-369e-4866-a307-9b035c13c833",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "917de37c-0db3-42a2-b9cf-70f4455bb531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771bee7c-b9e5-447b-8805-54f16213ff83",
        "cursor": {
          "ref": "c8b0dfc8-7851-46c4-8793-d141629b2b56",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ab863024-37f0-4b34-83af-f8768c7d1ba7"
        },
        "item": {
          "id": "771bee7c-b9e5-447b-8805-54f16213ff83",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8cb120e6-d6e1-4edc-9cf8-e8a53a99cb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c27d6f1-532a-487a-b118-fdca3de8d6db",
        "cursor": {
          "ref": "6eae4936-e613-42e9-b96c-1984b6d6289e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d31560c-70ec-4e54-86d1-e4f257538bf4"
        },
        "item": {
          "id": "8c27d6f1-532a-487a-b118-fdca3de8d6db",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f8df4b91-7ff6-41b4-8ae5-9d501b4d2da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224f575f-6bb0-4751-960d-827d72b44a86",
        "cursor": {
          "ref": "f6da5a6b-035a-4756-ae9a-a2bfad451e63",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0df3af41-2b9a-4b44-8ab6-b4f5d5147db5"
        },
        "item": {
          "id": "224f575f-6bb0-4751-960d-827d72b44a86",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "58cb15ec-4573-4c12-9deb-c5fa6122a8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee65953-0013-485d-8ef8-75465a7c4a6e",
        "cursor": {
          "ref": "46bdf0b6-9a9f-4a33-84db-cad660eb7f35",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5c398f86-efa5-4162-8c49-44226bff32f2"
        },
        "item": {
          "id": "3ee65953-0013-485d-8ef8-75465a7c4a6e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "65c4c0ad-9711-40cb-ba44-71508f8c90c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fbf21f-3d5f-4d70-bb1a-6f37c3da0b2b",
        "cursor": {
          "ref": "a589f26d-3002-4e71-b75b-1440c3563bf4",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8d7f9542-70bd-4142-9247-49135795289b"
        },
        "item": {
          "id": "86fbf21f-3d5f-4d70-bb1a-6f37c3da0b2b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b46fb859-56de-45d8-b4b1-0b76f8c42c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48290284-5524-4d71-9d2c-715239b2ebd7",
        "cursor": {
          "ref": "96006409-fb6d-44f8-b99a-736e605d3517",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ec3ba6d9-13fd-466e-ae1b-f565b70fecd2"
        },
        "item": {
          "id": "48290284-5524-4d71-9d2c-715239b2ebd7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8d592ed7-8d7a-4c3a-93a5-39b9ffb1d302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d45bb62-4253-4102-b00f-b042981ffcdd",
        "cursor": {
          "ref": "d8496e9f-2bb4-48d8-9761-4375509a86bb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "debc7a4c-0ec6-449b-ac33-f0959427af7c"
        },
        "item": {
          "id": "1d45bb62-4253-4102-b00f-b042981ffcdd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a7ed12cb-2f2a-4701-a21e-1c7c233271df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d105d3fe-c391-49b7-8063-ea7b604418c8",
        "cursor": {
          "ref": "293954bf-ac19-42b5-b6cc-1ed1af6ebcbe",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d2ffd80b-444a-411a-9b74-a885bd263641"
        },
        "item": {
          "id": "d105d3fe-c391-49b7-8063-ea7b604418c8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "87bc80cf-92b7-48f6-b977-946f09f960f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8b3e18-8651-4980-b79c-e9c08b2e8b09",
        "cursor": {
          "ref": "923760a1-d078-4233-9daa-52c3817b6664",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ff36391c-e657-43fa-91c7-de6b132be08f"
        },
        "item": {
          "id": "1a8b3e18-8651-4980-b79c-e9c08b2e8b09",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "721c4807-8056-43c9-be96-f3abdc8e0004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0553e4-d9c5-4a89-918f-15ddeb8e9209",
        "cursor": {
          "ref": "15dc146e-fd58-40e6-8cc1-45916b6b911c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a99e082b-77ef-465b-8f2e-811bfdf242bc"
        },
        "item": {
          "id": "ee0553e4-d9c5-4a89-918f-15ddeb8e9209",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "91cd3d79-ebdc-4007-a7d8-6598e8d8f3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722df370-3cd6-4c3d-a56e-d41eb8a5da61",
        "cursor": {
          "ref": "5df9ff04-767c-4f02-8b05-2f425b74130e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4e7d39d8-2ef3-47d2-92f4-b7b5aa9770db"
        },
        "item": {
          "id": "722df370-3cd6-4c3d-a56e-d41eb8a5da61",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5799603c-2ca4-459b-8464-72eae6e9c99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc0eda1-5fb3-4b7d-ac0f-ed4931388f0f",
        "cursor": {
          "ref": "a5071f27-17c5-4113-8c4c-c233d189efcb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4462e1c8-d3ce-4e8d-b07f-e7974b6c7cf7"
        },
        "item": {
          "id": "cbc0eda1-5fb3-4b7d-ac0f-ed4931388f0f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a438c8b3-c7a4-4391-b9fc-99a964027f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2917435-64af-4316-a82d-f7cb26eb3309",
        "cursor": {
          "ref": "e25e1443-3b9d-47d8-b0b2-1f74d47cafff",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cfba2168-5947-413c-bf62-b3b70722d70c"
        },
        "item": {
          "id": "d2917435-64af-4316-a82d-f7cb26eb3309",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0dd8394b-f779-4c09-926b-6671602c4fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3154cd-de6b-44b5-8c7d-98ae6975aeeb",
        "cursor": {
          "ref": "68774bf4-b58b-486b-8ae9-041beef20bac",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bfc97f9e-1159-4a98-b496-37d2189dc1cb"
        },
        "item": {
          "id": "0b3154cd-de6b-44b5-8c7d-98ae6975aeeb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ec47bfeb-53f2-4b4e-b356-d26645913218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbb3be4-a7d9-42a8-b0e9-24cc9c7d47f2",
        "cursor": {
          "ref": "1aa0d5ed-4771-48e3-aeb8-56f518470d8e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "899a742e-53f7-42d7-a2b4-90f873bd8c75"
        },
        "item": {
          "id": "ddbb3be4-a7d9-42a8-b0e9-24cc9c7d47f2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "59bfc398-5406-4217-8f5b-f9c9f1040786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86905f9-9db3-412d-a097-700f7f920968",
        "cursor": {
          "ref": "603431d5-22b6-44b9-b655-e62178f77564",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2a3ebc96-9c3c-42cf-a889-d5cbe6b4821d"
        },
        "item": {
          "id": "b86905f9-9db3-412d-a097-700f7f920968",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6f6314ef-a1ce-4df0-91c6-e3dc6b8cc6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70a65da-e4fd-4302-8047-7b37451b9af5",
        "cursor": {
          "ref": "da1c9859-1e56-4396-b032-13b390c5da0f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a11395a7-6227-4bf5-8980-a8566c239f7d"
        },
        "item": {
          "id": "c70a65da-e4fd-4302-8047-7b37451b9af5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "868c95e4-071f-4b89-b693-4caeb7163507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9af6b6-a564-4d40-a68e-d4f3ed889743",
        "cursor": {
          "ref": "d468cfe5-a523-4195-97f0-30b82cd996b0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e042ea88-4723-4377-aa5f-f95a0f69c072"
        },
        "item": {
          "id": "bb9af6b6-a564-4d40-a68e-d4f3ed889743",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ab60f6e9-ce38-416e-8351-eb106db86b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e42510-0dc9-4704-ab11-8fb6771ad26e",
        "cursor": {
          "ref": "ae26ee70-a85c-480e-9109-d6e801b573ca",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "673b66ac-4be0-46c7-a4d7-7d394b68575f"
        },
        "item": {
          "id": "91e42510-0dc9-4704-ab11-8fb6771ad26e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b7188554-c4c4-4990-b85d-943ad147fd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b83a4a-87b1-494c-b98a-6bf6f2ed6beb",
        "cursor": {
          "ref": "4a4e2538-a9fa-401c-9e98-ca6074bf71a1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ab7a996d-1e86-4bad-90ab-b6e3f040fcfa"
        },
        "item": {
          "id": "78b83a4a-87b1-494c-b98a-6bf6f2ed6beb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9133e744-0765-4e1c-8472-92cef498be64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da031df5-74b5-47b7-bd59-ea9482b7c97a",
        "cursor": {
          "ref": "5dcebf1a-5b93-4cc5-b450-6702e80f629e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "58a71270-f762-44c2-ba44-c5ec2549aa35"
        },
        "item": {
          "id": "da031df5-74b5-47b7-bd59-ea9482b7c97a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "722e92d4-4ae2-4679-af2c-f95d14b02504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f78d195-a37b-4915-9d8d-8fa45efd365f",
        "cursor": {
          "ref": "9ebd6eb5-f2ba-4b3c-9a44-ce9f94e86189",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6b6ca29e-8362-4157-b4d6-e44d33758fe5"
        },
        "item": {
          "id": "6f78d195-a37b-4915-9d8d-8fa45efd365f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a59671b8-61a4-4b50-8398-ebdb2450fb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2470a8-9dfe-4548-b6ec-fd6935c7ffe2",
        "cursor": {
          "ref": "969dd6f3-dc02-43b8-a802-df1de1e0a2a9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a98a27a2-6867-4e5d-9acd-733404e6068c"
        },
        "item": {
          "id": "de2470a8-9dfe-4548-b6ec-fd6935c7ffe2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7a7c305c-d5ce-45c9-a30a-9a69f8bdb4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc38c44-1b86-4edc-a0d2-f93418f4d209",
        "cursor": {
          "ref": "90660000-b27f-4d51-a7ca-be0513f2fd2f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d6978f49-72e8-4d1b-9bb6-25a627611579"
        },
        "item": {
          "id": "5cc38c44-1b86-4edc-a0d2-f93418f4d209",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fa47e091-fbf4-42df-8c8d-c6200ef6b41f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b180cb-f4e2-4a30-b2f4-461a2539282d",
        "cursor": {
          "ref": "6e9b6ec9-6ad1-45c3-b3ea-7e95758cf6c9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2dcd5087-ad6e-48e4-b1f3-8bb2f887309e"
        },
        "item": {
          "id": "52b180cb-f4e2-4a30-b2f4-461a2539282d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b51e307a-666f-4dd0-a5e3-a02ba1787646",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d25db91-188f-4941-b771-81cda9f16cb0",
        "cursor": {
          "ref": "96829675-b718-4ab7-baad-94303884dbbe",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c822b971-f2e7-4d2f-a15e-f47a25cfd72f"
        },
        "item": {
          "id": "5d25db91-188f-4941-b771-81cda9f16cb0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d06528e7-42f8-47d3-8fbf-baf346aba03d",
          "status": "OK",
          "code": 200,
          "responseTime": 2662,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1e317d-b2ef-4a19-98d0-ae5c6fae488d",
        "cursor": {
          "ref": "e4164242-96a4-4e00-a729-4d31460e0293",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d5761754-cbf3-408f-9cf6-08170eaad415"
        },
        "item": {
          "id": "0b1e317d-b2ef-4a19-98d0-ae5c6fae488d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "25f7c093-a282-4544-b2aa-a69e0d01698c",
          "status": "OK",
          "code": 200,
          "responseTime": 4357,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb36f0ab-794f-4a10-8e5f-88ff2d4008b1",
        "cursor": {
          "ref": "dbcc73c0-3919-423d-b223-972ce2767ab8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "23d0c9b1-8d96-4daa-894f-adf7fa220e22"
        },
        "item": {
          "id": "bb36f0ab-794f-4a10-8e5f-88ff2d4008b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5f53258b-38f4-43f4-8b63-688e14f77163",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb36f0ab-794f-4a10-8e5f-88ff2d4008b1",
        "cursor": {
          "ref": "dbcc73c0-3919-423d-b223-972ce2767ab8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "23d0c9b1-8d96-4daa-894f-adf7fa220e22"
        },
        "item": {
          "id": "bb36f0ab-794f-4a10-8e5f-88ff2d4008b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5f53258b-38f4-43f4-8b63-688e14f77163",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75c30fc-cacf-4613-9b17-5cd287cdde1b",
        "cursor": {
          "ref": "c2387efa-daf3-408a-90f7-da558aaf8b94",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "942571ff-4184-45b1-b86c-484fe0ceca02"
        },
        "item": {
          "id": "f75c30fc-cacf-4613-9b17-5cd287cdde1b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "747d6483-8d4b-4ec5-9514-705b41022a65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f8ea0e-7751-427c-b03f-366699c29ea9",
        "cursor": {
          "ref": "448c70d4-a7bd-41a7-9c75-0ebacfe12fbb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "18bb3786-4a1b-41c2-ac6e-9aa51fe0b4bd"
        },
        "item": {
          "id": "85f8ea0e-7751-427c-b03f-366699c29ea9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "41b9dc05-0af0-4ed1-aaf5-3888fded7205",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}