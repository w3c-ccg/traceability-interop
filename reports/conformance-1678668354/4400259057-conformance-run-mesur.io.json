{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "976f903d-7880-415e-a9df-adce90b45ddb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "53c6149e-eec6-4daf-b0b8-dc4e1abdc799",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4dd4137-ef32-49fb-be0b-5586c58aa91d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "896ec4db-3a56-4410-8fd0-c93bc8b9b9b4"
                }
              }
            ]
          },
          {
            "id": "d60459b6-1442-4de3-a44d-0e0146558b34",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca540f19-39e5-403b-b058-94b9578f4deb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bd06d224-880c-435e-9ea8-8b14aeede832"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7b8e922f-28d6-400e-9240-4c4b3ed6b27b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f50a0aa4-42c1-4077-8dd2-8f28b99d4382",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3eb6a7ae-761b-4d59-87ae-7c07ad727d39",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc58a5bd-be3d-421b-bd0c-782675a96161",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf09ec2d-04a9-4a89-b2e4-b706cf300350"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3bde9e4-c168-466a-9516-6b6ae6942b5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd982dc1-a0d3-442e-9e37-298ae12c6d7a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6f34884f-f0e8-4e5e-8379-80dd0bc186fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdcede93-5a15-466a-ae59-211edf24239d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e55126ee-ad42-4bdf-ae18-468033f4d5eb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "81c466f7-d468-4908-9a57-40b23ef59572"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8ec2999-ee6a-4864-b463-6ad7d1b66355",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f6c9f5e-b2c5-49a2-a8d1-aff6513f1cd0"
            }
          }
        ]
      },
      {
        "id": "f203e89c-1a42-453c-b38f-91181121cbb0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "11594804-97d1-454d-be91-857ef0d118cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38a7d38d-e1c7-4b37-a9ca-729d02fcbd92",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "75b2c415-0583-44ea-bdcf-b0ea9ee05397",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cd65ff-c49b-45ac-8d70-027bd197fc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faaa95ea-4e55-42bb-8034-57038775c5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3907cf-45f8-44fe-b3e4-2b744a2da3a3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776b3b71-3aba-47a8-9a2a-1129003a1e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc676dc6-dd73-4f16-ad84-fe8784dd4418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d551136e-12a7-42f1-9aab-978c2b0e087b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bab1d9e-f3d8-423c-bce9-8224b7ac5c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d504a26-2ac2-46d5-99f7-5995cbdc56cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13635fc4-65c0-4148-8172-d6d1a910b662",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59133bff-4dae-4e48-b771-49c0f9de7a01",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aa6460-1090-4e96-bb15-b191864dd314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da8c998e-b662-4c14-b5f8-aff08c2d4225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123c726b-6a17-4537-abf9-30ffc4c663b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd10cec-bec1-4f72-bb29-ea99ad18bc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa22aa8-9e89-4aa7-8671-abbe79fdf030",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd33ba2-af1d-45eb-8407-d2c327fbf45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83867a3c-971d-43a2-b70b-14c4d6f48f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c91c991-ea20-47f7-9e7f-438116738202",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "892e3fdc-22ed-4a9d-90d9-2bf799ef81b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11621442-93b5-4a00-9139-52ec9c670006",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a30f5624-67be-4e84-8be4-c08cc858bd5b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74cf74dc-3158-444a-80ec-660079c0194a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4c52ab4d-3754-4639-9fa3-6ecc7102776f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12a940b6-29bf-4c7c-b4e2-bf63e44b91d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6b63b32f-5962-43ec-8e02-63f33aa8a38e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6dd796c-e0c8-402a-9e0f-eb774ca09f58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20d91ec7-1b10-4628-9630-93374eb8b860"
            }
          }
        ]
      },
      {
        "id": "07742b8c-5ee0-413c-ab1d-e2b56b2b87c2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "20783a03-fa2e-44fe-ab8a-ab0190267985",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80887e84-c336-4161-80a2-f65ddd160d2f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "30db29b0-6597-431b-b6ad-cb5be1bf0247",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b0a565-6ab5-4502-ad7d-cb01198ca05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7b7306-f651-426a-8382-1327f3a546a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340aa3b6-2750-4f6f-abe0-ac6802b0e539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59319e95-0bb9-4d2c-afe4-1298f818f6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc15dd2b-7f39-4b14-91bd-1747184513a9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc7ee3-9b6d-4436-8fcc-1e30217fc1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96608890-e578-4bc4-8bf8-7020d6bcc578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5b7def-d848-4b6d-a703-a8870423c335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c597809a-e68e-41b8-9bf1-66a0f0b08090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b9c659-7f77-47c2-b757-c948ef26dc45",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5891ff6-4022-43a4-8683-9289b835a61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7123b5-f0b9-43ba-bdca-5b66e88174a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeb193c-2940-40d4-9a66-0158321840fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f45c025-50be-46c9-b4f3-a69eb329cdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d6a7f4-d009-48c7-a567-b9e9bd3b17bc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea35a72-40d9-41de-9874-52ada9bd1274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61eb074-5ee6-41bf-8f07-30c8d1fcc71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae58980-ec8a-4fae-b271-cd187f73dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f53f7e36-8c8c-4510-8934-3f90320b07c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb36c4d-06e1-4098-9103-f78ac4b6573b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e5a33d-e946-4ad4-b922-6a8ab3201c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a9104f-9f59-4abb-b216-a0a2045bf0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b4dbaf-fbbf-475e-a31f-2ea9bcd2c3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0e23276-8630-4fc5-bf13-38c72f04f91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f41fe7-951e-4576-b4dd-bac8d6f620b7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1370ab41-cb75-4485-afad-ecae306a5e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e469d6ec-572c-49ad-a89f-3a842548252e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aa70eb-cf50-4d35-875a-7514ac83ef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d674006f-642c-48d7-b0c9-370e3278dcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13bc6df-ec0b-4105-90ca-a126e1af360f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59fc1c1-a9fc-4a9b-9259-f659096c8a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db0a4a7-bd51-4bac-aea3-bd7b7a04862c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e674cf-ec57-41f7-b673-a26ea6eb6e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0a825fc-a2f5-403a-a687-0578b01d862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c38f9e8-aa9a-4a8c-9952-d72426f48364",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9470fd-fe13-4743-8f9b-f5940b17431f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3fc419-30e4-41b4-86d8-a34a11a05320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eabd9e8-c1e5-45c3-bfb8-77827305228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "687dc9fa-932a-4fa0-a220-4fc88ad8baa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495b73b7-85a1-4f6b-b269-08875cd869cb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebde0b2f-75bc-4ddd-933f-93f612133d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557483ff-30dc-4356-ab7f-18343af3ce0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab60b65-0a6b-4ab8-ab90-a3f888fa06b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e52bef3-7b34-46b7-be45-2170d984e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd8b7bf-9bbe-44da-b9a5-52f3f2b5b3a1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248fa0b5-75c5-48c5-aaab-5ee2fffa89d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cdaa5f-f55c-495f-a9a0-568a3259e8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176bd566-3f8f-4d7b-8c5d-24be4856207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa71f8bb-340e-4e15-95c9-10616aaf6c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b881f4af-e270-48bd-bf88-06c62041cdf9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdcff83-a6e3-4104-bd3b-489c69e5f136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3c0b1b-3227-4a34-8b82-d13344932aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c11220c-8f18-49f1-9f89-191cf3f6efac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57a0e308-e8a3-4b96-8a31-580b9edb4c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1aec07-7b51-46b6-80e9-0e90240b78b0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e49a030-1c71-4faa-9d46-aea52da452db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac21be91-f718-4dbf-88ef-5b5d4506f661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26df2a6d-676e-46ee-9ed4-848ad3d61665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e6eadde-31c7-4563-a975-4de3812a68d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf9b4f9-1e42-4d38-8b22-c76220a5e1dd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7944aa07-eaca-43e2-b624-b8378aeca181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1d0eba-7b64-4f16-bb94-c540906f5442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3ab87c-c0cf-47b3-a09a-65bb319fe6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0caaf00f-ecff-4943-9f3a-e6192fa900db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8543f875-bc05-4c7b-9c2d-80ff28780039",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e16d24d-c462-4c2a-b9ef-fbd75e6bd35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e220f62d-6a64-4b5a-8b22-dc033634bdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ef5a5a-31f4-46e0-bcbd-5ee5c3037ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04c24b26-1c75-4431-8672-f9f140597531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb242b15-0b9c-46d0-83e5-6d6b37f94062",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19189cb-c778-49a2-bef3-3168027a408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40d1523-7390-481c-ad28-3ec7c14c9027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af52947a-fa2a-4c29-b8b1-97c04b208bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b0559c2-3376-4adf-85f6-75c18bc4d2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0070fef3-195c-47a4-84c9-f965c1e5c6b7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d170691-792f-4875-be02-64f0a279d9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb458fe3-5f6b-48cb-bbdd-833277a20d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1ace0f-1d23-4f14-9048-888043dc1c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e968ad79-e1f0-4663-90da-8152f3da437d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d386dded-2fcf-4060-bb8e-ef1ff7dbf9d5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d94d72-4a7e-4636-8c12-f488bd6da561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb535ad-7d1c-439d-8a78-108bcda176c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304c0a10-25cb-4dab-8fe4-17a97d57d17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1009d019-43b0-4519-9440-e00244615cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712954f0-1543-4ce9-b717-4beeeacd7ebc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773180de-a4dc-4bc6-93dc-5cc777e3795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956a870e-fd3f-4b90-8d49-a8e1d217261b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61375f63-2273-423c-b9b4-7c8989521c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce0fc4b-f3ff-4514-bada-0ea265884211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da56c17c-b595-4b2e-8ccb-65a9cb0aba8a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca1554b-3bae-4bf7-89d2-33f1655cdb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea574e0f-7ff4-47ae-ade1-12bf53ffd6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c9d317-a436-474f-adfb-792ad8624b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c96d22-89ea-4440-8fd4-411d2f9d5dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c17811-337d-4108-acd3-8906c5acdd0d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6498f1ff-dacd-421e-9923-61eff1c193e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad15c4a-6b92-4324-9156-7ad031275b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0a74c2-27aa-4d54-9017-ec1581275203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "788cfd80-1a3e-43d2-9844-1d72033ea78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b36438-3db1-480b-9475-351e091ea68e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905aaf01-cca0-4540-80ec-68a97665840a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ad0a79-cf66-48dd-8b30-777bae82f69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a255cf6-02c7-45ff-98b9-ef03d61a8f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbf9a28-ba02-45b2-b72b-0456c41b6dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7373a68-c486-4aaa-b0bb-714ef8aea428",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845f3eb4-3b66-4b09-b9de-398b62a8deba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313d3607-f64d-4214-af8f-9d7f368fd2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0293ed2b-8fa7-4f43-8f03-d65741f8c427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70a4b04f-ed60-4743-818e-f8ca3a5b8716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b69c679-a43e-4c60-9664-3524f5f8cc9b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963e93ce-9fbb-4780-9bc9-d092b5f1549a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a194a2b0-d41b-40dc-b366-21cbd4f83cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cb66c3-6409-470e-8d3c-0f040e161242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6356f446-c8a0-4e2a-9935-2a6afee9be8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9beba0e2-3d63-45c2-96d8-398a13e7e212",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aa8f85-e681-453c-96a4-f60a0999f9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d88ba7-9605-4e21-9447-8f5ae79d5fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e1ac68-d408-4ec2-bee9-961456314360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "08833b8b-2803-4fcf-918b-d75ade66d79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362c4558-0a1b-461f-bdf9-bef9d1cb09c7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e775f5-968c-49ae-a035-4dc09aee3134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68cbd4e-97c1-4139-8765-af4a6326f516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e17f6a0-9526-465b-be8e-b3886a0b1a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "146b2669-b081-42e5-8792-45f72006918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d9d582-d438-491a-b8ac-b408dfdc5684",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc0f759-52a3-46bd-84d6-fb09ea9b2a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fe085c-24bb-4618-834d-a2652d5f2841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b170f8d-37d2-4a24-be8e-8668042b4344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f43f67a-e05d-4269-9d9b-edee68759baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504f488a-ecae-48cd-b3f2-fb9b995cafec",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1989d71-2caa-431f-8d10-a4f0f64ae275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b430e29-e9f2-4b29-b07f-1e3f730688d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3c10a2-d9df-4f9b-b25d-0389c973e45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e691703a-9040-4488-bed0-3532840c7c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed720c4a-7307-4f32-9383-1c70753401d8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf8c938-e4db-4dcb-802a-65b67dd5a2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c35230c-ca16-4e93-8376-40ab2d3369fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9611b31-7658-4a2c-91e9-461e7d8ae503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab314726-d2b7-4eed-9e1f-16388b6085bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a633266-075b-4d6e-959f-eeff9f0e3c6a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877f00f0-6d6a-46d2-b34b-dc1db5954f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2990f06-1a53-4ef4-9809-41932fa1e63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2144395-0700-4621-bd49-0133fb9d1bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75bf5a27-2f8e-4bbf-9dbb-0289743022e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79299c8c-4f70-434b-8373-633058483f7a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b961875b-4b8b-4452-86d7-2c52c817e049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f5a20a-9e0f-43c7-801f-e5830a1eabfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c995152-b86f-43e4-927f-67f67d8f7133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "49dd249b-1a0b-4c1c-9991-04b05d8e1526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7429141-5aa4-47aa-896d-0fa3184f44e8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4088cc43-a72d-4d0e-898b-0d75a21209c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569d7c91-c5a5-4e06-bfed-cc7bd7b06ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3004a5-41ba-42d1-9309-9bf83f3afd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a560d0f-6d9d-4527-8278-73848cc95d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e216b7d-0a32-4e3a-bb82-e5ea2202218f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4392d75b-7a2b-47d7-a143-3447ce247d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203565b4-a8d0-484b-abde-44cef2783a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04a8ffa-cb75-4904-8533-ab32c985b4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6a0160-bcb5-4934-8b1a-816cd323fbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039f93d4-62c7-43bd-8575-a0128824c60f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0099816a-f9b6-4947-a60b-cd2933a88982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b55072b-f23e-4b01-b08b-29e1b7fd625f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca475f65-b5fb-4b36-91e8-c5b3d78f2bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8daad03e-fc9f-4539-85cc-2ecc8fcfb568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5474d0ce-332c-4daf-ab4c-240fa396ae2f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a32077-3d9a-4286-8976-82998c1586db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972298c9-7309-433b-aea3-a85ddc6e3d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832c438d-958e-4869-b571-b52439fe99f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18dff74-50f8-4a75-b0e2-7b8a90c95fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf16041-6f63-4126-b64f-b82502e199d8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b80c122-20e3-4c91-8cf1-cea7c2812d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87fcca8-b64f-44ec-8861-ae8ccb687890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d047fbe-8bee-4edb-ab8f-8c43c2dd0750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "87915517-586e-4b57-9491-8ad59315ee39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d07ec6-4f3e-4d79-987d-9e16082ad5b5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823f824f-6cc7-4a5b-903a-64acf3960b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d4880b1-2073-46c8-9f05-535876ec325c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d717e4c-0fc8-434e-9177-c8d7d0284a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42aceb27-83df-4f3e-8170-bf66a790e9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217567f9-99c2-4eb3-8bb2-88deb7728457",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4784485b-1d44-4486-a075-b2aa8a514157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2607fefb-2423-40fc-8e5b-e7c6972ab970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6252868a-afb1-41b4-98b3-d5864d96f56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04feea9a-7506-4b83-bf7f-83dbf94680f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98176672-ec6e-45d3-9222-933236c63193",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc36a34-adbc-4d3b-b283-6400784595d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb46642-e442-42a0-8fc8-c23d2c493d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e16e47-f063-4166-92ce-df5ec7652732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67e119fe-9656-433d-8190-5caa4c5d4160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9568aedd-8f22-484e-99a0-f6725d0f5fa2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d675dc3-f914-4134-87d5-35825d0510cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab07411-e4f2-46a3-a20b-8fa0f02cfbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992b4e98-7748-45f4-be54-be3f16b155e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ac9c93-bab9-4146-97cd-cf44609cb1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb4c66e-95e5-4e66-aacc-a550e6cec8f2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4945cf38-45e6-49f7-8679-7a97f95a1b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69015e4-4252-4631-bade-a08439ef5e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8820b125-6141-4d18-b1b9-ad3ed0d92f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a64eb164-68e2-44e5-8aeb-55f70eb16dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e65d73b-6ecd-4727-9200-85005d100292",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8d007e-fa71-4ab4-a277-64dfed89e901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a68d22b-4e77-4c37-856c-9b9ae8505e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d770866-fece-40f5-a131-8187b15898c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "47bb2fcf-d716-4f1f-bac5-44fcc9a5a1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7785bf1f-e93d-4ed8-90b8-b94586efbb3c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9015490-2807-4798-8e27-ea500f958389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44df8493-500a-47a2-aa4f-66e384080474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cb8594-a950-4b3a-9a65-34212a1754e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "36d0212d-7201-49e3-b9cc-1769223cdf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8756d8d9-f592-45c8-9aff-5eb5a39c4511",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fddaba-a634-4bce-9ae9-5fffe192f346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d07a8de-a26e-4633-8f91-aeaf47860fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f0d278-4394-4fda-b6e0-bee00cefac4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e66cbe-8450-4222-9934-a25e47b576be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0a0d39-22d1-495f-b79f-fe62f66abde4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f09bdac-ddf2-45e6-a6ce-4734331b5094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd637317-3780-4cd5-ac15-31a5c851fe1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4924e54b-c7f9-4bd5-8958-d6ea6395d504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9c712b-e29b-471b-be0a-268e245c39c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e60a114-6c85-46c2-8303-799bf5d791bc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4683ffd1-ae43-472a-a879-3c049d2a5121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a50e0ac-7291-465a-89c0-934264266b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0666e544-d75a-44aa-a8db-906a555e00ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83bc2a6e-e361-46d0-9bde-5c1d84ddc3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bbc9fb-d898-47ca-92a6-e1e830362be1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2af09d-f1e6-4c98-a657-d117c7d77b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05653aa-f050-4d73-950f-ccdd4ecc0529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac0f009-3ca7-47b6-a032-75deb8ef2e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e25698f4-bb98-4c96-ba79-0c3b7407bc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b63cb4-eb2d-467a-a605-b7880704c878",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddacf50-1aec-434b-9157-75cc759c37f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d534f058-8fea-4eb3-a5d1-5f282c311519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffbd9b5-1d55-443e-9f03-0e69ba164e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d139d647-ceb8-4e4e-ac49-b8a431a087ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9e6b5a-17d0-45e1-8728-625f7dbd37a3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca39fcb-9044-45b0-a5f5-01c55585f839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c89a51-447a-4855-a0a6-f7fb17ad8699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1774751-5880-44ad-999e-c3e5abc9b320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f88a30-0b85-483d-b8d3-518cfaa46b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046e0ea9-230e-4623-9747-9bb903f227c7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a307366-292f-4034-99ef-266665e54967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606a60ae-15d0-46f9-96a0-83cb3b4defb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91362be9-2925-49ea-8995-3cb03ab90e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d516c81c-6527-479a-9714-3aae40526a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c117ceb1-db2f-44dc-8a4b-f5a29deea7ef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f588bb-336a-4ff2-9e05-6d49c6c2c197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9096ff2c-e217-412d-af86-51abbac4673b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0751e234-19dd-41d5-b14c-a0a964aec2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b29debd-a6a3-4ee7-ab06-875cc7d66125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f5a473-a992-49a9-902b-0c9cfa727c1e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce014b8c-4aac-4973-84e7-f16fb5b2efe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f7e216-6b76-48bc-9134-113d6e21c058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cc242f-5d66-4c43-aa8b-3994fa6d6df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "db93e849-b51b-41c5-9bd1-4117ce778830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89e5f1c-1c13-4bd6-853f-d853c6e817b3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bff66aa-e815-49ee-b633-91ae591d63cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60c1e4a-fe01-4560-bc1c-a547d6db372a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba36f105-a381-4e2a-98e5-bae035aaf347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99c1c259-7874-4e5e-8a67-3d15904fb4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e443ca-a55f-4921-83e1-0b7dd135610f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeb9686-9be8-4211-bd6e-fdac0c5fe772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74998e9d-6396-41d0-ae95-99fb06b9b573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6041f0-ce85-4647-ae25-70b7bc461262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0ff67d-4a59-4a07-a10e-1a5de0152748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16f8053-bd27-46d1-a7c7-eca6aca0fc13",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6130ff04-1880-4cbc-9dd5-58204efea9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04c75d4-6547-461b-888a-c30e837cf2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d25f547-ebbd-46a3-8db4-f67fbd9cb2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0931d0a3-4488-4973-908d-18e8f3b94765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40387cf-07f5-48fa-9bdf-8bf7a622182e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19bab43-76ab-40ac-9d2b-25d233bb257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e215e853-4d96-47cc-9e10-50114da7ee0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888682ac-8c19-48dc-8c1b-3da38abfb467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7a8fae-f989-4875-b39a-d60920b7d1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0c30d4-b560-4d0c-abf8-17a2f0994fc3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fe089b-2d5c-4b69-990c-6441c02ee615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24c19e5-0e03-4430-88c4-c13c4fc31d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac5290a-555b-4d45-b055-7fd39ac778f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "88fce891-5ce7-49c7-9e81-d5703bf3b7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c033b36-4774-4257-b26f-aadde29b9bcd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8301e1-034f-4d56-ba1e-e7dea7bfa5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55765662-cc1d-4303-b862-cda80cdf3ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cd43b7-e6a1-45f4-bf58-786bdd54c938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d83da553-da1d-40a1-bfa1-82be13734cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aff2e2f-a746-44f7-8e82-2119f73b39c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3d1fc6-7fd8-4046-b21a-20240d316dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f47d9a4-e116-4ffd-b095-9eb27ea53b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761f2d99-c7c7-4c72-8076-b7fd96025d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fea68ae-22ca-4881-9d3d-9d313afd8efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffd2155-c50b-4e4f-a4c3-2ebefe96e525",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9d0c83-76e9-415f-943d-e529e3b78480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec37762a-2f42-45f2-bf4f-ea7ba017bda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898721af-f109-40a8-9328-c75126e0b943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37e6699a-5ce3-4b5b-8486-c535e6773998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5c3649-5d51-47f0-ad76-bedc51efe926",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7531466f-604e-403b-b756-d35aed9cbbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2263e2d-ceec-49d8-bfa9-58c535e47d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda099fa-c4ab-49f6-9c09-6eff186e3b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4208ab-b28b-4baf-8352-da0057409a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a64a06a-3fe3-4bff-978d-597fac3a123e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3a9d69-02f7-4eb3-bda2-6872773c930e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bac05a-4311-4dae-84b7-8bc9a198861f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ae644b-4927-48b9-b8c5-ccf08311391d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f11ae43-da90-4232-9ba2-009ee1d7670a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d678cd36-9476-4e08-b87f-5bcc83e4c225",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff2374e-0316-4695-89d1-23fef524c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508fb55d-b46f-4088-850d-a740d0ab2def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c70bf79-1350-4d40-814f-c53f330daf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd9f041-6e4c-432c-8f58-fab73f2e6fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4e1caa-8c39-4436-b340-f82eecc60cf0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19db7d6-8924-4f5f-8680-6caa37b507d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd668ce-c6d0-4fdf-b464-263e1878b3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e4f755-2f91-44b3-98ea-cd0a6dd6e206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "31179d0c-4071-43c9-a960-d2fbf44439a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b55a5b1-45fa-44e0-986b-a31569c4f33b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14cd352-2be2-4399-a3a2-2696954cf78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6623ea-c9c1-4594-a2b2-cbfe32dc86f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4090f6f3-f2a0-45fd-a634-9d70ed4d0b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "280d4e4d-5400-45c8-b42f-c57056c28c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbed3938-8e2d-4c16-a827-97c614be8e95",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84698135-8132-4abd-ad80-55f69b718444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c850fc1-e9c8-4bba-8ca3-952e5d8eaf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370acf80-87bf-4cf5-924e-7f72b053c157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3189ef9-3cc9-4a49-a5c7-48348143b814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc576b13-e1a7-44d2-bc76-53fa7972e5d8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bdbd24-0030-49f9-ab88-63c572793657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1b49ab-8bca-41f7-9a3f-a66941ddaed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace9c797-e6b4-459c-9291-e1179a6b2a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcf33a2-e658-4c3e-bb50-e54fc1aceae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3691e44-82c3-4917-8f98-d484b31a4b3b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d89df66-2674-4c42-8ff0-422381555252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548dc7ef-241f-4a82-aa6e-91e1966c147f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea88167-2253-4447-a054-39cfef666afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "641b2c1c-08e6-44e0-a7a6-53c44cddac48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156cf4b5-b479-46d8-9b9e-623b38b1b9ae",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e77ae54-c54f-4a71-ad62-deea9ff50982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34619c48-7f93-4bb1-81a7-af2ed784582d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a303ec-8263-4c0f-b43e-ff028a3eb62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5959b9-3101-4ac0-b036-7980f9532f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80a1a0e-2afb-4753-b726-1952486fa209",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1b74ce-f090-49a0-b0f5-09ea4acf44ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551dc3c7-4fef-4ece-bcad-feadd89d2b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fed4631-2f78-44df-b822-2e9799835e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a76a73-750d-4af1-a237-c6fca30be841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba9d882-ac36-4d16-9c54-5ba81faca28d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d954ea6-d499-4ef8-a490-79f1de619c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49aa7cb8-8c04-44ed-83d0-89b7d1557074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7f05b1-23a8-4a23-8632-98701be03c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96033c82-4af7-4b54-a1a5-1265b536f1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273cbd2c-cc88-4dd8-9fdf-483e7b802751",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4b99f7-2019-4931-990e-ec471ae87344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73a854f-34cc-4c14-ae12-bc17f9380667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7480d217-4b56-4bfa-aa3b-cad463a75a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4712d071-490e-4da6-ac9b-bc94f8331c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8d690b-3e14-4678-b1c5-07da2ce9905a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc2880-83b6-4310-b359-60072fca2df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dc1513-c4ad-4aaf-bc89-9ede342c8903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f370d600-5c00-4698-99be-e20cdb14a751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f36d47a-a789-45f4-ac32-73f8ddf079f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc0d325-0e33-4ecf-9afd-56b2b7f9c9f0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3519d14c-8c06-4c12-954d-367582c50da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91344e6b-8f63-4641-ade2-49f348e9c2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24f0152-1947-4111-a913-783ba6b8893a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "254a74a3-bb44-4cf4-8867-9285e794e5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56264acf-2bc8-4cbc-8799-f5eb865f1225",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdc10f9-85a0-48f7-811b-2234063d9f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e997b0-99b9-48df-8180-362e196909f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1056575-3b86-4ba7-b94a-9570172916fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9de1fa9f-f30d-4b11-8493-f41502248f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2921b04c-ef03-4996-8c59-3b3ddca88bf4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423e0347-f118-45b2-90b7-9bd60f3d9d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6370f922-30e7-450c-b9da-e7614957ddee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8568deab-a32e-4542-8c93-8442a8f39ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b78b40-b271-4d55-b827-d26a651b86d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6889c1-11fe-485c-b66f-a58fb91c57db",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb1bb68-a55e-4530-9674-318735452e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0f64f5-9818-4070-9b57-fddcb0cf48d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3dd2c1-920d-459b-a0f2-d5f4ed58ac6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2d627a-7199-40b2-b328-4b0cb9e80902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896d9d47-5648-4b4c-8d72-2009224260ff",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797af589-cedc-4964-810c-81367f0bf250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871fa60e-264d-4136-b181-acaad7274fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202abf43-7e94-4b42-be53-65666c3e60ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83d1ef0a-b02c-427b-aea4-2362250ff8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ef3772-9d69-4113-81fd-15e08f771940",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91199493-d4ed-43ee-a41a-320244c18804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5569abb2-6c26-4fc3-83b1-64714e7d979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc4d2d1-961e-4f4a-a816-214bfd44bc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab078e64-d71c-427e-9c74-5cae026cc3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eb61f9-4ba9-4860-8a6d-ea2e5601f6c2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7522796f-0faa-4a8f-98bf-ab00af6515ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4211f7c1-b861-4247-ab97-1192a713bc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdbee75-87f2-4e4b-9d56-0f5250d0000d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62f3a3d2-207e-49bb-8548-54896e03aa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e66656c-58d8-4a0a-b5d8-7f2f1ab8937d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1e6f19-0087-469c-81a1-39be5e40dafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a07aaf2-c391-4042-82a0-6265c11342d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd014a0-fab6-4e00-bb20-168de479e6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e4d19c-bf51-4b51-a4c5-0d6224d0ce87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfda766-ec3c-43fd-8cc1-cf7dc8ee1b61",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fce0966-5589-4541-98c3-3212afed45f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c44ada-f24f-475a-a2d6-f7b959a4f9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b892d7-3fea-401e-b1f3-c902db4a5516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a39456a-217b-4bc7-a7e2-3359189ee73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf46c66-eebd-41cb-bf49-2fe1b9704e8c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3d6b36-d76f-4cd5-b7bb-6cb361876bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88667d40-1c5c-4595-93d3-a52bbaad8ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cf21bf-ae56-4c67-b081-1aec3ad897d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea6ca3e-e298-49b9-ba9a-476fdc7f7ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1595cb-c6af-42cb-af7a-a1b8c8879f52",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f87d6c7-4fe5-4d71-9990-b8ae0395b2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e51f35-bdb1-44c8-aeac-a9b67aaaf213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9377d16e-9f98-4731-aa82-19086482e9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe40ebce-ff62-4859-ae71-7126e4a37331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df5d82b-943d-4576-80b7-fdf5842f159e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43acb9b5-1a73-40f9-afb3-01ba2fed9626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cee1e94-ca33-4117-8551-1b8dfd377f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf386dc-2d8b-4b77-97bb-dcc529d79c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa9ed17-15c4-49b6-9ddf-6b82e01b6f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e9662c-9236-4992-8bc2-72f0d3aa8201",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dea6a9-4060-435b-9d0c-4eff799205d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9652cd33-4f89-4307-ad97-af980123a8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72863d0e-ebec-480e-8b0d-c7523a8eaf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b89df053-58e3-48cd-aa6f-4b9dbdb577d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e99794-7918-49b4-9958-fb246a582cc9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9821408c-9315-41e0-b9a8-5b4f4e7baa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68787d42-a84b-4df2-805b-44cedb8e0dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6589bd-2677-4987-885b-021591f1a362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eed34e0a-1736-4f5c-a009-6394c9efe7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43b3c22-d088-44d9-be2d-ef1d2996fc8d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d97773-7944-42d3-a865-6f449ae4416c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4d7b9a-748b-40af-80ba-2554ccee87b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbd131b-f6a1-4677-a1db-86575158086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77628855-33fa-4b66-b939-d20f29ab1b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a5db31-f16f-4820-9b30-9f148f073226",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca6a4ff-44bc-4f6b-8bfd-021b8221dec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc17098-33ce-44bf-9b6e-4d125a463e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7ea056-9ce5-4a0c-b28e-e1d9ca9fa664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1723db5-c02c-4c98-989f-1f81ee420223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25763e4-e574-4ce4-8b41-9db5c31d3026",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae254c8-361e-4438-88e5-14b01fe38184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ae085f-3d75-4815-8fe5-e0d195dd9e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da873a9a-0721-485a-b023-0de5d9528d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7674083e-e1e0-4505-b9d3-4e100e0acfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98aea671-6bf7-46a4-b00f-f33ea01cdda8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c733e5-b00c-42fb-b8cf-b2736fdea8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d932b0a-0d27-4735-83da-d56397f4592d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08c0d72-d082-45ce-99b4-efd4fb22fb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "52392933-ba29-4f6a-b16d-5e558959ae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6001e732-bac2-4b97-99b5-780dfe4336a4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a20c8f7-aa2c-49e8-be4b-ea018019aaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63010c80-5b86-40cf-8c39-a41d695446a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be21d1ba-72df-4db6-bd8b-17f504f02263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f21a988-7569-4898-8ba4-c98c733be973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8d9405-aaf7-4413-bd9d-43929586a818",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea930ed-b736-4cef-a860-f620753dc631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c065d05-6051-4496-8173-1f7b97bea236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f895228-33f0-4436-8781-c556ac2db3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f7243e-9d37-44c1-abe5-88be177cac71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8672876-defc-4190-bcc7-c45b26b292f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c963f612-34c7-4664-baa4-09a19ca7969b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32980333-caa4-4ee8-a3b4-e7ea7cbb2205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d6c21f6-32ad-4ef4-bb0e-e67fdacd4249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f77a7b-3c2b-4197-bd00-72571fabf4ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b468941-f44b-4a37-bc35-4c21317a68f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d6aef9-f5c9-4e38-bd11-7fe8b2cb9532",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3488a780-1699-4f28-a974-d533412ff70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76caaa84-5756-4c92-a695-06c1b6c55096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e08ac05-ca18-4ed6-955f-0185123e356b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d710733-f217-4f8e-b810-562225eb4bc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3531b174-9742-4207-b75c-6f4e99b076f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "030be64a-29b7-478d-98b8-4fddab533f62"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "605a12d9-59fc-4a69-bb25-25c3439358a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6844a19-d9b4-4a82-b4cf-a07e160f3f83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0823bb3c-071e-4126-a70a-af500cdfdb4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1d46748-cd25-4f06-8015-7d933462373f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45188d01-8650-4ca8-a28e-ff495cc8cd4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c8542d7-9379-4db1-9507-a386bfcb78e3"
                }
              }
            ]
          },
          {
            "id": "f9da96a5-a96a-4078-816d-57af9aea8acc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1e8fdd7-3a3d-4278-b2ef-9131cbe3ba94",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64cfc0f8-9031-4884-bcd4-bed68441652a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98e4af04-4105-4200-9dcf-115f1fa73121"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b71ad03-f107-4622-ae1c-34e77b643780",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db836d94-b150-45d2-8392-f152403e426a"
                    }
                  }
                ]
              },
              {
                "id": "32ab40d8-4c08-4f3a-adc0-6cc7423cf39a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53b70879-5ded-49b2-9236-ef31138ec390",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76f82a9a-2367-40e1-a62e-deeebf2c1fab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f6c80fc-9c07-4563-9cd8-c5e326153b1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49385487-5759-47cf-b2f6-0b5e69b517d5"
                    }
                  }
                ]
              },
              {
                "id": "3e5ea6b4-c49f-40a1-a7f3-11bc82c9b437",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68192d42-db79-4143-b7b5-c6a7f4d38e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb273821-461c-4df4-a5da-f780dc5f10ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b93aaf6-1c14-49af-90ed-8d27f72a6cc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3bac82ba-a481-4f41-a645-95785fd64d65"
                    }
                  }
                ]
              },
              {
                "id": "03af6fc3-675c-4cae-af3c-e7d5d3c20613",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ec72beb-15d5-4b1e-9313-2e49dd397503",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c42f5eee-12cf-4198-9c71-e054a5f170d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9283498f-4753-433b-aadd-e233ab8a4ca4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "28ff012d-1537-4c6d-b68e-1db12751d305"
                    }
                  }
                ]
              },
              {
                "id": "02093bf4-5f09-48b2-a3de-dd0c96deffc3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb0323b-77f4-40a3-be34-ff48414b6c18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fea07212-b6a6-4284-911d-8db0c451726a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1685477-ae17-4c93-ac66-7666073dcac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a579957e-dbe3-4033-925e-54781285a310"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2697e3a4-2452-412e-958c-2ecf0b56e667",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62f1cc02-b830-438d-bbb0-a98ba204a9d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7600f8c-987a-478a-a6cc-e80e5bfb88c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c083564-a32e-44a9-9934-0ac7bd23abbc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fa1f9c9-e28c-48c0-9941-3b91e638ec57",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "635910ba-be1f-4861-bcc9-bc87c1e21f66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03ac8533-6261-4ce1-beb7-aec9c3abaff4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03d5f841-265a-44a9-8230-50f75d502fff"
            }
          }
        ]
      },
      {
        "id": "1e0ee8be-2f89-4bce-aa07-a3bf88b52ed6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "28ecdcab-e4a1-490f-852f-b6eba7354dbf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04b03532-b14f-48a3-b7a8-1cf5d2e04fa1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54a03f5b-f7cd-4cce-97b9-f66d3160033c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e8e673-2349-471a-b157-dc2d2914c92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d0496f-fa0c-4f1e-970d-1a7efa8a2a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dbf878-2ac9-499e-b7a7-7fbf21ebff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe97c4eb-3cbe-47d1-aaf8-015be2ffe49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6eb83aa-e0fc-482b-ab56-d30b801217f4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f4e008-18a6-4a7d-9cf8-b7ac073d70f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8b029b-7fff-4c6d-9de6-574045ccce37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530324c4-5ae4-42ac-a521-4db2e104867d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6563da4d-15e9-41a2-8ffe-c0af5dcddc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8174d72-aa15-452e-9e9d-061502ffc9ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e241c425-69ba-4873-bdcd-81a82ec4c126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380a4674-ab42-4379-9b3e-8dbcd70a11c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ed4d6e-eb61-448b-bb4b-ed57eb9f1499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96464579-fcf0-4439-ba0d-fb48e1f7a60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ae36e6-5144-4f04-b728-fe1ec4fa67fe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392ce56f-2524-4c10-b13d-b445b468a463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec44002-b25b-4612-8fb8-50a7fc9cf227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daa451c-dd33-4090-9a92-f3c3f822b6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "016dccc9-49ab-42a2-b3ca-78bd403eb6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005017f2-63e1-4e2a-b42a-345d6231494e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193f56ce-e307-411d-b072-af9441829a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47097153-b1f2-424d-8811-0a3281742a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac29e6e-991d-43d7-8cfd-380283bd9d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6216d3c7-713d-4306-9ce6-4e13e76df769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa28d2d5-85a7-4547-b2dc-7037cdf20ac0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04840863-40c1-4cf9-b8ee-76ac770a1b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4178b84f-a4c0-46a2-9f6d-892f9bb2cbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0af456-b9d9-4a4f-af19-259982ab31c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b61ac8cc-ba2f-4116-be32-ed5c5bdaae2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49aa96b2-ac99-4b6e-944e-68d4b9a83926",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f61e7-856f-4500-a0d1-3a4d6dc45f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f838de-2f27-47e4-81f4-8d311f5a55da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5def67b-e605-466b-8d30-2c90b37c24d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75939286-0dc0-49aa-b653-06337328abdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd6c0c6-1a92-47b6-8597-a9d9af12b6ef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b366636f-74b9-4f4e-a80a-2a7685a1e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8711780e-6333-4588-aaa4-376fce324b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f990807-b848-45d1-b4ba-357664406fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1e416e-8fcc-4159-9557-f7570ed2b700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09594733-5ef0-4bd2-93cd-53c68f597ee0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca85da6e-3d51-4141-9a4c-6300c0f3c70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8431f38d-39fb-4102-9a92-bd31d73d10e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1dc17a-d2f8-42f0-b7ca-5e86e366c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c02fd95b-7022-4652-b518-5257a897fbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ace4a3a-dd78-408d-8bc0-5ca0e19dea0b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9960fbc4-871e-4ab4-8787-a86fd2510d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78461573-f111-4648-b3c3-48acd192b365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96b645c-1bf1-4bb2-a618-2361193eaa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5504258-d5b1-4c83-9ae5-063a20650eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379efb8d-b8d3-403d-9270-27f62b71830e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53240b4a-8c91-4877-add9-e47c56fad825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb73bfc-4247-4269-ac04-cf6050fc55f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54de893b-1416-4b85-bb1c-870350a33b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c31b7f29-821e-4a16-b1c6-012293ede587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae867ce-4075-4900-814b-eeef2edd1183",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980f9d49-c8dd-463c-b384-836d5e21a435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66af3860-9a29-4cec-8bdf-9e111b6bfd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa14f8d-bbfd-4bc3-97db-9b8588da7520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "817c8aaa-b82e-4dab-9d37-2482718aae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8a6f47-57ef-47da-8d64-47659da27fe1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ccbf61-99d1-4492-9bb3-89a9a6e3144a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93df2d7-2efa-41ea-9dbd-5e8dd3ad441b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cc3981-f5e8-45ce-81f3-4a57fa8702c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41596b79-f0da-455a-8131-9595fa37e586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08180d66-462e-44cf-b59e-7879dacda707",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88b34fe-c544-4beb-83d2-081edbe1f27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd8197c-6509-4557-9d73-e8137fc3e304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7ff285-0189-4ed1-87af-d16700bafdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "889b6f63-f099-49f7-ac3f-2880f350eed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55536ed1-45b4-4191-af90-02b827a0eb22",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a127304-f85e-4de2-a0be-e207a88e307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18dce76b-6c65-42c1-bdeb-96839274a071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2afbb51-926b-4d0d-92ec-8b51216e4ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "198d4d87-026c-4f7a-a4e2-06ab9dcb4157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0a99ba-5c12-456d-9bc6-733928d83220",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa4e7a0-11d8-4bd1-81d1-ccc551820862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7129db-a30e-48e8-8e5c-194e74117c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83d88e9-1554-4195-aa9b-c501c9b4731d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac45ff26-2450-4059-905b-6823fb5a77fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cc4e16-7fb1-4488-b8fd-a0d3efa04537",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588cb7af-7644-403b-aa2f-8943818baa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0ee231-d472-4e07-97f0-68f794107431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aee15c-0bc4-4f50-8ce3-4a26e396ab70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c36cd82a-35d8-415f-b576-2eca4b76a1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c97379-855a-4eeb-a665-1bde259ca69a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e316d333-8806-4cee-a8ee-1aed81ef0176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6222216d-be3f-4a0a-ad16-c2eab797a826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48983a4-adb4-4442-a725-d18ea8e38da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7348edd-3c46-4f94-8383-e6eb94d80dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca94bd12-21f0-4c34-8d72-803fb1ac14ea",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4309bf-97ed-4fbb-89e1-bbc36f19e49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b55a29a-cf07-4c50-b9b8-4323e386bc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ae53b5-eead-4b59-a211-96e7fd91cd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063fb7f2-e787-4d59-8ad9-420f81968d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dcf00e-be57-4090-bfe1-777c33d7732a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7890adfe-8a99-418e-9674-e9c6df640bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea242cf-3a02-40e0-8d27-0c359ceebb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e97643-ee6a-4d2f-b6fb-3619340d02a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f885f3-b347-4f89-a264-5574f070fe5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0544cd13-a845-4897-944f-2e4aae7b8a84",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73d4d24-a8b1-4eca-9958-c0af80e263c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4feff0-12ee-4593-bda7-6e7befd27397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb080bd0-0b3e-4953-a98f-20a56049c5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa3137b-3138-4a38-b06e-a3f33fa131aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb39a97c-da99-4798-9162-596e878112e1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b7a632-55f7-4bac-881c-3e44944c60c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a082ed2-539a-4af3-b524-d47108a492eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0dc84b-14c3-4ec2-bd10-4ddc169b3671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb49aee6-df2f-4cd9-8216-5478d700cc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40097045-0539-4432-99a1-6f3a205ddcfb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e597d49-6b4d-4b96-90de-945502ffb829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2b8157-288a-4cf8-ba9c-e5fd40b7f7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632503c1-ee23-4d8d-a964-380b7acc4787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10189b7d-5ecd-4ea9-ae0d-54bcf5ecc7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3619b0-3094-4ae8-b308-f69ed9cef215",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b6f6ae-0c0a-4205-bb3f-3b958bf8a8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6a58c3-553a-4767-895a-186352501bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65878051-81a1-4478-bf8e-4e3b338521f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff3e4d5-66b0-4db0-af9c-98accee78027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b783381b-8ce4-4b0f-96c7-7db91d3b4e11",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd338c2-4c6b-4cb2-8e3a-f23763ea031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61ea979-3abb-49d7-b8a6-525ba733ec57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0f1ba1-7d33-49c3-a673-9980de4339df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd49011b-b6d2-4e6c-b09c-57dc679c20a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f40752-0c43-417c-8657-04a24fbc7748",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c926386-a7af-4323-8aeb-2d9fb216ab6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b097b212-c658-4d8f-bb41-dc5bbe743570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0bcbd1-ad38-4bb8-923f-a0d1bdbe599d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5fbf7b-3f9e-4f64-a317-85ca4f8e6ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77329797-5168-4742-8307-1d4b3224c933",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b230e08e-4471-47fa-ab9b-e793b55eac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2eb65a3-7bf0-4db4-baf8-2a531a6373d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e700711-7d6b-4a43-8cc9-79c2a2756dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c3a8e4-f63a-4d11-858b-bb0a1465ce2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360b33b1-54ad-45a7-b027-38e8c6099317",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ae23f5-ae8d-4b2a-96e5-d801e1b6254d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16d181a-2371-4669-9793-9af9455c90d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8bff93-778e-465e-9c40-6b68c9889e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be35f01b-cc00-4b04-81a9-ac05b367c0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb57ff0-c76a-44a0-827d-1878b5cb0f53",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28a4844-168d-4d3a-9a55-22dbb178028c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a43de2b-ac2d-46c6-a476-319bc6ad50ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f11fd47-8604-452a-a130-7112fca6b628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "438925da-5560-4deb-be8c-392d78a95af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768cec51-9116-4dc5-84b7-94d0a5492f1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04516c3-fe64-434f-878d-fc3381d2bebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbe2682-ba96-4d90-bd66-3c797b1c5300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b451d4-dbb6-4d29-acef-ac55d7f57e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd89328-6451-47d5-a42d-36039cdec79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2964a661-a739-4024-abb3-ed0d4a794440",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8afac42-c0c5-41ac-9ecf-8a637712c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edf6d4e-f945-4d70-afed-c1d8106aee17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b0aef7-d81d-4ef3-9ba0-f11ab8e0c2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8b0a73-38c2-4d6c-a5a8-45e36ec31ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb231d1-2482-44d7-8c30-de2f23288fd6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cc0743-6017-47d6-b0af-789b439d4893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e037706-a867-4266-a7c7-a95a3a334686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41f1559-8c99-4a07-86ef-4e8041717344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4065d2-de0e-4e1e-aa17-0069935d323a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f31c898d-113d-48eb-bfeb-eec07361cf2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bffb7bf-17ea-4d61-a38f-9de846231a99",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f49332-acf2-4a31-af6d-a30d9fb4dd5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7901d580-772d-4e2f-b036-2e7e10ce3fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999ac8a9-3b3c-4ad3-9fc2-3b0536333a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc779c55-aa2b-4ab7-9305-1c94fe9e679e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ce7f13-1004-42f5-88de-451b690e5420",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5346cd8-49a8-4bf7-8152-c574d8b77f96",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b551d6de-a723-4a96-b437-b34748c1dd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8679a3c4-3027-412d-895b-ebde138628c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e3b5525-b342-4eb6-8d6f-5f426a717616"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba4ed8b0-6187-4b0a-ba8a-08250eeb3092",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "645abe9e-a579-45b7-820e-86e00f66aabd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eec6bacc-a5e2-406a-bcb5-581a90411270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d404a241-6f54-48b0-ae08-0969be0d5982"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aac5ba71-9325-4e5b-87fb-c27fc10f1f0d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "85c0432f-cf23-43ff-b8ea-96a342ee2fa0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dceb73ee-8480-4efb-b700-86ea94c68952",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea6cb24b-fa78-478e-89cb-573dfe3515a8"
            }
          }
        ]
      },
      {
        "id": "3753d35c-caae-4d0d-a842-a759e2dceb58",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f92bd2b2-6c9b-4e7f-93b9-64f1a3241eee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5273353c-eda0-4883-9c0d-14907b41e11d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d97aad7e-fb63-4759-9cc2-f50d2788e45b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685b34c3-cb1b-4c46-af22-de7afc938771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e84d5fc-56db-49c0-b4ba-471591af98ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9460ad-f58e-48eb-b13a-da12dfc380f4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93277a61-9e8a-42f4-81b3-cc0196293d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9515eab2-6f08-44d6-ac55-963822a5ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7693df-b29e-4a6d-a572-4e493360cb85",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81465fe-7f70-4902-8627-84f1fc8bd135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2bf319-0b1a-448e-afe3-c2a64e516e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dc9f1d-f43c-40d6-a9cd-a63ebb7beab4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d7c1e9-0baa-42a8-a25f-54a99b5d5f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d25fe2-84a6-411b-b950-02d0bc820b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d24999-a1b5-4fab-b5c6-307facf882f2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9282cbf-9805-45ac-8335-1883dd83b6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7642a2-c97b-47c9-b17f-53208a528221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5087bab5-c745-447b-bc0a-086a5956e69d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c6c5b4-b968-4ded-bc79-b03670a1b552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bc50cc-8795-48c4-99e3-cb275fd1b120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a2c9e4-36f9-4496-be3e-dfc9b8355ccf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8107ec-665b-44c3-9719-c6ae45a72767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dd58c6-0b49-419e-872e-5df99b1e6bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39f08ca-6152-4541-ae99-c478b283074d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5fbbd1-bddd-4ec7-a464-049ed3c62444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5ea264-1531-4cd7-9914-10b863575d8a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0fae69-0e6c-49bb-b179-487296279ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d6b86a8-7833-4b1d-9b2c-efaea25a3696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ef1f76-c6fa-4176-96a3-42a63e43300c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13f7bdf-aaeb-4212-896d-295cb4706e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccff14ab-0e36-4720-8309-ab489ce76374",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb73b5-b5f6-47aa-95c3-130d5ba57822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8724cb-a75f-417a-af24-bba7098bfa3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58bebcf-4cf4-47c5-8d62-f08197070aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca720fca-a818-48ef-8576-0d1a17525674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c072f7ab-c173-4ef0-b7bc-7bb0c4c58c65",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779f4f96-479c-44da-9f16-a39be724f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6261ff4-acac-4581-8a68-0cf9a34334d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e9a95e-bc00-428f-89e2-a4cdbba44948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4227f47-d4bc-405b-b382-bd51e7ad75cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e350a2b0-d741-4970-a339-1eaa9c83401e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d386708-047b-43d2-923d-f32494f315e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05730b9-c91c-46cb-a3cf-2573d7c95283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0989843f-9319-4768-808d-3640cb35d78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f378e2-a693-412d-bd22-9fa573a070ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f4269e-db6e-4561-9212-25eca5fb8ebd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9c01ae-5622-47cd-ae60-5c5dd4d1804f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63fe8dd-5c0d-4df6-8d56-beb1e217a953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c9244-8b62-41d9-a1c6-3d98ac2e3037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a374f4-ec95-477c-a72e-60f58ddf62a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c545fb2-4dad-444d-93e6-626d2c622590",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac96f3dc-abca-4788-8130-ea4129d51639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca54a82-a2e9-4995-b399-e172bb349af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87536d33-ed98-400e-aeda-573cc979e4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91195ce0-8c8f-4f77-9800-dbac547f77bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12b5b5f-6206-40ff-ab19-0e50a5006b43",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c32a3ea-2dbf-4831-949d-86556f2f1b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61184885-0c08-4aba-b776-a15fd41f11d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a832ddc-82d1-404e-98d6-7f81e9ecce52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02553b66-9d28-43b6-be6e-10765516da51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4196603d-bd9b-42b7-b8fb-0505c51aa951",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72eacdca-e6d0-4ce5-a3eb-106932967c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "898eae13-86c7-4ac7-97c1-79ae9a64e178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f47ee5-72c5-49ea-8cb2-3f4e1e61d141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896c5e5f-e7b9-4946-8243-5f6dc4ea1fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d486d56-915b-4adc-857d-faeb6a3ec144",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9193b0da-87f5-46ba-b926-3341fcce217f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96551c7-451f-4d6c-a1d3-0d27f9f39978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb420878-57bd-42f7-920d-2062f808f61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37f82da-a4a5-4f20-926e-0d4348b365e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da66a4e-8f15-4a81-8873-7c7d19b7aa36",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69d86a9-ffc5-4802-a1ee-2c9500c4bc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1990aa88-6750-4e48-acf4-c6a8969fdf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e6e68e-869b-452e-afcc-1ec198a5015a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea111b5e-ae67-4bf8-8731-f57e9a748a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374cc850-8a1e-4ef7-bca3-15c54de273b1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42ba071-cef9-4813-822d-371908e12270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4447b52-248f-4a64-9ceb-e021192cc417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7551854-0cf2-4ad4-95ec-8bbebc5829d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e388efd4-022e-4c62-bbe3-85dddc453927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef16407-9351-457a-9715-2f07f3829606",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f91e80-9873-4a5c-bbea-9afc675d4c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afa62a8-fe0b-410c-a15f-00829f38b0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1373bad7-1ca1-49d0-9f76-a2fa02cbacfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee30461-4c1e-4676-8c5a-49b62ea4eb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6090a75-3118-462f-83a0-8fee58960302",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca91163-0fb3-4314-9544-eb0cb2033005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed61a14-505c-4117-9351-20ba1b00c494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2b48b9-e41d-4ff3-978a-200baf02400d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ab7cd0-b6e5-4f8f-b51e-230d7e977de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ca34bb-cc09-4d5d-8325-51536201054a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee78fd8c-e7bf-48b6-9a3d-8aa414f39ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd07a6d-f75c-4ec5-a14e-9b9870ad757f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f650a3-7047-4734-b1f0-818800b26264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9528a608-cb0d-4dc2-a214-7d9eb98dce1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543f9d0d-36be-433f-8681-e19fd9f59783",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9924a1a0-5a54-4634-be0e-71a64b8a2ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20029df5-0277-428c-879f-f939b77f1091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ca4294-90f4-4def-ac43-257910a421fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c984a65f-f1d1-4935-a1d7-ca02c29df147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf28efb-175b-4374-a45f-550e3cb6c670",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0c3c29-0334-40f2-b5fc-d4a0ee5b820a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab9f05b-be6c-4deb-84a4-44839c1433bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e15bc7-b1fb-4d2c-9624-f2f6e65d27b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46ac8f0-e3a1-4378-a10a-2ac15ded3200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8db748d-924b-4629-9105-5cef2216c222",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bd5ea3-d4a1-4893-a65f-cbdd822b53cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2899a12f-b200-44ac-9382-df899db4d4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d386aa78-3110-4c54-b312-56266d740092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baace6a7-17ee-4952-a356-ea45e2df8a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c42ba8a-46f7-49a3-b42a-19912d48ab63",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0fcc56-5cef-4e0a-b95a-8634a48a2762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963c32e9-9fa2-44dc-b762-d73e9e577034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b3dcab-9fcc-4059-a292-662027a3ed85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994baa8e-39b4-4adb-860b-03bd29e5ce99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c751225f-a7c3-467e-a352-e40d47999f8e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00474b09-ba86-40fb-95fa-d162100d2b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8cdf37-4e47-452c-9ca6-f8817f83cefb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1553dc89-7d73-4e87-b481-d06bce23bbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881091b5-9711-4f1c-9d3f-0bd914971a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a4c52a-40d9-4adf-b7c0-d94bbebc0f3e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10a2141-a67c-4d6b-86b9-316f36695614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967b57d3-fd4c-4178-9107-5df01cfacb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eed4c52-b92b-43b5-9da3-82be1560c87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f452f61-ab5f-4437-816b-dfe37583c63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd5a128-4f86-47fe-b8ac-43a649fcedbc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c143464b-6951-44d4-9c9c-713baacae8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e359ba-3d41-4886-9d12-49fa532f37cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908b58df-06a7-4bae-8993-745c6ae363a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2255bbb5-689a-49ac-b3a2-c45aa0ce5ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9efe8c-3cce-4fea-979c-e223f1b6e1b3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2354075a-51e0-4d5f-9a32-14157c108aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "202054f6-a949-4d11-a373-dd04565a781e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ce371b-6360-451d-a964-6d8cd4c40d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568db42e-9f9b-40ee-bef1-5f7b024d8854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae782e15-87b0-4c3e-8ac6-bb6f8b3717f5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971fc062-8954-4e77-9d80-f218a54d0adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bdd8c3-c2b5-47ec-b992-2e792a523481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c4509a-fac0-471c-8a84-f6bfd8ff21fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1b4aef-ca5b-4500-a7a3-565c45536ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e7cbe7-ba7c-4c5f-ab83-010cb6264c82",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f88bbb8-ec38-4707-a0be-8e73efbd1e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390c0bbf-c273-4baf-9621-a010690b16ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f545f7-43c0-4eb3-b225-3d5813803b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4951cc64-8ea3-4c4c-a5a1-0c0e4a99a8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619b99c4-317f-4832-9141-39d0008f0c51",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d70f01-4a71-431f-8e9d-6b920ff66bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccb731f-d805-4590-a6b9-a01f524cc64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af54093e-4bd5-41dd-b3aa-1a266328fd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c38a31a-dd7c-4884-bc81-959335b600ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc51bf0-feb1-4077-9702-ce8b75ab3b81",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa807e1-8e83-4708-b1b8-0e99119097ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d08b63-f842-4bd6-8ef3-f98ec8a4f8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738a61cf-de65-46c7-a92b-1c971c979ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148fa423-3d1e-486f-876f-d8ae0f61e86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cce39e9-08ae-4cf5-8715-e86d13c27330",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95391a3d-4863-4306-b6a8-4e55fc8495af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406083fc-2124-4c89-817e-95fdc2d28045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ef2af9-e8e8-4798-97c7-412c4a7832c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5271f3-9b50-45a6-974b-983116777a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef26793e-cb3d-4b35-88bb-bc502a1ba7d1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8521bf-e8b9-4cbd-a101-ca7eb70ecf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e78da6-d71e-4bb5-a35a-b6242f89002b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd97bae-8b12-4e16-bc4c-3766245e3669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf0763a-14ec-47d7-ab6d-66d07bf047b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae37f1f6-18c4-4ef3-b868-b255e6182e4a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf04a17-7bbf-4d38-9b21-14b7e6012a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dd3c5b-5ed4-40bf-871d-ff93d48858b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f944934-7239-4f16-b82f-7f1e9f097b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102463c0-3ebc-43be-bd8e-3c3a18a78da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1793003-0121-4edf-a043-e05363415569",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9003cb59-a2ca-4901-bc2c-9ee9719b5884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d238f6-2f0c-444a-9f1c-655412bb78d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eec9320-903d-4c2a-ae29-44df7a1dd7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b0c702-4250-42e4-a592-78703474623b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc76e8ef-1900-4308-8714-3f75e7ec5cf6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a0a088-5f08-4e62-8007-6cc72720561a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a2f7b2-f1b6-4e23-99c0-232fde11f1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114f8c6e-9b7f-4c4f-9cf1-fd9cb587ba1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b416f0b0-ccc0-4bd5-ae21-629a96e10633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b195e5f9-fcd5-4036-842d-5583cac6468b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dcbbaa-3632-4202-a852-440f394bdd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad50311b-0c61-412d-976b-22bc21987da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e346d12d-3680-4a1b-b117-497276a35d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b8a79e-83e8-4184-849f-368b67b73c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59fa359-3480-4e17-82e5-c383a8cee44b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe7160f-57d3-4951-b11b-0726d3af551b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d63eaf-a36b-4de2-b291-006fb4b7c11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae15030-c2a2-4812-a951-3df1808f6390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d01f80-4762-4d21-93b5-0fcb6753a517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6b4691-d1f5-40a4-a708-81b8e1c30e5c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc8a7b3-194f-45fe-bc2f-d5ebff0c375b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e743b1c0-0ab0-4a62-af40-f355ed9f4b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acf19f7-0625-469f-9521-cc01c8b34407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65934e4-6355-4795-b3f5-7459b967e50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7eebead-aa68-40c9-9806-3b579995415c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5a520e-2163-44ea-bbd5-4e6220f81f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed1e4d1-9411-4528-8e99-0ff68ec4cae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b651a4ca-17b4-4587-89ee-f27a07a3a147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecd3535-3ed1-4172-bae8-8600cc19fde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe34629-7e66-4539-8909-414d035896bb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96b1046-039b-4496-bba8-460d91ed7169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987a2c0e-84d2-49e5-87f1-e4a45e4048a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c57987e-4bd3-4808-94e2-81220846bf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d16b812-e7db-4482-8561-7a3173a45d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43219490-1d78-4a3f-9f76-16a72de5cac9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d30f36-2542-4842-8a8d-e822d5b04387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8d733e-75d8-4468-952f-a78067928c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c06ed9-bbbc-43f7-b897-e3e23088330c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdbb0ba-19da-445e-ab83-bd770ba639a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593d667f-2d0a-4ff3-9113-75fb01d68f7e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659835cb-2df7-40a1-bda9-8caa7d8651d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43600a4-6404-44e5-af57-50b764431dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47250764-2343-42bc-87e6-76e6095a46c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25873b9-24af-4785-99ed-5faa4273c9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f06effc-5f54-4e84-839a-21e3cae1ab15",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e6d23e-5682-4543-adff-4a81e69bfb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a09df52-5f63-42a9-b5f1-c8cc53744a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad73c843-0f02-4947-bc50-c99b4c486e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13820418-36ab-488a-9e7d-a99f273fbac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8117c77d-ef27-4151-9d18-f144e9c77557",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8920c4-5d04-41cc-b109-e7dc405d38c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d64b14-cb7b-4198-bb6f-54ba1789f833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7bfcf8-95f1-4121-a6ad-4fa49c1aa48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee37180-51cf-4272-b3b5-22d9fa3d52b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c6dd7f-a683-472d-9f90-3e1300c1310a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f90bfa-d4af-4967-a5c3-55790fac415c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5f6d99-6f60-4b23-a0af-c9b09d15899c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe561c4-17e7-4cf3-bce9-956d96663c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31777ccd-35bb-43d8-8b49-86837af6b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca35e5cb-8e4b-4e69-91f6-05b8fe7ef657",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a26be8e-09ed-44d8-afc5-e2c1dfed5ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804ed2b8-cf29-4ff6-af08-3c0295b3e0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdea995b-22bb-4eb1-8950-a4d480597419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48dc13f-b24b-47fc-ab45-75cb502899dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c2e950-8fe8-415a-894c-ba09715b32a4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafaff9b-4da3-48a1-8eb0-c6ddf0a66297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3e0afb-acec-44ee-b935-542dbfc54927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4801a19-e70c-45ed-8c51-5d21293a1ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083cdeec-3d87-451e-8bd5-216d1417555b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b59488-a1b7-4fc9-a8b6-b8c336335f6a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856ebf41-67fd-49f3-8af8-806889a3a51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac02bc9-989a-4b36-a66e-54973054e580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaf19db-bfdf-4b7f-98a4-3f98d20e16a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f70317-773e-4a48-a8dc-3442b644cdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d013569-f1e1-470c-aa86-de7e17bc4189",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8cb791-e517-426b-b4b4-4d5b8a1271dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04371455-59ff-4a65-b74f-e2eb61098483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c049a975-c6fb-4d73-8c81-6ac7dc61f5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67a3b7d-4438-41ad-9d75-188e822ccd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81724e04-689f-484b-92b5-740b8c8ea678",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e34a263-3f55-49c3-8c18-34a855c4c074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86186f97-3acc-41b5-ace9-16ab9c293f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57ae22c-f85a-473c-a844-b01183c6a1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33f69c2-62b2-495b-b00a-515990d4ddfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cb8979-92d9-476e-867e-398511fc0b11",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9670e684-2174-4b73-b9c1-fa5f6a21167b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7a1ec4-647a-40da-b38e-0b1de0dcc91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc45e8e-7b3d-4b2f-9a16-af3511eb02dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3928e0-2d76-4a72-ba0d-37088c716b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4ace69-4f40-4307-b8e5-50af74b4ebf3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f9d452-1ebd-44e3-b150-6c3100809963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638e7f02-3dcb-4772-bdb8-10f7c338befa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6df7ef6-269c-4aa3-84e4-0669ed2d75fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6eaaf7-3473-42f8-816c-a118fb244af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46fe2b5-c4e6-453d-815d-598fca5b9be7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e6004e-9a8e-4fa3-8784-63a0c34cab55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2041e384-107c-4279-b0e3-c1f87f971b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7708178d-dbb0-4243-a11d-c2ca7047da13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e40f24-c57e-4f01-a234-e1eb9227d465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32d9b22-767f-47bc-bd9a-7c180e280742",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fccd1c-ccfa-4c72-90cb-bc274ba9ef51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4216092-bf8e-41fa-8789-5f6c95bd9f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c52785-739a-41d4-826f-fe2ad44394c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babe9a6f-ffe4-4c86-ae72-d7a21b0ee990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f2994e-89b4-4415-880a-e8639e1692c2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf51b39-1e10-4eec-be51-c64256b486fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85671a9-5024-4ef2-a76a-2830924e2f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8502238f-1139-4d8a-a336-318b07484cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaeadace-a3da-4ad2-a900-5961c27366a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacfbe0e-ae6e-416d-83a9-a726b9674da3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29a4ce8-7911-4f0c-8533-308a0badb17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059ee215-7568-4f53-a09a-e35bd6444b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccb6dd6-f1cf-4b97-a2dd-9cf23581f483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabfd7d4-3798-4e4f-a550-ff977f8ac9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15bd4e8-4e0d-462e-900e-c02cdf52fd30",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa152373-b13a-40ff-8188-3150597185c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6526de93-0b64-48dd-9a81-33a332f5f9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8abd1d-8f2f-4c27-b0d2-30be69ca219a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900c3b87-f151-46c5-b532-80a00b8c96a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2422e1-4863-4922-88e8-590309a0a433",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac608d4-21d1-410e-9109-544c8c69be4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a296c0be-bb29-4bfe-8e86-d6b50c2626b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa85ba22-b54f-4bf9-ba2a-5a37fa14457c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca74a41-6918-4105-a6c7-eef759e37e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3199ca5-e5af-43e9-a33b-e13affd6afc0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d2070b-c88e-4978-8f5b-533b3aa6a8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdf28e8-a194-48e6-8f5a-76c843df5972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213a5153-76bb-4715-812f-a16a75da1b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912e3699-1da7-434b-a113-4f6cc6f48233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c52da66-e491-451b-ae0a-55f783e7e9ef",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea5b478-b725-4d73-9069-427d51575ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d89cef4-bada-43d1-92fa-c7cf3d3a6bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5cde87-3388-451b-9f11-0644772285e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2650d1fd-5b4d-41d1-88cf-a47c35df7ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ca9f74-edc8-4599-9a02-6e4d67bdb718",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bb9b54-c19f-432e-8d6e-db22e9045d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdf31000-51d2-4bee-9ad4-42e72a31b3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e20126-f0c0-4004-a340-4765678f6d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03246069-cc78-4593-95d3-838fe400f68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a899bb91-28bc-4d35-9686-e7bcad7fcba0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bd06c7-1727-44cb-a3c2-da0e16a5232c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f607b7-ed9c-4090-8170-381c05083c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2961c251-a0e1-4c2f-b9f4-2669e704ba10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff16df6-e10d-49f3-94ad-04c6eecf75bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55276e7-6aff-47f6-96c9-e98fa525a04b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866adc28-2699-432c-84c8-aa3c0058b48c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90dea73e-024d-4c85-8b99-7060e4e220c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3322fc-391c-42a0-ade9-0091138fe431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdb12a1-bf0a-4b83-9572-34381396b7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9d344a-414e-4dbd-bad5-f771fda3e898",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19eab3d3-78a9-4a16-a6c6-e0d422d1bb72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9b0c6a-0486-49d2-b256-5f017ab350f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04a75e6-f2c3-457c-a45b-13e76e73b613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c1ee56-456a-4f13-89f1-4b76cdeba8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d76ba30-d436-4c8e-9b4e-db5d7397f1a7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc60975-1e98-463d-b913-ed89d6e5c76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ba9b8a-b402-44da-833c-f4375ad70334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6f01f7-2654-48ab-bf3c-0eddd268c446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69c1f20-be0d-401c-94aa-9094315fb7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945e6091-20f7-4216-b855-9c41647436c7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa7d36e-b13e-412f-b7f6-30e5cc737561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090d9552-8994-4bf7-b5b1-aebe0815a03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecdcad2-94ab-461c-872c-ab01c9e879dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de2dd64-f42e-48e9-8b37-99ecb63c0135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a6ee66-8045-4e61-b319-bb4bc7f10fb6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82b72cd-3c38-43c7-856c-baf083889b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f312ed41-b563-4d3b-a0e6-31206143bb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24c52ae-aacc-4398-9987-aaef2bec44d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c955a776-7a79-46ad-98bc-ed0bf51260ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ffd431-da45-4c80-9c24-ff0eb3783150",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de23e261-ac88-45f6-8667-a562dc3da3d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91e3f78-e7fd-451a-b833-d89a7cb3294f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c072f8c-3199-4fcf-95c5-1c58defe6f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3856f90-2ba2-42d4-82c5-0686448d3524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a3e56a-861d-4900-b2c5-97177c58d33e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28c4f25-3f66-4a74-9c04-9ef23e4f6afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f54bf0-0b93-4dda-934d-25fe0a258c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e28a44-0d43-42dd-af80-82479473b3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f14be88-2f91-4464-b4ff-19d5be166312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b3d34d-4d7d-4d23-a55a-67518dcb3c2f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe89e2fe-5006-4983-b176-29f18ad39355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b8af44-1b21-49a4-aebc-bc8f338b7722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef51135b-69d5-48e2-9b10-91ff07279118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047407ae-d27c-4971-a62d-a177706ec2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdad5ead-ad23-4dc9-b2d6-f01b4772d4ac",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108a7822-ecfa-40bf-8e2d-21808b2ae8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a421c14-0e8f-4bf7-bcd6-00e516b09c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e380132-abee-433d-8d7f-002a5609f28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5959b801-9d97-46ae-babc-08e761047321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202b1cdc-c696-41a6-b403-192e08ca5024",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e610bb-c51a-416f-8704-55e2c0e6e586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc3324be-54a6-48f0-8d12-6709c22b50bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4aa0a7-f4d4-4668-be68-98ce7a87b167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00568e5-5f8a-4435-b65b-382fc7c7b705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee26c915-0136-43be-b1e4-5e3c65a64494",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267039a8-1fe5-4aa4-ab23-fcc1665a4b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "733eaaf7-4d78-445c-9ece-759a98f55704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9c0fa1-c2aa-4a89-af51-1db6efea2702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a59191e-c623-4df8-a0c4-190a419010c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07d5ca5-7e5b-47df-96ee-ed74afbc3cbf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2aefab-79de-4798-ac14-bb950a44d25c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9621480a-6166-4661-8f04-7f0eef759393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faceda3b-45b6-4df0-a3a8-c143de0a5932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dc73b7-d489-4c78-b65c-bc349aead278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b8b2f4-ca54-4151-b26a-089e92eb9bd9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ab1898-8a5d-4316-bd94-04f943480f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d69ee95e-bc09-479c-b6e9-2792f4107e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f92a6d-e6f4-4e69-9117-d899ba55cbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd62acc-7cfe-4e87-bc0a-25e785fe7eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3871da81-db93-45ca-acf0-2aeb79322166",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e483ea-45e1-40cf-a87b-da3f65ce7212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8ba524-f05e-4993-b99c-a95b23c48f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02af2296-c786-45aa-b043-514f0d2b5388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e4e387-3cae-4b1f-98a2-615e3e677d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70acd4f8-4c46-4f49-928b-d066c4b3af76",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a46735b-25e4-4a99-8f45-0f7fba3637ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14cd42f-3aa4-4abb-91bd-de12bd436369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b4d3c8-51ca-4ef7-a50c-44bb2cc76c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3436c689-011b-4059-be32-aef187bb9aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14173f68-2db9-45cf-a054-41b18d346aaf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ff8309-15ff-47c5-bcde-5ef53cbf3285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c34a20-36ef-4009-850a-eb4e110686e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1a4be0-4dca-4706-bd11-f34d58915a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d5a6de-cd44-4692-a194-fec685547250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afb47da-0347-4cf4-aba4-487bee0af05b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397bcacb-6ab5-4759-804b-231aa2fa44a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128d55b4-613c-4c29-965f-73b3d771fc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5265d1f-1e1c-4850-8aca-9f4841280cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55e6357-862d-4b4c-b70b-7066192d2e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224e2081-c944-4ace-b012-1359806343bc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed567b5b-9e9f-4367-8e95-eda7cffa6ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c56f6dbf-ca95-4bc9-b15c-7d9875a657af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b729127-6861-4071-8819-3124796d0c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20566bb-054f-400c-8ce9-52f6affe5c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539a4008-6c92-4859-b41c-4c79235cf638",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc91af6b-4e39-4df8-823d-5eb00a1b6030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b048281-76d6-43ea-bc9f-f9480f3e4d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdc95e1-30e7-435f-8719-b71042992982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cf2e59-d470-4b4a-b637-7b5d608f72a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24aae8a-7cd1-4a54-a332-8fc4e8e9d5da",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700b61bf-e8e1-437c-9163-ad2caca812da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6483d272-9abf-4b40-9958-d6412598247f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c479f4cf-c669-49a0-909f-1e709b490912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beec359b-ae99-452d-9aa9-39f65259a397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70421321-7567-4e20-8aab-77ffade979a5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe63d6-f8cb-4d43-900d-38abc1ac5590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825af0bd-3c8f-4636-bdda-20d374e172c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13471797-9c9f-4c89-840d-1fad33f53f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb6f5e3-9e63-4731-9792-bdca5c27823b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e29e190-587f-4476-bcb9-bd6660f86d0b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff35173b-b715-49f3-8d4c-f9ec34c315ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee85740c-8a37-4a6c-95de-0f869ce191af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4320ba3-6e74-482e-9ba5-e813f0e21031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab295f5d-5495-4f9c-928b-629f98e623cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68febd4d-a586-4bd2-8734-1d24c80f2dcb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5e5095-a439-49be-860a-6439c7590b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3ed0a4-cabd-45d9-822b-558f0e37f969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fbf0fc-b2a6-45e5-894d-0f40ac463e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666ef7e1-f113-4a19-9bd6-9ee69f602292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88ad1c6-9e09-473e-ad12-b8f56f75c8f4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93acff7b-6ad3-4ed8-a9e2-860036ebcb1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28b372a7-501f-467d-9c38-b0941a38babb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c265a993-10fc-4107-bc6c-52b5a8c8cbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c16c81-4340-488a-a550-eec672c70d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda5c83f-0a9b-42fd-ae34-931523ee2504",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dbfaf1-33bc-498f-8080-88e6db886078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b4db55-24db-4e9d-ba09-f38b4030ece5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2b93c6-0cbc-4504-9185-294731d07af7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c359a73-33b7-4eef-8f48-e1e4f891f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfea524d-1681-42d9-b3e3-5c627b03ca7b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164046a0-05d0-48b7-a708-e7d01f5b89ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dcb0048-c6d0-40dc-aef8-a44a92c9cfb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce02887-1b04-4a89-95cb-980b2bfce4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cd0532-a1be-4fb9-a7ed-622ae6589365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b72479-fb4c-4dbd-b404-4bfe0ca15eb5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dea747-4866-44ef-a2ef-318af46992bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f0168d-2bb9-4847-a91a-edfcd7bd504e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3a7d66-977d-4434-87e1-6ee3988e8447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d6639a-1108-4814-8e8a-7ffdde822ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0f8285-7d89-411a-b2a1-b3a191bae3ce",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02f3544-a574-43bf-8afd-bb79f2d7594b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43136516-89a3-4299-87c4-a1ee6ef84ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d97804-4328-4d15-a734-423f8582ba0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133e2243-5e08-43c1-a8cf-569d32ffcc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec57eb9-d34e-4c7c-a22c-5286fbdc60a0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e94ff2c-8f9a-40b6-ad07-b104952f3539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8832995-0053-45da-9c97-f1a98de8fc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c302e63f-2890-4634-b518-d98ba2ff767d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8ba0cb-7f08-4d35-9923-64e29cf2ded3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796ae907-b75d-4e97-9e69-fac3ac677044",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be58f537-42cd-4774-9023-228b5ffc67d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70922154-0ed8-41a1-a316-0098202d024b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dccf48-2575-48fd-978d-3e8eceefabd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44805330-a93f-4b77-8db6-a73020a794e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b8c18e-1035-4ec7-a331-9ba3d5ad2d37",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046d8ef7-71a2-4697-ac00-06a243dc1d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59f10050-3d52-48d1-bf01-e984aced2a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a509d18-71f1-4675-8979-1c09970d9a1c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0041bb-328b-465e-8352-65f7765dc448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e92ea0d-07f6-454f-8076-48433f27eeff",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cc3051-03f6-4a96-8d3e-dfce64cad989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e571d550-d16f-423b-b33c-e667a2a62f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18895860-bda4-4f8a-925a-0f4eba4eb6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0a7a2b-2ce3-42b9-95ba-1fbbd9235634"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ee385db-ff8b-4c05-b1d7-a3a90cbed266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fa712bf-c255-4ddf-99e9-ec6239cf507a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5a34439-b641-47c1-a5ac-e23aa4f3aeab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5b56bb4-f5ea-48fd-8a11-74216cf94d27"
                    }
                  }
                ]
              },
              {
                "id": "e722d587-88a6-4e0d-9102-870503283849",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f811b26f-5e4b-4441-aa43-1a4884b5471b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6969199-ca3c-4b32-abc2-5f8faa1886f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3ac57a87-23af-4508-9152-ea298ff04004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59f7b0f-a8b1-4c87-a44c-e001f35ecfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "800dbfe4-a9c2-4438-b89e-bfb75301a828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db031202-8446-46ef-8a40-b90496501da3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42067053-59e9-43be-a72f-c287ae36267b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b276a10f-cf9d-4233-898e-1d74c5ffe666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b54f6cf-393b-4fd0-95c6-dbe7385650c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1897a5b-d6ae-40ca-aa95-13fd5af9b537"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aae4c6b9-0897-4fd8-a5a9-2a101b43c9ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6dcb555-6715-4a4b-9716-c3947d55aec0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "882b5111-f7a9-4c83-8fd4-75d7c63e1d90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0576963-5101-4df3-bb38-1dfc108b18ba"
                    }
                  }
                ]
              },
              {
                "id": "601911ce-3468-42b4-86fb-85fcfe236830",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e8ea658c-d7e9-4e42-90f5-079adabf98e3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24006126-e175-40a0-b864-0866ff8c0aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b8d4a220-a20f-4cc5-b46f-652fcf7d5ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87916f07-f1e9-472a-ba3f-608f1cc777a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d531a6-fcb1-4f06-a82d-2da59231d46f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f7596592-3b8b-4d7e-a4f0-0a8780bbe936",
            "name": "Positive Testing",
            "item": [
              {
                "id": "265cb564-f368-4543-b97d-db3ac6d3eab9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27cff1f7-a63a-4357-85e7-0489ca288bb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70d40f58-6cb0-4a31-aee1-ca8f9f448ee5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "349103e0-6aed-4e28-8021-c6b969b32c49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d7b714d-ca56-4e39-8295-e04ee3cb145d"
                    }
                  }
                ]
              },
              {
                "id": "5037d20d-8e38-463e-81b4-2e099d02301e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dba0a76-6dba-41fd-8680-c4efc9ebf9c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "09de00d1-718d-4e1c-a232-101a4c150de6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3e290a1-b82f-4961-bfdd-3b5a81bf0e0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db33d750-51ac-4a8a-b31d-41ebf73612b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73962d22-970e-455a-9a12-83c2bf18ea37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a250e641-ec50-4ae4-ba9c-3e868ae80926"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d44c8c0-3cbb-4056-ac8d-c59c81530273",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc3b6202-8d0a-498d-96e1-b422d1c9a1fa"
            }
          }
        ]
      },
      {
        "id": "848d6c1f-1b69-4625-b109-26e15cf178ed",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3dbcfa2b-2e4e-4c80-afd2-f589ec89f335",
            "name": "Negative Testing",
            "item": [
              {
                "id": "024f8166-b5a3-447b-a487-59d080201279",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5cd1e0a-3ee8-4267-a011-6f3a502fc610",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60fa788-103f-4ce9-ac46-2c6cff3df12e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d547b90-241e-4247-b934-2b4e913230c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95fd486-df43-4dc8-8be0-77487b8b6b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e727e3b-b129-4974-bf34-5b98dc2795e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdbae8c-b597-4802-b3de-e4c72307998a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1a3046-007d-4e78-9ccf-dcc566b85b37",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "552e46f1-7ea6-49da-9d08-534af41b6071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcb64ad-84f9-47e1-a15f-b85eebbb4180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e748dbff-d609-4f32-ab0e-0f6ccbfce27c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9e0f668-3aed-4d4f-8b1c-4d8cc4a6920f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "481f6fb7-9b77-4a5a-8a06-14d8c7742e89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13626a86-e7ea-416c-bfe5-6fdefcba7ad5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b582d14-59d8-455d-a529-b77412820ae5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "196fc76a-586e-478f-bdfa-657e43772c40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5030dff2-7f59-4a9d-ab82-5c5759f4a2ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5f0a018-bf75-4d1a-a84f-45245938d219",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5c4cd64-c6ad-44af-8da1-f040154ce58e"
            }
          }
        ]
      },
      {
        "id": "f1bd7c1e-d5a8-4e32-9e6b-947279304a11",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7e5abe05-f11b-4f53-a07d-d22cb7ef6321",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a23dcbb3-7888-4a8b-994a-5018706761e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "541437b9-a0c4-472d-b685-457a37d3a76f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c267c8ab-3e82-4aa4-a5ba-17fb61e1dac9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a396f4d-2840-466b-9e14-93efa0a6f53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bd59dd-3cf0-446b-b4e7-97ce598b07ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "878c1720-3b8b-4790-8eb6-74dd90e08aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711d83c9-037f-4f67-8468-2c232daf2cbc",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930bff4c-6dfc-4102-adfe-0c9b2728ed6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7417060f-c6d8-4a37-8443-3bd2de4222bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6843ec27-4f5d-40ad-bd5a-ccab24a4fb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3784310-8896-4ffe-b886-36d23178e080"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c04467f0-f2c4-4f34-aaf0-8d5eaa8b6c62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "707b7c05-9c3e-48bc-8df0-0bdf390e2af7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "039ddc72-0cd7-40fa-b6be-465f68f762ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57efdf25-9cd2-439b-aaba-a0a36321ffef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41119196-0a17-4074-98d5-277b67e670c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7bb35fa0-58db-412f-83f3-212744450eaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddae3a9e-9d08-4a23-941a-3658100bf91f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9f4d076-6bc4-4066-ac0f-7fcfca4e9bf9"
            }
          }
        ]
      },
      {
        "id": "fb56c8b1-63f0-4e85-815d-ea627edc6b49",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "eb06b076-9fc7-4be8-ac7e-485796e3bde3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1f8a19f-8c5e-4ee8-b759-f0d10227a0c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab645255-55e7-4759-b117-d8c5233d1f4e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef17f77-de6c-4c3e-91da-e7775a5e4327",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea574660-c148-430b-b395-413cc83f5222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c2202-c3ee-489e-b23a-743bbbff7e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d5f9264-d181-4c33-920d-efcfc84713e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0ebbaa-306e-440f-b2af-0f88e7fe076f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a215104-0b16-489a-886e-09ac7bdac0e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "08804d7d-e462-4d1c-8ee5-e4ea85f54bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5d2177-e262-4554-ad3f-5fbc15da631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98a967e9-8f2c-4939-b195-085b2381227c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e757bf2-8b1b-4e31-a904-4e451a63d0a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9758ba8-0797-44e2-9164-08a0f4c07e5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "998b1638-62a3-4709-8ce7-ad190721d45e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a10bbc7-0e3b-4943-8854-68597f10a37f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5836f29-66ce-4e61-84f6-9a7604e45126",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83971115-3b67-4d10-93a5-5c71b97db865"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6864be8-f067-44b7-a1bd-277a2a761f5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebb78fcd-6f44-4c12-9a0e-cfe0f4d2ca8b"
            }
          }
        ]
      },
      {
        "id": "a74da092-e4a1-4650-a337-07628ef5a125",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cabd7d56-9a42-47d0-a82e-176ce79a42d7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7627f04-8876-4657-871e-6103404afbe2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1a9da167-6f2e-4060-a73a-5d1bd2e84a40",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be8390fb-6941-484a-a146-e9101d99d790",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d28968b6-5f5e-4a78-b87f-3207e207097e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 56.891891891891895,
      "responseMin": 21,
      "responseMax": 314,
      "responseSd": 33.91842206099812,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678668018439,
      "completed": 1678668044500
    },
    "executions": [
      {
        "id": "53c6149e-eec6-4daf-b0b8-dc4e1abdc799",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "86b79fc1-f427-4ca4-90ec-4a99e52c9598",
          "httpRequestId": "f196f5ad-5579-41e2-b4c3-9099bbd7f911"
        },
        "item": {
          "id": "53c6149e-eec6-4daf-b0b8-dc4e1abdc799",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b4358a86-6543-40b7-bd48-1dd221fa9a8c",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 0
        }
      },
      {
        "id": "d60459b6-1442-4de3-a44d-0e0146558b34",
        "cursor": {
          "ref": "18069ec5-8528-427f-a32f-50adb2b8739f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1ee46cfa-8176-4114-99b0-8094b630d7a1"
        },
        "item": {
          "id": "d60459b6-1442-4de3-a44d-0e0146558b34",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7234925d-ad30-48d4-99e2-a359c0d7d55b",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "3eb6a7ae-761b-4d59-87ae-7c07ad727d39",
        "cursor": {
          "ref": "c0bd9c02-78f9-44b2-a4a3-0468872a7c92",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "06082c8b-8713-42c4-a1c5-838869e1b3a9"
        },
        "item": {
          "id": "3eb6a7ae-761b-4d59-87ae-7c07ad727d39",
          "name": "did_json"
        },
        "response": {
          "id": "a5456925-7ef3-4d9d-9324-b981915f9cb6",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b2c415-0583-44ea-bdcf-b0ea9ee05397",
        "cursor": {
          "ref": "09c29006-be55-4cfb-b7e3-9c6d50c6bdb1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b071413b-29da-41b4-935c-1a6aae73ef0b"
        },
        "item": {
          "id": "75b2c415-0583-44ea-bdcf-b0ea9ee05397",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab7e3bac-d28d-4ee4-8706-df13ed9f3479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b2c415-0583-44ea-bdcf-b0ea9ee05397",
        "cursor": {
          "ref": "09c29006-be55-4cfb-b7e3-9c6d50c6bdb1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b071413b-29da-41b4-935c-1a6aae73ef0b"
        },
        "item": {
          "id": "75b2c415-0583-44ea-bdcf-b0ea9ee05397",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab7e3bac-d28d-4ee4-8706-df13ed9f3479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3907cf-45f8-44fe-b3e4-2b744a2da3a3",
        "cursor": {
          "ref": "972f0c40-7d3f-459f-8dca-1f7616380063",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bde354fc-3cfa-4a32-9ad8-46bf08fe794b"
        },
        "item": {
          "id": "aa3907cf-45f8-44fe-b3e4-2b744a2da3a3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3a72e236-534b-423e-af5f-354ffba1b98d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 153,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d551136e-12a7-42f1-9aab-978c2b0e087b",
        "cursor": {
          "ref": "aac09756-803c-499b-9236-712d13a667ef",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "29a0bc2e-cf57-4f35-a16d-37f613a72bd5"
        },
        "item": {
          "id": "d551136e-12a7-42f1-9aab-978c2b0e087b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bc1cda61-578d-4912-bc72-a4d8fc1ca050",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59133bff-4dae-4e48-b771-49c0f9de7a01",
        "cursor": {
          "ref": "8dd40c66-ef2a-421e-9828-e51e0e0a844d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f446199a-abeb-43b6-a99a-39aa1d21bd69"
        },
        "item": {
          "id": "59133bff-4dae-4e48-b771-49c0f9de7a01",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "631a93d4-c648-4e53-b73b-89fe4c15bf35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa22aa8-9e89-4aa7-8671-abbe79fdf030",
        "cursor": {
          "ref": "d9631263-8cca-4d1c-9cde-1cc86b3e3c1e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e8f5f163-44a9-47d3-9d4f-0ab156a16f2b"
        },
        "item": {
          "id": "0aa22aa8-9e89-4aa7-8671-abbe79fdf030",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "96bd8eee-167b-4441-9611-9271024b1a58",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa22aa8-9e89-4aa7-8671-abbe79fdf030",
        "cursor": {
          "ref": "d9631263-8cca-4d1c-9cde-1cc86b3e3c1e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e8f5f163-44a9-47d3-9d4f-0ab156a16f2b"
        },
        "item": {
          "id": "0aa22aa8-9e89-4aa7-8671-abbe79fdf030",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "96bd8eee-167b-4441-9611-9271024b1a58",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30f5624-67be-4e84-8be4-c08cc858bd5b",
        "cursor": {
          "ref": "39c37758-91f2-4c7e-b7e5-548c1c28c9dd",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1a4ff014-b42f-41dc-a72e-4ab61c1c3587"
        },
        "item": {
          "id": "a30f5624-67be-4e84-8be4-c08cc858bd5b",
          "name": "identifiers"
        },
        "response": {
          "id": "cac6f909-477a-4acc-9288-003eae3c7a3a",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30db29b0-6597-431b-b6ad-cb5be1bf0247",
        "cursor": {
          "ref": "4b7c60e5-fc2a-43aa-a834-1b7b3a6e06a2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fb37468b-d491-4070-8e3a-24cb539cb475"
        },
        "item": {
          "id": "30db29b0-6597-431b-b6ad-cb5be1bf0247",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ce082e36-1e51-4856-a6b7-339c38dc0ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30db29b0-6597-431b-b6ad-cb5be1bf0247",
        "cursor": {
          "ref": "4b7c60e5-fc2a-43aa-a834-1b7b3a6e06a2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fb37468b-d491-4070-8e3a-24cb539cb475"
        },
        "item": {
          "id": "30db29b0-6597-431b-b6ad-cb5be1bf0247",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ce082e36-1e51-4856-a6b7-339c38dc0ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc15dd2b-7f39-4b14-91bd-1747184513a9",
        "cursor": {
          "ref": "bb5f849a-9876-4e68-8f4c-4941edc32ce8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c51600fd-1e7b-4401-afe9-37aa5302514f"
        },
        "item": {
          "id": "cc15dd2b-7f39-4b14-91bd-1747184513a9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fe3343c7-cddd-4096-8bb7-d5151e23874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b9c659-7f77-47c2-b757-c948ef26dc45",
        "cursor": {
          "ref": "9ce4918a-71ba-402e-a549-549104b718ec",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7fcb2b5c-70a5-4be4-96ff-a3a105ef8a12"
        },
        "item": {
          "id": "e9b9c659-7f77-47c2-b757-c948ef26dc45",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "84baaf39-f8d3-41ad-8878-720b5aac76bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d6a7f4-d009-48c7-a567-b9e9bd3b17bc",
        "cursor": {
          "ref": "037eccc7-19e2-4ddb-85d7-f9eca0d88535",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2abe5b7b-f500-40f1-a11f-14c3db88c74f"
        },
        "item": {
          "id": "f7d6a7f4-d009-48c7-a567-b9e9bd3b17bc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "43b2ffd3-681b-4351-99d0-d615a2766dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb36c4d-06e1-4098-9103-f78ac4b6573b",
        "cursor": {
          "ref": "7b19e550-b891-4ac3-8bec-c5468bca29b8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e162aa1e-e59a-4913-ba22-648091e872b4"
        },
        "item": {
          "id": "acb36c4d-06e1-4098-9103-f78ac4b6573b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c8d389ce-2584-4984-ad11-ac9080743e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f41fe7-951e-4576-b4dd-bac8d6f620b7",
        "cursor": {
          "ref": "4463167b-1c09-4a0f-a689-d5adb824946d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "58aaabac-5f19-4741-ae37-80bf93328382"
        },
        "item": {
          "id": "39f41fe7-951e-4576-b4dd-bac8d6f620b7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f29d4228-78ce-48cf-8230-d60e3290a6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13bc6df-ec0b-4105-90ca-a126e1af360f",
        "cursor": {
          "ref": "414554c6-c0fa-4953-84e6-b6dd76a320b3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4ffd5caa-de0a-49cf-8340-9f5a9d9bd1cb"
        },
        "item": {
          "id": "a13bc6df-ec0b-4105-90ca-a126e1af360f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a89b272d-6212-48d2-b014-e754ea39bceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c38f9e8-aa9a-4a8c-9952-d72426f48364",
        "cursor": {
          "ref": "6f0a2991-8cb3-4ae0-aeef-b3def3530b8b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dadd0ad0-5fd6-4057-9b83-210b1135c9f6"
        },
        "item": {
          "id": "9c38f9e8-aa9a-4a8c-9952-d72426f48364",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2ab6609e-7804-48c1-94ab-aea8a1d3b4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495b73b7-85a1-4f6b-b269-08875cd869cb",
        "cursor": {
          "ref": "a0655eff-9b6a-4a3c-a73f-4bc9f508543e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6947e0d6-7531-43be-bde9-58dac9de1967"
        },
        "item": {
          "id": "495b73b7-85a1-4f6b-b269-08875cd869cb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "99144273-a889-4f88-9e6d-7906fda75e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd8b7bf-9bbe-44da-b9a5-52f3f2b5b3a1",
        "cursor": {
          "ref": "6b805aac-015f-4f94-b441-c4a9380506b0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ff1c7079-168c-4fa5-bb73-82af35a7aace"
        },
        "item": {
          "id": "1fd8b7bf-9bbe-44da-b9a5-52f3f2b5b3a1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fbc18297-e00e-4002-acdf-ab1779268cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b881f4af-e270-48bd-bf88-06c62041cdf9",
        "cursor": {
          "ref": "8b21b134-1c1a-4ffd-95f7-f3daf8aaa98e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ff38a86-0e0d-44d5-ac51-39873253ef1f"
        },
        "item": {
          "id": "b881f4af-e270-48bd-bf88-06c62041cdf9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "98efdbc2-2c22-4bd2-8be6-c81f0a504533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1aec07-7b51-46b6-80e9-0e90240b78b0",
        "cursor": {
          "ref": "20a22a10-9d9b-4ec7-8e0e-3157e64f05d4",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6f87d760-7c8a-4bb3-a578-3e333c1272d5"
        },
        "item": {
          "id": "3f1aec07-7b51-46b6-80e9-0e90240b78b0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "18ce46a8-e862-4e57-89b8-5cac4da1b1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf9b4f9-1e42-4d38-8b22-c76220a5e1dd",
        "cursor": {
          "ref": "97989f22-fe6a-45fb-8958-83018c24ad9c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "df06828c-1cec-436c-b3e2-9dc31d92f02f"
        },
        "item": {
          "id": "0bf9b4f9-1e42-4d38-8b22-c76220a5e1dd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "85086bb5-9e32-44e4-ad42-5d7b840e50fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8543f875-bc05-4c7b-9c2d-80ff28780039",
        "cursor": {
          "ref": "63b87954-b2cc-4bd1-9857-6b29994e9870",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "98a0afc3-d8a7-446c-b283-0b8e989f3eab"
        },
        "item": {
          "id": "8543f875-bc05-4c7b-9c2d-80ff28780039",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d1f01d4d-8d0e-49d7-9696-fef27ed4e915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb242b15-0b9c-46d0-83e5-6d6b37f94062",
        "cursor": {
          "ref": "9c4b098a-3435-44df-a6e8-68abb45fb292",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3d2d1a01-0128-475c-8152-d3a72cd119f9"
        },
        "item": {
          "id": "cb242b15-0b9c-46d0-83e5-6d6b37f94062",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fdf0a5e2-85e5-4d5a-b1d3-1438de979f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0070fef3-195c-47a4-84c9-f965c1e5c6b7",
        "cursor": {
          "ref": "322d4866-236c-4a87-8a43-5344d17ebb43",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5124d297-7c98-4b97-b30c-ee0914d7da50"
        },
        "item": {
          "id": "0070fef3-195c-47a4-84c9-f965c1e5c6b7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dea850d9-325a-44e7-a383-d6d1377e821e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d386dded-2fcf-4060-bb8e-ef1ff7dbf9d5",
        "cursor": {
          "ref": "634dca5d-9f0e-40f3-9cb5-c508b90ebcc2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a3ccecac-3d32-4e09-b3a5-282a56358707"
        },
        "item": {
          "id": "d386dded-2fcf-4060-bb8e-ef1ff7dbf9d5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "53020a43-29d6-4eb8-96cd-45a9e6ad25f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712954f0-1543-4ce9-b717-4beeeacd7ebc",
        "cursor": {
          "ref": "1999dabf-7e27-4c15-8bc9-42ae3f8b7e1e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3698db05-2731-4183-b8d3-2e9fad756b94"
        },
        "item": {
          "id": "712954f0-1543-4ce9-b717-4beeeacd7ebc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "05555826-3ba3-4bbd-962c-d703b4e314ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da56c17c-b595-4b2e-8ccb-65a9cb0aba8a",
        "cursor": {
          "ref": "e0ea13f7-7fe8-43e7-b464-4590e00c248a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7e97db5c-fe51-407b-8105-0076b27d72ea"
        },
        "item": {
          "id": "da56c17c-b595-4b2e-8ccb-65a9cb0aba8a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9bf4c664-d706-4c22-a29b-632e714baf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c17811-337d-4108-acd3-8906c5acdd0d",
        "cursor": {
          "ref": "837adb9f-e41f-45d1-9a71-5494e37a6230",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "453681b8-fbf8-4333-8480-e63cef3680b6"
        },
        "item": {
          "id": "47c17811-337d-4108-acd3-8906c5acdd0d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b2d9ab16-5670-408d-8026-a085e536ffa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b36438-3db1-480b-9475-351e091ea68e",
        "cursor": {
          "ref": "a616cddd-b502-4da1-9055-f28b82806c2a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7b2c7f38-d3b5-4e42-ba72-96b25f3456b6"
        },
        "item": {
          "id": "62b36438-3db1-480b-9475-351e091ea68e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "10306c8d-348c-4f60-8338-e81bca8310df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7373a68-c486-4aaa-b0bb-714ef8aea428",
        "cursor": {
          "ref": "63c9cfee-341a-4463-9236-af69e8b20bdd",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "382566cc-9738-4762-870c-aa6df0cd4073"
        },
        "item": {
          "id": "a7373a68-c486-4aaa-b0bb-714ef8aea428",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6928ad4f-b789-41fa-abe6-3a60573adbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b69c679-a43e-4c60-9664-3524f5f8cc9b",
        "cursor": {
          "ref": "774122c8-8385-4c37-ba5b-2525fcad2d59",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7f9b48e6-f1bb-47d4-bcd3-2bd9f8fe3ef7"
        },
        "item": {
          "id": "0b69c679-a43e-4c60-9664-3524f5f8cc9b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "621c78d9-f1b7-4fcd-a320-bb3b885daa9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9beba0e2-3d63-45c2-96d8-398a13e7e212",
        "cursor": {
          "ref": "d8162b22-0a17-493e-ac63-dba311d3113e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ead8cf9b-8040-497b-b54f-28332caf68d2"
        },
        "item": {
          "id": "9beba0e2-3d63-45c2-96d8-398a13e7e212",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "540b5ab7-ac1e-47b1-9899-786926157825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362c4558-0a1b-461f-bdf9-bef9d1cb09c7",
        "cursor": {
          "ref": "23ab9c46-1bff-4ba5-9880-229bd874321d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f46c7d0f-71f2-4501-912e-890717e04afd"
        },
        "item": {
          "id": "362c4558-0a1b-461f-bdf9-bef9d1cb09c7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d7775a53-e41a-4008-9cda-e51820136524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d9d582-d438-491a-b8ac-b408dfdc5684",
        "cursor": {
          "ref": "b0b83589-c124-4254-a7f8-15fe513c9baf",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "14318dbb-5418-4188-8f7c-4f86a74ef1df"
        },
        "item": {
          "id": "27d9d582-d438-491a-b8ac-b408dfdc5684",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "03dd3d40-01b9-4ac4-a5d9-5bcfcd3422e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504f488a-ecae-48cd-b3f2-fb9b995cafec",
        "cursor": {
          "ref": "ea34dc2f-2547-48b8-ae05-819b869273fd",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "97c79f11-5550-4502-a7ab-07f9b574983c"
        },
        "item": {
          "id": "504f488a-ecae-48cd-b3f2-fb9b995cafec",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "43aa1eee-c78f-411c-b51b-bf36c895a988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed720c4a-7307-4f32-9383-1c70753401d8",
        "cursor": {
          "ref": "28a6bf25-f417-44e2-a0e5-dff855a481d2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1b670a6e-6c25-41a2-8d00-cc619c030f69"
        },
        "item": {
          "id": "ed720c4a-7307-4f32-9383-1c70753401d8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0420b207-405a-4150-9e02-ca6ee5f3aaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a633266-075b-4d6e-959f-eeff9f0e3c6a",
        "cursor": {
          "ref": "23701fea-43b4-434e-829e-5231784d3781",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "66dd27bc-dda1-4acf-8d05-b4c365807ad4"
        },
        "item": {
          "id": "8a633266-075b-4d6e-959f-eeff9f0e3c6a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "667ca44e-a9ab-4740-83eb-0fc9f9ac4f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79299c8c-4f70-434b-8373-633058483f7a",
        "cursor": {
          "ref": "c84aeed2-9d5b-4253-a6ca-ec396a1edd4b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d704e258-ed18-4334-9a09-e2275e6b9d9f"
        },
        "item": {
          "id": "79299c8c-4f70-434b-8373-633058483f7a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1122b647-8664-43d4-bf3f-f79a2ddae0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7429141-5aa4-47aa-896d-0fa3184f44e8",
        "cursor": {
          "ref": "ce470289-00fc-440d-b0a0-23adda8a1f75",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4125b5a4-1070-4793-b838-9e08196fcd72"
        },
        "item": {
          "id": "e7429141-5aa4-47aa-896d-0fa3184f44e8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2a1f07c7-ce4f-4076-92d6-206ce9d286ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e216b7d-0a32-4e3a-bb82-e5ea2202218f",
        "cursor": {
          "ref": "d4897980-1913-4267-9e82-5ceac55fb6d7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0f53f581-5131-49df-a40a-2db7380f9728"
        },
        "item": {
          "id": "2e216b7d-0a32-4e3a-bb82-e5ea2202218f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "283895ab-010d-45ec-8000-f96ac6a3b3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039f93d4-62c7-43bd-8575-a0128824c60f",
        "cursor": {
          "ref": "38522057-e797-4e0b-9e71-b2bee298c7d4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a4961b60-4fc1-4ff1-b698-2420b783d83f"
        },
        "item": {
          "id": "039f93d4-62c7-43bd-8575-a0128824c60f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d035afb9-b2eb-4ba3-9c62-ab9d1b5183d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5474d0ce-332c-4daf-ab4c-240fa396ae2f",
        "cursor": {
          "ref": "06ad679c-b654-47a9-8b9f-9e23612c2be4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2c7b866a-97b5-4ad4-9b37-2320460c4486"
        },
        "item": {
          "id": "5474d0ce-332c-4daf-ab4c-240fa396ae2f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0b3b1384-4fd3-41c3-b28c-b98357a2de2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf16041-6f63-4126-b64f-b82502e199d8",
        "cursor": {
          "ref": "ce1df7ea-3a35-4317-b627-75da122b4a70",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7d6cd50d-0076-4e7d-a682-f487ddebd1a9"
        },
        "item": {
          "id": "1bf16041-6f63-4126-b64f-b82502e199d8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "653a40a9-c28d-4476-822d-6f72e61c6f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d07ec6-4f3e-4d79-987d-9e16082ad5b5",
        "cursor": {
          "ref": "86f1de35-34fb-4ef1-8720-3337c838be3b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1bcfc269-fc22-469f-8bbf-9edb661644cb"
        },
        "item": {
          "id": "e6d07ec6-4f3e-4d79-987d-9e16082ad5b5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ec1992d2-69d1-4841-8c01-3911bb429a7f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217567f9-99c2-4eb3-8bb2-88deb7728457",
        "cursor": {
          "ref": "75098604-f85f-4c91-b813-ac868d37b0c6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ddb0a905-96d9-4576-bfb4-80b32d4bf529"
        },
        "item": {
          "id": "217567f9-99c2-4eb3-8bb2-88deb7728457",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "495a20b8-d1fe-47ca-91f2-c974d130bc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98176672-ec6e-45d3-9222-933236c63193",
        "cursor": {
          "ref": "9fb3146f-ee97-45f1-8ba5-f4c92d49d692",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "68e121b0-5ecb-44be-a66c-c96eb4f8b811"
        },
        "item": {
          "id": "98176672-ec6e-45d3-9222-933236c63193",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fd5748b7-ce8f-4abe-90b6-d64355c8cf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9568aedd-8f22-484e-99a0-f6725d0f5fa2",
        "cursor": {
          "ref": "e23957a6-232e-45f3-a2c8-37fad60925aa",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "81f4c46a-98c9-4568-a94c-b9965a261d93"
        },
        "item": {
          "id": "9568aedd-8f22-484e-99a0-f6725d0f5fa2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "687a1866-687a-4c34-ad0a-5c5550814cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb4c66e-95e5-4e66-aacc-a550e6cec8f2",
        "cursor": {
          "ref": "d359170b-f212-4ea0-9afa-b18c7d442f4a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a0afb8cc-2934-42fd-8b2f-3987e53fe233"
        },
        "item": {
          "id": "dbb4c66e-95e5-4e66-aacc-a550e6cec8f2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "390bf643-2f40-4187-8656-e69d6c02cc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e65d73b-6ecd-4727-9200-85005d100292",
        "cursor": {
          "ref": "971fa3e1-813a-4619-8d84-cecacec3a696",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c81ab946-6f1b-410a-9d4a-a6be6b6d64b9"
        },
        "item": {
          "id": "2e65d73b-6ecd-4727-9200-85005d100292",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7d4b211d-f25c-4731-9f9e-51c9004dd5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7785bf1f-e93d-4ed8-90b8-b94586efbb3c",
        "cursor": {
          "ref": "7f1193f1-af6e-4d0c-96bb-972958b06280",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b190f2dc-ec8a-4436-81b9-347130ffac4f"
        },
        "item": {
          "id": "7785bf1f-e93d-4ed8-90b8-b94586efbb3c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0b3b5ae0-9b74-443c-a4cf-a751db5a1725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8756d8d9-f592-45c8-9aff-5eb5a39c4511",
        "cursor": {
          "ref": "f4691003-c38c-451f-87b0-e88d8875e7da",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2fe1a295-8b35-49d1-8181-71aef67f7f42"
        },
        "item": {
          "id": "8756d8d9-f592-45c8-9aff-5eb5a39c4511",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "caa93687-eeee-4416-90f4-cff6c6b11f3a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 58,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0a0d39-22d1-495f-b79f-fe62f66abde4",
        "cursor": {
          "ref": "9b81aaca-084b-4618-a071-11b57fd1fd6e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "30c4d38f-f58d-4b5e-971e-6779d8640d7b"
        },
        "item": {
          "id": "cf0a0d39-22d1-495f-b79f-fe62f66abde4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b5623dbd-7c74-4e1a-9126-7e099805a20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e60a114-6c85-46c2-8303-799bf5d791bc",
        "cursor": {
          "ref": "f24cb28a-f3e7-4bfc-9ebb-fa8b31ff4009",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2072d58c-93d7-4edc-96e2-6d20c94ee88e"
        },
        "item": {
          "id": "8e60a114-6c85-46c2-8303-799bf5d791bc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e6ea8ae4-cf9a-490c-a049-13dd87c8e5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bbc9fb-d898-47ca-92a6-e1e830362be1",
        "cursor": {
          "ref": "d45248c2-fa26-4e10-91d4-655a9d85f4eb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9dda6e26-4dec-44cd-a217-bcfd8fd224aa"
        },
        "item": {
          "id": "c4bbc9fb-d898-47ca-92a6-e1e830362be1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5dfc56ff-1328-401b-abfa-aaa3dd92dbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b63cb4-eb2d-467a-a605-b7880704c878",
        "cursor": {
          "ref": "6cfe75c9-562b-45f9-befe-60d8936848db",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c0bdfc43-1ba0-40f9-9833-662a60adaf66"
        },
        "item": {
          "id": "41b63cb4-eb2d-467a-a605-b7880704c878",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4c58a71a-3f0e-470a-a000-8956e258e520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9e6b5a-17d0-45e1-8728-625f7dbd37a3",
        "cursor": {
          "ref": "552f0bc8-9c2b-4bd9-bb26-612197ee4fbc",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "da31198d-58ac-48e0-b4b1-32a3d7787d66"
        },
        "item": {
          "id": "1f9e6b5a-17d0-45e1-8728-625f7dbd37a3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "701b2294-497c-4fe6-b754-9be72e05031e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046e0ea9-230e-4623-9747-9bb903f227c7",
        "cursor": {
          "ref": "d599ec40-50c4-4462-a289-3a24a90e772b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "14434368-9b50-4ed0-a4de-fbe848038617"
        },
        "item": {
          "id": "046e0ea9-230e-4623-9747-9bb903f227c7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0283cfd9-2994-472a-8ce1-623f53035c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c117ceb1-db2f-44dc-8a4b-f5a29deea7ef",
        "cursor": {
          "ref": "8a599787-8e29-471b-8351-97661fb6c87f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "45d90bed-8f51-44a4-93f4-0ef611837067"
        },
        "item": {
          "id": "c117ceb1-db2f-44dc-8a4b-f5a29deea7ef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2bb3606f-3a15-413f-8f46-0dac3005aecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f5a473-a992-49a9-902b-0c9cfa727c1e",
        "cursor": {
          "ref": "2cf64a93-b95b-4ad1-85df-d569f571ecda",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fbe673a8-29d6-4d31-ab7a-86ea60b69bf4"
        },
        "item": {
          "id": "c2f5a473-a992-49a9-902b-0c9cfa727c1e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "99b2da9c-9e9c-4fb3-b31e-c7fc98c1159f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89e5f1c-1c13-4bd6-853f-d853c6e817b3",
        "cursor": {
          "ref": "7a5e129c-95e3-4948-a3ae-df89f44659b7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ec988828-5d6e-4d48-80da-ddcc46fef0f3"
        },
        "item": {
          "id": "b89e5f1c-1c13-4bd6-853f-d853c6e817b3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d6c72ff0-5537-4ee8-b536-0c3a38081511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e443ca-a55f-4921-83e1-0b7dd135610f",
        "cursor": {
          "ref": "a7fd7fa5-6597-4da2-aac8-ba506bd9dfcd",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "72d89e9e-d4a6-472c-bebd-d9d9e99ea304"
        },
        "item": {
          "id": "80e443ca-a55f-4921-83e1-0b7dd135610f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fb16ae44-4566-4b53-a114-e2bb91cc02a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16f8053-bd27-46d1-a7c7-eca6aca0fc13",
        "cursor": {
          "ref": "78963086-1122-4f4c-bfd7-f5aff13cb698",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f11e3803-1831-48be-af25-6f11a07e0d57"
        },
        "item": {
          "id": "c16f8053-bd27-46d1-a7c7-eca6aca0fc13",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ae9e7f69-b38c-4a0c-970b-09e053d3346d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40387cf-07f5-48fa-9bdf-8bf7a622182e",
        "cursor": {
          "ref": "1e89f617-8703-4ad4-b0ee-2816880a145a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bdcd3145-5972-431a-ae1a-f30e15778051"
        },
        "item": {
          "id": "a40387cf-07f5-48fa-9bdf-8bf7a622182e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "351a2065-bf37-4473-bf9f-d1bf283895cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0c30d4-b560-4d0c-abf8-17a2f0994fc3",
        "cursor": {
          "ref": "ad936f2f-a6af-4f79-9a30-025bbf8a1f63",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "069585aa-1e7f-423a-b6d1-54bd64a0e39a"
        },
        "item": {
          "id": "cf0c30d4-b560-4d0c-abf8-17a2f0994fc3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "09b77415-846d-4cb5-890a-92f0475a844b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c033b36-4774-4257-b26f-aadde29b9bcd",
        "cursor": {
          "ref": "65d72f67-3024-4407-b0d7-ea6b0ed86026",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b430376c-0457-4329-af70-ece5caa02306"
        },
        "item": {
          "id": "2c033b36-4774-4257-b26f-aadde29b9bcd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6c01318c-fb95-477f-b8e0-2581d80a7507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aff2e2f-a746-44f7-8e82-2119f73b39c6",
        "cursor": {
          "ref": "2ad5e0e4-9f48-428e-bde1-ca54642d9d04",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "29d41d21-bd37-4b0a-b0db-a41cba5cbe46"
        },
        "item": {
          "id": "7aff2e2f-a746-44f7-8e82-2119f73b39c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c97c9d5e-df82-4a75-bb2b-96a7ade429c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffd2155-c50b-4e4f-a4c3-2ebefe96e525",
        "cursor": {
          "ref": "260b8fc1-72f1-46de-9158-49f0fd2735e2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a676a21b-ad13-4595-a260-d059cee48351"
        },
        "item": {
          "id": "4ffd2155-c50b-4e4f-a4c3-2ebefe96e525",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c74a98e5-7c63-49d3-9362-5df1aa4381a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5c3649-5d51-47f0-ad76-bedc51efe926",
        "cursor": {
          "ref": "e4870a29-edb8-48ca-b38a-b11a0db6ff8e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "416bba44-e4d8-4e59-905c-e1d4098d1b5b"
        },
        "item": {
          "id": "8d5c3649-5d51-47f0-ad76-bedc51efe926",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "49861f5d-e14c-44e0-a261-80bb7bc6f020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a64a06a-3fe3-4bff-978d-597fac3a123e",
        "cursor": {
          "ref": "87154fbe-af0e-4bf3-88af-78d2904ab2e9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "06daf50b-5b83-49ca-a6bb-c9b63c95f186"
        },
        "item": {
          "id": "0a64a06a-3fe3-4bff-978d-597fac3a123e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7374c6b1-6bf5-46dc-9d64-ba53d8ae7971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d678cd36-9476-4e08-b87f-5bcc83e4c225",
        "cursor": {
          "ref": "4c773e07-ae20-4fb6-a5ab-fc2c1629ac8a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "95a51425-aeef-4172-81b1-4a609ea984a8"
        },
        "item": {
          "id": "d678cd36-9476-4e08-b87f-5bcc83e4c225",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d0439018-1651-4e5d-a1b6-4f2adbc1cbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4e1caa-8c39-4436-b340-f82eecc60cf0",
        "cursor": {
          "ref": "cd19d5b5-d5b3-49f4-88f3-1c6a724f26f0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "30fc0228-57ca-46ed-ad27-e074188d3a6e"
        },
        "item": {
          "id": "fd4e1caa-8c39-4436-b340-f82eecc60cf0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "45443100-c6ee-4451-96e2-820f63ac8bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b55a5b1-45fa-44e0-986b-a31569c4f33b",
        "cursor": {
          "ref": "262209b8-b2c9-49fd-a7b2-2f914e643eb0",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a45b1f8f-4a42-41b2-8c94-6d0c5c52340b"
        },
        "item": {
          "id": "6b55a5b1-45fa-44e0-986b-a31569c4f33b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6af4665b-ae20-44d5-94a6-de2f576546c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbed3938-8e2d-4c16-a827-97c614be8e95",
        "cursor": {
          "ref": "1180f7ff-556e-43dd-a4bd-954eb6d7abd3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e79ab261-d4e6-4090-8bed-4873e47f584e"
        },
        "item": {
          "id": "dbed3938-8e2d-4c16-a827-97c614be8e95",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f729507f-12e9-4d34-89cc-e04221370c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc576b13-e1a7-44d2-bc76-53fa7972e5d8",
        "cursor": {
          "ref": "64e8d6f7-b513-4001-985b-e0b7a1df1c4a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0d2b7c69-9d68-4d0d-8fb5-a85c397d7130"
        },
        "item": {
          "id": "cc576b13-e1a7-44d2-bc76-53fa7972e5d8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "56d6ab4c-f933-4e69-8a41-73756a592ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3691e44-82c3-4917-8f98-d484b31a4b3b",
        "cursor": {
          "ref": "cd68048c-1bba-4df1-9d61-4678181aa0b2",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7bd776f7-dad3-4d3f-ac9f-aaedd7e6b199"
        },
        "item": {
          "id": "f3691e44-82c3-4917-8f98-d484b31a4b3b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b7005717-63f0-4efc-b031-c78e5fafa8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156cf4b5-b479-46d8-9b9e-623b38b1b9ae",
        "cursor": {
          "ref": "185bf77d-fc04-4f37-8ee3-53d9433fb4a2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3fccb839-5bfa-43c7-9ca8-7b51b2e2f2ce"
        },
        "item": {
          "id": "156cf4b5-b479-46d8-9b9e-623b38b1b9ae",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e489e9fd-9a70-493b-918d-79ee755326cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80a1a0e-2afb-4753-b726-1952486fa209",
        "cursor": {
          "ref": "954e45ed-21f8-4002-8e7a-5e0fad7071ec",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "67060b10-8d40-495b-bd90-129b0ca8449d"
        },
        "item": {
          "id": "e80a1a0e-2afb-4753-b726-1952486fa209",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9c00f6c7-bfe5-46b5-9c72-484c2a521208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba9d882-ac36-4d16-9c54-5ba81faca28d",
        "cursor": {
          "ref": "0f5914bb-1ea0-40de-911c-806ef686c737",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1f33010a-0f50-480c-b8c1-b0ab4ef386de"
        },
        "item": {
          "id": "6ba9d882-ac36-4d16-9c54-5ba81faca28d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8483215a-04f9-4dc0-ab3b-cb6317e1652b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273cbd2c-cc88-4dd8-9fdf-483e7b802751",
        "cursor": {
          "ref": "18cf03a4-cad0-4f18-a11f-8e4f944413d0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "651d2930-a0f2-49ab-b584-9cc578f3aea0"
        },
        "item": {
          "id": "273cbd2c-cc88-4dd8-9fdf-483e7b802751",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "81b47a02-02e5-4505-a0a3-6d153f2d40e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8d690b-3e14-4678-b1c5-07da2ce9905a",
        "cursor": {
          "ref": "5bea7c7a-dba9-46c1-af75-eafbe4d6c925",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ee69bc30-991d-41dc-9601-8b7e5a373584"
        },
        "item": {
          "id": "4f8d690b-3e14-4678-b1c5-07da2ce9905a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "15b7a878-fcd3-48fb-afd1-2d7895c06f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc0d325-0e33-4ecf-9afd-56b2b7f9c9f0",
        "cursor": {
          "ref": "d5e51362-1432-4967-a66d-cb82d41b651e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "48999059-283c-49c9-8f00-85af8cbfc0c4"
        },
        "item": {
          "id": "cfc0d325-0e33-4ecf-9afd-56b2b7f9c9f0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "adbb3bfa-5816-445e-acca-f56a851dbd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56264acf-2bc8-4cbc-8799-f5eb865f1225",
        "cursor": {
          "ref": "cf3f6288-c825-4c46-86c7-ce696d9bf005",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "69c5b881-d438-4965-bb15-b2c28a671b71"
        },
        "item": {
          "id": "56264acf-2bc8-4cbc-8799-f5eb865f1225",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "261a0d93-1d0c-4790-95c8-fe5374744287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2921b04c-ef03-4996-8c59-3b3ddca88bf4",
        "cursor": {
          "ref": "ccf4e3ed-251b-4105-bbab-dcf9ab1aa84b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "caae0b2a-6c61-45b8-a4bb-b48d5be1dd8f"
        },
        "item": {
          "id": "2921b04c-ef03-4996-8c59-3b3ddca88bf4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dfcad37a-7073-420d-b54b-c305a5a653b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6889c1-11fe-485c-b66f-a58fb91c57db",
        "cursor": {
          "ref": "6fb05433-5678-4c3b-8aa7-e2e11bccab87",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "616bfb46-cd7b-4ea7-bf4e-86bcbdbc84b4"
        },
        "item": {
          "id": "5a6889c1-11fe-485c-b66f-a58fb91c57db",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a96c99bc-4562-4666-b0e9-70a2dc58abcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896d9d47-5648-4b4c-8d72-2009224260ff",
        "cursor": {
          "ref": "59c665a7-11b7-440e-b327-3cad5f83ee1b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c72fcf3b-66d7-475a-85b8-5624fa4bbaf0"
        },
        "item": {
          "id": "896d9d47-5648-4b4c-8d72-2009224260ff",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "83dd98e6-f090-4253-b10a-d227dcbff57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ef3772-9d69-4113-81fd-15e08f771940",
        "cursor": {
          "ref": "66bb4f33-915a-4fe8-a3cc-5fe6579546bf",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "df6ad444-1320-4c38-9e60-53f9dbd5cb0d"
        },
        "item": {
          "id": "87ef3772-9d69-4113-81fd-15e08f771940",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5559b5cc-2ab2-4947-b153-623fd3d3795e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eb61f9-4ba9-4860-8a6d-ea2e5601f6c2",
        "cursor": {
          "ref": "e3e8ddb5-e0a0-42e1-8684-d0dfe9f62878",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "92774e14-1977-4c05-84c8-83cdbcebb954"
        },
        "item": {
          "id": "b1eb61f9-4ba9-4860-8a6d-ea2e5601f6c2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8d4aef10-bef9-490a-b360-5cfdfeafdb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e66656c-58d8-4a0a-b5d8-7f2f1ab8937d",
        "cursor": {
          "ref": "3e9ca02d-a98f-41f5-811f-056b0bf7287a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5486db6f-4baa-4894-830c-2f1496eec9cd"
        },
        "item": {
          "id": "7e66656c-58d8-4a0a-b5d8-7f2f1ab8937d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "048c3fa0-6dcc-409c-9844-897e9fa87e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfda766-ec3c-43fd-8cc1-cf7dc8ee1b61",
        "cursor": {
          "ref": "2c97dab7-9df8-453b-b8bb-b484ed9f3eba",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dbb079f9-8f58-40e8-8f07-ad35d63b1060"
        },
        "item": {
          "id": "4cfda766-ec3c-43fd-8cc1-cf7dc8ee1b61",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "138a1971-6a03-4902-90db-669fa0227e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf46c66-eebd-41cb-bf49-2fe1b9704e8c",
        "cursor": {
          "ref": "81b3645c-5862-4651-9ccb-5bbe3d7a52b9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e683e5b-609a-4c09-9e84-701ddde74ac5"
        },
        "item": {
          "id": "6bf46c66-eebd-41cb-bf49-2fe1b9704e8c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "033f419f-1a33-43c9-ab8a-44d275dfc56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1595cb-c6af-42cb-af7a-a1b8c8879f52",
        "cursor": {
          "ref": "5e7ea4e8-eb35-41c7-9ac1-3186d6c0cd45",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1cceb12a-99b0-401a-a683-b958483a0f30"
        },
        "item": {
          "id": "2c1595cb-c6af-42cb-af7a-a1b8c8879f52",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c3a73711-efa1-41fb-8861-e2671114644f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df5d82b-943d-4576-80b7-fdf5842f159e",
        "cursor": {
          "ref": "e896e635-638e-4c58-8e00-a539972fed9e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0136c343-8ca6-4ef0-aa20-0b7d0aff56a2"
        },
        "item": {
          "id": "0df5d82b-943d-4576-80b7-fdf5842f159e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "96fdfa27-91c0-4dc0-ba4a-cdd4a5f29b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e9662c-9236-4992-8bc2-72f0d3aa8201",
        "cursor": {
          "ref": "12cbcf1b-021a-4392-9c0c-daa108b0bacb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3f4161ab-0e51-4517-8761-1d61011b0fdc"
        },
        "item": {
          "id": "16e9662c-9236-4992-8bc2-72f0d3aa8201",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ae7007b-a32e-4b16-9586-3e269e4f2b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e99794-7918-49b4-9958-fb246a582cc9",
        "cursor": {
          "ref": "4259a1c1-a4d7-4a03-91a7-70adffa32591",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c47b826e-34c3-48c2-ba93-cb8aafd64ea0"
        },
        "item": {
          "id": "f4e99794-7918-49b4-9958-fb246a582cc9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ccf852be-0f77-4141-8a4e-3008850e1725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43b3c22-d088-44d9-be2d-ef1d2996fc8d",
        "cursor": {
          "ref": "91daa55c-5546-43c9-9ddb-d70e68b4cc04",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "06e2d6f7-48e3-4cd6-ae0a-d4a854132418"
        },
        "item": {
          "id": "f43b3c22-d088-44d9-be2d-ef1d2996fc8d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "21fa657e-695b-4c92-a40d-bdec7d7762b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a5db31-f16f-4820-9b30-9f148f073226",
        "cursor": {
          "ref": "47141f8c-74d2-46bf-82ca-8150bdcf0e14",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2b8a25b5-bbc8-4ba6-8244-2bcdaf478fb2"
        },
        "item": {
          "id": "46a5db31-f16f-4820-9b30-9f148f073226",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2aff60e9-775a-4a79-8829-282afdb1a382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25763e4-e574-4ce4-8b41-9db5c31d3026",
        "cursor": {
          "ref": "e7b4bccb-8162-4217-81b7-08de5e54ecdf",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2a3a4da6-6e84-44b0-9a0c-c447c7cfa55c"
        },
        "item": {
          "id": "d25763e4-e574-4ce4-8b41-9db5c31d3026",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e6eddba5-70a9-4b04-a79e-2fe1e5130c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98aea671-6bf7-46a4-b00f-f33ea01cdda8",
        "cursor": {
          "ref": "4084e65b-ce47-48b6-8683-a674c8f85c25",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3ed27a8d-0499-4f7f-a22c-6adb740f6ddf"
        },
        "item": {
          "id": "98aea671-6bf7-46a4-b00f-f33ea01cdda8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7c140060-0b6e-428b-90b5-2b437e5e4e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6001e732-bac2-4b97-99b5-780dfe4336a4",
        "cursor": {
          "ref": "7c840779-aa11-4cf2-bf73-33d6a17bcd31",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "10f469ec-70f4-4390-bf1f-439e7896d1c5"
        },
        "item": {
          "id": "6001e732-bac2-4b97-99b5-780dfe4336a4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "31041bd6-a13e-4b84-8b83-bca0713b2240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8d9405-aaf7-4413-bd9d-43929586a818",
        "cursor": {
          "ref": "bbf1303d-55a5-4f5c-8405-e190c177d4ba",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "77ff3e67-f15a-43cb-865d-9fbe21184f93"
        },
        "item": {
          "id": "4a8d9405-aaf7-4413-bd9d-43929586a818",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "479aa2a4-9fd5-4a30-93ca-adf72df3c480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c963f612-34c7-4664-baa4-09a19ca7969b",
        "cursor": {
          "ref": "7b867fed-d6cb-4c8b-80b2-7d19a388b172",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c4a94bee-997b-466c-9ad0-52fddb77b324"
        },
        "item": {
          "id": "c963f612-34c7-4664-baa4-09a19ca7969b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1664ccf8-c9ef-4132-bffc-c437ce884180",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d6aef9-f5c9-4e38-bd11-7fe8b2cb9532",
        "cursor": {
          "ref": "b3ac95dd-835d-4923-a9e3-3d8a9e57dc08",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f30fa4c4-068a-4f4e-b3bd-b7552ac02445"
        },
        "item": {
          "id": "93d6aef9-f5c9-4e38-bd11-7fe8b2cb9532",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c9e2bf8f-606f-49a7-b9f4-4752645207dd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 157,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e8fdd7-3a3d-4278-b2ef-9131cbe3ba94",
        "cursor": {
          "ref": "b8d1677e-98c7-48fd-b4d9-533f6601d371",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4d51c676-34c1-4aea-8758-fd098b4b9443"
        },
        "item": {
          "id": "f1e8fdd7-3a3d-4278-b2ef-9131cbe3ba94",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5f4752df-454d-4399-8b8d-d34e7c8e6ae6",
          "status": "Created",
          "code": 201,
          "responseTime": 112,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ab40d8-4c08-4f3a-adc0-6cc7423cf39a",
        "cursor": {
          "ref": "9ce6cd67-0be3-4eec-932a-891a453203f1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5e6a0138-07db-4cda-85b7-c614b353ac27"
        },
        "item": {
          "id": "32ab40d8-4c08-4f3a-adc0-6cc7423cf39a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "00ac0efa-010a-4002-b7c5-17275bc550ba",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5ea6b4-c49f-40a1-a7f3-11bc82c9b437",
        "cursor": {
          "ref": "49d3fa35-3845-49b5-96e0-cb0e9af86bf9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "efe124cd-81f4-4209-b54c-c72ad26b04b2"
        },
        "item": {
          "id": "3e5ea6b4-c49f-40a1-a7f3-11bc82c9b437",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a0c1d8cf-afb2-4499-894d-21fe18d0011b",
          "status": "Created",
          "code": 201,
          "responseTime": 72,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "03af6fc3-675c-4cae-af3c-e7d5d3c20613",
        "cursor": {
          "ref": "5388a8d5-8bf6-4a4d-b8bb-e413e3d434d3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6f7e7d4a-93d7-4775-982f-868d9b1e6399"
        },
        "item": {
          "id": "03af6fc3-675c-4cae-af3c-e7d5d3c20613",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "02b23aad-c1d8-4ca5-b1f7-2bbc96df67ed",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "02093bf4-5f09-48b2-a3de-dd0c96deffc3",
        "cursor": {
          "ref": "8bbedaa5-f06e-4fa1-b70f-96026edacfca",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "31f4ad48-88bf-4b63-9f4c-a1c5074fb02f"
        },
        "item": {
          "id": "02093bf4-5f09-48b2-a3de-dd0c96deffc3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3bcc2dd8-f0cf-40f4-a50c-f771ef3d9203",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a03f5b-f7cd-4cce-97b9-f66d3160033c",
        "cursor": {
          "ref": "f87b236e-fb70-4a9d-9f22-b8d5a3818096",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6c79a75b-f0ee-40f4-8911-eb6d90875adc"
        },
        "item": {
          "id": "54a03f5b-f7cd-4cce-97b9-f66d3160033c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a240f05a-0c02-4f86-8387-4c52ffba8e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a03f5b-f7cd-4cce-97b9-f66d3160033c",
        "cursor": {
          "ref": "f87b236e-fb70-4a9d-9f22-b8d5a3818096",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6c79a75b-f0ee-40f4-8911-eb6d90875adc"
        },
        "item": {
          "id": "54a03f5b-f7cd-4cce-97b9-f66d3160033c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a240f05a-0c02-4f86-8387-4c52ffba8e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6eb83aa-e0fc-482b-ab56-d30b801217f4",
        "cursor": {
          "ref": "ef681c14-6f82-4d03-975c-8221a970ed09",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "566fd81f-e3f2-46c6-99a8-1046a8612219"
        },
        "item": {
          "id": "b6eb83aa-e0fc-482b-ab56-d30b801217f4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a7283c9f-65e7-4a2e-b2c1-c01cb1cb5950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8174d72-aa15-452e-9e9d-061502ffc9ae",
        "cursor": {
          "ref": "b077f26a-c1bb-48e3-b85e-fc598bdbb1d1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "947794bb-53e1-451c-b88b-52eb8a2dc304"
        },
        "item": {
          "id": "f8174d72-aa15-452e-9e9d-061502ffc9ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8bf27d05-c2f4-4768-bef8-fcc7e5b9e766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ae36e6-5144-4f04-b728-fe1ec4fa67fe",
        "cursor": {
          "ref": "70bce66c-fb8b-4db9-9f85-eec5e15a9fda",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d1720e29-5aa1-4dfd-a775-4ce07243f7bf"
        },
        "item": {
          "id": "94ae36e6-5144-4f04-b728-fe1ec4fa67fe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "beab506a-575f-4fab-b6f8-6d55191324fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005017f2-63e1-4e2a-b42a-345d6231494e",
        "cursor": {
          "ref": "7aa662f6-6bbc-481b-b321-fa0d8ca9c8ba",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b56fd5a0-27a4-42ad-bd34-926fc610de9f"
        },
        "item": {
          "id": "005017f2-63e1-4e2a-b42a-345d6231494e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6ec6e2d3-ed5e-4eb2-9f0f-e629916cc886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa28d2d5-85a7-4547-b2dc-7037cdf20ac0",
        "cursor": {
          "ref": "f3895ffb-814d-49cd-bdbf-6218b611a67d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2fe414bd-82fd-4a08-8f18-7d286fd7cdf8"
        },
        "item": {
          "id": "aa28d2d5-85a7-4547-b2dc-7037cdf20ac0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0bab846f-2e23-4198-a578-d2a51c2e4977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49aa96b2-ac99-4b6e-944e-68d4b9a83926",
        "cursor": {
          "ref": "bdef5640-7a95-468f-9390-1d2271487058",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fb8bc635-346c-4496-b83e-e6bef75877e9"
        },
        "item": {
          "id": "49aa96b2-ac99-4b6e-944e-68d4b9a83926",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8ab79006-6b42-4b55-8e3c-8d022580d2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd6c0c6-1a92-47b6-8597-a9d9af12b6ef",
        "cursor": {
          "ref": "e2f13f09-05ec-4726-b5ff-5a392f26fc2b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "208bda55-a113-423d-902b-870816462160"
        },
        "item": {
          "id": "4cd6c0c6-1a92-47b6-8597-a9d9af12b6ef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "98f8cca5-e772-412d-913c-f0bf775b3236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09594733-5ef0-4bd2-93cd-53c68f597ee0",
        "cursor": {
          "ref": "12d03aeb-4527-4e6b-a137-e0cde90baf87",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b0bd6da0-161d-4baf-9124-865c58a5ec04"
        },
        "item": {
          "id": "09594733-5ef0-4bd2-93cd-53c68f597ee0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "270a04bf-76f9-4934-969a-4b09750ea901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ace4a3a-dd78-408d-8bc0-5ca0e19dea0b",
        "cursor": {
          "ref": "53823bae-1a02-4473-981d-30fa97097731",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6de8d74e-c233-4553-ac31-9d0c5cfcc1a3"
        },
        "item": {
          "id": "3ace4a3a-dd78-408d-8bc0-5ca0e19dea0b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a785af34-7a17-402c-870b-a92d642ac41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379efb8d-b8d3-403d-9270-27f62b71830e",
        "cursor": {
          "ref": "b340cba4-d762-47ee-af65-a355f2542295",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d2f04f3a-e85a-455e-88a7-20c69e86c76d"
        },
        "item": {
          "id": "379efb8d-b8d3-403d-9270-27f62b71830e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "968cc751-e3f5-424b-8f7f-17060d782aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae867ce-4075-4900-814b-eeef2edd1183",
        "cursor": {
          "ref": "614c534a-f813-4cbb-9e05-496f5e38bf8c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "903a7c9b-81ef-4ad7-a755-69e7a4e3b44c"
        },
        "item": {
          "id": "bae867ce-4075-4900-814b-eeef2edd1183",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "096505ee-553b-4ec8-b596-dcf042ef8fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8a6f47-57ef-47da-8d64-47659da27fe1",
        "cursor": {
          "ref": "14b23686-1c56-4a3d-b261-12ceb52cd002",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7a40b8e4-f7f3-447d-be84-ba1b15cf461d"
        },
        "item": {
          "id": "9d8a6f47-57ef-47da-8d64-47659da27fe1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b0fc00a6-754a-4f98-b0e4-da45f987d4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08180d66-462e-44cf-b59e-7879dacda707",
        "cursor": {
          "ref": "1491185f-ac96-43d7-94ee-a8b9616bc32c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f09d03b7-0034-40fe-b919-83c900bf1986"
        },
        "item": {
          "id": "08180d66-462e-44cf-b59e-7879dacda707",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0dad8b07-7b30-438e-8ecc-cf2631652285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55536ed1-45b4-4191-af90-02b827a0eb22",
        "cursor": {
          "ref": "c6cb7460-fcec-45b8-bbd0-e0379b7f80f0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f6798409-cda3-43ee-90ac-36a846d1020b"
        },
        "item": {
          "id": "55536ed1-45b4-4191-af90-02b827a0eb22",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "27a7cf7c-841b-4ec3-afd3-804d09b15d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0a99ba-5c12-456d-9bc6-733928d83220",
        "cursor": {
          "ref": "22690970-5bb7-4db5-a798-bfd4e68a4615",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c0777d5c-dbfb-44e9-a62f-9be6e5cb5aa8"
        },
        "item": {
          "id": "1e0a99ba-5c12-456d-9bc6-733928d83220",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7d1d5576-8eb5-44d7-a80b-872e98137b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cc4e16-7fb1-4488-b8fd-a0d3efa04537",
        "cursor": {
          "ref": "1fbdcb3a-2aa9-4785-98a2-b27451112dd6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0da12922-f10c-4df8-9477-bb266dc92f7e"
        },
        "item": {
          "id": "88cc4e16-7fb1-4488-b8fd-a0d3efa04537",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "147449bb-085c-46e3-ad7e-d3c1b4000cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c97379-855a-4eeb-a665-1bde259ca69a",
        "cursor": {
          "ref": "cfbed1fa-b976-423a-92dd-f8f1c42b44f4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cf09c124-e5a6-4c0c-9034-b36788f5d10d"
        },
        "item": {
          "id": "98c97379-855a-4eeb-a665-1bde259ca69a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f79219c6-c07a-4740-8fed-4acc31ec42fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca94bd12-21f0-4c34-8d72-803fb1ac14ea",
        "cursor": {
          "ref": "13b98d3e-acb1-4d2a-a220-2c1654e95a2e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7affa750-62dd-4980-a400-c68e4dede04c"
        },
        "item": {
          "id": "ca94bd12-21f0-4c34-8d72-803fb1ac14ea",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "82b972bd-5a61-49bf-bab2-69e4adb7132e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dcf00e-be57-4090-bfe1-777c33d7732a",
        "cursor": {
          "ref": "23838ed5-74a0-43a8-9eb9-39c11e549be8",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2b006deb-66a4-4e9e-9bcd-17cba78d139b"
        },
        "item": {
          "id": "15dcf00e-be57-4090-bfe1-777c33d7732a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa72cbb7-62df-4cd6-b2b9-03b11d4d4aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0544cd13-a845-4897-944f-2e4aae7b8a84",
        "cursor": {
          "ref": "886c011e-47ad-4c07-8028-f1eb8edae9b4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1059bf2c-0bbd-4633-83c8-20ab457603c6"
        },
        "item": {
          "id": "0544cd13-a845-4897-944f-2e4aae7b8a84",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20693403-d500-4935-8544-41f7122ee9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb39a97c-da99-4798-9162-596e878112e1",
        "cursor": {
          "ref": "3d0e5eb5-ec18-44bf-ba30-80c316e8dfdb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d5ef8400-b5c5-42f3-a75e-38f7ef259133"
        },
        "item": {
          "id": "fb39a97c-da99-4798-9162-596e878112e1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0b4ddc9b-dc2d-4cc1-bf62-1474f8f4580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40097045-0539-4432-99a1-6f3a205ddcfb",
        "cursor": {
          "ref": "c53b6574-5d2e-4340-bbe4-941c1beaa9c4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "218fd457-b3f9-4325-91fa-e7ed9af96126"
        },
        "item": {
          "id": "40097045-0539-4432-99a1-6f3a205ddcfb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7b551fe1-176e-465e-a284-12b275e1f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3619b0-3094-4ae8-b308-f69ed9cef215",
        "cursor": {
          "ref": "0bee1006-1efe-4f5d-b456-514d688e28b8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c6e81386-5e95-41a8-9c93-1248f783f0fd"
        },
        "item": {
          "id": "1d3619b0-3094-4ae8-b308-f69ed9cef215",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "098d1558-e1c7-4177-b29c-7a3f6878e4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b783381b-8ce4-4b0f-96c7-7db91d3b4e11",
        "cursor": {
          "ref": "c4d55b97-1af0-4042-bfa9-b7841654bd8c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ef777a82-34c7-481c-89dc-927cd1472295"
        },
        "item": {
          "id": "b783381b-8ce4-4b0f-96c7-7db91d3b4e11",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "de6e1b33-eb11-4b56-bbb5-64e985d68230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f40752-0c43-417c-8657-04a24fbc7748",
        "cursor": {
          "ref": "2394af9c-dc31-4371-abe9-fb525e0c2e08",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7348b3dc-2054-4347-8b83-ddd38bc0ef56"
        },
        "item": {
          "id": "41f40752-0c43-417c-8657-04a24fbc7748",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7d536e07-6f0a-436a-8204-25ab06ea0276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77329797-5168-4742-8307-1d4b3224c933",
        "cursor": {
          "ref": "5999ef2c-ccab-437d-bf0f-679d3c3cd08d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "599697ea-2f08-4804-9e05-87ba07e23d30"
        },
        "item": {
          "id": "77329797-5168-4742-8307-1d4b3224c933",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5526ebe6-48d5-4588-b14c-01b8ac48e4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360b33b1-54ad-45a7-b027-38e8c6099317",
        "cursor": {
          "ref": "f8f98132-5c80-4e2e-9fbe-fc454ad1befc",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1d374248-c529-4709-8c48-358475e34e8f"
        },
        "item": {
          "id": "360b33b1-54ad-45a7-b027-38e8c6099317",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e5521432-28d5-46e8-a123-79d99720f789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb57ff0-c76a-44a0-827d-1878b5cb0f53",
        "cursor": {
          "ref": "2f1b1e8e-8ae0-4d73-92c8-63c9fdb60f14",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6d599aaa-df63-4af2-8ec0-0308f661ce5f"
        },
        "item": {
          "id": "9bb57ff0-c76a-44a0-827d-1878b5cb0f53",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "550c4a06-3268-4921-853c-c6e93242c3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768cec51-9116-4dc5-84b7-94d0a5492f1d",
        "cursor": {
          "ref": "3a5cb91a-48d4-4207-9f20-843478abc497",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a6722f50-21d4-4f1f-a6f2-030af9f99f7b"
        },
        "item": {
          "id": "768cec51-9116-4dc5-84b7-94d0a5492f1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6fbae0d3-7df7-4e38-a6e2-2fc26cf846e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2964a661-a739-4024-abb3-ed0d4a794440",
        "cursor": {
          "ref": "7ff6399e-fae9-41c0-af25-cbd9cddc5ef2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1f5e49a9-8766-459d-b92d-112e2b570797"
        },
        "item": {
          "id": "2964a661-a739-4024-abb3-ed0d4a794440",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a917791f-e951-484d-a346-5d54bdb32e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb231d1-2482-44d7-8c30-de2f23288fd6",
        "cursor": {
          "ref": "1046d05f-6b5b-43f9-891b-0197780a0785",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "203dda4d-9549-465d-aa6f-6edf222bace6"
        },
        "item": {
          "id": "1fb231d1-2482-44d7-8c30-de2f23288fd6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0b72b3d5-3684-493e-9eaa-c104bf50450a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bffb7bf-17ea-4d61-a38f-9de846231a99",
        "cursor": {
          "ref": "e8e5eb32-0b12-4131-9e16-2f518faa36dd",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6260171f-ad41-40de-a8a2-e4eacf736e3e"
        },
        "item": {
          "id": "2bffb7bf-17ea-4d61-a38f-9de846231a99",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "61d18a9a-1497-46b0-9c88-8ceefabbadaa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ce7f13-1004-42f5-88de-451b690e5420",
        "cursor": {
          "ref": "695f168f-08da-4136-bd3d-c1555de28a28",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "67dbf7a1-f38f-4804-8275-373b34085a10"
        },
        "item": {
          "id": "84ce7f13-1004-42f5-88de-451b690e5420",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e2b5bc15-0e5c-4107-b3c8-950ed88d48bb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97aad7e-fb63-4759-9cc2-f50d2788e45b",
        "cursor": {
          "ref": "6efe27a7-0264-432b-8400-b6dde94caacd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8a479997-36db-4c3b-99d3-6b4e9e060635"
        },
        "item": {
          "id": "d97aad7e-fb63-4759-9cc2-f50d2788e45b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "68176b11-fcee-4c53-a37f-81a9054d7439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97aad7e-fb63-4759-9cc2-f50d2788e45b",
        "cursor": {
          "ref": "6efe27a7-0264-432b-8400-b6dde94caacd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8a479997-36db-4c3b-99d3-6b4e9e060635"
        },
        "item": {
          "id": "d97aad7e-fb63-4759-9cc2-f50d2788e45b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "68176b11-fcee-4c53-a37f-81a9054d7439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9460ad-f58e-48eb-b13a-da12dfc380f4",
        "cursor": {
          "ref": "071026a8-527e-4531-90f2-29f93201c9a0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b01f0504-235c-468c-b408-421dab96a046"
        },
        "item": {
          "id": "6a9460ad-f58e-48eb-b13a-da12dfc380f4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e6631627-ddcc-4c90-87a1-f0d8bd2ed1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7693df-b29e-4a6d-a572-4e493360cb85",
        "cursor": {
          "ref": "e69db16f-0bf4-49e2-8fd5-615a44c55684",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d9a13975-59ad-459d-a323-8c22a5c2ee6f"
        },
        "item": {
          "id": "da7693df-b29e-4a6d-a572-4e493360cb85",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5a20ecb6-6128-4a83-9961-eea32c78a768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dc9f1d-f43c-40d6-a9cd-a63ebb7beab4",
        "cursor": {
          "ref": "2d8719f9-43ee-49fa-ad73-0fab4a71ce36",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0f01471b-f43a-450e-8a46-4e601ed18d9c"
        },
        "item": {
          "id": "50dc9f1d-f43c-40d6-a9cd-a63ebb7beab4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "634d0abd-a7c7-48da-a108-92bee94cccdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d24999-a1b5-4fab-b5c6-307facf882f2",
        "cursor": {
          "ref": "3d1b8cf3-0565-4f93-b458-abb23e07269d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1896905f-1a60-4d89-bf84-ab6a0bfdbddd"
        },
        "item": {
          "id": "d4d24999-a1b5-4fab-b5c6-307facf882f2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2bc810e5-12bf-4c30-ae8d-98f4255709c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5087bab5-c745-447b-bc0a-086a5956e69d",
        "cursor": {
          "ref": "fd947fed-f111-4f12-8a82-0754341b5bb4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7b70b4dc-94a2-484a-a57d-70de38651105"
        },
        "item": {
          "id": "5087bab5-c745-447b-bc0a-086a5956e69d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "be5bc918-d0d9-4a90-a900-e4f772552d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a2c9e4-36f9-4496-be3e-dfc9b8355ccf",
        "cursor": {
          "ref": "c9d07b2c-1b73-475c-acdc-58c64973691d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "049cf561-7fd0-4b74-b2b4-5bd676479c58"
        },
        "item": {
          "id": "f5a2c9e4-36f9-4496-be3e-dfc9b8355ccf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "307cea67-7cad-4cca-aa51-4986adbae6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5ea264-1531-4cd7-9914-10b863575d8a",
        "cursor": {
          "ref": "907c7bf2-4692-48f9-964d-3f4af5b88a61",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "58d187c4-e471-499e-8678-fc40ecc211b3"
        },
        "item": {
          "id": "1b5ea264-1531-4cd7-9914-10b863575d8a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9f5aa910-0b82-4b75-a997-3f6c62c29b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccff14ab-0e36-4720-8309-ab489ce76374",
        "cursor": {
          "ref": "d41827cc-c662-4f9f-ae2f-c0dc486e1dda",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f6dc38bd-fcd8-45e3-8206-e4fb5f53c5ec"
        },
        "item": {
          "id": "ccff14ab-0e36-4720-8309-ab489ce76374",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "158dd2ce-1950-417d-b124-2b9e42cd176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c072f7ab-c173-4ef0-b7bc-7bb0c4c58c65",
        "cursor": {
          "ref": "f52a1511-025b-4a3e-8d21-dd4a8953aa06",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0887ed79-1b99-43cf-b504-790e441c0d08"
        },
        "item": {
          "id": "c072f7ab-c173-4ef0-b7bc-7bb0c4c58c65",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "43a1f466-3ab3-4e6b-a1e3-dd4ff7c4af5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e350a2b0-d741-4970-a339-1eaa9c83401e",
        "cursor": {
          "ref": "f74b4548-90bd-4bb1-8ecc-4e7153b339fc",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ef99a6f0-0bff-4a59-a499-fda355d94a95"
        },
        "item": {
          "id": "e350a2b0-d741-4970-a339-1eaa9c83401e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "970c09ac-b755-4e60-9633-5652c6e811cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f4269e-db6e-4561-9212-25eca5fb8ebd",
        "cursor": {
          "ref": "278de1cb-fca8-48b9-86cc-6e522ca669a7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f440a28f-d59a-4a42-8bae-973b34618bb9"
        },
        "item": {
          "id": "39f4269e-db6e-4561-9212-25eca5fb8ebd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3753b445-01b4-41e6-96e8-7e459bb8314d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c545fb2-4dad-444d-93e6-626d2c622590",
        "cursor": {
          "ref": "79dbab1b-6119-40d2-a70f-013a6236ff03",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1748fe65-b622-4eb6-8c8d-ced1a4bcd9ab"
        },
        "item": {
          "id": "8c545fb2-4dad-444d-93e6-626d2c622590",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "593f846d-431d-42ae-851b-055476fa7553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12b5b5f-6206-40ff-ab19-0e50a5006b43",
        "cursor": {
          "ref": "ec25d41f-fd44-42b8-8328-ac7dce45bee3",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d6ea0df0-faf7-4c82-8ad2-1f192652e00a"
        },
        "item": {
          "id": "b12b5b5f-6206-40ff-ab19-0e50a5006b43",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b4283563-96e5-4c05-b894-f52bfdfcde27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4196603d-bd9b-42b7-b8fb-0505c51aa951",
        "cursor": {
          "ref": "999cd91f-42ac-4710-86e2-7be9ed1bbe86",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e876b300-9ae6-4ad2-ab70-615c28ba171c"
        },
        "item": {
          "id": "4196603d-bd9b-42b7-b8fb-0505c51aa951",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a50a8e59-8dda-4c17-b04f-98175d1e48be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d486d56-915b-4adc-857d-faeb6a3ec144",
        "cursor": {
          "ref": "a6c45096-d784-4131-88cd-e57e64dc518e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b606c86f-f154-4f6c-9382-74b8b206bc11"
        },
        "item": {
          "id": "4d486d56-915b-4adc-857d-faeb6a3ec144",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0a0f910d-e228-401d-b51c-0b4f716e787b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da66a4e-8f15-4a81-8873-7c7d19b7aa36",
        "cursor": {
          "ref": "49ab78c9-8101-46f8-b3b1-09cf3a3340b3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8d0b8f3c-69f9-4cd4-bdda-6200e35fef07"
        },
        "item": {
          "id": "7da66a4e-8f15-4a81-8873-7c7d19b7aa36",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ec39922c-7be4-4385-aa4e-89255e5af611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374cc850-8a1e-4ef7-bca3-15c54de273b1",
        "cursor": {
          "ref": "405d8f8e-4432-4a04-ac67-8a8d1aa61ddc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5454801d-a857-4392-a2d0-abdcaacd3e85"
        },
        "item": {
          "id": "374cc850-8a1e-4ef7-bca3-15c54de273b1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dc32c9fa-dd34-4e02-9687-bfe63dcd0fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef16407-9351-457a-9715-2f07f3829606",
        "cursor": {
          "ref": "1ebb214b-7dfe-4d28-bbf3-a8a9f57979bd",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2d10ab52-33d7-4a28-8548-b5e103f72dc5"
        },
        "item": {
          "id": "7ef16407-9351-457a-9715-2f07f3829606",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8b5e3360-029b-4af3-808b-e9553de0a19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6090a75-3118-462f-83a0-8fee58960302",
        "cursor": {
          "ref": "e70eb124-e8e9-4492-8d82-7cf3cbce1061",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d8467764-74cd-4c06-9f3f-f784445d47d4"
        },
        "item": {
          "id": "e6090a75-3118-462f-83a0-8fee58960302",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7c26afd5-f39a-45ef-bc10-c2c309474982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ca34bb-cc09-4d5d-8325-51536201054a",
        "cursor": {
          "ref": "03a3c9ad-e2fb-410d-9b8e-8880f05687f6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e08d3683-a646-487e-9a86-3a6950c0c6ea"
        },
        "item": {
          "id": "f3ca34bb-cc09-4d5d-8325-51536201054a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8bd27393-682e-4a0f-ad33-e2f5eb3968b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543f9d0d-36be-433f-8681-e19fd9f59783",
        "cursor": {
          "ref": "8b02b58e-140a-4839-8de8-9c86fdd472c1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "272bef0a-827b-4530-bf64-793e8ba0f2f8"
        },
        "item": {
          "id": "543f9d0d-36be-433f-8681-e19fd9f59783",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e200889-272d-4879-8a5b-3aaf324c8ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf28efb-175b-4374-a45f-550e3cb6c670",
        "cursor": {
          "ref": "296c5d3d-079a-436f-9dc6-448ff451af27",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e207292b-0a75-4f92-bd61-99c794845f8d"
        },
        "item": {
          "id": "7cf28efb-175b-4374-a45f-550e3cb6c670",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "76cbb929-98c1-4e40-8752-80c339be3eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8db748d-924b-4629-9105-5cef2216c222",
        "cursor": {
          "ref": "b3f08151-5438-4a98-b179-1b21ad756354",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0b7bbccb-b28c-4c0a-99ca-1df398671ecf"
        },
        "item": {
          "id": "c8db748d-924b-4629-9105-5cef2216c222",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "95257749-1b86-4cd0-9f11-f4bb99c9d1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c42ba8a-46f7-49a3-b42a-19912d48ab63",
        "cursor": {
          "ref": "90f290f6-b3ab-4331-a635-2fd8037d68ba",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bc77694d-3b61-43de-9a8a-1c4a292785c6"
        },
        "item": {
          "id": "7c42ba8a-46f7-49a3-b42a-19912d48ab63",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e46cde07-4db9-4e9e-89c1-6fffab475a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c751225f-a7c3-467e-a352-e40d47999f8e",
        "cursor": {
          "ref": "1de1cb2c-a69b-4f76-9262-764d72146059",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1736f609-44e2-41b5-8b96-5930191463e1"
        },
        "item": {
          "id": "c751225f-a7c3-467e-a352-e40d47999f8e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "45f973ce-4abd-43e4-a8e0-128993dc5cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a4c52a-40d9-4adf-b7c0-d94bbebc0f3e",
        "cursor": {
          "ref": "663b3fb5-9d29-4b30-8f9a-12620c9434ff",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ebac40cd-9bf4-45f5-8dfe-2e2de1372418"
        },
        "item": {
          "id": "32a4c52a-40d9-4adf-b7c0-d94bbebc0f3e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4dab7260-7e8d-4ef1-ae7b-cab73d6dac82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd5a128-4f86-47fe-b8ac-43a649fcedbc",
        "cursor": {
          "ref": "2b2a760a-d818-46b7-9986-12a1e2920e54",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "af31b0e8-b7e4-4049-8ce7-a988235f2ac7"
        },
        "item": {
          "id": "7dd5a128-4f86-47fe-b8ac-43a649fcedbc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f00c6adc-4829-45be-9e89-45d26c45184e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9efe8c-3cce-4fea-979c-e223f1b6e1b3",
        "cursor": {
          "ref": "af8c8862-9009-4d86-8f5b-904c88c3bdf7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c36c555c-814e-4a16-83e5-4b2050c1f64c"
        },
        "item": {
          "id": "8d9efe8c-3cce-4fea-979c-e223f1b6e1b3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f0f0271d-7e4e-4db1-8f5e-bf56b9cbd2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae782e15-87b0-4c3e-8ac6-bb6f8b3717f5",
        "cursor": {
          "ref": "835bf5a5-621f-49f8-9c99-9875a6eed26f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2154bfbe-873a-40b3-8b71-b5d4e2bdcf06"
        },
        "item": {
          "id": "ae782e15-87b0-4c3e-8ac6-bb6f8b3717f5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "273714b8-b970-425a-8e08-2b84343ecc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e7cbe7-ba7c-4c5f-ab83-010cb6264c82",
        "cursor": {
          "ref": "e9ad1e9d-c139-4a6c-9685-41fa7b8f1280",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3b25f0cc-fd41-439f-a925-4e9c0fb31f7e"
        },
        "item": {
          "id": "97e7cbe7-ba7c-4c5f-ab83-010cb6264c82",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3adf3905-5e6f-4e52-96c5-4860504ded45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619b99c4-317f-4832-9141-39d0008f0c51",
        "cursor": {
          "ref": "a69bc0d7-1d43-4fc5-81e8-ca3e6a53f64a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fa2f5278-fc43-402a-91cf-0242416b51f2"
        },
        "item": {
          "id": "619b99c4-317f-4832-9141-39d0008f0c51",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "50442f65-5ef4-4eb5-ac15-82522e55b6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc51bf0-feb1-4077-9702-ce8b75ab3b81",
        "cursor": {
          "ref": "b5e0bfc1-8fa9-4608-b293-14939f0f500a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "adb21be5-fab8-454d-8931-1b916fc7b68e"
        },
        "item": {
          "id": "1dc51bf0-feb1-4077-9702-ce8b75ab3b81",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "60114608-5361-4d6b-92c0-9332eb5a7606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cce39e9-08ae-4cf5-8715-e86d13c27330",
        "cursor": {
          "ref": "6fa332f4-9594-4b5d-95b0-4c2aea3d8099",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b1713166-208b-4487-8a6c-94760fb42528"
        },
        "item": {
          "id": "6cce39e9-08ae-4cf5-8715-e86d13c27330",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "721537a8-3291-4abd-968d-c6192b081bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef26793e-cb3d-4b35-88bb-bc502a1ba7d1",
        "cursor": {
          "ref": "aaf908b6-1ccf-4723-9334-85a19a5ffbec",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "50ed8221-3a74-4b48-b140-a5591f4dcf95"
        },
        "item": {
          "id": "ef26793e-cb3d-4b35-88bb-bc502a1ba7d1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a004bf00-a46d-4a58-b3ee-bf189045468c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae37f1f6-18c4-4ef3-b868-b255e6182e4a",
        "cursor": {
          "ref": "8b09f949-0dbd-46fc-b36d-b01243526cad",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ac81a613-1bcc-4df2-a573-a18cc21cfecf"
        },
        "item": {
          "id": "ae37f1f6-18c4-4ef3-b868-b255e6182e4a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7ac3b817-3457-486e-a7e7-c6db79571c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1793003-0121-4edf-a043-e05363415569",
        "cursor": {
          "ref": "5d0688b2-f680-490c-b48e-2e89ae14b1a8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "67e0a9ca-717c-461e-bb98-45ef7ae5673c"
        },
        "item": {
          "id": "c1793003-0121-4edf-a043-e05363415569",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8d81925b-c0c8-4cba-92b7-9fa90af3e4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc76e8ef-1900-4308-8714-3f75e7ec5cf6",
        "cursor": {
          "ref": "f98f746c-422a-4664-b981-0c82a7fff1b5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "882d5082-cf97-4757-9298-48971711d2cd"
        },
        "item": {
          "id": "cc76e8ef-1900-4308-8714-3f75e7ec5cf6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4979b5e7-65f2-46f2-9789-45f30d582ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b195e5f9-fcd5-4036-842d-5583cac6468b",
        "cursor": {
          "ref": "b2b84ea2-6fb6-48f3-8f31-4a7bd67838d2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2f18345c-e502-40f0-8bf9-ea1103e1c556"
        },
        "item": {
          "id": "b195e5f9-fcd5-4036-842d-5583cac6468b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "02137dfb-03c0-4a96-81a8-8576fd539e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59fa359-3480-4e17-82e5-c383a8cee44b",
        "cursor": {
          "ref": "a7264ba5-72c2-413e-a953-bf7761e24249",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c1fada93-5486-4d06-baa8-7f7b4185f633"
        },
        "item": {
          "id": "c59fa359-3480-4e17-82e5-c383a8cee44b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4e373501-934d-46b9-80da-4a390ba02ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6b4691-d1f5-40a4-a708-81b8e1c30e5c",
        "cursor": {
          "ref": "a66d111b-b933-4d48-81fb-0e2344258ff5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b2732af9-d1a0-411b-a7ec-241d8da1a2e6"
        },
        "item": {
          "id": "6d6b4691-d1f5-40a4-a708-81b8e1c30e5c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "97dd8626-6aab-4049-8cae-8f2e9048850d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7eebead-aa68-40c9-9806-3b579995415c",
        "cursor": {
          "ref": "b74eee24-287c-4bef-bea8-aec4a02b2e90",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ff63ef04-6223-46e1-85e8-3438f2a76d61"
        },
        "item": {
          "id": "d7eebead-aa68-40c9-9806-3b579995415c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "67117e5e-e546-484e-a3d8-eb4a2b1e7853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe34629-7e66-4539-8909-414d035896bb",
        "cursor": {
          "ref": "55e3a2b3-afe7-4aba-970f-2534081a0541",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "931e8737-ac9b-4698-a214-660976955a95"
        },
        "item": {
          "id": "4fe34629-7e66-4539-8909-414d035896bb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3d6fe41d-f811-4305-b4cc-658d25428714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43219490-1d78-4a3f-9f76-16a72de5cac9",
        "cursor": {
          "ref": "4fdcac67-ac2a-4d2d-8afb-13953d94ac30",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6ab47110-bcb4-47e4-88ca-c7b591c07b70"
        },
        "item": {
          "id": "43219490-1d78-4a3f-9f76-16a72de5cac9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0d46ce84-034b-488f-9872-1a88e2469ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593d667f-2d0a-4ff3-9113-75fb01d68f7e",
        "cursor": {
          "ref": "5e87e79c-a32a-4443-93e0-7e54134d20a1",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f9daf492-ff1d-4f5b-acec-68fda525eecb"
        },
        "item": {
          "id": "593d667f-2d0a-4ff3-9113-75fb01d68f7e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8694d305-ea16-479e-91e9-654f8bcae515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f06effc-5f54-4e84-839a-21e3cae1ab15",
        "cursor": {
          "ref": "92cf5656-9ea5-4868-ba3e-a86e9cd65beb",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "71bfdb24-28c1-4f3e-9643-645e959b6ca0"
        },
        "item": {
          "id": "1f06effc-5f54-4e84-839a-21e3cae1ab15",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1960b760-05fc-4cb7-9700-45025b80eafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8117c77d-ef27-4151-9d18-f144e9c77557",
        "cursor": {
          "ref": "3cc3b000-cef3-4a63-a666-51aaf0f7694b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "69f75ef6-21aa-4e84-bcb9-4e5753648ea2"
        },
        "item": {
          "id": "8117c77d-ef27-4151-9d18-f144e9c77557",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5e3da06a-c441-460e-92ae-d9585e18cda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c6dd7f-a683-472d-9f90-3e1300c1310a",
        "cursor": {
          "ref": "abf6083e-1224-4615-aafd-31c72fb1951c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "63e43c88-253d-4eed-92a4-06ac861d5c39"
        },
        "item": {
          "id": "10c6dd7f-a683-472d-9f90-3e1300c1310a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7e4879a9-e27b-4f5d-b9b8-9cce8cbadb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca35e5cb-8e4b-4e69-91f6-05b8fe7ef657",
        "cursor": {
          "ref": "5cb39985-292b-4968-bc2c-86fd22f994dc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "179df0f5-73ca-4b27-837c-cc4b667dd4e3"
        },
        "item": {
          "id": "ca35e5cb-8e4b-4e69-91f6-05b8fe7ef657",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8b6cee2a-b559-4862-b27a-36f509665b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c2e950-8fe8-415a-894c-ba09715b32a4",
        "cursor": {
          "ref": "cb5e64ac-4c14-4ed2-97e4-a15e2c4bf592",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5cfe8480-66cf-4f3b-be33-3785a3823d7b"
        },
        "item": {
          "id": "e5c2e950-8fe8-415a-894c-ba09715b32a4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0a2b3b71-60ab-4b0c-a707-080d423e7430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b59488-a1b7-4fc9-a8b6-b8c336335f6a",
        "cursor": {
          "ref": "a43fdaee-644c-4507-b2d6-ea86f03c10ce",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e3f25726-71a6-41d8-a9f9-0bcf06c62d5c"
        },
        "item": {
          "id": "e8b59488-a1b7-4fc9-a8b6-b8c336335f6a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "761bf801-e62b-4a84-a548-32856ca70d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d013569-f1e1-470c-aa86-de7e17bc4189",
        "cursor": {
          "ref": "d473ca14-1795-4366-a19a-acbd129eb8e8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9699c55a-4468-44bd-af4f-88e6179090db"
        },
        "item": {
          "id": "5d013569-f1e1-470c-aa86-de7e17bc4189",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "21c6e770-1310-4b18-b466-dee598d488a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81724e04-689f-484b-92b5-740b8c8ea678",
        "cursor": {
          "ref": "e1fb01a8-8971-47ff-8392-e0df41c080dc",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ee77f56e-33a3-45c3-9b27-a917fc118d58"
        },
        "item": {
          "id": "81724e04-689f-484b-92b5-740b8c8ea678",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "61e9baa4-80d4-485c-be3b-0bdf3fcf0cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cb8979-92d9-476e-867e-398511fc0b11",
        "cursor": {
          "ref": "50b804f5-bbed-48be-b314-d56b10fe4cb7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f335f1e9-8f0b-4cb7-af55-091a4cfc3176"
        },
        "item": {
          "id": "b0cb8979-92d9-476e-867e-398511fc0b11",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5a59fec4-c3e5-4c08-a151-3328e52ba599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4ace69-4f40-4307-b8e5-50af74b4ebf3",
        "cursor": {
          "ref": "2a8e7aec-9a31-4c89-b1e8-4a63e7cbd0e2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5e5c5976-f5af-4688-a969-937585fc02d2"
        },
        "item": {
          "id": "0b4ace69-4f40-4307-b8e5-50af74b4ebf3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "47cec4aa-4563-422a-9a7f-3e0b1ef02e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46fe2b5-c4e6-453d-815d-598fca5b9be7",
        "cursor": {
          "ref": "d9a3ebe9-f3b3-4727-bcda-7d0c89352c0f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f290eb9b-be60-4a83-a285-e5bdf55aa62e"
        },
        "item": {
          "id": "f46fe2b5-c4e6-453d-815d-598fca5b9be7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d4d65eaa-749c-4975-b6e0-ca8d7f4e46fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32d9b22-767f-47bc-bd9a-7c180e280742",
        "cursor": {
          "ref": "c36d11ef-a294-4430-b413-19933ffdb71c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "80873474-e7a1-464c-b279-335bdeb5e967"
        },
        "item": {
          "id": "d32d9b22-767f-47bc-bd9a-7c180e280742",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b5ddee7b-64d5-4b06-a0e6-01966d3fcab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f2994e-89b4-4415-880a-e8639e1692c2",
        "cursor": {
          "ref": "3ec47539-384e-440d-a84d-b99f06d1dba7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a7b147dd-6aa0-4500-af2d-c4074ca50634"
        },
        "item": {
          "id": "74f2994e-89b4-4415-880a-e8639e1692c2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "143a85fa-6eb2-4ac0-a0ae-621df29d4beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacfbe0e-ae6e-416d-83a9-a726b9674da3",
        "cursor": {
          "ref": "50f5b67d-1d5e-48f9-9d35-622c1fc46bdc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "aaaadc63-b2e3-4dd6-abe5-bfacda1d348b"
        },
        "item": {
          "id": "bacfbe0e-ae6e-416d-83a9-a726b9674da3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "98a6542d-189c-498c-9b66-7e6ad38984ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15bd4e8-4e0d-462e-900e-c02cdf52fd30",
        "cursor": {
          "ref": "880160f1-9c60-4359-9ed3-684d676f75fe",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b1055793-eea8-4a5a-ae18-ef9930f3960e"
        },
        "item": {
          "id": "b15bd4e8-4e0d-462e-900e-c02cdf52fd30",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6ba297c7-0757-4139-86f0-1f1ade9a3c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2422e1-4863-4922-88e8-590309a0a433",
        "cursor": {
          "ref": "2f72595f-814a-4940-8831-fb16dffc02e2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6688b2f5-2532-44aa-8740-32619da76794"
        },
        "item": {
          "id": "8b2422e1-4863-4922-88e8-590309a0a433",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "90fa07e5-61f4-43f0-9e21-422027f1f1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3199ca5-e5af-43e9-a33b-e13affd6afc0",
        "cursor": {
          "ref": "1013121b-4db1-49ae-b947-145631d58f16",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6d426dee-282c-49ac-b483-4ca8ee53e36b"
        },
        "item": {
          "id": "b3199ca5-e5af-43e9-a33b-e13affd6afc0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "03732902-ae3a-499a-a4f4-250e992f4185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c52da66-e491-451b-ae0a-55f783e7e9ef",
        "cursor": {
          "ref": "96f11703-26a6-4449-b81c-e4802a9737c8",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "611497ae-bdd2-4497-a5a6-b0dbe7d1fdb4"
        },
        "item": {
          "id": "2c52da66-e491-451b-ae0a-55f783e7e9ef",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9b30309d-1fa6-4fba-8592-9507075f1fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ca9f74-edc8-4599-9a02-6e4d67bdb718",
        "cursor": {
          "ref": "0b756539-99b5-4698-9ab8-757002a2c1c7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66775eb5-e965-4bb2-84b8-5ca39ed64ef2"
        },
        "item": {
          "id": "18ca9f74-edc8-4599-9a02-6e4d67bdb718",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c4d46429-8428-486a-b208-5eb0748e0118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a899bb91-28bc-4d35-9686-e7bcad7fcba0",
        "cursor": {
          "ref": "8ec2e4bb-45e8-4217-aa89-96c6d66d9a75",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9dc60ffa-92f9-4e69-bb99-31c46cadc968"
        },
        "item": {
          "id": "a899bb91-28bc-4d35-9686-e7bcad7fcba0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8e9aa0e5-4b9d-4fe0-be62-2101adb8848a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55276e7-6aff-47f6-96c9-e98fa525a04b",
        "cursor": {
          "ref": "679afe84-9d19-4c0e-83dd-b779c91a673a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "46f415f7-2fc4-4f74-8f65-8f8714b9394c"
        },
        "item": {
          "id": "f55276e7-6aff-47f6-96c9-e98fa525a04b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "612be1f7-59c6-4736-844a-281f4c394473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9d344a-414e-4dbd-bad5-f771fda3e898",
        "cursor": {
          "ref": "ceb137cc-f6cb-43f8-a3dc-0416bce0ebf6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1ab9f737-1d26-4b69-a936-f70c9bd28f43"
        },
        "item": {
          "id": "3d9d344a-414e-4dbd-bad5-f771fda3e898",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "61a09efa-ccd0-4703-8c55-95e205ae6792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d76ba30-d436-4c8e-9b4e-db5d7397f1a7",
        "cursor": {
          "ref": "26fd1bd1-73f9-4721-96ad-0dab86e5a178",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5b3aad41-0f91-4a9b-a154-126c8d8ee76b"
        },
        "item": {
          "id": "3d76ba30-d436-4c8e-9b4e-db5d7397f1a7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "875cfb12-f2f9-445d-990d-4c6010b9887a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945e6091-20f7-4216-b855-9c41647436c7",
        "cursor": {
          "ref": "828cd911-fb3a-4b99-8b7c-a367fa567e2e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e89f0750-b390-47e1-98c1-6202f6d14982"
        },
        "item": {
          "id": "945e6091-20f7-4216-b855-9c41647436c7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e25a8566-b015-423e-b2f3-d09f5bf526f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a6ee66-8045-4e61-b319-bb4bc7f10fb6",
        "cursor": {
          "ref": "26518e97-3c34-427f-ba10-cbfd26645bfe",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "372a7967-228d-4773-bff0-582dd38177f5"
        },
        "item": {
          "id": "c9a6ee66-8045-4e61-b319-bb4bc7f10fb6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f415547f-730d-49b8-907b-5342679da407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ffd431-da45-4c80-9c24-ff0eb3783150",
        "cursor": {
          "ref": "a64ae5b7-8daf-4a0b-8dbf-ffd75dc721c5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7a1f7c09-572a-4a1b-bb78-5a394223d4c3"
        },
        "item": {
          "id": "f3ffd431-da45-4c80-9c24-ff0eb3783150",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "71411ccb-5794-465e-add4-5a766e18c399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a3e56a-861d-4900-b2c5-97177c58d33e",
        "cursor": {
          "ref": "a4a75704-5fcc-40b6-9a2d-da47bfe98b6f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8f6700eb-1632-4514-804f-2310b073bcfc"
        },
        "item": {
          "id": "81a3e56a-861d-4900-b2c5-97177c58d33e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b39eedae-a39f-4c7f-81ae-cff7c71735b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b3d34d-4d7d-4d23-a55a-67518dcb3c2f",
        "cursor": {
          "ref": "e7ccfc03-901c-4ddd-b85c-6f43745b0e4c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "66566435-0efa-4072-a79e-850492357702"
        },
        "item": {
          "id": "03b3d34d-4d7d-4d23-a55a-67518dcb3c2f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cf0a9d56-e812-48ba-a16b-11a957b77453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdad5ead-ad23-4dc9-b2d6-f01b4772d4ac",
        "cursor": {
          "ref": "d26b27ff-0144-43fb-b233-3769992c4440",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "af28a27f-e770-4472-9795-305b3c77cc37"
        },
        "item": {
          "id": "bdad5ead-ad23-4dc9-b2d6-f01b4772d4ac",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "651d5802-9257-403c-9dbd-fe9366cf8bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202b1cdc-c696-41a6-b403-192e08ca5024",
        "cursor": {
          "ref": "57df549c-be39-46bf-a3ed-ab71599586fe",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2d25b1a6-4be4-4928-91f6-f869eb538894"
        },
        "item": {
          "id": "202b1cdc-c696-41a6-b403-192e08ca5024",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "22be1178-8334-4d86-b17a-88fd0168851e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee26c915-0136-43be-b1e4-5e3c65a64494",
        "cursor": {
          "ref": "63ea9714-cec9-4f9f-bac7-68bf84588017",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b4869fae-262a-4282-afaf-9628973f60a0"
        },
        "item": {
          "id": "ee26c915-0136-43be-b1e4-5e3c65a64494",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e8e16e46-f2b3-4807-a9ec-3da8b437cb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07d5ca5-7e5b-47df-96ee-ed74afbc3cbf",
        "cursor": {
          "ref": "f48766e0-8a47-464a-ae01-14e136d71786",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ab18ef8-7c44-452b-b1cd-5d9d9e851ff7"
        },
        "item": {
          "id": "d07d5ca5-7e5b-47df-96ee-ed74afbc3cbf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a83f1bf4-35d0-4c84-9a7c-e066478a4e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b8b2f4-ca54-4151-b26a-089e92eb9bd9",
        "cursor": {
          "ref": "7a95912e-0e56-452a-a1ef-97c13f5eba65",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fed6259e-2159-4eab-a08a-b548c74c57eb"
        },
        "item": {
          "id": "31b8b2f4-ca54-4151-b26a-089e92eb9bd9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9e9e85ab-5e17-4fd4-8745-0bd92fe05023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3871da81-db93-45ca-acf0-2aeb79322166",
        "cursor": {
          "ref": "7ffee064-7220-4d3d-a6ce-0d863b00cb07",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6526ec41-dd82-4b27-b7de-e95b861c063f"
        },
        "item": {
          "id": "3871da81-db93-45ca-acf0-2aeb79322166",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f1c23920-c965-422c-9971-8065b26a179a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70acd4f8-4c46-4f49-928b-d066c4b3af76",
        "cursor": {
          "ref": "d02b1175-d2c0-4a8b-b8b4-6659434f0464",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ad145d34-7529-41db-bf07-0a7d5f003529"
        },
        "item": {
          "id": "70acd4f8-4c46-4f49-928b-d066c4b3af76",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8e89c23f-a496-4989-9325-371174e68042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14173f68-2db9-45cf-a054-41b18d346aaf",
        "cursor": {
          "ref": "e6f28eb1-c641-4a30-ba75-92dc3e3ccf4c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4e0916a7-f9dd-41ca-b02d-64895bcb201d"
        },
        "item": {
          "id": "14173f68-2db9-45cf-a054-41b18d346aaf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f2232191-033f-4cdb-b90f-5fa56b4f6ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afb47da-0347-4cf4-aba4-487bee0af05b",
        "cursor": {
          "ref": "5d72c927-d287-4ae9-9132-687300e1e93e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7a1a699e-cc71-416b-aed2-430e68dbf797"
        },
        "item": {
          "id": "0afb47da-0347-4cf4-aba4-487bee0af05b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "662f53c0-c518-494a-8ef7-1ce7815bd51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224e2081-c944-4ace-b012-1359806343bc",
        "cursor": {
          "ref": "cca16df9-d76f-4854-91f3-602cad52eb33",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4792a0b2-6822-4100-a208-a7b674cb90af"
        },
        "item": {
          "id": "224e2081-c944-4ace-b012-1359806343bc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b20b46e3-9528-4c6e-9190-73b1c38baff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539a4008-6c92-4859-b41c-4c79235cf638",
        "cursor": {
          "ref": "7e3e8184-fe08-4552-8ff3-8b7dd0a6c627",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5c54e8a9-792c-49fc-97b4-510e519375ba"
        },
        "item": {
          "id": "539a4008-6c92-4859-b41c-4c79235cf638",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "55c01c3b-21df-49de-b6c4-cc420693ceb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24aae8a-7cd1-4a54-a332-8fc4e8e9d5da",
        "cursor": {
          "ref": "f47321d0-c665-4008-b8b3-310e35019591",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ff52d66c-4fec-4aa2-9953-734d6a470b4a"
        },
        "item": {
          "id": "f24aae8a-7cd1-4a54-a332-8fc4e8e9d5da",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2b17a702-c2c0-486a-b239-cf72b1f2b54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70421321-7567-4e20-8aab-77ffade979a5",
        "cursor": {
          "ref": "827f481d-bff1-4e3e-ace9-956918460aa1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "16864a22-c0bd-4fd0-a864-39889737618b"
        },
        "item": {
          "id": "70421321-7567-4e20-8aab-77ffade979a5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f075d8ad-b098-40af-941e-696fd3f73001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e29e190-587f-4476-bcb9-bd6660f86d0b",
        "cursor": {
          "ref": "1b2eec9d-5dc0-4be0-aefb-07309685fedd",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d00cab18-ea5a-447f-8ec7-b9b616badcf9"
        },
        "item": {
          "id": "4e29e190-587f-4476-bcb9-bd6660f86d0b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "249c9fb0-e504-42c4-807a-ee5260d3634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68febd4d-a586-4bd2-8734-1d24c80f2dcb",
        "cursor": {
          "ref": "2799b443-fe9f-43e0-acff-3f7bb85f27b2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c9852a93-30ff-47b4-84fa-5085975a3558"
        },
        "item": {
          "id": "68febd4d-a586-4bd2-8734-1d24c80f2dcb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f464f32b-3fc1-45fc-9652-63e47b8edb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88ad1c6-9e09-473e-ad12-b8f56f75c8f4",
        "cursor": {
          "ref": "f3af2905-f530-4249-ae60-a70bb535510e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1c0d48cb-6e18-46f9-bcb2-debaea052072"
        },
        "item": {
          "id": "b88ad1c6-9e09-473e-ad12-b8f56f75c8f4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "38407101-92a3-45d5-a1f9-11c268370087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda5c83f-0a9b-42fd-ae34-931523ee2504",
        "cursor": {
          "ref": "a84383f1-a717-410a-90e4-42cf9cff08fe",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8f19608b-a051-43d8-83c7-8645ef08436e"
        },
        "item": {
          "id": "bda5c83f-0a9b-42fd-ae34-931523ee2504",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e2a290da-90ff-41aa-bea6-41c4ec8820a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfea524d-1681-42d9-b3e3-5c627b03ca7b",
        "cursor": {
          "ref": "abe95edc-8b2b-427f-a962-4556edb23a2c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9535d1d7-4b8b-48f2-8205-83986be2f91e"
        },
        "item": {
          "id": "bfea524d-1681-42d9-b3e3-5c627b03ca7b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7ce8aa21-58b0-4efa-9847-eccc0a03523a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b72479-fb4c-4dbd-b404-4bfe0ca15eb5",
        "cursor": {
          "ref": "6a0ee66e-fbbe-4f59-9c40-4ae663e244b5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "331a4c70-8027-4524-9ca1-29822296bbee"
        },
        "item": {
          "id": "30b72479-fb4c-4dbd-b404-4bfe0ca15eb5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "198ebfa5-0ba9-4df8-a847-c86870f8763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0f8285-7d89-411a-b2a1-b3a191bae3ce",
        "cursor": {
          "ref": "254faeb4-b091-4806-a652-bd3e0379a763",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4b0c39f7-5b7d-4f8d-b497-37b4ca9972ea"
        },
        "item": {
          "id": "cc0f8285-7d89-411a-b2a1-b3a191bae3ce",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d06f0e9b-45a1-4d31-97ae-9b876abb475b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec57eb9-d34e-4c7c-a22c-5286fbdc60a0",
        "cursor": {
          "ref": "2a9a6ec9-65b4-4ce6-8b93-cbabb35bf3ad",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "82549cc8-25a1-4b30-8bf3-70a1cb9356f7"
        },
        "item": {
          "id": "cec57eb9-d34e-4c7c-a22c-5286fbdc60a0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "00c3824a-2adc-4161-bcfc-574eca662e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796ae907-b75d-4e97-9e69-fac3ac677044",
        "cursor": {
          "ref": "f1ceca50-4699-4da9-93a0-199f3f51b360",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "14d92c32-13cd-4f41-ae92-5a34686cd181"
        },
        "item": {
          "id": "796ae907-b75d-4e97-9e69-fac3ac677044",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "360ca489-2b1f-454b-af23-a043c0cd4190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b8c18e-1035-4ec7-a331-9ba3d5ad2d37",
        "cursor": {
          "ref": "0f4075c8-442c-4fd9-92ca-ee493f19c850",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0493aa4a-41d9-4f6e-845d-55dbf3526c46"
        },
        "item": {
          "id": "d1b8c18e-1035-4ec7-a331-9ba3d5ad2d37",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4ae9c531-7cbf-4552-af57-d2bb2ac63b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e92ea0d-07f6-454f-8076-48433f27eeff",
        "cursor": {
          "ref": "d49d3b82-7b35-460b-865c-af325e0b347e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4063278c-98c6-4094-9980-06f8965e424c"
        },
        "item": {
          "id": "2e92ea0d-07f6-454f-8076-48433f27eeff",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ce5a92c1-7ba2-45d0-b645-3d29491c31be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f811b26f-5e4b-4441-aa43-1a4884b5471b",
        "cursor": {
          "ref": "52510580-f892-4d59-8bd4-c08488bd9c79",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "17985348-8103-4b81-87e6-d50dd2e98e08"
        },
        "item": {
          "id": "f811b26f-5e4b-4441-aa43-1a4884b5471b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eff024ba-f068-4450-8b9c-51e09eec7408",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db031202-8446-46ef-8a40-b90496501da3",
        "cursor": {
          "ref": "661f279a-6815-4a22-9c76-1032d71944bf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "392b516d-b751-4e51-b8d1-dced3aa62f3f"
        },
        "item": {
          "id": "db031202-8446-46ef-8a40-b90496501da3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1ba3954a-3529-4356-acda-d3bdfb218e68",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ea658c-d7e9-4e42-90f5-079adabf98e3",
        "cursor": {
          "ref": "9ef81e94-0fa5-47a2-9178-2b644f1f2087",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "36246789-203b-414e-8e09-cbda748fcf80"
        },
        "item": {
          "id": "e8ea658c-d7e9-4e42-90f5-079adabf98e3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0b918a37-9d99-43ed-be31-8df7df60166a",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "265cb564-f368-4543-b97d-db3ac6d3eab9",
        "cursor": {
          "ref": "a33cecc5-2f48-4af0-8e8e-b1d05182aae5",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de8abc33-4458-4e7a-8132-8752d24495fd"
        },
        "item": {
          "id": "265cb564-f368-4543-b97d-db3ac6d3eab9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e5383d48-65d9-449b-a05c-f1b60bf6645f",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5037d20d-8e38-463e-81b4-2e099d02301e",
        "cursor": {
          "ref": "4b40b7ce-6a3a-4693-a328-9391b8fa2c7e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c7505b26-9938-4d7d-adaa-91a0c862453d"
        },
        "item": {
          "id": "5037d20d-8e38-463e-81b4-2e099d02301e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b26f0635-fc23-4698-bf17-73a848fa094f",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cd1e0a-3ee8-4267-a011-6f3a502fc610",
        "cursor": {
          "ref": "f44bd78b-7aac-4710-b789-72a920431337",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bbee3757-9dee-4951-b31a-ba9e96b9764a"
        },
        "item": {
          "id": "f5cd1e0a-3ee8-4267-a011-6f3a502fc610",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5578c9b-0094-463b-9a79-47e311e22109",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cd1e0a-3ee8-4267-a011-6f3a502fc610",
        "cursor": {
          "ref": "f44bd78b-7aac-4710-b789-72a920431337",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bbee3757-9dee-4951-b31a-ba9e96b9764a"
        },
        "item": {
          "id": "f5cd1e0a-3ee8-4267-a011-6f3a502fc610",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5578c9b-0094-463b-9a79-47e311e22109",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cd1e0a-3ee8-4267-a011-6f3a502fc610",
        "cursor": {
          "ref": "f44bd78b-7aac-4710-b789-72a920431337",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bbee3757-9dee-4951-b31a-ba9e96b9764a"
        },
        "item": {
          "id": "f5cd1e0a-3ee8-4267-a011-6f3a502fc610",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5578c9b-0094-463b-9a79-47e311e22109",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdbae8c-b597-4802-b3de-e4c72307998a",
        "cursor": {
          "ref": "c6d7f352-7107-414e-9af8-818966d7ed8d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f3b239fb-6e9b-4d20-897d-576a20bfded8"
        },
        "item": {
          "id": "7cdbae8c-b597-4802-b3de-e4c72307998a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4be9c99f-5426-409a-a00f-5e74911fb9c9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541437b9-a0c4-472d-b685-457a37d3a76f",
        "cursor": {
          "ref": "18f46ad5-bcc4-403c-9abf-ac1e2ded9e2b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a41e5f1f-3b39-4379-8891-6f08385184e1"
        },
        "item": {
          "id": "541437b9-a0c4-472d-b685-457a37d3a76f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f33ad4a-1c32-4544-b107-c17aef5d330e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541437b9-a0c4-472d-b685-457a37d3a76f",
        "cursor": {
          "ref": "18f46ad5-bcc4-403c-9abf-ac1e2ded9e2b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a41e5f1f-3b39-4379-8891-6f08385184e1"
        },
        "item": {
          "id": "541437b9-a0c4-472d-b685-457a37d3a76f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f33ad4a-1c32-4544-b107-c17aef5d330e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711d83c9-037f-4f67-8468-2c232daf2cbc",
        "cursor": {
          "ref": "da6f495b-9be1-4019-a79e-dc377603ba1a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "536b8a55-3def-4bb0-83cd-392df950a5ad"
        },
        "item": {
          "id": "711d83c9-037f-4f67-8468-2c232daf2cbc",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b2ee9215-1e18-401c-b785-f9c8a0e6cfb3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab645255-55e7-4759-b117-d8c5233d1f4e",
        "cursor": {
          "ref": "8a514ecc-384f-408d-b4d6-9873c6435397",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1fc2db3a-f775-47ff-8730-a257410cd1d4"
        },
        "item": {
          "id": "ab645255-55e7-4759-b117-d8c5233d1f4e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7b6e0571-5502-4731-9239-194d7ebb4450",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab645255-55e7-4759-b117-d8c5233d1f4e",
        "cursor": {
          "ref": "8a514ecc-384f-408d-b4d6-9873c6435397",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1fc2db3a-f775-47ff-8730-a257410cd1d4"
        },
        "item": {
          "id": "ab645255-55e7-4759-b117-d8c5233d1f4e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7b6e0571-5502-4731-9239-194d7ebb4450",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0ebbaa-306e-440f-b2af-0f88e7fe076f",
        "cursor": {
          "ref": "17f1bae6-452c-4d94-af51-c43220bc90fd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c48e6af8-136f-4ade-be30-29f532d1d272"
        },
        "item": {
          "id": "0d0ebbaa-306e-440f-b2af-0f88e7fe076f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ac70fc6e-214a-479f-b415-49c25e7b2713",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}