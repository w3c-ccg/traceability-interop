{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dc71a8a1-156e-49c0-bae7-705eec76bde3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c91d6379-6caa-41cc-8be9-2591e5a41eaa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83605538-734e-4371-b3ab-03f566e607bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2bf30710-065d-48d0-a140-ce1e3171d117"
                }
              }
            ]
          },
          {
            "id": "53d89638-dc1b-4fdb-8193-538eba66660c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7c6a775-bc24-4b78-a06e-5fd787c139bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "54d09d8a-33b5-4053-9702-3cd14b8bfb6a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9609381e-112c-4897-a1c0-05c1ce9b90e0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "07512dfc-9611-43f2-a489-633bbecb029c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8147f833-1fb6-4018-bdfe-1765126e6dd5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f6b377a-fcdc-49f1-a284-4a568b22fd30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e3c85c8-0ae2-49b1-9aeb-621c29e3f27e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de43e039-ae38-4246-b4b8-208b1e4e2f9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "096525fd-cdc1-4b10-a44e-983257f3b389"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04e4eaf4-7537-44d6-9f18-d0cf83f105d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c5026c3-2cf0-42bb-bf21-7a41ecf3b0ca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3213e386-bda4-4631-a4f2-dcfbbd782bd0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7ca90f89-1a75-42cb-afd7-767bf7f4193b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ce8b9f8-525c-44b4-a8bf-108f3edd1a6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6838366f-044e-41d7-bfb7-397208f73daa"
            }
          }
        ]
      },
      {
        "id": "6fb07c10-7b96-47f5-a4fd-ec7efe7e1cb4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2e10ac2c-b29c-4b32-99cd-d911cdcdafaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0869431-2cee-47b9-a406-3955daf230f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7327ec11-30ac-4140-ba3c-ed9cc410295b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01118fb7-b57e-4412-8c0e-2e7d5709aa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65dd4e32-6c2a-45cc-bf65-c7e6bf8c00d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647b16f4-44cb-4209-8295-25dae7e552a4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a461ccb5-9977-4fb4-9e76-8d16c5ba60db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db2991f8-60c8-4db5-aac8-6d2e94f6d760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78651497-55de-42d5-a4c8-8f5cc3bfae6a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa34ec89-f93c-4f22-a031-e324c10873e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "900ddd96-0bc2-479b-a2a4-677a06bf4ace"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3fb3789e-3092-4f17-8704-67af5c6ebf3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c3061d6-229e-4f63-95a0-5c42cc3193e0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70967ee-cc28-407d-a7c3-780d5a0d021c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a40d173b-c6c3-4d1a-8c7a-b403f4d5858c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ff0b4b-2cce-4578-891d-54eb61ecc94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576506d2-b5fb-4b71-ab06-4845d434498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af56368-704b-45be-b73a-ef5bd36ca073",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2045dbc2-3172-47c0-8a3b-abb7f88934ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da85b195-012b-4bd5-ae2a-c39ac8a3d47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb92d37a-fa29-427a-a21f-c99672b72630",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3f2e387f-b982-4b94-95d6-fcd977edaf25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b074bf87-e6e4-4ed6-8316-9add9540e339",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5dddc97d-92a0-4f52-aebd-a25842b18b19",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39361e3d-8935-4222-afff-d8bdafadc0d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b26396aa-2af2-44d9-8d8a-9489339ddec4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcb84394-7c8f-46db-a66a-2d05625e045f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8af86aa8-7007-4560-bc1e-0709c033e2fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a8ed5fa-c907-4eb4-95c6-9cc2df6c5b22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "257d8704-37e0-4f1c-acb7-072c92f4abeb"
            }
          }
        ]
      },
      {
        "id": "4b5315e9-e9e0-42c4-a4ce-217fa3610448",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "23dbc78a-6011-46d6-b571-8f51cabf0d30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e425625-8713-4656-83a1-b6981bc19d41",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eff14ec7-e855-4eee-be45-414a28537b7a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33113d77-c820-4879-b030-d35f4f2d0169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00a7506-956b-4387-94f3-e86e13faa6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494c7edf-915f-4c9e-826c-dbba27b0725c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f1ec308-34a0-4100-bdbe-c3b58675f090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ecefd6-4dd2-47bb-8d90-5329d0a6ca1f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87570e6e-a58b-4ed0-a341-d30eac12b150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8907970-ec98-4013-827c-83af8bea8b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d57bca9-a87a-4cac-bfbc-c533324f957a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b5f9053-5388-4c88-ace2-01062d0f4d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d28e593-6007-4425-bd03-4062d496ab12",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773a16f1-937b-4015-a587-4701775f4a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8862126-3ec8-4476-bf1a-219a36196072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492bc3ec-e5c9-430b-9856-f1871929f9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7d22ef4-e6f1-46a2-893c-ee0b5978c222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0873e7-fceb-40c1-b8d4-7d07593cd8b9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e450b3ed-c492-4038-aaa2-4d5cb768cd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd3337c-d485-4eb5-951c-e9a5e6c85352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea7f632-4be5-4940-a945-ad15cba72815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "923ab72e-3c88-4a08-bb0f-430a0589fdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac9756a-9f42-4b43-967f-edb594f148ea",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c035459f-8319-4cc0-bdfb-7cfcccebec10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2804ffc6-eba2-4926-942f-bb312f88cbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c91edc-1aa6-4234-8402-aeb1f7773af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71ef951f-31e6-4402-bee0-e34294af32c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4785a9e6-962e-49a3-8431-480a4f9929c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab10bf4f-ae1c-49a1-b747-e6560e0f33c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bd1ddc-0b54-4684-89b6-2335a1a74ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b589a9-5798-470b-84ca-b7f64501a5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2265269-4b28-4e62-b70b-3893ef7107d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5a9261-1119-4fa6-b4e8-fb991acb2557",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f005f00-69d5-4257-a0b5-653a539bb87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a84a177-0653-418a-98ab-1c4f5359eb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a119ca7c-91c7-4b87-b2ee-5b8921b4c4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af4e3e5d-245f-4747-880e-7a102dfa7985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b7a54a-6166-47c6-b150-0d69bac44709",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957e7ca5-b309-4606-b319-ee0a34e122fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68de031-1405-4ea5-be9e-3c230ce5dae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f57f3d-6379-458b-b862-620288d13757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "069a64b2-611f-4347-94e7-4754e9b99ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c8cd68-629d-4635-a5eb-f8d6c2446d6a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b68580e-8310-4a0c-9679-f5cd0b03644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61a3903-1c53-438f-99d1-c90f827b66a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907e8baa-56f8-42e2-8f95-89fa7a80bc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b225cbc1-e32f-4c60-af27-df80141d6a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0819394a-e5e8-4b8c-b5bd-94b89d8e72a4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e0dd6e-4757-429d-a509-e48a3c850145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41d3040-2dc0-4cd0-b2d8-05667e321986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f498a70-5c2a-4c5c-9daa-ebf6d030ad63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aa7581e-3b5f-4d33-8c5b-5ba57a7115cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99740379-1465-48e1-a1f0-53a3e32b169c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb25ff09-78ea-489b-a5f8-f7e08dd4d8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d06102-e262-40c1-bef8-11754d63136b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0713e527-4d9d-4341-af72-f61b2dcc0f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a552dfbe-11b7-4174-836c-707b52948c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ef4379-6a7a-4bbe-9142-efa36a544e5b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f636e24-a2bb-4d5d-a5d2-751747fad3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9d7f4a-bec6-4f6a-89f5-d62d092748b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c016014-08e9-4f03-9545-160a08269b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5542ce3a-205c-47e1-8005-60df08f6ed69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23664fab-c403-46e2-bd49-b1881757d0c0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f209c89-ff67-467b-9e3a-c1ddbd17bbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a560f489-418a-46d5-8cf7-7f420d0991ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5353ccf0-7c1b-4c30-b33e-bfc582e845ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2695cecb-541e-465b-a146-59dc6fd91695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738ae101-88e4-4c58-932d-a831febede86",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9accc4c-cbfe-48e7-ae8f-c4b2d4185ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d7bc38-9901-441e-b4aa-62519483c482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a5fbdd-4157-4fff-811a-90e5562baff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e65547f1-1094-4070-9ee1-13dfec0d951b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9363724-1aa6-4748-ae80-47161322e670",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b75f27-fbde-414a-b743-6ec4eabf76f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84dca2f-6a07-458e-8b28-05bdf9cbe699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7901e5cb-22ec-4a0f-adb3-1dc44d2e4a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1015e4d5-48a5-4233-a8f1-255102dcd192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8c3c49-5be1-4859-b8c2-b5159da1545f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301d32da-4bca-4584-8c3c-d70ffe58a463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9771d535-de5f-4d80-9680-765de84515fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d22005-63b9-4118-97c2-06eea0d69e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a57eccae-9a94-4569-94d1-f654ecce5494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c3f25a-4537-43ef-af4a-01f5a83f8ee6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a092d2-8032-4ecc-8f14-855d0fc5a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043c03fe-36c4-4885-bd26-613748def1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ee9f3b-a981-4493-b7c5-2d0ae9bba3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2218fe08-c5af-445a-8df0-f9818f8959d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aed8a59-2bf7-4c47-ada4-1ce6473cfd69",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa663c3d-e8a4-4be3-bb6f-db7b628e82a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f252dcfe-413c-4ac1-ae81-9602a9199e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3218d5-0507-46f5-b7e2-8951664d3368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1933ae7e-2623-413f-afa8-9db2a0ea357d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ea32cc-0599-4a0e-8ea9-c74418de6c1a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e019f61-f0e8-4b5b-bc70-49bd9b74b05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dc4a00-c2cb-42e6-b221-99b29988c180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14812e59-294f-4157-9ff8-29dc195f1b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d62cec-4eda-44a8-a52d-8ceb2928de17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5a20dc-a783-4dbc-b1c3-5567b7c9719d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75317a8a-f1b0-4e1a-9e67-49693ce2bb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc4763a-66b2-4708-a033-a53260b33005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c776f4-acd2-468e-b9a9-517e7b56230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "066023e2-0794-480a-85f8-39e338636d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee43962-8742-44a0-9cb5-cabdc6e7ea6f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0787c7b9-80ab-46cd-9104-8ed97a52f49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d9dab3-370c-4168-b76d-e1139eb8a1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d790e6f-ccd9-4302-8be3-f5d0fda0b888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f481a0-10ac-4d6e-9d65-0c351e765331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e631ed90-5412-4e5e-a0dd-82804a6b769c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14808b8f-0358-4630-a381-e0b67b2e644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211bba27-58b0-4292-be73-c9d5789bddc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c143a481-8ad1-4d3a-9e6e-ed04d14a3395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "373b8bb3-e35c-4b88-bd69-9d5e8f22b376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a08714-fcd0-4b5b-8807-6225e834a0e6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86a7f7d-4224-49cd-a093-18528808db54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcc162b-8032-4589-9901-5f5a86788052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd39e21-b331-425b-8849-b648119b6a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "622cc953-dcef-4e53-a9eb-cf58609f63c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc2a3c9-0672-41ac-b4e2-34789fda2762",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3e6fab-ab65-4ba6-86f1-2e59bb9a70db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2822b4f-623a-4140-b508-d1df11183489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec65fdc8-c387-4aee-85ee-ab7428b2c524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f91b3bc-2c49-4f81-959e-b4a42bbeceaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1c1a69-af52-4465-a9e1-9db1975f54ea",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0657b905-1b06-4304-8e16-646c9eed2a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27019c31-06fb-4aa2-9f71-bebc758e6895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645e9aaa-bd5c-4568-a134-62278b920beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4ed6a7-7a86-47e5-a0b7-15a4b47bfeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252bf27a-f78d-4019-bf06-58d8791c9f13",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b195257b-a593-4e6f-8594-c47e822e17af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b42796-01a8-4774-9460-7ef6c17fe937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1e35d0-afd1-4d71-b668-da27ff7458f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6246626b-8b46-4ddb-84cc-3b3338897e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426bd89b-d587-410a-8546-4cf62a38fdd1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ee6789-12ed-430e-a5a0-7bd909aa10cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2387d89b-33e1-4810-a86f-c10e04fd9ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa4109b-bf98-4b07-8405-685b25aaf9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e939fd3-6e48-4acc-9f12-1e9a1bbd9332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a4d1f0-d414-4112-8347-beb0795cdccf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86131ebe-37dd-4bd2-a1b4-399cc665eb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e05dbb-b148-458f-9f99-6d952bc75489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0bd106-0b6e-4ac2-b122-dadb1d991979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02402f0e-943b-452c-b184-2968375277f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c93f616-1bc9-4d1d-91c0-30dbf1218366",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260d944e-1251-43b2-8681-5ca2bb47e918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca4a951-5dbe-44b4-b140-770ca1da940f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc370fc-7e84-418f-a5dc-3d35dd5cd6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e333b32f-d076-4c8f-a4e1-ff8a669e04cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1335f5-08d9-48ef-b7b4-5bdc70948ccc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066cbd9-c37f-4dca-9270-971cd282ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207e06c8-2919-4a82-84e1-00b5d54218f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f2cbec-f460-4841-a66b-848bcec475bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef70c20-117a-4c1a-b10f-0c7c9a23552d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db67aa9e-4533-436a-82c1-34df7c27a9ce",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05228d2d-23f3-4985-9116-f12e987c55a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1b82aa-21b3-4f8f-b62b-16b76237001d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f46bc4-3b15-4b14-b2c9-f8369efa6d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "513b3133-c474-48ed-8b26-cbc8d1506119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3296d3f0-3388-490f-946b-822c67041cda",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361bd98f-b561-4879-95cd-30835dc8ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047e077f-809d-4152-be2d-e62627eb1f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeb45e7-2f46-475c-aa6b-9e563f280a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f17c899f-283f-419d-8439-88845f833cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b355131-cd7f-4818-a9af-3ddb4b7e7688",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93109918-16a8-4190-9a84-b7578a67b6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e64073c-7b1d-4b2c-823b-8449954cdbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4be6b6-dbd9-41e6-aa6e-3a56e2ecd583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80540b9a-47bc-48b8-96ab-5fb8172dbf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a3ff3a-c864-46fa-abbb-4b6c3f3f33f0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5d56f8-cfd5-4901-9cfe-979f3942a4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82652646-5cb8-4840-ab4d-d51c6290faeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca980b9-5eb7-454b-b984-bbff65cbb63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "628586de-cddf-40eb-a788-a3e9755475d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524e102a-5fb9-437c-97b2-920279370416",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd88caf-9bc3-4e66-a71b-5cfa58354647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177c5d30-fefb-4cfc-8581-3303f5927d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4807cace-8296-49d4-9ebc-0fcc56a89837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e868fda4-5760-48ac-82ff-a3f402fc151d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9965bb5e-effa-4c97-b8c6-29437abd0719",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f08889-14c3-43a9-91f0-710d84a4984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfd83dd1-da92-4190-a179-ea43031c7992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2d9fc1-48f6-4aaf-98da-bca420c29838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfe308b-9707-4e36-a5d1-96ae9c7f8fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eeaf81-2382-413b-ad03-19155b66d9a3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe88e099-24b6-42ef-9ec7-53a78f75c3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bc1582-7a72-4c60-b69c-5e87f59d2430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5744e917-805c-4b46-a3df-c29354887ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f052053-e3e7-455e-8b37-6175a50da2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbd46e2-a1ad-4e87-a3cb-8df9b9ae23c1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0b9245-ba8a-4d20-ac6f-94abf375b2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a4481f-f2e5-4db9-8489-496121ebdec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2273b825-a9e5-4be5-b152-17360f166456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "153a1155-d6c5-48e3-b2f6-7e1343a86c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7696b1b6-ea6b-4612-a71b-f4e3e2e7772b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6656c38f-de3c-4fb2-bf3c-14f195d2cb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74d3feb-9fb3-4022-ba74-ddc04b18bcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565564da-dcca-4032-8c1e-240915cd3faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a587d4-c8ce-427b-a5ec-6d2fb835c9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a287fa-a17f-482e-8a12-70b717f1cf06",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6729b0-b462-40a6-8152-206847c6ea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dcd68a-da5b-4797-af94-bb897a651784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530f60c3-c11c-46cb-9be2-733aeadf944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1de51f92-12af-42c1-ae6c-0a6e485c6198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0272b8-3fa9-4cf9-87e0-fbab032c6992",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd90a40-f3a3-485c-aad2-a90731548250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0133b41f-d599-4e75-ab9e-c8e4b8706a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89852e16-20ae-4d07-895b-0b40af675085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "181b1e28-1632-4b52-9145-5fa22ee81966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00559d96-9f1b-4a8c-99c5-118f2c6f93f3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36aff3b-c4fd-409c-b1ec-45e18bd70843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8401919-8800-499c-9549-106e0c2a360a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646a9fb8-93df-49d9-8162-4c14948f5039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5754a14b-311f-4c3e-8142-086de72597ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd1646b-93f3-495c-bf65-48f425f5ac2e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de22d9a6-5926-476b-ae5e-c020c9dafd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fc9d74-8386-4397-9d9d-50034487ee10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505dbea2-55ee-4655-b21d-31308f26928f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "32730a7e-192e-401b-bcb8-306d7e1ef415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e026a786-319e-47bc-b387-418d89fcd159",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a198d01-49ef-4c73-b62d-65068765785e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cf8240-4456-4d58-93c1-893e64a274c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29f252f-cf06-4c99-ac8b-9e9c299cf441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf13c6a-adc4-44c0-b29f-5dae46281909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8091d568-0279-41d3-bb97-ca3f852ba6cf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6074d60a-a2db-40f2-aadb-5b07c90f23a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fffd9d1-92f8-4b2e-ba2f-c5bde81372fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43aef676-1c34-4303-ac29-d4143c8eedfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec479cac-8d70-4a11-9200-bb2df719b242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f78951-5a75-4d8d-870b-6eb3191bc907",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7fc71c-40ce-48b5-be29-748887fbb475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86e1a45-22ba-4a2d-be10-b2de56b9f476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7795041e-572d-48f3-b28e-0cf5707b34cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b22fae-a61d-4e04-8aac-42b7f9feaef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ef69b1-6a4d-400a-b074-113012dc579c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761a27fa-4d01-455c-aac5-a93a61ac8aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67538b2f-0fd0-474d-9af7-cdb1d2efc4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e6e192-1a92-4226-a365-ec5d135d8d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5adbbcc2-33c8-465b-86a0-8bd216f7bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a521943-cd32-429e-975f-0d0a8411d036",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96bdcd0-c34e-4a48-887c-b18ed056888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991c3344-33ee-4331-b01e-d9998e4c776e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb26e81-b336-4492-a63b-f7cd782c6a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e61f275e-d78e-4979-9915-62154187bf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b320d4ce-7566-4cc4-97ce-d8a4b3e52cc1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764ff0d1-49c0-47fa-9bb1-c00e13e49be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fec356-05b3-403b-af2f-0d017f6efd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed4f7c5-f651-45db-8702-aa59650a1c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f06b70be-bea6-4334-b611-40297414f0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05439e7d-d4cf-408d-abd5-4ae396a31c29",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875e9d59-8fea-4055-8b84-09fd2bca9f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddb4755-20ed-43bb-a0f7-3c4063a45728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcedb577-527e-49d1-a654-e0c27af83785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "480f9260-350e-41dd-8c61-3204665dbbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb407370-97eb-467d-a4b9-4e955abf230a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa0a183-8ab0-4a48-8281-4093f5329bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94be881-ca75-4f42-a4fc-a4660319b626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9489be-c094-491d-af7f-ac8d47ca5214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e7f15c-1bcc-491f-99ed-674a1e9d2f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74139e4-7f49-4376-be00-84a2c27d30f1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77bb120-f051-4579-b0ff-098f9cd9ac3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2139d4f-240d-40f4-8b18-5081bd658809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a49de-6501-4cfc-93ee-1485fd50f619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9a1e6d-a7b7-44a0-95f6-a71335edd140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849f4357-7252-4c5c-936c-9ad4c528567c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aea478-af59-45df-b970-1efec451bf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95df1592-1812-47c6-baaf-2d65c86dfbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c8bf07-0305-4aa7-a87a-a3ef3f636821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55f47978-b8d0-4381-9120-fe05fa581e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e93275e-c922-4c4e-943f-b32d6a2514cf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb9efd7-3cc9-486c-827e-b2af497e41ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1971e567-884c-4f37-8160-197ec40a500f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfd7ca2-c052-4e40-8409-64d927b1b4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfbbfec-be59-4ce1-b2f6-740824b3ba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf9abdc-b6b5-48b3-8f73-02d591e1f877",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9de21ad-4577-4ce3-b2e4-dd486e01d182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465e02e9-fc7d-470c-b004-de51e322c378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118c3af6-a9be-4ec4-9c80-d732a4dfe129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c3f842-bcaa-4b3e-b2b0-fb63495c5be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4185e85-edde-4141-a001-8085e8618001",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b96b15-f1e5-4523-85d0-83d75d063e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a688442-6ee0-4ad6-b487-74f9a6d3cb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f70b435-6519-4c2c-9640-12d6d412baa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "60b029e1-7c50-4fc9-aaba-8a16eaba04eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19303740-5046-48d3-a72b-bd4832329907",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22b2a59-48fc-4dd7-ad7e-85ddbd8a8f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126d9c22-4718-4e4b-8457-8365b26a343b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d6f6c7-d149-414f-b0c0-3ab3e6c77e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "edee25ad-a96f-4b13-bb50-251d4260bd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485f3e4d-9e67-436a-9ab0-8ab4058cb927",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee8cc60-780c-45e2-9132-cab43dfbde7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef91850-c2de-428a-8935-bcc3899aca51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4c7609-85f3-49ae-a0ad-8b4d4b2907aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "261ec45b-709c-4a00-97e9-ff0f683afd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca31d8a-f79c-4449-bad0-25462a7ce485",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa4aa5d-05ab-49d1-979d-f7ee4dd7bb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e9e4fe-f250-4da0-bb87-296ae6fcc878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fa837d-92b8-48d8-b45e-3ef8689622be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba75265-ed8e-44ee-a1a4-60c73041ff1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a45c11-0af1-449d-bca9-2ae6df973f39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f6ce4a-90c5-411b-9efe-1af082643584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b741ea6-71f8-4361-8194-958e2fcd2fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd232c1-9323-47c8-87ea-04a1e462d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed957971-0c45-4f6a-b218-165077306c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489a7d53-2ff3-4fbe-80c1-98c90880de03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7642aa71-8c8d-4947-84f1-df73b10cb245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da243b1-3d7d-442e-ad88-011356ddb887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa98ccbf-a107-4023-9ce6-6f30b5be96e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64530e45-b5be-4891-b91c-2205c2248529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c0c905-cf73-4b04-87c9-8150c1d6406e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08983ee-e463-46d2-a679-33883f04ed15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc7f7bc-166a-4cd9-99cd-5c0d776a3893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a159ed6-e210-4ff0-a632-521f68b614ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2579fd1-793b-41a0-a4e9-64c80668b2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0cb74f-77fc-42d1-b539-583ad7a4973d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7543143-2759-45af-a46c-8669e76cd797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d6f536-98a7-4572-ab34-159ed3a6aa27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0c9333-203f-4356-9042-13dcef342f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e19e81a5-2096-4de5-80e8-5c2e2ff3a8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b689385-168f-4dbd-b4ca-b5669093a582",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42301488-5940-44b4-8e6f-7269a6f9fb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f52c0d-bd56-439b-886b-f79c4709bda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c4470d-fd00-46fb-8409-6466db52034b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "589b9ca5-00a7-47b6-ad4c-d1ec1b2a8f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad9d51-9132-4a94-aab1-495d436bab3d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7def47da-829e-496c-b7aa-6f9674cb8222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b94aa50-54e3-40aa-97d5-c0bae001eb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d0f184-3906-4a8a-81e1-0d99cd8836da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f43dda4c-d14e-4ca6-afda-0b6e951351b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2218a12e-d4d1-47e5-9018-cd06d84d5fc1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5d57f7-9074-4093-b25a-cb805f1cae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6feaf47-8b7c-4dcf-958f-63fd756942ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44faec87-69d2-4097-8ba9-0dc720562693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10883ac9-3614-458f-8c08-68d95cf312f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e9922a-1fa1-4f5a-898d-e25d339faebd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13a23e1-11d6-417f-ab89-829a718576b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13325623-2c3b-44cf-b636-0ddf8329833a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781aae2f-9d09-4e75-a8c2-0f9ca8a57065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99deafce-a86d-474a-9dc2-8b4e5c5f8927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badd7e16-d51b-43e9-9e7b-aabb8a0eff7c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c5f0a3-89dc-433c-ae2b-2949a7ef94fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b688e6-249d-4e77-b4af-3e984c1dafbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42abddd5-ecab-45a4-b5ab-722ee9866be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4edf3a-f7a1-4177-97b3-4a48dd29c3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ac325a-37d0-47c0-8a2e-d7b6737f8291",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc84c3c1-ad4f-4e10-9451-eec1071dd7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af23a66-88c5-4db8-842e-f30a84d6665e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0510adfd-6dac-4451-a54e-d0f3106f5245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "02c6c256-3681-4185-a5e8-62593174d434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b901270-0dec-4096-b177-bfdd03b2d2f9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01c5551-cfce-4078-a8e6-d03853288903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a03d8e-b23b-4bc8-acea-6ed75c2259bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d1c165-7d9c-438d-949e-250b69460565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74bfbea4-ea97-4bb4-ae9f-8e03a44ee92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f0dfe2-7f4d-44d4-9220-a70ecbe9c13c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be1e245-1a0b-48b7-bf38-bb64e1b44c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104b4143-dbfe-44ee-8ce6-dfc8d256fb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8d42a4-70ae-4dc1-be85-5df44e6bdbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7640f65-cd64-4903-b72c-a05030f85a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0cd005-7513-45bc-889b-a4bd184600c8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29927596-44a8-4f71-9e1e-a64ecc5c8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d08400-2308-4671-b60f-032b64f384d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638f3281-be7b-4b71-95e5-62c192134364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77cb9753-e649-4d2c-ac0c-cbded7ac0297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2df2fa-ce48-4eb2-9196-20b6a44cfb35",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003ede96-d3b0-4f1f-9b26-fdbbc0d1f4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30acffaf-3ef0-44d3-a904-7a570272e7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a3d194-16c8-489d-b776-27e0e89e0e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1747f97b-aa19-4272-bf5b-308bf67d0cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec028ba2-b5a8-40a4-94a3-5ae2a297acbe",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21765ac9-c15d-4f84-8deb-74842494ef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0de838b-2d20-4682-bc33-cc968dc9804e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410c51e3-b4dd-47a9-9ceb-c752cd3f1ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b97b145-e5e6-44d2-975a-a723b7b97aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480d0daf-944d-4041-af75-94518518ea29",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c37b3bd-9210-45d2-af4f-d788fd42cdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0b3e33-8d94-414c-ad1b-8ff9edc88113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf8154a-78a8-4871-aea4-767b88b8af18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6ec4f2-b15a-4ecb-b0f2-b3ae3f8f01af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7471cc-0e6c-4f5f-8aef-d02357198629",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d923399-e431-44c7-96cc-b0afe7c3c34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72a5938-80b4-4ca6-a476-968d1d4a8f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f3b1a2-b695-4514-9ebb-600d44046bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46497bd4-6156-43c5-b213-9895181f3f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2500bb-1926-4a36-b555-09f52d1a55ca",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade32e40-079a-41a3-866a-105f98e80c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17906450-5c51-45e5-86ec-e0c6c9640c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa2566c-7f89-482f-bdab-5dd0682d0b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3b13e6-71d0-4c8a-a832-9f32372b1b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def5d7e0-d8b5-4ad0-aa17-bcfd3d862572",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48b39f6-c66f-4373-a2d2-8adb98fe8b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e946ee4f-5262-436b-9310-761f196e1393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c75d266-6f51-4d5c-b1be-8b0ddc121413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "912111b5-8a33-40bb-a803-0959e8956456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5f685d-d4b8-42cc-8e56-2878f7cb42d0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a790c939-81a9-4866-a802-2f94518cd81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f9b5e9-c69b-4ed5-8a6f-4114b84fd3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6f4d56-e827-4163-960a-28794595b38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "caf657cd-4bc2-4cb3-a62a-fd37cc10bd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418ce465-30aa-43e3-b969-676320db495c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc1d872-3d21-42e0-88a1-7e91b919af71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c9345a-059d-43e2-92c5-66121e67ea31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a800f3a9-7927-4666-81a9-2992b305f8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91645568-7c3f-4621-8df7-5dc7b77dbcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5885955-4786-47da-9017-a8dbd2c496f8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c1dcf3-4294-40b9-a7b2-d67c389c8dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451035cb-797f-49cc-8801-c0466a744140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31241019-d8a7-495e-91da-aa28ebe2244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "205caac2-0b17-49ce-816e-1e435080ba9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cf53ea-c734-4788-9a4e-2ef66ebcce78",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f6f50f-472b-487c-b207-927d7b12a556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee017220-6437-4b6c-b131-418bc5e70134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1c41ed-bb42-4878-b28e-258174823471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12fca5f6-b0d9-49a9-99ee-17f82d55fa76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a0cfc4-73a0-4449-984a-8e21ca73574a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37948c02-9674-4156-9110-3a359cc944d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120924d7-f8d9-4870-9aee-e3ffab410492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8800fbbd-4398-41ec-bf88-cc6b3c3d816c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a29891d9-6910-4f6d-8330-c6588030ba18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f933c0-b9b1-44c5-9071-43db153232ff",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64c9144-ebab-4d77-96cb-a8b798aaab3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae71da64-43dd-4744-ae16-8b0815eac7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b59c33-feeb-4941-9928-0b0b28834f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a3f168-1547-4eb8-b664-176689d0c192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c79662-e694-47f6-9b6a-8cc50918486f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d008b380-8975-459e-986f-de4c4a1689b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f43488f-54d0-4790-b8cb-4743e564cba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b105d3d-6bc4-4adf-984f-c721cbdb5d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91399ca2-d043-44da-8858-581486205af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4635b951-a8db-4ace-ba3f-5e4288391158",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c8be4f-f81e-4f67-8d12-3882d79599b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1eeb6b8-3ab3-433c-b1e9-346701eb7835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c12ea-024c-42e0-b470-847495cc23f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4e6b74-b0b2-4568-afcb-085113f850c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13964ab9-a848-4183-be9b-81083432b209",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e519ec5-ab45-4676-a0e2-c9c501c06e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8793ef45-fd06-41e8-9cfc-ed31b15b4b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff5e7f9-7f57-4ea3-96ab-9d89d6566a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c0e12f-4a8e-436b-9711-9ae2ab8ee6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857dbae8-5df6-4406-8f7f-6b7d39bf9a0d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d76f56-bfbb-461a-9360-c57d2db69141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06759f6-714c-4f64-b4c5-0bd1e279811a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e18708-5325-4f70-87e0-c17d065c8ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c16b36-72d6-45f5-9985-3727dcc60251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffe6164-799d-4e4b-9fea-87ce5361be97",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92329183-d9bd-47d8-9fae-4812a2156608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f205c8e4-73d8-458e-97a5-e46194098e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a396704-fdff-4ef5-b8a9-5e38e99e8e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a6bb6b-331f-438a-a576-6ed285aaed0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcf33ea-a37d-490d-b33d-138c9cffaab5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc4fbba-9d55-4314-ab44-4c7034397f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fa7389-1f5d-4327-b692-aed0f25c6d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d0187d-f761-4837-977b-19aadd3bffa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1109563-7c43-44f2-9ca4-6cb91532ea53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e29757-6a26-4889-b262-c67a0a4118fa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6698c6fc-cbb6-40c8-9564-b27728b041a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced74810-4ea6-4e29-9153-cc917fb46e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4377e84-ad25-4740-a3cb-160245ac3990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "02a11370-4575-4857-a66a-300bfb662218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbdaa95-45a4-435c-bde4-b25b80665b97",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f228376-2953-4259-aa27-5a562eba046f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9bf5c71-41b4-499a-b4f4-dfab4dfa6090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cace009-6b62-42cd-a0fc-9a83482e85f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49611df4-b3e7-4f7b-aad6-746abcdf4e8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d160ca7-b062-48f4-bb15-2a9013fb51b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6eb139d-030b-499a-b6b2-7161303b3e17",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3419aec-d608-40e2-a4e6-f536c552f79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73acebe5-53e3-4ae8-af24-1eea6f0f017f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f51e9e7-9004-4093-a6b8-eec7967158b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "410099d5-4622-4800-9eed-fdc78d7bb7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeef988-db33-49aa-8b2c-b4d043b9ff70",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b09cb9-313c-47da-b170-c72abaaed846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a743f52-aca2-4b52-bb09-769cdea7fcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c7548d-00c9-40ae-a866-0e7a284936cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae9bc197-5f7a-4a8b-b547-9a0352154580"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b48eea2-250b-4789-bc29-58e62b3698d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee3e0dc4-9bd4-4a5d-89e3-6bfc6bec01a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eae2933-6fff-4594-b983-9fe48294ef17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45d7c843-62b3-4bdc-8716-4caa928e8380"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6be7c77e-591c-4607-8709-64e8cec10f5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60d71d99-634b-4531-80b2-5cb1db78b8dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "948a0cea-276b-4066-b8f3-3de9c8413a3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f917d751-d911-4288-b764-85022826fbd8"
                }
              }
            ]
          },
          {
            "id": "d6d6f225-4763-4e14-ab5b-69d8d3c8fe4d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a3ed6f5-3917-4663-a3e5-2e026f786ab5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26f26085-d3aa-4ca7-a5cd-861a75641932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e984405-cc84-42ac-a896-81ffc08c0de2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "730b721f-8f86-4e1e-ae18-253921c66ed5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17dcaf25-1fc3-4ae8-aa6e-e2936e93bdb8"
                    }
                  }
                ]
              },
              {
                "id": "67de193f-3bae-482e-a5cc-c43af7ddae25",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44f9ef4e-7d04-4870-9e01-81360f0acbeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7db4932d-ff24-4322-a1a2-1fc665e62ec8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8da0002a-31ae-4752-910e-4564b56e63ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a5d40f1e-b7d9-46df-95f1-ae7b523bae02"
                    }
                  }
                ]
              },
              {
                "id": "365a3b14-ad55-4c1d-a5ca-37f535fb6291",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa31439d-172b-42cc-a6fc-c385e2341fcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c99ef8e-1790-4617-97cf-e02dcebdf35d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a606715c-8a1f-4ff2-a684-beb4b03ce836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f49b38b-87a4-4f7b-8d70-3ba0c397c6e5"
                    }
                  }
                ]
              },
              {
                "id": "073e19e2-4e72-400a-b641-a863999f5333",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92c9c907-4965-4d12-8970-b70dbdd66f7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a678ad89-d4d2-44b7-9e02-62c02bf80e09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8b3560e-c88f-4b8e-8650-be659178d089",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6e1b7739-1393-4304-95cf-728f827fc40e"
                    }
                  }
                ]
              },
              {
                "id": "11c71b7e-99a9-4a52-a3e1-f328fbbd99da",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe5bee8d-17d1-4894-8858-333a5d702a62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fef77143-7d6b-4851-8dcf-6965b4d79e94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6495f93e-3709-451b-88a1-c9f08a93e5b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "62977e5e-21a4-4d59-80c9-8926f6448429"
                    }
                  }
                ]
              },
              {
                "id": "48fe095a-3ebe-44bd-9da2-16f20cf446df",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b37e522-5715-4a71-9253-c15ff4d656f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c93a732-6739-4e75-87ef-d5177459d8f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48295e10-42d3-4424-858a-00ea21c24722",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f51cc3c5-51e0-4156-a9dd-69dbf7e6c8ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abfd678d-17a8-4db0-9c10-48560940ef6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9ace58e-774b-4020-94cc-efe4a4912b79"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bcd25957-f8c1-411a-bc70-abc960f25462",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0374243d-e559-4bbb-ac10-0116ca83ae0e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70b02a40-88ea-428b-aeb0-33dde6625cd4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ecb52369-e9f9-41b5-aa32-1d8f22ba4065"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5c8369b-542c-48d4-84ee-4945f3288c5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b553d76-02fc-46b4-a2c5-5d42e3e8b9fc"
            }
          }
        ]
      },
      {
        "id": "151bcd08-4c02-48a7-82a8-7b8379c36006",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a6ab6999-32d7-497b-81da-7a00a1abc632",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98397393-4eae-4b33-9475-19af2ccea05b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8001da3-5e1b-4c34-ad58-44871be29b02",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bebe15-7a73-44e5-a0b4-5849b735eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce2126f-f4f4-4c34-96c0-9b65eeb8e04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9dea26-680a-43a6-aa98-4c5e8b16ece2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "59ac2ea6-2b11-4069-8103-72b5bf0757f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cd4348-3e51-4f34-b71f-6d70e3ef7508",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f67b58-8ee3-4cfc-84d2-791f310dc4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf66470c-9fa5-456d-bd01-0550cdfda427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a11c9b-bceb-4398-bcbd-a44c697810f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c5cf57-52e9-4970-86f7-b74b80305343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ddc079-3f20-4f7b-a85e-6b8c63519e3e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fb791a-5b5e-4ffe-b326-90888de14076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d8207d-76a2-4454-9c2b-86282b74954f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66468793-e522-4e24-88b0-97d8cc5eb0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c4b923-d72c-48a5-a3a9-286783be9e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e816e5-f9fe-4e92-80e3-8fa7282a5c7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb5d9ea-6b80-4d7c-9634-bd4b52b77d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fa7767-46bb-4c3b-a3b4-075f44778d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddeb101e-ae9e-4c4b-a512-093596611fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd07bde-ea8a-4461-8046-464bc9b7dbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1d1eed-f639-44a0-8201-700c2e95df17",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27123271-42d7-4230-a6e5-8f1d07f082d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f2e864-303c-4d02-98ed-f58090026003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7176294f-4f5a-4b8f-98e0-f64525d1c02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f705b1f-8a07-49f7-ab13-4ad40c4b00e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550aecb8-645e-418d-bd61-d9e5ae940a7d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2923f1-061c-4e0f-ac07-3ba0fadb4060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f66a22-bba8-4d17-91e0-8b54313e4bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567284ed-52ae-4299-817a-592f5f344310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2dca8e-c004-4b6e-86f6-2e72352c9e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2de79f-57d0-40cc-9144-0c81e002a57b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90e9f2c-1a20-4b5b-a235-bb91e423bb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2b2445-0e97-47fc-a018-ac12b8512d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdb12bb-468d-4637-a113-1035723692c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cd0e95-4bf2-4724-b502-bc7d8a316e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ad6196-bac6-4f5f-976b-e0c24165d449",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a0febf-cce7-4ac0-a4cd-05c83841cfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c3ec23-f816-48b6-b055-bcd964c3915f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bed111b-b2c8-42c5-b975-a2de334359c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "092a0293-f230-4eb5-872d-6b55b721a419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b93b7b-90c6-4466-bbcc-e2e9128fc641",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e97e55-29c3-4356-a36b-99e01c1d2f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f43664-c67c-4310-8e47-b56ab31f420a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b26f520-6f63-4725-ba88-134da82d52af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c449bd9-8edd-444f-bdfc-314c46e23a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c881e3b-c63f-459d-baf8-ab9941828fab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74e2b8c-493c-4a43-b368-615d9ccbc6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48839e5-8134-44f3-ab3d-cc453663af6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85679ff5-54ee-4250-b0ec-4122889e6d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c988be-723e-4971-ba3f-7ec20e36ddbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6113a21a-a729-4a7e-8ef5-e84f03a69aa4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f51efa6-b5e1-4fa0-b534-76f6a4540fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ebfe9e-72a2-419b-bdb3-ec13a013aaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af556d5-c6b6-4238-9b8e-73c99af34460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "914ea904-f2c4-4a3d-91a6-01e5cfe5be1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2a214e-faef-4cf2-94ce-069b405b2744",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd42fe8-3006-40d4-96ad-8fe0ba4468ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a775b4-cc2a-4fb6-968f-0d9351ea25e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bc8a56-c5a7-42af-a750-accb9b3ea8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2e98dc-f218-4618-a0c1-0fa984417915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c98560f-698e-46b7-b273-4a197e596f65",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6d9116-4854-4251-8f90-4e9511d94867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a73ad58-505e-4f9e-ad09-c5fa6f21ba22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bd8cbd-e9e2-48b0-a782-aad97a8fdc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ffde1b-7e62-4d66-b208-02400301d31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a165446f-4168-42d3-9024-385b4ed6628a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3aac7b-f956-4f02-af5f-80dff9ac4e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d7622f-98ee-411d-92c7-bbd720a56cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201767ec-9d72-4967-bbba-80baa2abc5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7360d2-233a-4d3f-b66a-a96b1d87bba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b32776e-9977-4cfd-b79d-f5e805f6de8d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d666ce0f-3e83-4f62-8f4d-5399b4a50cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ec99d7-7879-4fce-bfd6-6df317daba58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eef74a7-264e-434e-a877-0c7aefb1eb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da75c56-8b53-4a79-9e96-0ababa3ffbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91476ba-fc0a-42ea-b50e-c627002d8bba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c87e83-544a-40cf-98e2-c586098c869c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c7e095-c2d0-4f5f-a1c5-c62e3f66bbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f5aca8-3a54-499b-9134-bc12e331759e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7f6e5b-f97b-45b8-a2d3-06656c5cf5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9312c0-e627-48f1-9fad-363bb4c45438",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf39ec4-4d15-454c-b8c8-2f6409c10256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67f2772-2481-4972-8b84-0b6ae31e27e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0eface-f2e5-4c16-93a7-706c5ab87d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4975fe1-b88d-4d7f-9cd2-43354e4a1ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faa9367-ba44-4f3a-9047-f1110be50443",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce303a6-2366-4f95-96c2-a66a0a32397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d596858-d0d0-4448-91a7-cec3479dbf8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01088f65-2831-4351-801c-0a0d35a405de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f99d46a4-7054-4387-bd4c-65b643054979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8290e11f-f533-4d04-8826-4ca638843f39",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c03aab5-1812-41af-a57d-8cb153ee5479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da2a8af-9b00-436d-a8b4-49c18f63f5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a45609-bf6b-45f0-ae37-193c2c02ee65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a16c09-2b7d-4525-9e3c-e91579a49708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49427fe-ceeb-4194-be27-a99c08a5018b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1356f636-2563-4ad6-b17f-c69ce9698e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04488b34-c2ea-46ba-b04e-b1f23c58cf64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df204c1b-b855-4901-94dd-3375b318df67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b37acb30-ada1-4196-bff1-3c4bc0f7c98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae11f07-44d1-4c4c-8d57-8210b42853d6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421522fb-37bc-43dc-b7fb-0790239f1a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd27502a-e9e2-4360-8eec-64dea991c111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e50e7c4-deef-4c7e-8fbd-30562405dbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d674ec-7a74-46df-8e27-e10b9375e3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd080474-abe5-4904-8b7c-50277cb89cbd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c35f2d-bc45-4667-a249-a4720af8d44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6232d854-1f39-4271-ba81-6f0d4c5e5fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0f6439-1c03-43ac-a00b-9d3e895893f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd0bb64-c649-46d5-9734-e8250264c7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f9904c-43c3-49de-b88a-ef815e17b411",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73371ba4-cab8-4a2a-b808-929cfb559de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91147d8-6341-4e75-8cb8-260431864330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669c0751-7912-4a42-a9f0-3c6adb73fe02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1d0e8b-8d66-43a0-bf62-5cec5bbb9a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f297711-8985-4917-9791-1546b3a21730",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5592b7c4-92fa-4eee-97f7-eaacd7822355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf419bd0-af92-4896-811c-4ef9db682c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88518768-29e2-4821-9372-ed8eebf5eff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "721af199-96dd-4740-85d6-19c6dca27b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21774d3f-c59d-47bc-b3bd-d9deb60d1b37",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf22645-c7ac-490b-ba2f-706338dbe0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf025321-f570-4cf2-9929-f7321b42c73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec1b617-0ffb-41df-96ef-7c4a0bb80985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aee3c54-c09e-42a6-afa2-5fdecd7f5e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d678aa16-2b1a-47f1-bedd-6a8afedc0f80",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39312478-fc9e-4032-b4a0-ad98fe061563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7057369e-84e4-4dfa-9d43-cb188d52e1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae78f36-5156-4304-9542-7aeba87975fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d1647e-d732-4015-aaa9-1e6d1baf0ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25235594-aa86-4b1d-ab9c-1c3c3ce32a3b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3b0f8b-90a7-4ed2-8ebd-e9ee9f877fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c873e861-71dc-4b88-82ce-20c43b3f7f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94edbd86-f9e9-4e8e-9d31-8b1a08bdd233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c15cbd-158b-4369-b93c-65a287fac620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c0e06d-1d2f-4736-beab-cb0c8219c766",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5e38d5-8a22-4af5-8e67-bf04156cd909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8582f3a-40de-409e-a4f5-38365f4b0871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec7dd60-c74f-4af6-a7e6-75ae48436be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f260e02-604c-4bc1-8b09-e1b46868a768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cab638-6951-4782-95fa-dd2d0fa8d6df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07340c61-aced-4555-887c-6239b025d3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc0f17a-aacd-4c72-8120-2568aa8aa7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014ee7f2-90ff-4cf8-a4c1-aa95520902d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e38c469b-6de2-4a96-8767-0d5d54a36a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb11f8ca-520a-4846-8089-bbda02be92c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc85e34-a834-4891-9511-270b3d5f10cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb33c3a-9a8d-449d-a621-12e8e589527f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf7f1e0-7c13-4c5b-b327-b93496444df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b2cb5a-6667-41cc-937a-515e035a5b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b15479-efb1-477f-93d8-15c220d45dba",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5353c997-1a9e-46be-9e7c-de984c94fd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954f7a28-1c80-494e-94c6-226ad75865a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44682777-82d8-478a-bfd0-dcb97632d99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32bebc90-d4ee-4cf1-810e-fab33d055836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae981cc-0aa3-4221-a740-25c0eaf97fa4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6de78c-6c4a-4ec1-b0b1-270df5f71781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4437cbf9-4f2a-4a2c-8b98-8f4a0570cd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36af2d0a-5306-4288-9ad6-01f76eedc0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be07b3f-de04-4abe-bf26-dc15d24d9f29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de905784-17c7-4dd2-a58d-240fdf963db2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fe43a3d-6015-4727-ac59-044eb8fd5384",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f6113c-3f47-40fa-aecf-02e230aa7fd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61f716ed-911a-4dfe-bce3-830c5e126a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d867579-843e-45c1-9028-ba8da675c9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66b7ee72-e5d7-44a6-bfc6-0f5cec1b7e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3353b6a9-1660-44ce-9c73-a5d5481d0741",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82905f7c-80be-4753-bd73-2e43ace24373",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a67cb094-de0b-4770-a05f-4ae3dc302e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e234a8a9-a4d4-4f69-a80c-02e618d2d59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b3aee4e-2249-44be-a5a3-e3e2c643eda3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48f950fe-8cc9-4633-b526-8e8eade5ac38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5b3c864-0cc7-4a13-ada8-18ca494f785a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d31960-f109-4c9b-a2c7-5cd5c4fa1d8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42694d7c-20f3-488c-b2d2-556a2e6c214e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4288402f-6257-4a8f-884b-6bf76d6d5393",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e21446e-6497-4943-b2c3-468653223f8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e328ecb7-5d74-43e6-849b-389198b27b02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccdc5b40-88a5-4304-85c0-adb89451e09e"
            }
          }
        ]
      },
      {
        "id": "7b7fcd0f-6c11-44b5-a3ed-1a291df753c3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8723c0f4-61ab-4f11-af22-e8cd7d9983e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58298594-3d4b-42dd-b870-e0ae02a02851",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa97dcd3-0044-4c8c-8f2f-73f55a721d28",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c4e634-be95-4d25-83ac-b268147ab414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1869e93-70d8-4118-9fcf-511f5d4b6e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdd833b-b491-4138-a999-eff2a561a156",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac44f933-d45c-468c-8025-f76743f98156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98baadb4-2638-4a48-8e8e-7968e2bd6486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a02572c-f082-4ad9-9bad-1ae98fcb9eb2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973a5725-5df4-47d8-8802-e5ff0146789f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8cdd6a-1983-4f9e-9746-9291baf56269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf759db-8688-4bcc-825c-03c2fc303dfb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec04ffa-82eb-42e6-ae5e-04edcfb68ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e05b82-f84e-44f4-afc5-dbb55060cab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c1b30d-a091-4ae0-92c8-4570f8719e23",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91786c45-a2bb-4802-ae4c-c36a514c4afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c614da0-392d-49fe-9020-bb2dbd51e40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92210137-7ddb-4a1f-a53e-8f734971e81b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943edd11-251e-4373-a63c-24590914266a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f071bf1c-0669-4145-b120-7eff5a70b997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b6eeb9-1362-43d1-bc42-c840d065db88",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f788239f-cc3c-4085-8a42-b8fa169c5970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3127d3e0-7fbd-4d73-a67b-cb9fa5dfc5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b81d8cd-6d55-4a99-a881-30c7cc862abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57277b37-48fe-40b0-87c6-6399f64e1459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a64c5da-f04e-4261-a849-27d80101cacc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfd6a64-40d7-4e8f-8b9a-a84ba3b4f020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4bd837d-bb67-47f2-89b7-95be7635b6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545f53a9-2afd-4ee2-9d8e-9b9050ac3390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03404f7-8f5b-48dd-aae1-9b6ed3500ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9207896f-6b67-45b7-bef8-06c2f8170702",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6609309-2843-4d8d-91e6-f2e6703ed48e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd4c253-3f7d-40f6-815e-bf2b98278e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36664471-c1b4-459d-adec-4fd42eb095e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f61fc3-9862-4554-b2f1-7eef4c0cdf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae439f1-cc28-4205-8bad-a35cba81c439",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561a0469-bf95-4798-999d-d33475cb4dd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a9eda5-7641-4337-af89-c52408cc6c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f15dccf-f8de-4778-a124-b024ee99df81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502c4480-530e-4507-b422-a3347cad91d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858ff893-e398-4713-88e5-80ac3b37a7d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f7f1bf-2e03-4337-90ef-e83a0f086d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b173c46c-8496-4bdd-8024-49099ae39a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba539509-b76b-40f1-83bf-06debabb2f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7846ba-1f45-4ae2-a535-46477574a212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235d632b-1bc7-4447-a27f-2f87a18d405b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0406da6f-4ee3-4536-b35a-c6a58eea3f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c872249a-41ef-4625-b87a-5b48d42c3c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae61c118-92d1-49a6-bf2c-1b0454b0968c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec28fb1b-3afa-4b7f-a32f-8d9a788a1eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9e6729-274a-43eb-bb06-636a2968fb57",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adbb7b9-5f7f-46cd-aadc-2454cc4f3fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07c7203-96c6-4f10-a9c7-80e665946c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bd7689-4872-483b-9f85-675b42e4b6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98c2a8a-88fc-493c-b4ce-bc6465d3bf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a52c50b-c4e2-4d32-9b7c-2f1753a445b9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47cfa1d-b355-49ee-bf18-6e185edce20b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3a8b1a-6c61-4021-8dca-7955b8d16ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5019b393-4a94-4597-a4b7-a020fbb187de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4374a353-4739-4115-88b8-94bd7c3e3d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a10f8a-f53d-4c21-9bce-b77ac4a11d24",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f08ca9-e564-4bc6-804e-ee587cb793a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb9d719-b84c-4d3f-8ba6-20152093ca73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51d536d-9c10-4a73-8456-78238daf11f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777b6e42-b979-4f81-8053-709418b4255c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cba498-f52b-450e-8b56-b63627b80309",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d257b0a-f0e3-4175-9fda-7b045052ee98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866674c7-3dae-4689-847d-dba9095bfd94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ba47f4-dc20-4a40-ad38-f28ca006752d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055256f5-c0f4-4aec-b3bb-5aa8fbaccaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2371a62-c325-40de-a683-a50a60475541",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1a211c-e915-426c-8d1d-06991b1a15d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ac8525-cbbd-4a35-9dff-17d63183999a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64244182-1dcd-435a-b3f4-09ccdd5c3c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b339681b-7be2-4ab2-ae1d-aef89cb1728d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb82a43-028c-43ca-9ba0-8ce33df518f2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e06106d-88b2-4752-bc02-3cc1d0fbb8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375f5124-db47-4d50-9ea7-65558b620f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132276f-f123-4090-81f5-30c20219df0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ede227-750c-497d-aeae-e657dd793ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d30f4d-fa33-4748-b72a-26d12dda63ef",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121b6def-4746-4618-a0e2-c634795e269a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d25ba7d-aa88-4f1d-a9ed-8c4442c44dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be30e504-099f-49cd-ac14-17cb3b56f9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4480fd8-d3b3-45e9-8cf0-f681586ee220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f29906-8951-45a6-9426-d98bccc2789b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ddd15a-2339-4c7c-96a2-5c9a157de600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54178b04-118c-4a19-adb4-5452667fbdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8715eb0b-6786-420d-8ad5-771d56cd13a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31c1891-0de4-4d6a-889c-2d0985a0b139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c32a323-62e0-4567-99f7-e09414801af8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1288ad86-cbed-466a-b0e4-ff5e4036de7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5311b731-01fa-48b2-a5c8-a81bfd0c3147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7b5c14-b37d-4f50-a6f1-bcb877d33427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cb5b2f-3ed7-4291-b87e-723ce728b0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df962fcc-1361-4d9d-89dc-2cc757535cd8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a28be2-8024-474d-b584-63e1a7445d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5201aa0d-bbab-4104-94af-5187a941abb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4b6be6-1ee2-4889-9397-36f65e07a9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980fc428-fd68-4713-abe8-3b04868911e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad14b3c-b815-4fff-9333-0d57e0d40bb3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f8795b-427e-416d-8d3d-3abd5fce40bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3676dba-b8b5-4b86-b479-ef6f02e04e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c6d185-1c7b-45d7-bab4-759421e69d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e885bab7-73ea-47e9-96d6-9636d62cb53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebcd371-f113-4f56-bef8-5d74dab52838",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb94bc3-18a4-4805-838c-93322215a95c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c6e06b-96e0-4791-86cc-5257734cfbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649358bd-025e-4f10-b9d1-590abaf26635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bf33a9-75eb-41ed-8189-c02c97119d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849793bb-4fa6-4d4f-9639-d88dc7dcf3ca",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42632d-6e53-4ac6-9af1-e3a77e5b2afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e2ae9f0-e5fe-4209-804a-994683b61c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c690e3a5-bdea-479e-90dd-4762d7b4a13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dfa9b4-aa15-4f03-8bfb-6b7cc8ead80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f436ffa-5c47-4f87-8b7a-094090978294",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e933eae-4884-45bd-987a-906a45b63d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325714f9-d976-4aa0-a9ec-ec2ce1e1ad62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec12685-6f2d-4926-ae66-be866055aaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7eba1d-8ca4-4c79-971a-c7fce2e9e59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5089efcc-b51d-46f1-86ff-798878e47e2c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeff745a-8a94-4ede-ba45-08aa773628ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc74a703-cabb-439d-b0d7-5105be8839b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86d1329-7a1b-44e7-ae49-def3cb893e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a31882-f981-4361-b77d-620a511ea4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4317aa-29d4-4d4d-866a-3d5c9360f19d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bedd5d-5ec7-47e3-ad12-a7356ba25fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e63336-3193-4f32-84d5-7c480c66d75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cbb0d7-9657-4c5d-a942-76b891d42f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dd002b-9e32-49f5-a82f-8240d2d3987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678d0920-b42e-4673-9e6c-9158bb3de479",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33e4889-2422-42bc-9c54-1045563537a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b900f00e-dffd-49c6-8b32-dab46c6929ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6fd375-ce3b-4e7c-a899-332a9d2e07b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1ae2c4-5fab-4e07-ae2b-00835b31619d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acefbd2-634d-476b-af2e-4481144232de",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4342115-b8c5-4356-a3ae-6298d7f0e588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0bedff1-ac1a-4703-9115-ef4e4bade35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf783ec-16d5-4115-993f-5b43fc9067d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8e24ff-c1ac-4c10-8956-0b921580fe5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06306108-efab-4f89-b814-dddfc0a912dc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6370cc45-95a2-42f6-8c16-5196c9d7ea6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d679dd2b-bd81-40a0-93de-f29b5c17ac6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b306327-233d-44b6-8766-58280ad8d4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abd05f4-e258-4e8a-a7d0-7ba3af8ee570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253390c8-afb1-4746-a7cc-d87f0105782f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3339db19-c8e2-4ee1-a579-82ada7f48230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e66c57a-7c31-44e2-a9c7-84e68e72410f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830411c0-e467-49af-a85c-e42d92da3865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0ba3cd-16bb-467a-bf58-98b7f5a4f0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04b9f78-94ba-4dfd-979b-ccdd8e13774c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7762275f-8e9d-470b-b459-4d3fe6b4de95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3627a345-b4c4-46e4-9a73-563a213af2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ba874c-f35c-449f-89a3-5466d3184c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d461f3a-8c84-40e9-a646-067e5a1e97be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc3effa-2437-4ac9-8246-5aa6a01f3a7a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfe6df0-e30b-457b-a166-d8f475ec1388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ddda77-753e-45ea-972a-9060f539b9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55472ed4-3996-4c24-bc44-b504765893d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b003352-e7e7-4236-8002-8fdcb8b0182c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8279753a-629c-4590-8c9b-cd5ca025070b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8e3883-eafe-4885-a28a-a474ff1ec809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f7640a-28b9-4407-a4cc-9ab249cea271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d21652-fb01-437c-b824-243117c46367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea587b02-ed35-437e-a1d3-a921c14d4854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1565543-e217-463a-86c5-66622b71b3c2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa42d4a9-739a-40d3-94c0-32c26c10fdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e422cc5-9794-4060-aeb1-7452b6f45295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4ad4ec-258e-4f9d-bc14-4c938505cc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26864123-02a7-4a82-b919-31fa2f0938c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a41939-bf82-41ad-9674-bdbf53cc9d43",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd860fd-c8b3-4377-b606-d99beaf6e0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d773f7b-16d3-44c3-91ba-9117d15b37ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1276298-b03e-48d5-be00-dbe461ea7573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e637b267-55b8-4ac7-a2ad-dbe22d58957a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03713ce2-7dd8-4e16-b710-cbafd2d7775c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35e8b2b-a5e0-4caf-a3ef-d444ab5250a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0079bc93-72a7-441c-9707-3dda99d3bf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e24369d-3826-4930-a509-3ec7965e15d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c239d790-0344-4cda-b278-136fd0865549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25711f82-5bed-4203-8400-9a7d278477c0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a01451-533c-43e4-a25d-cf949305c29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef03d66-4841-4418-8d1c-a37a9f495663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690699ab-37e2-4853-90cd-a5c3b83f00be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf23a8df-5336-498a-899b-2110d165dd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d4496c-6598-4df7-af8c-2d37060de44d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b83495a-7ecc-4171-b2a0-15440ed392ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfeae712-0af1-4719-964b-6014ab31d989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75bc797-6837-4ce4-929d-33559a4d2243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f18135-8504-4602-9678-2b846ee34845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e99987-d5f5-4ebc-a130-4f6120c50df6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395a10e7-e792-47de-a96d-caf5fc796408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4978720e-d61d-4a4b-8943-32f585902f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165660df-4d7c-4fb0-aee3-b4a66cf379d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0ed893-f8f5-4ad2-b352-fd9b4df6754b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4860592-d01e-47e4-bc9d-544bf1b5ac38",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe7c5f2-1b47-494e-9d90-307dbc400b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a793b7-10c9-4850-871c-37b61364cfcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e666dcbe-5af8-43ad-93c1-dbda6ff832bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff3aad5-6723-4d74-b556-7edcb457f964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecabf141-dc31-4e2b-8c8a-23e9b311dbb1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc12566-eca0-4aa8-9947-bc9f86117ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5c565d-3317-4a9b-b01a-a4d7ebf371dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeb6a75-319f-42ab-8f11-54d8cba422c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2829c8-b475-4f08-97d5-511ffbaa3893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec906ec9-0a3f-42f4-ac39-0dad375ab411",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4ad206-1c9f-4e38-9d26-d8f6982d81ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba97713-a87e-4e56-a5f5-ac77fd21d600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db8d750-c0e9-425f-87f4-f1d7a075c0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b93da9-7f42-4ccb-853f-e1ca7ce532f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe16a769-7287-4a11-8d8b-2396c0631253",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cd4216-dcee-4d35-9152-d43aa992499c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d4b279-b411-4232-a9ba-c4dea8cedda1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f1456d-7f2c-4bf2-8297-a1d3e528b495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff19542d-5384-4ec2-86ab-c6cd90095980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0c7761-05f0-4420-8976-1ccbe0abfb07",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19b20c7-9563-469c-ba38-da38fc9c44e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8903dc7a-aca9-4d0b-bfc7-a44050fc4776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2bd445-fe11-49ef-b3ec-f5e7d07d8daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bbcfd1-bcb4-48b7-a4d0-545cafea6bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404cdd8f-a9c2-4a36-9789-a2d7c2add6f1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17454dfd-d42d-409f-b1c6-bbb264ebb0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e81b66-e048-4f19-916a-de49bfa263a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fb3db1-945a-4a4d-8ddb-54e7ab4a0927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcdf164-7cab-4cd4-bb30-a801620c36bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1cb208-423d-4f28-abf5-68657c940617",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f953cbcf-4b20-497d-9985-e9776cfb2bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a378ac4-d95b-4376-be9b-4c1902bf34fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dc516b-9a49-40fa-a7fa-bdd23f987883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17734b97-9a12-4b64-b4b2-62e65897059f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419943ac-c87b-47ec-a7ab-7da2d959c79f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df08205-f356-4be5-8c2a-b0bd733e92b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd85913-8854-4b4d-9a83-5766cb682f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d33edfe-b265-44ac-8867-0b3d27cf38bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa7ec5c-03ab-453e-90c4-fdd85af345fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4a6413-1d01-4eaa-b2f6-f076582a664b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb568e2-1143-468f-b57f-250f9b9285c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12f206d-7993-4c65-b7c1-f33d1a8f01ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98de1b54-73dd-4d0e-afa9-70438edd8f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c9a59e-643a-45e7-80d2-4b1aa0be2bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749c43e0-809c-4a8c-922b-7638108a39c9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d2f812-c9b3-4866-ae13-9196a3407df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a65470-9e16-4387-b291-ef50338df9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522a63d3-bd01-4b4d-8733-c765c30504e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491dc407-8ef4-41ad-8e5b-159ed8ea6554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e150f49a-4c1f-4b74-9ab9-0dc3b9b26fba",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b841f869-b510-45d7-a924-2b8548ae53dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4c6ef1-a049-4f15-a05a-6a07cdec56ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6153ce36-f327-4e7a-9c1c-9e51b029f75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2311cfe9-1557-4f40-be96-6201a4a0c14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c557c04f-e801-466d-8bcc-40b468d2f284",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa047d7-a405-4aac-aec8-1d5b05781990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3facc7ae-e236-45cf-8d29-2d8fc52cae35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f38de9-0672-4e45-be2e-954661add052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bd0112-143c-48fe-a697-c6e477a4881d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbc4a7f-82af-4a02-afa9-1f448e9a8d28",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9cd715-5e65-4b56-863f-060d831e017c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957aa3d8-c8fb-4b8f-a92a-5f1e890e7d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e5404a-e713-4186-9714-87e65d883d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cef8375-2f81-4dd4-89b5-e90cfdfd0011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4046e586-f2dd-461b-b6fe-b282b98f3874",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144fc951-49b9-4d48-9b1e-d3cc7640f643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5059b69-082d-45b2-9463-b7c1b2f006dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24937c65-7c7f-427c-aed2-23d70e20720a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b733db1e-52c8-428e-9c9c-f6f31ccea981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbe0823-2ef8-4246-822a-569fc6e1e79a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05658ad-2cc9-4359-bbe3-92a78786ac07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adf001b-7a07-4174-82af-96a3abda9e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae08404-1411-4ae9-a825-0731e7c962e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a34cc5e-b2fa-4507-8772-2c021d8600ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6edb5a7-e7bd-4c7a-8d6f-6d457cabf977",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984d93c7-b472-41c5-9e82-37b55f88180a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e881c768-15c0-4f53-90a4-a0915aa1f3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be59311-f9c9-4de8-afa0-f7f8f2cd9c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f30943-c034-4086-a44b-7df12e2aedf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b412490-f9a2-42ef-b13a-2689eba36c48",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7476c8fc-7c87-4195-b0da-eac0e8e3428b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbf7b7c-795f-4131-81cc-e43c26bf7f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ed5187-97d5-4654-b2ef-4017d05ff4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db26a15-adcc-4bb1-a82d-f4b3c40e7b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd22d309-9861-475f-9b91-d2e8743cb292",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb3d7be-f222-48cd-9892-52eef444a7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10a4655-10bc-4700-8f43-072d0ddfde79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3374de60-714e-45e9-8a3e-e8da1e0eada9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af6fae7-128b-4610-a5ac-3f72e0caa244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0625a7b9-4f39-4dfd-9721-ecbdcbd715c4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5beae9eb-fffd-4c47-8e07-8621796eff25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb0b721-038d-4e81-9b34-2e919c98e276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ec8666-d37f-47ab-a246-a3f9db1c0bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdcfe40-76e3-4ae9-86f5-27f864c8538b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e017a7b7-f4e9-4ddc-84cb-b73c9b2bb3aa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424b50ac-e18d-420e-aec7-4735744ec661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346dd304-801a-4c2e-b56a-08bae43a85dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c56f23-7802-42ba-b2e2-03e430633b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93f3185-ea54-4639-aee2-2ab985677ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04205b53-8a94-4734-8fa0-f7a98994489f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae989e2-d5e5-4710-a1c6-0e784ed5fd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a0e6bc-4c9e-4c7d-92c6-2161fdecc17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8d327f-8e17-40dc-a7bc-ed0c769bb5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0496228-d4e1-4f60-a520-fe5e39eb51f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770c8524-ff22-4c19-a684-c681800271c8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fd31c4-bdae-476d-9aab-134005ea70a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cffa7d-7b3c-4a6f-9dd6-2bc8bfce61ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e806b18c-9bfe-4747-8545-8ea4175cc8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fae77c-26d1-441b-b7e1-f8952219f873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca4be59-fad5-41b3-b717-7ceba2fb78dd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d69af9-ee20-4786-84c9-c5f6c54998ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195a2412-7d8e-4d53-8937-d4a44e80f0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465c4c37-8111-42f6-a028-973299eec4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a430489-a472-4228-ae24-ec6809faf502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9783875e-29c6-4ccf-b714-d4db2b2ee74a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bd7f64-ba82-4eb1-94d4-88e46bfc1096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b46349f8-ac66-4b78-977f-13774ca8ee54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944f537d-15e5-45be-ae2e-33dbbb7deff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca752581-e82e-499e-b5c4-c3eda5a5c55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a374f91c-2d16-4db9-84a4-12aa11dc3592",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7c4b9d-7575-4d82-9647-efbee9ba177d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a0c5d6-7a4b-49e7-8f4a-e27e0aaf8629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717b8993-764e-4084-ba15-e5f1843aca94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b23c68-7dba-4538-a367-1a531966ad19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea00001-7dd9-421c-8315-3eca98cc0bae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8693b0a6-7974-4a4f-882e-b26609d5982c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e7d4d4-2891-4af4-913a-3bed413eb0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbe0198-5195-42fe-b3f5-17e971912443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ade0c95-7b89-4b7e-afbb-c6495fd598ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8932a3e-09c1-4607-a6ea-21d2717e06fb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee1828a-1189-47c0-9eb3-fc76755acd3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a092f10d-a545-4579-ac54-b950dd5c192b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410af31e-09b8-4c5e-a605-005fbd84f828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ae8b2a-9da8-4df1-9f93-0dcf4572e7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600c8617-dc0b-41b6-a440-02ac149b45e0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0579f8-5135-4b99-80fb-cc8d1dcd81a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eb13c67-1c55-4a39-915f-ca4c744a1260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892d4141-4b56-44b0-813f-dbae26f04f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ffb82f-21e0-49b1-99c0-a39fb1e46351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5071b6f3-62d0-4e3a-ad6d-200924991c8c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d43fcf7-c23e-44c6-8647-030bfad09878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86200c1-f27f-43d5-85c1-4394d8d99319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d47db23-f8b1-404d-a001-bbe0af441d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe31605-d9a5-4823-9d54-28081592f27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a84e278-11ec-4ff9-95b3-8a77add551e1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e84c45-4a63-4063-973c-cf38a1c4174e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0172b383-80b2-49c8-a32b-dafd743e386b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d81a301-c329-462a-a2c5-47021da114d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19aaa0f2-5ec9-401e-aec1-6ac4ada09b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10eccd80-50c7-4775-992d-bfcaa8246a16",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9df8f59-75e4-46db-91e1-df5062faff45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f46663fb-276e-43af-a229-5f8263c0bed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be978c1-f0c0-4e92-b9f6-37f82b8fdf78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51d3ec8-9bc1-4815-a6b0-7d3d23c99dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8a23b4-e5bd-401d-85f4-03596405dd2a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e60a09-bd9d-45dd-b4b8-257cfbc1a04b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64df8ea3-3848-4e1c-b324-e2ae0c70a261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33780e4-a3d9-447b-908a-641394b59b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af5590e-95c4-4ba6-9d5e-8843d37184f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4909812-0755-4b18-a9f0-9cc84d42a712",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b68ba3-3031-479a-9242-15fae3014fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79b457e-ae06-4754-ac2d-5368313050f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7787d942-4061-4524-a9d6-78c278e3b2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c62664-c9f2-430f-b793-75831c91d755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a463b7d-f364-4847-a1fc-5a9c362306f9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d385f09-6667-4d8f-9bdd-a219425332f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "795256c3-2a28-44cd-900f-07605c689441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbcc9df-191a-4af2-ab26-2e00492623aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16213484-4a53-49e7-b7fa-baf55502ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8d329b-d1c6-43dc-9834-eb5efed94bce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c7e086-8833-4d8d-a4a2-e5ca5aa0b279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c127e4c-8cd7-42c9-9335-20a5daf6e251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be87dbe-ffce-4612-93be-4e6e1f962b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51d3b2a-15a2-4a82-8d62-a879e3c4f099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e941409-5461-4d42-8364-19b5cec9bd19",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f9a2ce-152c-4de7-b8d7-e5f75afea8ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e588827-1e95-4e9b-974a-42fc66221ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3240858-b517-4c07-9288-5b0530017627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1786b200-b64a-4e79-8c0c-2d5edacd279e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1e7243-c52e-4559-92d1-a944bd52c4b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4704dd-ae51-4230-963d-9743672f2469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0edc69-0a7d-4a21-9a54-a318e49ddf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dbb3a8-2f86-41c2-b38a-864bd60f4ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b0a0a0-f410-4a4b-8a3c-87d068fcf0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de374707-7056-4d38-b436-686e3539c8a5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91849b9a-fe23-453d-a5ef-23b1a18b7aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb680d1-d07a-4fbb-84ec-a6187c9e55e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8d8796-e01f-49a5-9518-95ce06caecae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43448c31-e0d4-4f65-969b-fb9e50a71099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e806abf-7d05-4f49-80b1-4a4e869fc682",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fe8ee9-817c-41a9-b264-0d35b856a5fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0b57ec-de3a-444d-997e-65eea88ce5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff68551e-f965-49ca-9051-6a8da756909a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7006a9a-f2c4-4be6-a62e-34692627fde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff7f799-90b1-4e58-8106-a85f48c316e4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bf88c2-5dd5-4f71-964a-5470d6a0f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9afa4244-59ed-4aa0-8796-dc1b54df461d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90438517-6d39-4125-bcde-ad68a97dc478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06652d4d-e034-4220-9976-364af829472e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a64cf8e-400c-40ce-be80-969a5e0e74af",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f05c92b-d42b-48b4-b317-ddabcef3038f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01da8cd2-ef89-4168-9214-7b1899546ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70261655-f7d3-48ef-9955-c5db4081fc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0e57a9-5042-4d6c-b1da-e3c21391538a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5abc45-d32a-4161-ac3d-3d46f1287b59",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8c55be-42e4-4564-9f15-b3cf1cf9e01a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3c1e72-98d5-4dc1-8bb2-876f7e9d58e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130056ed-3338-407a-9476-999126307ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04069650-c8f8-4176-a6e1-473fd721baee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07ba841-1a64-46ab-b16e-3849483235ff",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341fd385-dea5-4fb5-868f-0a10868ab7b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3bc71ce-da17-43c6-85fa-41244d3cf0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3557d45d-a342-4d53-bc94-4db0afdeba11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c524eb2b-b6f7-465a-826e-2b1fb56adf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c21698b-7078-4544-90d5-c149bd6b8501",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3531d5d-95e1-4b04-bda9-c1b30e441ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8720deb6-98b0-4506-bf15-31a4ec217b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ddae2c-13c4-4de4-8584-62be3ec45e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713055fa-6912-4306-9600-b9a1954c8291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe49858-2049-4788-8f58-5329249b85e4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebfc8f2-c76e-45a3-9fb9-beeef10e9dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b02a88-9592-42ed-a5a1-eb9edc6e6dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcc06ad-a4e0-4947-ad39-7cdc4ae54d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf232bf-9e27-48d3-a240-f2875288f4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74c82cd-6f04-4b15-845c-8669d1bdf9b6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0419ab-7cc9-4e57-9be3-db738ac54b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a13f39d5-d142-455e-a24a-a8bbbe117129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad779eb-376e-44cc-9839-9fc1a0ad947f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549006f2-8e65-4659-a099-f8e54af70923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785458d9-9ab4-497c-8a2c-498f54baa064",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db50ad43-1c36-4970-9d55-e55e1cb92299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c428aa30-609f-45bb-beea-b4187c63c00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dccb05-ddb3-4d37-864e-9b563c7bd47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167e0376-f7e2-4b9b-b8d0-4c9bb08c80d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aa39b4-ac8b-40d8-878b-b0ba5daeef61",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9137b693-3fa5-4169-8974-2768c4b5f2f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d28f013-89ac-41d9-9f86-25f4f04b14ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29f753a-e276-4aad-8035-65e995c886b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc6bf5e-2502-45c6-8e2b-77fda20526f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b2d0f9-735d-46de-87f7-14f79391b76e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7ceb3b-5a68-4117-af66-852109609ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e420305-a02c-4deb-97bb-c4b4ff2599ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5080b4-42a2-405d-87a1-baa0aa1b48ed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bc14fd-4a81-44e0-88c3-af02c1e9102d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d80889a-1ff1-4cba-a67c-8882dcc32535",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba61ebb8-e1e9-4e38-96a2-5fc22a386bad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f3702b1-e102-4746-9adc-f443df4a8398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7ac296-3790-4df2-b3fd-044392347702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e0d14b-8c78-4479-9f70-73ac880bd4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7445f074-8d24-4761-8b9a-c37700521502",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ee898b-16a6-4e7e-87a1-a98098e79631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00b535a-60bb-4fa6-8ed9-52b94e7bdd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe8f11c-ae33-4bb4-80b4-53a4cb29ee1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4157ef-39b6-4a77-bb1e-8af8d8953cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dbc996-e354-44b0-8ba4-71c93287f4a9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0611fb-176b-48ca-bf52-117419220370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f27e3cfa-7c83-4158-983d-66743417d869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cff5f1f-e90b-4e07-8495-651f2ee68ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe5caeb-cdbd-4b25-a10b-80e254f857cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc772aa0-8837-445e-93f5-e37be520d9dd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08199c1-4e16-4ac2-a33e-043fb09350d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1830c8ab-a2f0-43b6-a5b6-917df96bfb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632175e2-0c5f-422a-b030-4458658da312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a95249-d623-4e65-a343-064b016e939c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4839db20-fb66-499c-b90e-64c251b5cf6a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be2bea9-41e2-4c93-ba88-cbcdcd85bb22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c05caf8-ee76-4623-80bf-ef0aa54090c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5288af95-1fc1-413d-a294-ffcad1567f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef00e9c-5f55-4e7b-916f-58e29f13bb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f639f7f-2678-4354-a299-e1d3dbad8439",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227ddc53-99e6-469e-8044-7ba10b8972cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f81252-60f4-4e03-86be-557cf018abf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2af3c2d-ed97-4bb1-baa3-45bcaa76d573",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86501993-9b84-4b6c-bfcf-10c0adb8047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a78fc0f-2702-4189-9c93-f354169b02b0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72817241-8d19-4095-ad32-1529aaefb8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d2fbe4-f87d-444b-94c9-3da03a0458b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2678c5d1-d2f3-4161-b02f-ee5b3da9ab90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640576c8-7779-4f47-b23d-0ba0adabc20e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed5c26cb-c36d-4c16-85da-4336e7569cb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b8b8f8e-8a87-4e7d-969e-fc7d40e353c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a870bdc-3966-4c79-bd32-40507ea2f597",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6af878a8-b297-4d91-9573-ba0e00c25a07"
                    }
                  }
                ]
              },
              {
                "id": "5933c7c0-afe2-4510-92f6-8987d7cc9f8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39c79589-526d-4e08-b7f5-878416acfc8f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da478c0-38d1-4bca-87c7-cfc41121706f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e2abf670-657a-4dbe-980c-af72391c9ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41035bd0-3793-497f-b81d-e66072046e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a79574e-bc55-4fef-8e3c-400d2a13b7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f5293e-3d29-4c67-8155-d14edce0d854",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0fee0c-322f-48e9-8bdd-f6b35c27c1d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "003b368b-4e95-4b8d-a891-bc4fa00224b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a213010d-1ed2-41c8-abe1-f0bbd14e0e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f08c8db-4de4-4d7d-9b4c-4f3a81079e8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3118f289-9872-45a8-a96c-fb6202cba655",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2dd3565-2c27-415d-8a47-581b84b3c87d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fab27d7e-9b93-44aa-9a08-232839e0dd05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3165b162-f1d4-496b-9473-148d9968115a"
                    }
                  }
                ]
              },
              {
                "id": "0b0f4a17-c620-4d71-8720-a4454753f142",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8bbc8910-cca3-4518-913e-8351cb796016",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f717e3e6-013c-4ed2-8102-06e1f95a4782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "46a87007-142f-48e6-b9bc-3cdf16dec1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fc3e42-07be-48b3-a801-0cf889d8eeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378c3c8d-7bf3-42cc-bc65-ad619078e5bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f82f3e0-d909-441c-8227-fac0fc287b3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1ca883c-a39b-4197-8830-05db00da1c00",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6636c03-02a1-4999-b7ec-7507783dfde4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d707741c-9463-4746-9118-ace5c2964d50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5809426-ed95-4456-8767-a012d28ca114",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a0bfe6b-4f0a-4831-ae80-24cb8c5e0e09"
                    }
                  }
                ]
              },
              {
                "id": "fe0f92a2-ee1f-4f09-aed2-dbe6ac90e48c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b98a82c-8424-40ec-aa8a-8cf387469c70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92c80063-a230-499e-8f2f-24be13fdea60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04e3795f-7151-483e-aace-db13d3767106",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f75c2fea-c4c7-4c81-a4b3-764754f325ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b592576-2a3d-4f6f-8558-46f646d547d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bade4b9a-6157-4f64-aca8-149dc60380be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "612cf063-4f28-414e-8a46-80cd97f8f1b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a8a47f2-e031-4406-aead-949716cc9278"
            }
          }
        ]
      },
      {
        "id": "4e032698-1979-42cc-9923-e21cc92392a9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ac641bf7-3e17-436f-863c-fbe0d74d9b65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfa2b3ee-b3bb-49d4-a4c7-622f9faa0d22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f12d56eb-2b14-4ae4-8d59-fbd113b890a6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06947f0-6194-4ac2-9469-b2b23c184a3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "419c20b4-3067-48a3-a795-10fcbfa4c57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dbb2f4-9df2-4269-9b73-965b8f961e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d25154e1-fec7-48ad-afdc-8053dac67b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356ab301-f327-4c38-bceb-4e655abbaf2c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b909bf0-ddbd-40d5-addd-8a15bed43faf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c3a8ad7-e941-45a3-9912-e7a159d7d4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85957a91-01e7-4ba7-a0e4-563717f7e4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2573abe2-84d5-4b12-95fe-396a3e19eb6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cf43103-cfbd-44e2-addd-faa0e1556dd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a9073aa-c1bb-4add-b494-12d22baf446d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1b42ba-2d47-4909-a75b-7c0305259ce0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da2d2abc-80d7-473d-87cb-365b70edc60f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a591b4a6-a5a7-4286-b618-db14786f8edc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ca3873d7-6593-4c01-8e14-78133fea4b1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ee2acb4-2cce-42ff-95e8-880b26fb52b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec33bc3c-d1da-45e1-a642-124af5d4e90d"
            }
          }
        ]
      },
      {
        "id": "20615082-4fbc-4bfd-ab02-fe8f508887b5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "10a29806-a990-46aa-b387-88d74d98d230",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f6bb4bc-7148-46b9-b500-ae91b69e9c7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "238331d0-f751-48d4-803f-5cf98d0a8d2e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac2ec6-30f8-4c2c-825f-5440291fbe4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9249bea-1214-41d1-aa2c-afd40896addc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cff8d9-a146-4e03-9794-f2e6bc0c755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8ab97af-6f8c-4e4d-a5f5-2afadf616157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4856e3c4-b6f6-4ef4-a181-6d6de80a7f21",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dbc67d-4491-4c0d-94a2-8828d950a9f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b42fd4c2-6025-4b0e-a172-a1602a716625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed96f66-11e0-451a-880f-70af3cf3c450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d28b265a-0ff7-4593-8b21-c8d105b5c0b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c7e855d-82b4-4a78-b3a5-7b68050589c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c7fe5d0-9f5f-41d9-94ee-1193db00b28b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2631f61e-9930-4228-b25c-6154f8365268",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a066f8c-9ea0-4978-984e-fa3fefbec088"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e63ad7eb-6107-42ec-81cc-da7117c649ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42f6b4b2-507d-4179-ae83-5051b29e3781"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2799955-cfe0-4522-b1d5-c658eda55bd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca9c83a1-a6f1-4aed-99fe-6d3d2ac0473f"
            }
          }
        ]
      },
      {
        "id": "8de9f0df-e31f-45cd-a156-4205fe2709cb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c0e08322-8d5d-42cb-8fce-bf32db8f89ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f0cabc9-8812-4ccc-aaec-55c147eacc05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acba5141-4886-42f7-8733-0e5ab2a5a2fb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237ba51c-007b-43a5-a458-019e2499301a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e43af13b-6df3-4c69-af1e-fd75598403aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1158a9-5dee-4f9e-9c95-42eb82233563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ad8b98f-7f4f-499f-8518-eec1776baac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c56b83d-ab1b-42e8-a7a2-791574d79569",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11763f9-190a-47bd-8050-38759a53e05c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48bcccc0-8127-421b-9201-cdce2f7b09c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1881f10-b16c-44b6-955f-597daf8ab7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e474c5b-e7b1-4456-b20d-40918170cacf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25437ba3-770d-4590-bdef-ed5ad3299194",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cec39a8-752c-453a-ad02-46bb1748d36f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad8e5b9e-8aa0-4746-a284-a66516cc1519",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f299c5ca-b2eb-49fa-9c41-39b91d1769de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e300b96f-e29c-48ca-93c6-a250453fcdd7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "966d59e2-7b2b-40ea-bc71-a912af5be8cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21eca64d-fd58-443b-bc9c-1f07defdee74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdb3c433-855e-4aa1-8cca-0e781a72c109"
            }
          }
        ]
      },
      {
        "id": "1e2f89e5-da0c-450d-b465-9504db6135c0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "747c9c92-2ac3-4465-b71e-4fddaefe393a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0d83d67-86d6-4a3a-8a93-b5997727c3f0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2b510bc8-5675-4632-a547-d7220fde238d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe684131-ff6f-4243-8060-b8edc0cb5f85",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3940222-9a12-4dbf-b81e-61599d6d89d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 55.37307692307692,
      "responseMin": 21,
      "responseMax": 265,
      "responseSd": 27.14624294294077,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683333225604,
      "completed": 1683333250525
    },
    "executions": [
      {
        "id": "c91d6379-6caa-41cc-8be9-2591e5a41eaa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "66059758-005e-462e-b2e2-7f98d799e670",
          "httpRequestId": "3a72c836-6537-4f92-9b98-1db95108dfc7"
        },
        "item": {
          "id": "c91d6379-6caa-41cc-8be9-2591e5a41eaa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "84b3df5e-df3d-45a6-a8f0-8e8b0fc57d30",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 0
        }
      },
      {
        "id": "53d89638-dc1b-4fdb-8193-538eba66660c",
        "cursor": {
          "ref": "ed79466c-9d98-46ff-944d-fa0de35b07c6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3a9f903e-1d7a-4aac-8972-c4c9da7fbe67"
        },
        "item": {
          "id": "53d89638-dc1b-4fdb-8193-538eba66660c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4b09e697-cb87-493a-b6da-b64b71064bba",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "8147f833-1fb6-4018-bdfe-1765126e6dd5",
        "cursor": {
          "ref": "4519d617-4dd4-45cb-958b-b6d81beb19b7",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b8aab9b2-3796-4622-81d2-12147940d26d"
        },
        "item": {
          "id": "8147f833-1fb6-4018-bdfe-1765126e6dd5",
          "name": "did_json"
        },
        "response": {
          "id": "94cccc14-05dc-45e2-a37d-03c1dfb51da1",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7327ec11-30ac-4140-ba3c-ed9cc410295b",
        "cursor": {
          "ref": "4032a8cd-0323-42d1-9e51-f9d5c01ecc20",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2385b671-5faa-4f54-890e-7173c411db4f"
        },
        "item": {
          "id": "7327ec11-30ac-4140-ba3c-ed9cc410295b",
          "name": "did:invalid"
        },
        "response": {
          "id": "4276ec1d-8591-4067-878f-7525da37fe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7327ec11-30ac-4140-ba3c-ed9cc410295b",
        "cursor": {
          "ref": "4032a8cd-0323-42d1-9e51-f9d5c01ecc20",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2385b671-5faa-4f54-890e-7173c411db4f"
        },
        "item": {
          "id": "7327ec11-30ac-4140-ba3c-ed9cc410295b",
          "name": "did:invalid"
        },
        "response": {
          "id": "4276ec1d-8591-4067-878f-7525da37fe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647b16f4-44cb-4209-8295-25dae7e552a4",
        "cursor": {
          "ref": "2304c5b6-94d7-44fb-81e4-85e748c61d5c",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7420da7f-4756-42fb-8f05-e97e2bb4e347"
        },
        "item": {
          "id": "647b16f4-44cb-4209-8295-25dae7e552a4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "715b1e20-17a5-411e-8c59-81b8f1bd8cc7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 114,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78651497-55de-42d5-a4c8-8f5cc3bfae6a",
        "cursor": {
          "ref": "64d37664-5078-494a-b384-519404decdcc",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4d98e426-6cd2-4507-9a8b-3bc6a72f0b62"
        },
        "item": {
          "id": "78651497-55de-42d5-a4c8-8f5cc3bfae6a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c8f6d9e4-6b1b-4ab9-903b-4526b9058dce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3061d6-229e-4f63-95a0-5c42cc3193e0",
        "cursor": {
          "ref": "4cebf94f-4fd4-4ed7-8b98-a491bc5f4e9b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b7095dd9-9a70-4143-a4b1-cebeffc248c3"
        },
        "item": {
          "id": "5c3061d6-229e-4f63-95a0-5c42cc3193e0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "51122c59-4d88-4d8b-9f0a-f03182338b7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af56368-704b-45be-b73a-ef5bd36ca073",
        "cursor": {
          "ref": "6fd98611-fb45-46bc-acbc-f754884efa1d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "49999626-fe0b-4cd5-abfa-17094782c1e6"
        },
        "item": {
          "id": "0af56368-704b-45be-b73a-ef5bd36ca073",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4889d426-29ba-4124-9646-b6719dad8ec0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af56368-704b-45be-b73a-ef5bd36ca073",
        "cursor": {
          "ref": "6fd98611-fb45-46bc-acbc-f754884efa1d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "49999626-fe0b-4cd5-abfa-17094782c1e6"
        },
        "item": {
          "id": "0af56368-704b-45be-b73a-ef5bd36ca073",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4889d426-29ba-4124-9646-b6719dad8ec0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dddc97d-92a0-4f52-aebd-a25842b18b19",
        "cursor": {
          "ref": "ab9f53bb-8b9d-4171-b562-9ea7bc04b323",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "10f92ebf-f155-4e55-ada3-e4442678fe21"
        },
        "item": {
          "id": "5dddc97d-92a0-4f52-aebd-a25842b18b19",
          "name": "identifiers"
        },
        "response": {
          "id": "91cfa6d4-d177-40a9-acfb-6096094c3d82",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff14ec7-e855-4eee-be45-414a28537b7a",
        "cursor": {
          "ref": "6407469f-7fed-40d3-ad31-186a9dc2e789",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b06fd75f-eb1f-4c3c-95e0-f313bf0d1dac"
        },
        "item": {
          "id": "eff14ec7-e855-4eee-be45-414a28537b7a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99ff42d3-c56e-4868-b8f9-9fb6e1a166eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff14ec7-e855-4eee-be45-414a28537b7a",
        "cursor": {
          "ref": "6407469f-7fed-40d3-ad31-186a9dc2e789",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b06fd75f-eb1f-4c3c-95e0-f313bf0d1dac"
        },
        "item": {
          "id": "eff14ec7-e855-4eee-be45-414a28537b7a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99ff42d3-c56e-4868-b8f9-9fb6e1a166eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ecefd6-4dd2-47bb-8d90-5329d0a6ca1f",
        "cursor": {
          "ref": "57e7e065-a5f8-4f37-af2c-fe0565b4bcce",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9469285e-cb51-4882-93c5-4c5f47c45823"
        },
        "item": {
          "id": "10ecefd6-4dd2-47bb-8d90-5329d0a6ca1f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2369e6f3-b86d-474e-a56b-52056c831d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d28e593-6007-4425-bd03-4062d496ab12",
        "cursor": {
          "ref": "a00cc6e3-2937-426b-a28e-58b6be6f6b4f",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cb2e1e8d-7e79-4fe3-bf51-301d980bd4c8"
        },
        "item": {
          "id": "5d28e593-6007-4425-bd03-4062d496ab12",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "878dc402-bacb-4675-af20-e083ad21153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0873e7-fceb-40c1-b8d4-7d07593cd8b9",
        "cursor": {
          "ref": "6ed0e1d4-5746-4908-a24d-230d914a63ae",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ad407157-5a76-45f9-b741-9f0679820422"
        },
        "item": {
          "id": "fa0873e7-fceb-40c1-b8d4-7d07593cd8b9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1fa140e8-1b20-4204-8cce-96f5e60f0b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac9756a-9f42-4b43-967f-edb594f148ea",
        "cursor": {
          "ref": "06aeef37-63a2-4f6f-8c5b-41fe0ae03074",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2b4112b8-e01f-4fe3-bbb6-81af71a2be0a"
        },
        "item": {
          "id": "1ac9756a-9f42-4b43-967f-edb594f148ea",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bd085daa-5717-4bfc-99d8-a56a6eff2785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4785a9e6-962e-49a3-8431-480a4f9929c6",
        "cursor": {
          "ref": "0b538e4d-ff5c-4e9b-ae97-7630826bed0d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b9691469-e618-4af1-9f4e-20c88c905a8e"
        },
        "item": {
          "id": "4785a9e6-962e-49a3-8431-480a4f9929c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4fdc7cf0-001f-411b-99e2-6eb95a5d036f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5a9261-1119-4fa6-b4e8-fb991acb2557",
        "cursor": {
          "ref": "b159f05b-66e0-48e4-aa3b-c97a6a1f2e06",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9729faf6-fa7a-40f7-a70b-f02989957d79"
        },
        "item": {
          "id": "fb5a9261-1119-4fa6-b4e8-fb991acb2557",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7998ebaa-b97d-491a-ad4c-f50069d92bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b7a54a-6166-47c6-b150-0d69bac44709",
        "cursor": {
          "ref": "368b7c9d-7207-43bb-9227-7ee070bc2af0",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "73a57fc7-5a55-40d4-8098-8f7aef3326ac"
        },
        "item": {
          "id": "29b7a54a-6166-47c6-b150-0d69bac44709",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "77d9374b-8ca4-44c4-b68b-4bf70b67f8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c8cd68-629d-4635-a5eb-f8d6c2446d6a",
        "cursor": {
          "ref": "fdcdf296-76d3-4c40-bbe1-09dbb81b8c4d",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d32c1e6c-e57a-4362-9fd0-0b789956c7d5"
        },
        "item": {
          "id": "f9c8cd68-629d-4635-a5eb-f8d6c2446d6a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bae26b37-1f01-4086-910b-9ef0e5c0099c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0819394a-e5e8-4b8c-b5bd-94b89d8e72a4",
        "cursor": {
          "ref": "11bf11a1-9723-4cd5-9b09-d1825d66d80d",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9bdf2260-cfef-438a-b1f5-92f85a972975"
        },
        "item": {
          "id": "0819394a-e5e8-4b8c-b5bd-94b89d8e72a4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5781f1ea-3617-4498-a0a0-a534e697e254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99740379-1465-48e1-a1f0-53a3e32b169c",
        "cursor": {
          "ref": "981829d7-1169-44b4-8ebf-7b1eb1af093d",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f2fb992e-4699-4068-af16-4be0651c1612"
        },
        "item": {
          "id": "99740379-1465-48e1-a1f0-53a3e32b169c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "66c60e96-ed3f-4530-a9e4-78dc013b0bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ef4379-6a7a-4bbe-9142-efa36a544e5b",
        "cursor": {
          "ref": "cd0a787b-65a3-45b0-b184-2657c3b5327e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9edc9374-984f-4a12-8d5f-f4f43bd648d7"
        },
        "item": {
          "id": "b1ef4379-6a7a-4bbe-9142-efa36a544e5b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "29b0d8bc-9564-4a1e-83a2-f8f8f65de39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23664fab-c403-46e2-bd49-b1881757d0c0",
        "cursor": {
          "ref": "3cce3930-b41a-40d4-acfa-f7ab1eb0e23f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0e0fdb3f-a958-41e2-92d1-5622172b272b"
        },
        "item": {
          "id": "23664fab-c403-46e2-bd49-b1881757d0c0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "107c257f-c8ae-45d4-b00d-948f6c7e3423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738ae101-88e4-4c58-932d-a831febede86",
        "cursor": {
          "ref": "38461bb9-c4a5-4b9e-a3a0-9674f0ff72d0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7b3c54af-59aa-437c-a933-209b48927cf4"
        },
        "item": {
          "id": "738ae101-88e4-4c58-932d-a831febede86",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3db62051-79f6-49a8-bbd2-84a60767fee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9363724-1aa6-4748-ae80-47161322e670",
        "cursor": {
          "ref": "14ecb638-a6fb-48fe-9f3b-78ed7201e73c",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f84e4f57-e343-4015-810c-c23885f08f80"
        },
        "item": {
          "id": "d9363724-1aa6-4748-ae80-47161322e670",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "899c6364-4cf5-4d6c-b026-8cca568be137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8c3c49-5be1-4859-b8c2-b5159da1545f",
        "cursor": {
          "ref": "3ad803b8-f492-40a5-8aac-3736633f6de0",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d6167a37-3885-469b-b08f-5cb55e546c6e"
        },
        "item": {
          "id": "bd8c3c49-5be1-4859-b8c2-b5159da1545f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "34529a37-268e-47a2-881b-1bcfd6de65cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c3f25a-4537-43ef-af4a-01f5a83f8ee6",
        "cursor": {
          "ref": "2022b3bc-5683-4672-b514-310d8723a123",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ef53c241-ac22-41a6-be5d-04a16e55b2ed"
        },
        "item": {
          "id": "84c3f25a-4537-43ef-af4a-01f5a83f8ee6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1d50e179-1fa9-4296-ac1d-e6b620a69afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aed8a59-2bf7-4c47-ada4-1ce6473cfd69",
        "cursor": {
          "ref": "90b20482-9a3a-4ea0-9e71-c40b8a447708",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "742a459f-4036-4eba-8d40-cbf214cf5380"
        },
        "item": {
          "id": "8aed8a59-2bf7-4c47-ada4-1ce6473cfd69",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "abb9b489-e27a-42b2-bf6d-a1f26fa5b3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ea32cc-0599-4a0e-8ea9-c74418de6c1a",
        "cursor": {
          "ref": "a05c100a-b96e-4cb7-90fe-665f5d626f7e",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "96057136-e96f-4ea4-92b0-3daac1700a8b"
        },
        "item": {
          "id": "62ea32cc-0599-4a0e-8ea9-c74418de6c1a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f15aebdd-667a-43c5-829a-662539b52963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5a20dc-a783-4dbc-b1c3-5567b7c9719d",
        "cursor": {
          "ref": "0a019b4f-7fc7-47d4-a576-4cce57f3f136",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4483f796-d829-4de5-a148-d34574288486"
        },
        "item": {
          "id": "7a5a20dc-a783-4dbc-b1c3-5567b7c9719d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "07804b23-0abc-452c-ba5e-13f599d7de56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee43962-8742-44a0-9cb5-cabdc6e7ea6f",
        "cursor": {
          "ref": "63fd5294-a1fa-4af5-b90d-98c992c329e5",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bee6ab9e-e394-486a-983d-37fd8e1df117"
        },
        "item": {
          "id": "2ee43962-8742-44a0-9cb5-cabdc6e7ea6f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "26538594-159d-4825-b422-6f1bcd41e21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e631ed90-5412-4e5e-a0dd-82804a6b769c",
        "cursor": {
          "ref": "163f071e-7f3f-48f0-8135-a4ac357f69a8",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "501289f4-9f83-4704-b834-d3c8573e4134"
        },
        "item": {
          "id": "e631ed90-5412-4e5e-a0dd-82804a6b769c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "572aa130-7720-455e-b30f-13bc1db5ca71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a08714-fcd0-4b5b-8807-6225e834a0e6",
        "cursor": {
          "ref": "6deccb50-b00e-492a-a94d-c2a0dbc8b06f",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "34947ffb-f056-4950-9279-6bbbdabca196"
        },
        "item": {
          "id": "57a08714-fcd0-4b5b-8807-6225e834a0e6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a4f31a58-1842-4c5b-908f-b3568ea7787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc2a3c9-0672-41ac-b4e2-34789fda2762",
        "cursor": {
          "ref": "4c483487-0277-4ad0-af1b-79d711cf3515",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f152015b-cddc-4106-95b8-fbf417c36568"
        },
        "item": {
          "id": "4dc2a3c9-0672-41ac-b4e2-34789fda2762",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c5a723c2-9b6c-40ea-bb0b-1898d829c6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1c1a69-af52-4465-a9e1-9db1975f54ea",
        "cursor": {
          "ref": "fec1d957-75ff-4a94-8147-3eda1b0ca104",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f5998bb1-1811-4da4-b424-b10689653527"
        },
        "item": {
          "id": "0a1c1a69-af52-4465-a9e1-9db1975f54ea",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3a588a9f-3e92-43a0-b8c3-0aff6a22d596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252bf27a-f78d-4019-bf06-58d8791c9f13",
        "cursor": {
          "ref": "d4bc333e-6a03-42ec-baf3-5923ffbce257",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3c7abcaa-c101-428d-bf61-2054eed1276d"
        },
        "item": {
          "id": "252bf27a-f78d-4019-bf06-58d8791c9f13",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "01c0ee88-e57c-4ae9-9469-fd8d9a39b2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426bd89b-d587-410a-8546-4cf62a38fdd1",
        "cursor": {
          "ref": "c9a3f549-6b68-4841-8aac-f3631a682c5e",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5898c5c7-8783-475a-90d0-cbe08116c3fa"
        },
        "item": {
          "id": "426bd89b-d587-410a-8546-4cf62a38fdd1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ac3d2bad-a518-4f9d-9075-c0e8e58e4ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a4d1f0-d414-4112-8347-beb0795cdccf",
        "cursor": {
          "ref": "08694d01-320d-44dc-8219-4b769b609219",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0aed5df9-62f3-4800-8fa0-141306398a82"
        },
        "item": {
          "id": "34a4d1f0-d414-4112-8347-beb0795cdccf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "78bf3f66-c920-40d3-ae70-55c044686db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c93f616-1bc9-4d1d-91c0-30dbf1218366",
        "cursor": {
          "ref": "4e27d760-4b51-48cd-b3e4-a0b2d5b4ad7b",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "63fd6966-638b-4e4d-b624-b9cc76eaec84"
        },
        "item": {
          "id": "6c93f616-1bc9-4d1d-91c0-30dbf1218366",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2ffd5b55-6bb0-469e-93a4-061127f699a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1335f5-08d9-48ef-b7b4-5bdc70948ccc",
        "cursor": {
          "ref": "561b3d35-a928-4106-bd62-ba071fe3c7af",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bfe2bbc4-6553-4f21-abaa-7bc87740591e"
        },
        "item": {
          "id": "9b1335f5-08d9-48ef-b7b4-5bdc70948ccc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "929c7956-62c9-4af4-b308-1f4d74808482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db67aa9e-4533-436a-82c1-34df7c27a9ce",
        "cursor": {
          "ref": "6efd7d24-71a8-4635-8420-a8fd5d86a14a",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3bd8a47f-befb-490a-8138-87a6bd782306"
        },
        "item": {
          "id": "db67aa9e-4533-436a-82c1-34df7c27a9ce",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "741f2016-c6ee-46b3-b2ae-c6108ad80a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3296d3f0-3388-490f-946b-822c67041cda",
        "cursor": {
          "ref": "908c18b3-f30e-4245-baf9-72fa365c8c84",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "40d9f9db-7d8d-4b6a-aa9c-fa1fb6a151ec"
        },
        "item": {
          "id": "3296d3f0-3388-490f-946b-822c67041cda",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "179a1663-a2b3-45ed-b511-8996cab24416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b355131-cd7f-4818-a9af-3ddb4b7e7688",
        "cursor": {
          "ref": "888bc342-bb42-4582-9034-fb57636e0fad",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9d563da6-3053-4795-9cef-7d1b75efcec6"
        },
        "item": {
          "id": "3b355131-cd7f-4818-a9af-3ddb4b7e7688",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "89024ca1-b3cc-45b2-96ef-a4d3e00ebdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a3ff3a-c864-46fa-abbb-4b6c3f3f33f0",
        "cursor": {
          "ref": "71c5a3f4-d056-4a08-8458-e7f17d9d69b0",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "910f2106-ae7e-47d8-8aab-1a6d40bfd4c5"
        },
        "item": {
          "id": "f7a3ff3a-c864-46fa-abbb-4b6c3f3f33f0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "421b9649-0e49-46d4-95ea-3b23199c43d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524e102a-5fb9-437c-97b2-920279370416",
        "cursor": {
          "ref": "ccfe0cd3-4804-422c-b4d2-5b485eb4966f",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0c6eb98b-2da5-4ced-9392-9aa10001f383"
        },
        "item": {
          "id": "524e102a-5fb9-437c-97b2-920279370416",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "57cafc4f-7683-4f67-99b2-f1550a790468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9965bb5e-effa-4c97-b8c6-29437abd0719",
        "cursor": {
          "ref": "5cf362f4-fe02-47c2-bcb6-7f77129887f8",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b7e60499-b88f-4b11-adcc-98d508f16bbb"
        },
        "item": {
          "id": "9965bb5e-effa-4c97-b8c6-29437abd0719",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "62b98e40-78cb-490a-be5a-38781aec63bd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eeaf81-2382-413b-ad03-19155b66d9a3",
        "cursor": {
          "ref": "0132aee5-92f0-4ca9-922b-0d3da985b080",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3906c419-d1b0-484c-a20c-b9f7a770185e"
        },
        "item": {
          "id": "a6eeaf81-2382-413b-ad03-19155b66d9a3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9123f50c-ede4-4a38-b728-f4ffd45ad09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbd46e2-a1ad-4e87-a3cb-8df9b9ae23c1",
        "cursor": {
          "ref": "00ea5042-d0fb-4674-8b74-8e8e5fac9774",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9ec5fc72-ed43-4440-9ebf-29ec1a5dbbac"
        },
        "item": {
          "id": "6cbd46e2-a1ad-4e87-a3cb-8df9b9ae23c1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c26403e2-7920-45b7-bc7c-93add6e47e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7696b1b6-ea6b-4612-a71b-f4e3e2e7772b",
        "cursor": {
          "ref": "c1101a74-569e-42e5-a5e1-d3b85144d320",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "17242a98-b7fc-4215-92ef-dc559653c40b"
        },
        "item": {
          "id": "7696b1b6-ea6b-4612-a71b-f4e3e2e7772b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "abf10278-796e-496f-ac6d-1b6c8071c439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a287fa-a17f-482e-8a12-70b717f1cf06",
        "cursor": {
          "ref": "d241ffc9-dab2-40dd-b957-f066ef607acd",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c9e8ed13-759a-4616-b446-9dedcc0bc072"
        },
        "item": {
          "id": "71a287fa-a17f-482e-8a12-70b717f1cf06",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "231cb96a-4bb1-4e16-bd74-a4aa07edf650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0272b8-3fa9-4cf9-87e0-fbab032c6992",
        "cursor": {
          "ref": "7d5dee11-9e7c-44b6-ac92-22fabaa952a8",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c793503b-b3e6-4053-817e-2190149bd7be"
        },
        "item": {
          "id": "ae0272b8-3fa9-4cf9-87e0-fbab032c6992",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "83c22ead-b218-4d87-9b1e-1ae2cfc54690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00559d96-9f1b-4a8c-99c5-118f2c6f93f3",
        "cursor": {
          "ref": "ef34c054-6a2d-439d-affd-042d6269dd11",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cd0975cb-9965-4b05-8188-ac22619a19f1"
        },
        "item": {
          "id": "00559d96-9f1b-4a8c-99c5-118f2c6f93f3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7e233735-fa1e-44c7-8d7d-9d6f9c3198e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd1646b-93f3-495c-bf65-48f425f5ac2e",
        "cursor": {
          "ref": "ff0b13a9-c5a6-4734-ba7a-537445229060",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "22942ec3-0cd6-475d-b6f5-616019f9445c"
        },
        "item": {
          "id": "edd1646b-93f3-495c-bf65-48f425f5ac2e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ff3843d8-fae7-4069-b124-d0876aa1f640",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e026a786-319e-47bc-b387-418d89fcd159",
        "cursor": {
          "ref": "fd205219-43c6-4196-bdf5-c0bc1e092127",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "69250964-7c66-4abd-b615-b51e858ab79b"
        },
        "item": {
          "id": "e026a786-319e-47bc-b387-418d89fcd159",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "97abd3c3-b25f-48a1-9fe1-d9cee7120e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8091d568-0279-41d3-bb97-ca3f852ba6cf",
        "cursor": {
          "ref": "ba182589-bbc2-440b-af4b-bdc2232a9cf1",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "051b2ab5-40ab-4b99-9aa9-3815c14cbb58"
        },
        "item": {
          "id": "8091d568-0279-41d3-bb97-ca3f852ba6cf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cac797c6-d148-4bdc-baf7-0884f52b9bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f78951-5a75-4d8d-870b-6eb3191bc907",
        "cursor": {
          "ref": "9b392617-8896-48bf-997b-2ee28aa0cb70",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "27052e2b-3c3c-40ca-b0df-d47872e5b6e0"
        },
        "item": {
          "id": "80f78951-5a75-4d8d-870b-6eb3191bc907",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e5c4056f-532e-458c-8476-828c4ee74711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ef69b1-6a4d-400a-b074-113012dc579c",
        "cursor": {
          "ref": "fd6af693-1333-4c35-82ea-f658fccee918",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d1f295bf-df08-404d-a9c6-25ed180053f2"
        },
        "item": {
          "id": "77ef69b1-6a4d-400a-b074-113012dc579c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "96a5c893-42ed-494a-a5e8-b13d9dd56bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a521943-cd32-429e-975f-0d0a8411d036",
        "cursor": {
          "ref": "f08c2b10-a025-4ace-9d6a-0d05f8a86ad9",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c97292b9-fdb4-4ac8-8a4d-dde25583c42a"
        },
        "item": {
          "id": "6a521943-cd32-429e-975f-0d0a8411d036",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ffcee966-8897-42a7-9a8e-15166a7baaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b320d4ce-7566-4cc4-97ce-d8a4b3e52cc1",
        "cursor": {
          "ref": "6a25777f-c030-4250-b63f-8e7717c81d0d",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "db548546-6adb-4a7e-9ec3-b2d1f1e6dbf3"
        },
        "item": {
          "id": "b320d4ce-7566-4cc4-97ce-d8a4b3e52cc1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7b54577d-1937-462d-bbce-027e7a9ddbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05439e7d-d4cf-408d-abd5-4ae396a31c29",
        "cursor": {
          "ref": "ee4b1873-c13f-4f90-84a9-3e2c20b514bc",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f63ada76-3296-41ed-871c-be01bc934f18"
        },
        "item": {
          "id": "05439e7d-d4cf-408d-abd5-4ae396a31c29",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "39e7c9d3-f045-48c8-8c02-cb9e47a1fd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb407370-97eb-467d-a4b9-4e955abf230a",
        "cursor": {
          "ref": "3fa7b727-8c70-4bb4-b5d4-d4ed0e6e8cc3",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "40a9bd40-3c74-4e33-baff-4a087c7e0c61"
        },
        "item": {
          "id": "bb407370-97eb-467d-a4b9-4e955abf230a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4a1c37a3-39ae-46e0-baa0-8cad1dc17f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74139e4-7f49-4376-be00-84a2c27d30f1",
        "cursor": {
          "ref": "1b81a8c6-1891-489e-93fa-918f215e93cd",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d1f76d8a-c69a-42f6-9cff-ee10fbd06294"
        },
        "item": {
          "id": "a74139e4-7f49-4376-be00-84a2c27d30f1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "367e74a8-351d-429d-9860-4a773e8bdaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849f4357-7252-4c5c-936c-9ad4c528567c",
        "cursor": {
          "ref": "5d591a9d-accc-4a59-a335-65c042c11ed5",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5f3785f0-171b-448f-8e7b-0e1a6ac8afcb"
        },
        "item": {
          "id": "849f4357-7252-4c5c-936c-9ad4c528567c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "da7280d2-7e09-412e-9b75-92eb285d4cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e93275e-c922-4c4e-943f-b32d6a2514cf",
        "cursor": {
          "ref": "2d932cba-5c59-442a-9fff-f56a88cbfb71",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3c2f52bf-1bc6-4d96-a422-88145380eb9c"
        },
        "item": {
          "id": "9e93275e-c922-4c4e-943f-b32d6a2514cf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8561317e-8830-461d-a803-72cf48f7a75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf9abdc-b6b5-48b3-8f73-02d591e1f877",
        "cursor": {
          "ref": "85118121-1807-494f-acb5-e492af79b404",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fade4507-20ea-4aad-9f36-ec9e66aedbfa"
        },
        "item": {
          "id": "caf9abdc-b6b5-48b3-8f73-02d591e1f877",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0bd6dccc-9c5c-425c-9970-d863b56fe5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4185e85-edde-4141-a001-8085e8618001",
        "cursor": {
          "ref": "6ee1d1ed-09f1-4a46-a2d7-c83425c138a4",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "460e399f-018b-4a27-bcff-bf8f3d256524"
        },
        "item": {
          "id": "d4185e85-edde-4141-a001-8085e8618001",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cd5a889b-825d-411d-8ffc-942352dc9374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19303740-5046-48d3-a72b-bd4832329907",
        "cursor": {
          "ref": "576614ce-5a04-4253-bdeb-27c1717f352e",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ed765bbd-7b86-4e85-aa8f-9a3f2e8838d7"
        },
        "item": {
          "id": "19303740-5046-48d3-a72b-bd4832329907",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f90773e9-877a-435e-a524-4499be886af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485f3e4d-9e67-436a-9ab0-8ab4058cb927",
        "cursor": {
          "ref": "3e51b7ca-3139-458b-9d57-98f1df2a8edd",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f1e0ed4e-2fd3-4ba8-a57d-a3c546dbc39a"
        },
        "item": {
          "id": "485f3e4d-9e67-436a-9ab0-8ab4058cb927",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "91082621-71db-4f5a-9d14-19c82d9bef0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca31d8a-f79c-4449-bad0-25462a7ce485",
        "cursor": {
          "ref": "53974832-8e6c-4f0a-ad43-30483283e106",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1ed974b7-6dbc-418c-8cff-471fe8fee9fb"
        },
        "item": {
          "id": "9ca31d8a-f79c-4449-bad0-25462a7ce485",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7e0a751d-6e1e-428f-b2bb-db729c9d4f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a45c11-0af1-449d-bca9-2ae6df973f39",
        "cursor": {
          "ref": "1a75277a-b611-4280-a02d-f6e3058b9d1f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "524a5f4d-0c05-48a9-884d-9e84105eb741"
        },
        "item": {
          "id": "11a45c11-0af1-449d-bca9-2ae6df973f39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4c2fd6e9-b64d-4a43-a35b-df5d0fceae4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489a7d53-2ff3-4fbe-80c1-98c90880de03",
        "cursor": {
          "ref": "5578ba02-7a7a-4fb4-8656-c2bccbcf1361",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "777d9701-f49a-4658-a5e4-fd61045c3dc7"
        },
        "item": {
          "id": "489a7d53-2ff3-4fbe-80c1-98c90880de03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0b1f4a34-d4c7-43a2-918a-f37bbc58874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c0c905-cf73-4b04-87c9-8150c1d6406e",
        "cursor": {
          "ref": "3707d0af-a017-4ebe-8b5a-d2d99add8beb",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9fd75a4e-16cb-41f3-9a6d-1d6ea29bd973"
        },
        "item": {
          "id": "d5c0c905-cf73-4b04-87c9-8150c1d6406e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "46d6fd11-a817-4a66-a67d-26d92145a9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0cb74f-77fc-42d1-b539-583ad7a4973d",
        "cursor": {
          "ref": "a2d23c51-033b-411f-90a2-a38f6fd5d9ac",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c8044bfe-ebc0-45d1-8e7f-cd6f57bb8435"
        },
        "item": {
          "id": "0b0cb74f-77fc-42d1-b539-583ad7a4973d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4fced8ba-3af6-4fbc-9fe9-2061482776ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b689385-168f-4dbd-b4ca-b5669093a582",
        "cursor": {
          "ref": "0362234a-8a39-4b4a-a636-945e9ebd8623",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "44e0b742-439c-4f95-944b-d91f13a8fe83"
        },
        "item": {
          "id": "3b689385-168f-4dbd-b4ca-b5669093a582",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d2933061-d651-4f61-99fe-70d541ddfa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad9d51-9132-4a94-aab1-495d436bab3d",
        "cursor": {
          "ref": "06bec86f-31d0-4044-b610-f0b7f3ef2625",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "94bac277-0972-4e1b-b950-8a4809c57d98"
        },
        "item": {
          "id": "99ad9d51-9132-4a94-aab1-495d436bab3d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ad13052b-cecb-4c89-9c36-6c46865243d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2218a12e-d4d1-47e5-9018-cd06d84d5fc1",
        "cursor": {
          "ref": "69a55d29-70ba-4145-9ad0-998bfec8c40d",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1e0713d1-22eb-4f7a-98ba-c56f183a0fe1"
        },
        "item": {
          "id": "2218a12e-d4d1-47e5-9018-cd06d84d5fc1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a4b682d7-0152-420a-a9d5-9c8ee7c0950c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e9922a-1fa1-4f5a-898d-e25d339faebd",
        "cursor": {
          "ref": "85a9fc48-979c-44e3-825f-ed22970ec527",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d335f126-d673-4613-9d5c-b91d17698169"
        },
        "item": {
          "id": "b6e9922a-1fa1-4f5a-898d-e25d339faebd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e83d9cae-2a97-413c-a6fd-f8bfc91f1d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badd7e16-d51b-43e9-9e7b-aabb8a0eff7c",
        "cursor": {
          "ref": "ff2a232a-6c8a-4866-b603-41c79acdc9eb",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d504cdc5-748b-4a4f-b388-0d863afbc36c"
        },
        "item": {
          "id": "badd7e16-d51b-43e9-9e7b-aabb8a0eff7c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2d36ee95-761c-41ca-bbd6-46ec830a1ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ac325a-37d0-47c0-8a2e-d7b6737f8291",
        "cursor": {
          "ref": "9c0715d6-fc8b-4b63-a30b-1ecdb4282c9d",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1d8c8838-4aed-466b-b50c-e886b64f326b"
        },
        "item": {
          "id": "f5ac325a-37d0-47c0-8a2e-d7b6737f8291",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6f11640a-0d9c-4710-914f-da5f680730e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b901270-0dec-4096-b177-bfdd03b2d2f9",
        "cursor": {
          "ref": "cd982a98-6f85-44ba-968a-2237d4caac7d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "02285e8f-e8de-4b42-b668-ff17e5c8ed7b"
        },
        "item": {
          "id": "6b901270-0dec-4096-b177-bfdd03b2d2f9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dd4501a1-bc4a-4c30-a826-38ac4b77b33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f0dfe2-7f4d-44d4-9220-a70ecbe9c13c",
        "cursor": {
          "ref": "d78d0139-3976-4fbe-baf1-8358e28ef442",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5382ba93-0963-4afb-89fa-7bfac6cfb27e"
        },
        "item": {
          "id": "e1f0dfe2-7f4d-44d4-9220-a70ecbe9c13c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c856c99e-db7f-41b9-9c3b-321a96296e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0cd005-7513-45bc-889b-a4bd184600c8",
        "cursor": {
          "ref": "59753d0d-2964-464d-b493-60fce6749ef9",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0cc1c0ae-7429-4f44-b3b1-c4df56ff8777"
        },
        "item": {
          "id": "fc0cd005-7513-45bc-889b-a4bd184600c8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7901c1a8-6c91-408e-a07b-5ce444ecc3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2df2fa-ce48-4eb2-9196-20b6a44cfb35",
        "cursor": {
          "ref": "561cc818-ad93-444e-9ee3-2d2a8fbf4f98",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "147d7619-44ad-462d-8f3d-9e3e9ccdff05"
        },
        "item": {
          "id": "ff2df2fa-ce48-4eb2-9196-20b6a44cfb35",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e23f44e1-33cc-4436-bf23-cfd990be1570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec028ba2-b5a8-40a4-94a3-5ae2a297acbe",
        "cursor": {
          "ref": "dfd5e065-37dc-4eb8-9b29-fad5c2adcf30",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ffd021e4-8996-4179-a53f-55c1c2503a36"
        },
        "item": {
          "id": "ec028ba2-b5a8-40a4-94a3-5ae2a297acbe",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "93ec595a-0b3b-45f0-8bcc-52f09e075a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480d0daf-944d-4041-af75-94518518ea29",
        "cursor": {
          "ref": "778047c8-2f39-4b1a-befd-1c131ceef270",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b364128f-1300-48e4-955a-2b11675a924d"
        },
        "item": {
          "id": "480d0daf-944d-4041-af75-94518518ea29",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b695719b-9bff-4766-ad01-e4be3cc0e444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7471cc-0e6c-4f5f-8aef-d02357198629",
        "cursor": {
          "ref": "b3aba73f-0e8b-4fc2-a882-828971ca7e24",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9948ed4d-336a-4b02-8ff3-3b4f0ac46403"
        },
        "item": {
          "id": "aa7471cc-0e6c-4f5f-8aef-d02357198629",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6ac6005e-e291-40cf-b319-837f3d0ea19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2500bb-1926-4a36-b555-09f52d1a55ca",
        "cursor": {
          "ref": "8ab04162-4e4f-400d-afab-2f809e9df0c7",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eb37c595-f4f2-45d8-a4f6-f661b0e8b16d"
        },
        "item": {
          "id": "bb2500bb-1926-4a36-b555-09f52d1a55ca",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "046028f7-d221-4f02-9810-4ccdcb7225dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def5d7e0-d8b5-4ad0-aa17-bcfd3d862572",
        "cursor": {
          "ref": "53408a03-ad3b-40ee-8d56-eb118db9345b",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7dc93330-10bd-4c5e-be87-0cc2ad5b96bb"
        },
        "item": {
          "id": "def5d7e0-d8b5-4ad0-aa17-bcfd3d862572",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7db61803-b03f-413a-b205-133d62c88d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5f685d-d4b8-42cc-8e56-2878f7cb42d0",
        "cursor": {
          "ref": "eac62952-19a7-4e49-b00a-9d9daf9cf354",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b929c84d-334f-408f-8a01-f983afb522d2"
        },
        "item": {
          "id": "7b5f685d-d4b8-42cc-8e56-2878f7cb42d0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2fa96e7b-e633-454b-bf0f-ae555ab9c29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418ce465-30aa-43e3-b969-676320db495c",
        "cursor": {
          "ref": "3ce2fe44-7ce0-456d-9ea6-a8d15905d76c",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c087de22-a86b-400b-8e2d-55dc7e903235"
        },
        "item": {
          "id": "418ce465-30aa-43e3-b969-676320db495c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d6d2f944-7de1-4351-98f4-ac519cb4e60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5885955-4786-47da-9017-a8dbd2c496f8",
        "cursor": {
          "ref": "ead7114d-48e8-4496-95a5-397020c7cda4",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ad9a97d9-6562-4ec8-92b9-be6df02279c4"
        },
        "item": {
          "id": "c5885955-4786-47da-9017-a8dbd2c496f8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e6c2a76d-9c91-42ce-b23d-a78530ee44e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cf53ea-c734-4788-9a4e-2ef66ebcce78",
        "cursor": {
          "ref": "f75deb04-83a1-49c6-bf3b-72d993786eac",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2d9540cf-16f4-49b4-ac09-28481f61a16b"
        },
        "item": {
          "id": "a1cf53ea-c734-4788-9a4e-2ef66ebcce78",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fe826477-6979-494b-8526-ab830bafe1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a0cfc4-73a0-4449-984a-8e21ca73574a",
        "cursor": {
          "ref": "1e7d819f-022f-4b57-82b8-b0dc611cd544",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ed09c522-4d16-4f26-bb9e-d60da6d98044"
        },
        "item": {
          "id": "56a0cfc4-73a0-4449-984a-8e21ca73574a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "137ccb4c-33cb-4a65-8eb3-d5d0952828d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f933c0-b9b1-44c5-9071-43db153232ff",
        "cursor": {
          "ref": "9216f451-3de4-43b6-9309-a9726aa1a2fd",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0ae0242d-9ae8-4008-8bd4-50a5319de48a"
        },
        "item": {
          "id": "c3f933c0-b9b1-44c5-9071-43db153232ff",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dca18b71-6e08-4079-bbd7-6ce4f3621e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c79662-e694-47f6-9b6a-8cc50918486f",
        "cursor": {
          "ref": "07409afe-7cc3-4ea1-9f55-02a6b1b52c78",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0eb66bbb-9432-4946-b052-f7aed2750274"
        },
        "item": {
          "id": "86c79662-e694-47f6-9b6a-8cc50918486f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bb281f94-e8a8-4f44-afea-76daf2b80fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4635b951-a8db-4ace-ba3f-5e4288391158",
        "cursor": {
          "ref": "2e021518-e24d-47a9-a037-3ae47195f261",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7e1c60ad-e99e-4eb0-b3e2-9950584c31d9"
        },
        "item": {
          "id": "4635b951-a8db-4ace-ba3f-5e4288391158",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f59bf41a-392a-45ed-8ce6-afe252bfcc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13964ab9-a848-4183-be9b-81083432b209",
        "cursor": {
          "ref": "566ccf73-1d4c-4693-8628-2c0c18af16d2",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "24cb3847-062d-48e6-85b6-b97cb6aa2bb1"
        },
        "item": {
          "id": "13964ab9-a848-4183-be9b-81083432b209",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5ee2ee92-0511-420c-9634-5e5bbc18d14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857dbae8-5df6-4406-8f7f-6b7d39bf9a0d",
        "cursor": {
          "ref": "df318584-f220-4d62-a6ee-69b6077eae26",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1fb13404-0c4a-488e-bfca-875d84f95375"
        },
        "item": {
          "id": "857dbae8-5df6-4406-8f7f-6b7d39bf9a0d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fc0beb5d-0077-4bf1-9717-6dc5590c321c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffe6164-799d-4e4b-9fea-87ce5361be97",
        "cursor": {
          "ref": "0291330f-1aeb-43d5-8996-817a1a874c71",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4dc085ec-cd3d-48f4-bf99-d48ad00ebf41"
        },
        "item": {
          "id": "6ffe6164-799d-4e4b-9fea-87ce5361be97",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "604d0ab7-f0f2-436a-8fb0-239ecee46ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcf33ea-a37d-490d-b33d-138c9cffaab5",
        "cursor": {
          "ref": "483b480b-9a05-4f8f-9990-5fe095a86ef1",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a6e97d57-0eb1-46a5-836d-d2477218c212"
        },
        "item": {
          "id": "5bcf33ea-a37d-490d-b33d-138c9cffaab5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e3d610b3-39aa-445b-b14a-c46f8ae99974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e29757-6a26-4889-b262-c67a0a4118fa",
        "cursor": {
          "ref": "f61829a6-487b-4346-bd5a-475cf5736f3e",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "49785358-3c6d-4043-9900-678e5766ca78"
        },
        "item": {
          "id": "16e29757-6a26-4889-b262-c67a0a4118fa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5e6e2c90-2753-488e-9b96-251773beb2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbdaa95-45a4-435c-bde4-b25b80665b97",
        "cursor": {
          "ref": "0aaa4941-9a7d-44ad-9f6c-f9038113a241",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2fc147fa-9da6-4fe9-babe-13842afef54a"
        },
        "item": {
          "id": "3dbdaa95-45a4-435c-bde4-b25b80665b97",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b9a37dcb-ff62-49c2-ac65-b568d74a355f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eb139d-030b-499a-b6b2-7161303b3e17",
        "cursor": {
          "ref": "4b01f5a4-19d5-46d9-a819-34be5ea88151",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "59427dea-d8e3-4c6a-93cb-5469755eae87"
        },
        "item": {
          "id": "a6eb139d-030b-499a-b6b2-7161303b3e17",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c972c3e7-89df-4a16-8bb1-8e6bdf23e392",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeef988-db33-49aa-8b2c-b4d043b9ff70",
        "cursor": {
          "ref": "029e11d9-dd6d-469d-ba38-47959b471a11",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "306fac58-cb62-422a-8c16-b0379d2fa0e4"
        },
        "item": {
          "id": "7aeef988-db33-49aa-8b2c-b4d043b9ff70",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9cb5b985-65a8-4014-a260-d5f0f7d065b2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 149,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3ed6f5-3917-4663-a3e5-2e026f786ab5",
        "cursor": {
          "ref": "75c2b883-8b4a-4726-96ce-fdbfdc71ca32",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d4a2f91d-a8ec-4410-85ad-c885b8b44734"
        },
        "item": {
          "id": "6a3ed6f5-3917-4663-a3e5-2e026f786ab5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7c86b922-9e18-4d90-b121-34a2d2ff08c5",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "67de193f-3bae-482e-a5cc-c43af7ddae25",
        "cursor": {
          "ref": "2f7dcbcf-cd8b-4473-8154-fa5416cf7b6c",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4341702a-1d54-4032-a328-93ed7afbc964"
        },
        "item": {
          "id": "67de193f-3bae-482e-a5cc-c43af7ddae25",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3f54ce87-0bc2-46b6-bef2-94d1414d5235",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "365a3b14-ad55-4c1d-a5ca-37f535fb6291",
        "cursor": {
          "ref": "9766e05c-d45d-4922-bdda-6195ca868b96",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "71619731-864c-4477-b251-1e0fe9ee0bf9"
        },
        "item": {
          "id": "365a3b14-ad55-4c1d-a5ca-37f535fb6291",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a79acea4-737b-45da-9190-1bc0414ff6c8",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "073e19e2-4e72-400a-b641-a863999f5333",
        "cursor": {
          "ref": "e65e3cfb-9cd8-4b3a-8a79-00114186b7a6",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9a834b41-88ac-4414-b8d1-439fe34b41d6"
        },
        "item": {
          "id": "073e19e2-4e72-400a-b641-a863999f5333",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3b930382-3fbe-4b45-bfad-cd295162e66b",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c71b7e-99a9-4a52-a3e1-f328fbbd99da",
        "cursor": {
          "ref": "f0ca566e-3f69-4025-8f29-405a25681e97",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "336ea280-dc3a-4791-8d66-49854d025e02"
        },
        "item": {
          "id": "11c71b7e-99a9-4a52-a3e1-f328fbbd99da",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6bd8a963-1c6b-425e-be01-ee6af6fff38e",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fe095a-3ebe-44bd-9da2-16f20cf446df",
        "cursor": {
          "ref": "9cb8418f-d72f-4f51-8398-a23539a63ae8",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ca524d0-c075-45bd-b90e-28c75ee40c71"
        },
        "item": {
          "id": "48fe095a-3ebe-44bd-9da2-16f20cf446df",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "60e4d899-025a-4851-8020-ebc707b0cd86",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8001da3-5e1b-4c34-ad58-44871be29b02",
        "cursor": {
          "ref": "fb0ab914-1d25-4573-8a3d-04d9db7d302e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d55f4ddf-1291-43fc-a3ba-1828271039c4"
        },
        "item": {
          "id": "c8001da3-5e1b-4c34-ad58-44871be29b02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c82fc58-f0d9-4bbe-b6d7-134d3b2abf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8001da3-5e1b-4c34-ad58-44871be29b02",
        "cursor": {
          "ref": "fb0ab914-1d25-4573-8a3d-04d9db7d302e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d55f4ddf-1291-43fc-a3ba-1828271039c4"
        },
        "item": {
          "id": "c8001da3-5e1b-4c34-ad58-44871be29b02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c82fc58-f0d9-4bbe-b6d7-134d3b2abf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cd4348-3e51-4f34-b71f-6d70e3ef7508",
        "cursor": {
          "ref": "4f7f5964-3ec2-4135-b3b1-f779f5cfe4a3",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5cbe45af-da4d-4c86-913d-7562df68beb5"
        },
        "item": {
          "id": "d7cd4348-3e51-4f34-b71f-6d70e3ef7508",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15736689-f9e3-45f0-8e47-d0a8ef0da827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ddc079-3f20-4f7b-a85e-6b8c63519e3e",
        "cursor": {
          "ref": "c12b2050-6a9e-4837-8962-144ed85af6d3",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "27b7fc24-2450-4c44-a8df-e1a9dd4157e2"
        },
        "item": {
          "id": "91ddc079-3f20-4f7b-a85e-6b8c63519e3e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "824b1513-4f85-4dfe-8863-61103db28d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e816e5-f9fe-4e92-80e3-8fa7282a5c7e",
        "cursor": {
          "ref": "e204dec5-7a97-4a08-9f74-16bf9277943e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a1438c21-7bde-456d-9396-058ef89682d2"
        },
        "item": {
          "id": "71e816e5-f9fe-4e92-80e3-8fa7282a5c7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c7d81f00-8211-4c96-a7ca-fa072540815a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1d1eed-f639-44a0-8201-700c2e95df17",
        "cursor": {
          "ref": "4ab0337a-b1c5-4f0a-b77d-83cd5e89ba77",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "17b7a154-d2a1-41d5-babe-faaffc2c77c0"
        },
        "item": {
          "id": "aa1d1eed-f639-44a0-8201-700c2e95df17",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc8c3123-3cc3-41cf-b8dc-344ef3fed1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550aecb8-645e-418d-bd61-d9e5ae940a7d",
        "cursor": {
          "ref": "72411678-9975-42b9-b582-27cef4680b7e",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0eac05ca-221e-447d-948d-3c723b1ad433"
        },
        "item": {
          "id": "550aecb8-645e-418d-bd61-d9e5ae940a7d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ccf290a-a483-4aa5-b2af-5d3048288e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2de79f-57d0-40cc-9144-0c81e002a57b",
        "cursor": {
          "ref": "4f184070-938e-4b92-b1e3-6810ddb4dd4e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0f524aed-f21a-4a40-8613-ba195c1985bc"
        },
        "item": {
          "id": "cb2de79f-57d0-40cc-9144-0c81e002a57b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "57d46f55-a05c-44de-abdc-54eaa22c06e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ad6196-bac6-4f5f-976b-e0c24165d449",
        "cursor": {
          "ref": "be896a7f-aa6b-47d0-b4be-af5fce784d6c",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8a092ee0-79ae-4fb0-bc1c-4d3df1dc4e82"
        },
        "item": {
          "id": "15ad6196-bac6-4f5f-976b-e0c24165d449",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c6d0842-f7ae-41a3-81a0-7b9a8b993561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b93b7b-90c6-4466-bbcc-e2e9128fc641",
        "cursor": {
          "ref": "ed343e77-17d6-4989-85d5-a4caddbdee13",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb328879-c3a5-451c-a3ff-948a48c85fc8"
        },
        "item": {
          "id": "74b93b7b-90c6-4466-bbcc-e2e9128fc641",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8902447a-eb40-4cf2-9c27-7fdb1f85ee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c881e3b-c63f-459d-baf8-ab9941828fab",
        "cursor": {
          "ref": "d1b174fd-28eb-4417-9efa-d075450d3183",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "24f08987-4ae2-4540-a317-7ff4a4ffc1d3"
        },
        "item": {
          "id": "6c881e3b-c63f-459d-baf8-ab9941828fab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5489e746-afc3-472b-99e4-9b92d8b0e520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6113a21a-a729-4a7e-8ef5-e84f03a69aa4",
        "cursor": {
          "ref": "613ca782-9af9-4311-91f8-fb5989473b8d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "78ec4ff2-216a-44f1-927e-a558e6b31c00"
        },
        "item": {
          "id": "6113a21a-a729-4a7e-8ef5-e84f03a69aa4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "57f6c599-e2a1-4c88-8b18-edf329526bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2a214e-faef-4cf2-94ce-069b405b2744",
        "cursor": {
          "ref": "3a54af72-c43d-40a6-9cda-ab3c105adb76",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "73086fa7-2f75-4c74-9426-6f39c569d4a7"
        },
        "item": {
          "id": "1b2a214e-faef-4cf2-94ce-069b405b2744",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0555cca2-e195-436b-8e5f-dbe15dad6068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c98560f-698e-46b7-b273-4a197e596f65",
        "cursor": {
          "ref": "43039ce5-a293-4cc1-bdd8-7a3f4a634ecf",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3b509c81-0a99-4d73-a7bc-7777cef6399e"
        },
        "item": {
          "id": "4c98560f-698e-46b7-b273-4a197e596f65",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e1711d05-e5c9-4f64-ba8e-07f255d7523f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a165446f-4168-42d3-9024-385b4ed6628a",
        "cursor": {
          "ref": "d0d048f6-1740-4c40-9f7b-7361a99aebf7",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "62578aa2-47f4-4dc1-ba37-0f7e0692f32d"
        },
        "item": {
          "id": "a165446f-4168-42d3-9024-385b4ed6628a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "66760458-6846-4e98-a282-f2998af8de3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b32776e-9977-4cfd-b79d-f5e805f6de8d",
        "cursor": {
          "ref": "3206e6d2-d2c9-4d2a-a44e-20c73935a696",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5643d158-f700-44e9-94eb-2add148c9851"
        },
        "item": {
          "id": "1b32776e-9977-4cfd-b79d-f5e805f6de8d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "01ed23d7-e801-46d2-a278-28685a14e0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91476ba-fc0a-42ea-b50e-c627002d8bba",
        "cursor": {
          "ref": "98891c41-cfbe-4463-828f-36af008e6b03",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "de470e6c-ace7-43a8-a247-a3a2e6401f21"
        },
        "item": {
          "id": "d91476ba-fc0a-42ea-b50e-c627002d8bba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "34d6efa3-482f-459c-b04c-b36d22cbdbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9312c0-e627-48f1-9fad-363bb4c45438",
        "cursor": {
          "ref": "68ec03c9-954c-43dc-a8c2-25ec82bce128",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b4a512c7-0993-40cc-af2c-5018056b8944"
        },
        "item": {
          "id": "8b9312c0-e627-48f1-9fad-363bb4c45438",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "92499e9a-f8e8-4469-86e0-3d7c9b62cf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faa9367-ba44-4f3a-9047-f1110be50443",
        "cursor": {
          "ref": "19aa9c4a-fabe-45da-91e0-4eadcb2c0646",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "43285c39-a56f-4467-9abd-a7adb1edc9fa"
        },
        "item": {
          "id": "2faa9367-ba44-4f3a-9047-f1110be50443",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4a91139f-1b9b-4ff2-8f54-7142ea6cdf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8290e11f-f533-4d04-8826-4ca638843f39",
        "cursor": {
          "ref": "6d3845e3-3b46-4562-8927-83da971b30c9",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "05b4da71-c029-42e9-9949-5ee154e556e1"
        },
        "item": {
          "id": "8290e11f-f533-4d04-8826-4ca638843f39",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9afa9952-6547-40d0-94a7-b9916ac5a90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49427fe-ceeb-4194-be27-a99c08a5018b",
        "cursor": {
          "ref": "689a0f90-5ad5-445f-ab64-45790092d285",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "513069c1-cd38-4c3a-a206-213f10d775b5"
        },
        "item": {
          "id": "d49427fe-ceeb-4194-be27-a99c08a5018b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "73f14253-1ba5-43bd-a592-3e7f3dc9843b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae11f07-44d1-4c4c-8d57-8210b42853d6",
        "cursor": {
          "ref": "9e9f918d-5d7e-4ef2-ae99-3434525ce2f6",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f80e9f86-e4b2-4c8e-8c3d-b29b6bb3425c"
        },
        "item": {
          "id": "bae11f07-44d1-4c4c-8d57-8210b42853d6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e3f80eb-ceb4-49e1-acee-aeb614edf060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd080474-abe5-4904-8b7c-50277cb89cbd",
        "cursor": {
          "ref": "901a519d-a57f-4a97-8e98-48c7320b82e1",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e0f53bb3-4029-4da5-af75-3184a7e07cf1"
        },
        "item": {
          "id": "fd080474-abe5-4904-8b7c-50277cb89cbd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "803af73a-1a6a-499f-8060-ed65f99c89a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f9904c-43c3-49de-b88a-ef815e17b411",
        "cursor": {
          "ref": "f25e72e8-7dcc-4146-8da7-318bd5037efa",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "808d00ab-d38a-45c4-9253-ad8ee5dfeb3f"
        },
        "item": {
          "id": "38f9904c-43c3-49de-b88a-ef815e17b411",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4955ca96-f945-4a88-8863-c0efa79752f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f297711-8985-4917-9791-1546b3a21730",
        "cursor": {
          "ref": "85742278-d190-4ccc-864a-d4d90d41e923",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5ce88506-7ffc-4b36-894d-3e73c3842ed0"
        },
        "item": {
          "id": "9f297711-8985-4917-9791-1546b3a21730",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2d206452-8c63-4bfe-8c7e-a75e7759bbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21774d3f-c59d-47bc-b3bd-d9deb60d1b37",
        "cursor": {
          "ref": "4e8c3065-f690-4e7e-b486-ef177629b8dd",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c31eda54-4ff7-4c4e-ad9b-73f4d8f67ff5"
        },
        "item": {
          "id": "21774d3f-c59d-47bc-b3bd-d9deb60d1b37",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bf861d56-910a-4072-b424-9535fd65b8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d678aa16-2b1a-47f1-bedd-6a8afedc0f80",
        "cursor": {
          "ref": "26d30340-4f92-41d2-b341-9c703a20ca36",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3d3f68d0-7ad4-42c5-95b7-20193a5f8d19"
        },
        "item": {
          "id": "d678aa16-2b1a-47f1-bedd-6a8afedc0f80",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "de82218f-f58d-4afe-b812-a739feb5423b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25235594-aa86-4b1d-ab9c-1c3c3ce32a3b",
        "cursor": {
          "ref": "61946a86-9d66-4eee-99ca-f3b8ee3a6c6c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "caf1470b-e600-421d-8129-a21113069c00"
        },
        "item": {
          "id": "25235594-aa86-4b1d-ab9c-1c3c3ce32a3b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "263beb59-fa7b-43e0-9148-d11cba40556e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c0e06d-1d2f-4736-beab-cb0c8219c766",
        "cursor": {
          "ref": "a2fb5c55-62e1-4f5f-90d2-134eb07d7a6d",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "25068064-a2cc-4df8-9087-dc1475fab8b1"
        },
        "item": {
          "id": "43c0e06d-1d2f-4736-beab-cb0c8219c766",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "06c6132d-63ce-4739-9b3e-183e3fbdb535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cab638-6951-4782-95fa-dd2d0fa8d6df",
        "cursor": {
          "ref": "75c52797-1ea6-4c81-99e6-a26408359fa2",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "90eb589e-8f0c-40a7-bbc1-ddd6cfb5b5a6"
        },
        "item": {
          "id": "f7cab638-6951-4782-95fa-dd2d0fa8d6df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "43d48e4f-cb71-4d4d-a7c8-69a7dfe9c23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb11f8ca-520a-4846-8089-bbda02be92c1",
        "cursor": {
          "ref": "b0097ee4-dcc4-4e15-b465-70b5a9897a30",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7c650bec-6347-4817-b37e-baa383a30e1d"
        },
        "item": {
          "id": "eb11f8ca-520a-4846-8089-bbda02be92c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7d886b7-5680-44f4-b1b0-9911854b4aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b15479-efb1-477f-93d8-15c220d45dba",
        "cursor": {
          "ref": "d514d201-5e7d-462d-aa2e-3eec51b246b6",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "420bbde8-51b1-4ff8-be03-a0d9696316d7"
        },
        "item": {
          "id": "b1b15479-efb1-477f-93d8-15c220d45dba",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "71ca09fb-4ef6-4289-9e26-6af55125f51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae981cc-0aa3-4221-a740-25c0eaf97fa4",
        "cursor": {
          "ref": "07605f81-6f78-4ea0-8b31-9d0cb3abb387",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d6049bd6-0ef9-4e6e-ab9c-5a7dc97c33b2"
        },
        "item": {
          "id": "bae981cc-0aa3-4221-a740-25c0eaf97fa4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0e7feb1d-eab8-4048-bdbd-b775123f9612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe43a3d-6015-4727-ac59-044eb8fd5384",
        "cursor": {
          "ref": "be065500-6175-4973-9ebd-aa7510d78ed1",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a0174f3f-b0e4-4c9e-bdbe-565dd2223b3f"
        },
        "item": {
          "id": "4fe43a3d-6015-4727-ac59-044eb8fd5384",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c3fd56ba-2fe0-4d46-9d88-aaaac010b3ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3353b6a9-1660-44ce-9c73-a5d5481d0741",
        "cursor": {
          "ref": "b5b03929-364d-468d-82be-99f072c223a3",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5207b1ac-763a-4fe3-adeb-d07cb9f5404b"
        },
        "item": {
          "id": "3353b6a9-1660-44ce-9c73-a5d5481d0741",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "08200dc4-92ca-481e-9b46-c8a08c3e71ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa97dcd3-0044-4c8c-8f2f-73f55a721d28",
        "cursor": {
          "ref": "fbddaa33-c025-4ad4-89c9-b81137a7e5da",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a5e59707-1ff9-430c-a1f2-37ec3c4e20c7"
        },
        "item": {
          "id": "fa97dcd3-0044-4c8c-8f2f-73f55a721d28",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0cd8aa8a-9ad8-469c-98ce-11cb5f987471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa97dcd3-0044-4c8c-8f2f-73f55a721d28",
        "cursor": {
          "ref": "fbddaa33-c025-4ad4-89c9-b81137a7e5da",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a5e59707-1ff9-430c-a1f2-37ec3c4e20c7"
        },
        "item": {
          "id": "fa97dcd3-0044-4c8c-8f2f-73f55a721d28",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0cd8aa8a-9ad8-469c-98ce-11cb5f987471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdd833b-b491-4138-a999-eff2a561a156",
        "cursor": {
          "ref": "860b0afb-c29b-4b60-be97-7187918c3731",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "05f9d4ce-7f43-401c-96d1-112e25e45759"
        },
        "item": {
          "id": "2fdd833b-b491-4138-a999-eff2a561a156",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "889e2474-00a8-4c21-85dc-84cc9cc3b608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a02572c-f082-4ad9-9bad-1ae98fcb9eb2",
        "cursor": {
          "ref": "fac74910-8624-44d0-be6a-2f9719ff3907",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3e6964f2-a111-4048-9136-f02c924479b4"
        },
        "item": {
          "id": "3a02572c-f082-4ad9-9bad-1ae98fcb9eb2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4675c9dc-a07e-4cc8-93ec-9d704222a133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf759db-8688-4bcc-825c-03c2fc303dfb",
        "cursor": {
          "ref": "12e228ea-5ca8-455b-9efb-5dde2d9c0ac6",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "72cccd11-bd3d-43e7-b84e-dd635438f07a"
        },
        "item": {
          "id": "2cf759db-8688-4bcc-825c-03c2fc303dfb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d0475c48-f116-4add-ad93-97c2144e3cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c1b30d-a091-4ae0-92c8-4570f8719e23",
        "cursor": {
          "ref": "5d5ae822-c616-42b9-bea3-86846e8f2a8c",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4f2dddb4-3447-4942-b7c6-90b00bf3ec63"
        },
        "item": {
          "id": "27c1b30d-a091-4ae0-92c8-4570f8719e23",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "525247db-1493-4fb4-96a1-62f409e76614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92210137-7ddb-4a1f-a53e-8f734971e81b",
        "cursor": {
          "ref": "830d0fe3-0b3e-4a39-b237-873fb3990d8e",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "491c7800-147b-4813-b635-4336f3f969dd"
        },
        "item": {
          "id": "92210137-7ddb-4a1f-a53e-8f734971e81b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0c6e006f-cb87-4d16-9d3e-c0126dd0f7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b6eeb9-1362-43d1-bc42-c840d065db88",
        "cursor": {
          "ref": "e4a40ad9-96e8-496f-9812-479af2bc2c40",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a732d9ba-29c6-450a-9d2c-0585f250945c"
        },
        "item": {
          "id": "f1b6eeb9-1362-43d1-bc42-c840d065db88",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "30e3a231-6198-4e89-9477-4055556e0f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a64c5da-f04e-4261-a849-27d80101cacc",
        "cursor": {
          "ref": "46a19958-eb89-44c3-9b87-b37c97d1d3c4",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "69e94e49-723d-4a1d-92b3-910a88d27f33"
        },
        "item": {
          "id": "6a64c5da-f04e-4261-a849-27d80101cacc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "81fd5eae-5449-409c-97b8-2bd7a0b6200c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9207896f-6b67-45b7-bef8-06c2f8170702",
        "cursor": {
          "ref": "a9be1e11-5b99-4d81-98d7-4e9de148a2a2",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "48331e51-7ea6-4d94-9dde-60aa0cb55650"
        },
        "item": {
          "id": "9207896f-6b67-45b7-bef8-06c2f8170702",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "042bd038-6546-4253-8905-c684649fd288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae439f1-cc28-4205-8bad-a35cba81c439",
        "cursor": {
          "ref": "cd087774-58b2-4b14-bc6e-50b431b04219",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "392a33c2-3e3b-4b8a-8d6c-e6b802f3a238"
        },
        "item": {
          "id": "2ae439f1-cc28-4205-8bad-a35cba81c439",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ecdfac71-8034-45bf-bb3c-c910d32d3db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858ff893-e398-4713-88e5-80ac3b37a7d8",
        "cursor": {
          "ref": "dc05c305-5dc4-409b-a79e-3986b60d37ab",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "29ba05a1-d3cc-4aad-b05d-2ff6b684d2de"
        },
        "item": {
          "id": "858ff893-e398-4713-88e5-80ac3b37a7d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8819bc2a-817d-4b29-8ad2-e855ae5e259e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235d632b-1bc7-4447-a27f-2f87a18d405b",
        "cursor": {
          "ref": "b6e8cc4e-2c5d-44b4-bd11-fd3bef9571e5",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "00f944ff-ece8-4f39-a0e4-b1dbc84f0cbd"
        },
        "item": {
          "id": "235d632b-1bc7-4447-a27f-2f87a18d405b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7c6aec1f-0df9-43cd-be15-e4e295b00c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9e6729-274a-43eb-bb06-636a2968fb57",
        "cursor": {
          "ref": "374b98d2-aa86-46fb-8fb6-bb299ef131ef",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c95ebbcb-7089-416f-a67a-8ef1a9d5b12f"
        },
        "item": {
          "id": "1f9e6729-274a-43eb-bb06-636a2968fb57",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "32e508ae-05cb-4a5d-97e1-d9c8cd2a7735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a52c50b-c4e2-4d32-9b7c-2f1753a445b9",
        "cursor": {
          "ref": "a2848cab-7fd5-4f6e-aa95-d4d44b9d5872",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "01848b83-217b-4f3c-8d2c-140a3033b5ea"
        },
        "item": {
          "id": "5a52c50b-c4e2-4d32-9b7c-2f1753a445b9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8c485837-f1d1-4995-9ab1-6b3e059b0a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a10f8a-f53d-4c21-9bce-b77ac4a11d24",
        "cursor": {
          "ref": "d33c1d94-70e1-4533-9525-08e4ca983a90",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a2e1e569-5606-478b-8274-2285412e120e"
        },
        "item": {
          "id": "e1a10f8a-f53d-4c21-9bce-b77ac4a11d24",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b70a7957-6881-476a-b26f-9780307657e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cba498-f52b-450e-8b56-b63627b80309",
        "cursor": {
          "ref": "c132d08c-392c-44fa-aed4-97dffef6210a",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1f139ef4-21f4-40e7-8106-660d2a7d13b5"
        },
        "item": {
          "id": "25cba498-f52b-450e-8b56-b63627b80309",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "91c762b2-237b-4ab7-b049-02a97683a368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2371a62-c325-40de-a683-a50a60475541",
        "cursor": {
          "ref": "4ba985ad-acc4-4246-87e0-495b6e019201",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ac467abe-c6a8-40a0-b614-32a4ff55e625"
        },
        "item": {
          "id": "d2371a62-c325-40de-a683-a50a60475541",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3d21282b-ef19-4867-b6ca-aae6b9c7c7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb82a43-028c-43ca-9ba0-8ce33df518f2",
        "cursor": {
          "ref": "8611a3e2-c2b3-47d1-95a5-457477d2caa5",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b5da6b87-4c4c-45c0-ab67-80c7d63ccc19"
        },
        "item": {
          "id": "cfb82a43-028c-43ca-9ba0-8ce33df518f2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "718c73f2-ea4a-4212-82c6-51578ea452c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d30f4d-fa33-4748-b72a-26d12dda63ef",
        "cursor": {
          "ref": "7031d3c6-97a2-475f-8490-1b0f4a219b48",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e359c400-f0d6-4118-8037-b31683d9c2d7"
        },
        "item": {
          "id": "d0d30f4d-fa33-4748-b72a-26d12dda63ef",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "34fd6fbe-2a07-4ee4-9109-a437925a3a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f29906-8951-45a6-9426-d98bccc2789b",
        "cursor": {
          "ref": "d7c20065-53d3-42f8-b778-bb94ced2f7b3",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6527b178-5187-4447-aeb0-e25e36c883e2"
        },
        "item": {
          "id": "b1f29906-8951-45a6-9426-d98bccc2789b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e8dc1276-3578-40e2-8967-975391be71c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c32a323-62e0-4567-99f7-e09414801af8",
        "cursor": {
          "ref": "191872cc-3cfe-4b77-8ee2-ae87ee5811cd",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4e49ec4d-962a-40c7-a7cf-b539c5dd3468"
        },
        "item": {
          "id": "4c32a323-62e0-4567-99f7-e09414801af8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b8d2d0ed-73b8-4164-b9d5-4b9cf8ee778f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df962fcc-1361-4d9d-89dc-2cc757535cd8",
        "cursor": {
          "ref": "cbfd5ca0-2615-4c4b-9ff7-41b42d9f27b5",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3bf3ec3b-b7ac-41c7-9ee3-c6c5937fcf85"
        },
        "item": {
          "id": "df962fcc-1361-4d9d-89dc-2cc757535cd8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "94fc669b-7345-4fde-b8cd-96d7eee566ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad14b3c-b815-4fff-9333-0d57e0d40bb3",
        "cursor": {
          "ref": "6d46aedf-6cbc-4433-b09d-1d80f8fef1e2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "92f7c691-00ec-4997-9c27-31b449da61b5"
        },
        "item": {
          "id": "4ad14b3c-b815-4fff-9333-0d57e0d40bb3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "07736464-4e5b-4b11-b609-a19ae027a86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebcd371-f113-4f56-bef8-5d74dab52838",
        "cursor": {
          "ref": "7faca295-3b79-4d59-bd59-243cc986f3f5",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "538b5170-5d86-4155-96d1-7a44223bd46f"
        },
        "item": {
          "id": "0ebcd371-f113-4f56-bef8-5d74dab52838",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5f4706e5-0acf-4c4e-a59b-57b309fb021d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849793bb-4fa6-4d4f-9639-d88dc7dcf3ca",
        "cursor": {
          "ref": "1888ddac-f53e-42f2-b7df-2b4c79c6b99a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8f32e61c-468f-481b-8c3f-0e7fd9d2d53e"
        },
        "item": {
          "id": "849793bb-4fa6-4d4f-9639-d88dc7dcf3ca",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2119b929-73d9-4973-9e20-86dc86e14bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f436ffa-5c47-4f87-8b7a-094090978294",
        "cursor": {
          "ref": "151e8e49-5a79-492e-b510-0533310eeaed",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "982e74f2-1696-4c42-864f-63b2ce051bc6"
        },
        "item": {
          "id": "3f436ffa-5c47-4f87-8b7a-094090978294",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5117553c-fa8d-4f1b-85d7-f10cf2007616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5089efcc-b51d-46f1-86ff-798878e47e2c",
        "cursor": {
          "ref": "d41b6a09-b836-41fd-9ae4-8426d28b5d8c",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b26fbd01-fc06-409a-88ab-64201b0b227b"
        },
        "item": {
          "id": "5089efcc-b51d-46f1-86ff-798878e47e2c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4fa722ca-95de-47ed-95c7-4b9508863e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4317aa-29d4-4d4d-866a-3d5c9360f19d",
        "cursor": {
          "ref": "1d87942e-559f-4829-849a-848a110b4a2b",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fe9bac17-3432-40e0-8b34-f1cba2ce9f78"
        },
        "item": {
          "id": "1c4317aa-29d4-4d4d-866a-3d5c9360f19d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c6e0d448-0ed6-4f34-94f4-04f7d6b1c363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d0920-b42e-4673-9e6c-9158bb3de479",
        "cursor": {
          "ref": "ff3ec3bc-1c64-4ea3-8a3c-d33b9afc55bb",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "024aff0b-1a64-4d38-8dbc-5018e71df9ec"
        },
        "item": {
          "id": "678d0920-b42e-4673-9e6c-9158bb3de479",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "30de9289-5ffa-492e-b11f-59e7446017ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acefbd2-634d-476b-af2e-4481144232de",
        "cursor": {
          "ref": "7a544dee-8cd3-4bf2-b2ed-c729cbaed8d2",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "81c3421b-b0aa-4706-a99c-bb2a57d1701d"
        },
        "item": {
          "id": "0acefbd2-634d-476b-af2e-4481144232de",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2b50d53d-3849-4cf2-a53c-002601223ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06306108-efab-4f89-b814-dddfc0a912dc",
        "cursor": {
          "ref": "cff982d6-6dcc-42e7-ad56-9faf1640b5c4",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9120efda-2647-493a-a897-ea881bdb385f"
        },
        "item": {
          "id": "06306108-efab-4f89-b814-dddfc0a912dc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1f600914-6366-4338-9f77-cf9d8cf71bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253390c8-afb1-4746-a7cc-d87f0105782f",
        "cursor": {
          "ref": "28c23a76-e872-43cc-af7d-c096a1b8c026",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d3a7f46b-63cd-413b-986c-2eb5063b2bfd"
        },
        "item": {
          "id": "253390c8-afb1-4746-a7cc-d87f0105782f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6c0d1894-562e-4a92-b9e3-76ea114bb0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04b9f78-94ba-4dfd-979b-ccdd8e13774c",
        "cursor": {
          "ref": "690ae4b3-475a-439a-89f8-d8954030f81b",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f5eed93-588c-4cc7-a80f-fd8e729f6190"
        },
        "item": {
          "id": "a04b9f78-94ba-4dfd-979b-ccdd8e13774c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0779f586-d1a3-4748-a1af-60d003736376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc3effa-2437-4ac9-8246-5aa6a01f3a7a",
        "cursor": {
          "ref": "be5e5a38-5007-44f0-a408-add03be147eb",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a31b66cc-dd69-4794-b4d9-758a6883d6f1"
        },
        "item": {
          "id": "2dc3effa-2437-4ac9-8246-5aa6a01f3a7a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5362a4c3-33d5-4795-bc2b-4b03bde46dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8279753a-629c-4590-8c9b-cd5ca025070b",
        "cursor": {
          "ref": "8ba6e9be-2237-4648-a48c-9ecd478cf6b2",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "77ab92cb-db3c-4b68-b0bd-92ebe6984bf2"
        },
        "item": {
          "id": "8279753a-629c-4590-8c9b-cd5ca025070b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d181708b-589c-4587-a902-840c899f8949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1565543-e217-463a-86c5-66622b71b3c2",
        "cursor": {
          "ref": "692be2e7-b3f0-4fe1-b17c-9779926c9cf0",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "81bed712-c523-4742-a976-9301b1011a6f"
        },
        "item": {
          "id": "a1565543-e217-463a-86c5-66622b71b3c2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ebcdacc8-0ea0-47ab-bb78-6a213d6f054a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a41939-bf82-41ad-9674-bdbf53cc9d43",
        "cursor": {
          "ref": "260d07bd-b2fe-4890-a01a-0c07835452fd",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e5c67196-a102-4ded-b588-3f812cb5c5ba"
        },
        "item": {
          "id": "14a41939-bf82-41ad-9674-bdbf53cc9d43",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ead95662-2829-4371-98b0-e117711aa621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03713ce2-7dd8-4e16-b710-cbafd2d7775c",
        "cursor": {
          "ref": "e0990879-32d6-45eb-a216-59513291fd1b",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b6dfaa0d-5afa-48d7-af30-8595e901fccf"
        },
        "item": {
          "id": "03713ce2-7dd8-4e16-b710-cbafd2d7775c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bb7f726c-bc23-4670-81a4-6696d7b8872b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25711f82-5bed-4203-8400-9a7d278477c0",
        "cursor": {
          "ref": "04894236-0a85-42a2-970c-efaaa895925d",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2722d648-c57f-47bf-92f9-6344d8886d07"
        },
        "item": {
          "id": "25711f82-5bed-4203-8400-9a7d278477c0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "620eb235-de4c-4bb4-b35f-78f9239260b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d4496c-6598-4df7-af8c-2d37060de44d",
        "cursor": {
          "ref": "4df1775a-ea0a-44a9-89c2-49718729aac6",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "37064cd2-f18b-4f46-9b75-b0c664d5e86c"
        },
        "item": {
          "id": "86d4496c-6598-4df7-af8c-2d37060de44d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cdac0deb-37a0-4817-9c61-e050d89a4ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e99987-d5f5-4ebc-a130-4f6120c50df6",
        "cursor": {
          "ref": "adf81144-b0d0-4557-919f-c9a70371a228",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7206ad01-f895-4f4c-80f6-93e0b5b931c5"
        },
        "item": {
          "id": "f9e99987-d5f5-4ebc-a130-4f6120c50df6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f5b86dff-74b9-411f-bf69-3769cc1b91b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4860592-d01e-47e4-bc9d-544bf1b5ac38",
        "cursor": {
          "ref": "ed729e96-424a-4ef7-9823-680b22e14930",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "83143b1e-6e34-4575-9d4b-73e89cda28eb"
        },
        "item": {
          "id": "f4860592-d01e-47e4-bc9d-544bf1b5ac38",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1e3893b6-91f9-49f7-8543-cb0b579bba23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecabf141-dc31-4e2b-8c8a-23e9b311dbb1",
        "cursor": {
          "ref": "d275eb00-7046-4fc1-908d-f261458d31b2",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "74c3d50c-1f2f-4c9d-91e4-a7a91946ce14"
        },
        "item": {
          "id": "ecabf141-dc31-4e2b-8c8a-23e9b311dbb1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d1170fd9-756e-4323-b755-c597e3c787b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec906ec9-0a3f-42f4-ac39-0dad375ab411",
        "cursor": {
          "ref": "f09ed8e8-e275-41d6-a760-781c25dfa68d",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0c6842e7-2ce6-413f-a1a6-5b67962885c2"
        },
        "item": {
          "id": "ec906ec9-0a3f-42f4-ac39-0dad375ab411",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3543aac2-6603-4d31-a141-9226bc64aca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe16a769-7287-4a11-8d8b-2396c0631253",
        "cursor": {
          "ref": "0ff08145-6944-40ed-b341-65367bd17987",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "94af3a0b-a43e-4e20-bb89-757787e1c887"
        },
        "item": {
          "id": "fe16a769-7287-4a11-8d8b-2396c0631253",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "97cb4fa3-2285-429d-a24a-771737ac2637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0c7761-05f0-4420-8976-1ccbe0abfb07",
        "cursor": {
          "ref": "7cbc396c-6f4c-4287-b250-ffb16397e1c5",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "11efa42e-d8b1-463b-a107-58918a3a882d"
        },
        "item": {
          "id": "4c0c7761-05f0-4420-8976-1ccbe0abfb07",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7a240457-559c-4480-9cb1-ae9bf2d62ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404cdd8f-a9c2-4a36-9789-a2d7c2add6f1",
        "cursor": {
          "ref": "b90f5dd7-fab1-43f7-9270-c5b402bbcb99",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9ae72735-8f00-44f2-9992-2108cdea55f2"
        },
        "item": {
          "id": "404cdd8f-a9c2-4a36-9789-a2d7c2add6f1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "85904f5d-f43e-443f-b7fe-c11302f5ac37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1cb208-423d-4f28-abf5-68657c940617",
        "cursor": {
          "ref": "8a90d43f-6ab7-4982-b691-03c9ddb28d7c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "31dbcb29-ef06-407e-9dec-28272d97dc7e"
        },
        "item": {
          "id": "7d1cb208-423d-4f28-abf5-68657c940617",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0d6895ad-5cfe-4f88-9f15-87d187675bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419943ac-c87b-47ec-a7ab-7da2d959c79f",
        "cursor": {
          "ref": "02f115e6-f500-4795-91de-44b411a00ede",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9113694e-e370-4366-aea1-b17b6f9f47bc"
        },
        "item": {
          "id": "419943ac-c87b-47ec-a7ab-7da2d959c79f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e58921f7-043e-435b-a965-b8a498a05ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4a6413-1d01-4eaa-b2f6-f076582a664b",
        "cursor": {
          "ref": "70341d5d-546b-4cfc-a179-73c32804daeb",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e3a383aa-1cb0-4939-9d6e-8b6595f5ca76"
        },
        "item": {
          "id": "3c4a6413-1d01-4eaa-b2f6-f076582a664b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a1896831-8e6a-4bc0-8169-3f104d9289fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749c43e0-809c-4a8c-922b-7638108a39c9",
        "cursor": {
          "ref": "4c30de63-be84-4e81-9c49-e313c4232fe5",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2dc2521b-2e00-4d45-99fd-60e92bdda5fc"
        },
        "item": {
          "id": "749c43e0-809c-4a8c-922b-7638108a39c9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f65ac30c-1753-4936-971d-6c5341578506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e150f49a-4c1f-4b74-9ab9-0dc3b9b26fba",
        "cursor": {
          "ref": "707c8c10-a1cd-4dd5-ad8a-3823d2a33147",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1ec67f97-554f-416c-b504-775f8be2d2be"
        },
        "item": {
          "id": "e150f49a-4c1f-4b74-9ab9-0dc3b9b26fba",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3b63488c-d2a1-4849-9d39-f14c1e472a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c557c04f-e801-466d-8bcc-40b468d2f284",
        "cursor": {
          "ref": "8215688e-507c-4823-b0af-94b689f5f1f5",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ad26639f-bc14-4bb7-ad25-e97fca845c0f"
        },
        "item": {
          "id": "c557c04f-e801-466d-8bcc-40b468d2f284",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7922acd5-00b7-4a43-98fd-4336262ac7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbc4a7f-82af-4a02-afa9-1f448e9a8d28",
        "cursor": {
          "ref": "5df16eb9-a90e-4234-97f4-5a52187cf7b8",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ade0ec1-a03c-4ecd-b7a7-8d2b95283624"
        },
        "item": {
          "id": "1cbc4a7f-82af-4a02-afa9-1f448e9a8d28",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c677b368-d99d-4f1d-bf82-4440d99c1f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4046e586-f2dd-461b-b6fe-b282b98f3874",
        "cursor": {
          "ref": "1fa3f95d-b2bd-40ff-829f-4de0f31aef97",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7dd4c4f2-0f8d-43df-b937-23550d26989f"
        },
        "item": {
          "id": "4046e586-f2dd-461b-b6fe-b282b98f3874",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "68a3ace3-5000-463c-af38-9637d2fa4488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbe0823-2ef8-4246-822a-569fc6e1e79a",
        "cursor": {
          "ref": "2fe8910b-7c59-474d-bab1-e61f4c38a742",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "880b39d3-b964-4afd-9f8c-10d473e213e2"
        },
        "item": {
          "id": "8fbe0823-2ef8-4246-822a-569fc6e1e79a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f08fcecb-f473-4281-9476-a8fe6749fb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6edb5a7-e7bd-4c7a-8d6f-6d457cabf977",
        "cursor": {
          "ref": "b5bc87d3-b93d-46b3-a192-ab9bf546f1b9",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c1250319-80f8-4135-936d-95203cd2ba68"
        },
        "item": {
          "id": "d6edb5a7-e7bd-4c7a-8d6f-6d457cabf977",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2b529ccb-7e88-43b2-97db-f98d0e8df6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b412490-f9a2-42ef-b13a-2689eba36c48",
        "cursor": {
          "ref": "e6d5861d-1561-4b7a-b830-18d3856ca352",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2a2ea058-b9b3-4f0a-b3e1-375aeab21c28"
        },
        "item": {
          "id": "5b412490-f9a2-42ef-b13a-2689eba36c48",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b5246282-e14f-4d2d-a95c-22a4563c0d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd22d309-9861-475f-9b91-d2e8743cb292",
        "cursor": {
          "ref": "1344c110-d8e5-49ae-ac33-d5e3a2d791ec",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "429d1ad3-40a8-4e2a-aa79-0b6d273f1c89"
        },
        "item": {
          "id": "cd22d309-9861-475f-9b91-d2e8743cb292",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a264e24-b247-4bf8-87f3-ed671e6cf2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0625a7b9-4f39-4dfd-9721-ecbdcbd715c4",
        "cursor": {
          "ref": "aa30cd12-c7ce-4f8a-9dfb-f5207aa0fb48",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2a2015f1-8b39-4e65-86c8-df9a1dbe4d7e"
        },
        "item": {
          "id": "0625a7b9-4f39-4dfd-9721-ecbdcbd715c4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f995dffe-a150-4a57-95ea-b94541b3ae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e017a7b7-f4e9-4ddc-84cb-b73c9b2bb3aa",
        "cursor": {
          "ref": "5d92e8dc-5fb1-417d-8187-13911e21fc2e",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b128802d-1426-4056-bdfe-63beb8a3a0ea"
        },
        "item": {
          "id": "e017a7b7-f4e9-4ddc-84cb-b73c9b2bb3aa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "13c4ca8a-e436-4b4b-ac6e-d9dddd518965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04205b53-8a94-4734-8fa0-f7a98994489f",
        "cursor": {
          "ref": "f37c3647-2268-4d55-8588-6ec0b40f8b69",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "14046427-ef3e-4397-8474-73f64b368e23"
        },
        "item": {
          "id": "04205b53-8a94-4734-8fa0-f7a98994489f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "177bcbf8-5096-4131-b34f-470ffdd0c0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770c8524-ff22-4c19-a684-c681800271c8",
        "cursor": {
          "ref": "b300d53e-faa9-4602-bf09-68918c92b91b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e382f1c4-db6d-4d45-8ca6-7730571e9ff1"
        },
        "item": {
          "id": "770c8524-ff22-4c19-a684-c681800271c8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4da12289-4e6b-4ac3-a22e-71a7a944e119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca4be59-fad5-41b3-b717-7ceba2fb78dd",
        "cursor": {
          "ref": "b627eb10-8eea-4556-a243-ba9794e399a9",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "38c43cd2-3e40-4bba-ba58-279df3930bfe"
        },
        "item": {
          "id": "5ca4be59-fad5-41b3-b717-7ceba2fb78dd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8600a72c-9208-4ec0-8a9d-adaf1652793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9783875e-29c6-4ccf-b714-d4db2b2ee74a",
        "cursor": {
          "ref": "59bb744f-ed31-4e0c-b66f-167aac3f1122",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4f15a365-086c-40be-a6cb-c7ccb5ba155d"
        },
        "item": {
          "id": "9783875e-29c6-4ccf-b714-d4db2b2ee74a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0a4a93e9-cf49-411b-b50a-71cb1720a0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a374f91c-2d16-4db9-84a4-12aa11dc3592",
        "cursor": {
          "ref": "5dd04bd8-4afd-4e24-bee1-eb501dac7fff",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6b472c94-8dde-4b72-a4f5-68421af3d998"
        },
        "item": {
          "id": "a374f91c-2d16-4db9-84a4-12aa11dc3592",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a7ba3466-a774-41f7-bd36-28160532e491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea00001-7dd9-421c-8315-3eca98cc0bae",
        "cursor": {
          "ref": "c3d8eb74-6855-468d-8da0-c001a389ab53",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2961865f-5fd4-4c0b-b5be-8e6c26a49d8a"
        },
        "item": {
          "id": "2ea00001-7dd9-421c-8315-3eca98cc0bae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "905a1164-cc15-4ae6-89cb-6361ef3aa733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8932a3e-09c1-4607-a6ea-21d2717e06fb",
        "cursor": {
          "ref": "1d6a0f43-a1c6-412b-bd51-0b6c62c9daee",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c903b984-3686-4579-96e7-be9793528730"
        },
        "item": {
          "id": "d8932a3e-09c1-4607-a6ea-21d2717e06fb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aa530c74-9b77-4bd1-85aa-ba5a75016434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600c8617-dc0b-41b6-a440-02ac149b45e0",
        "cursor": {
          "ref": "150a2aff-ff69-4358-a004-bc3ff360b56b",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "57918e3e-abd5-4a38-b3bf-942a37d2c37e"
        },
        "item": {
          "id": "600c8617-dc0b-41b6-a440-02ac149b45e0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "95a5514f-b868-4345-948c-bd66fde31332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5071b6f3-62d0-4e3a-ad6d-200924991c8c",
        "cursor": {
          "ref": "2a7166e3-33d5-4282-be27-7ee0ecd63c7b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "38004f92-5836-47fc-a7cc-13589bb5ffe8"
        },
        "item": {
          "id": "5071b6f3-62d0-4e3a-ad6d-200924991c8c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "510026f9-7856-4904-b6e4-e798b5c0b81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a84e278-11ec-4ff9-95b3-8a77add551e1",
        "cursor": {
          "ref": "579b614d-47f7-4efb-9a17-90e4e8697207",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f6aaa961-7977-42c1-8bf5-e18ffadd40d8"
        },
        "item": {
          "id": "6a84e278-11ec-4ff9-95b3-8a77add551e1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9909e97b-a5a0-4354-8e33-6a8b49e04549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10eccd80-50c7-4775-992d-bfcaa8246a16",
        "cursor": {
          "ref": "0a78d8ab-76f6-4317-b6c4-3716113c7b37",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "120cc2be-a4c1-4535-ae0e-ce80288142d0"
        },
        "item": {
          "id": "10eccd80-50c7-4775-992d-bfcaa8246a16",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f673a7cb-a3ab-44b1-be2c-9c72f5fb54bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8a23b4-e5bd-401d-85f4-03596405dd2a",
        "cursor": {
          "ref": "f752891e-5582-4a2b-83c6-6bdebe968d85",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cac38efe-174e-4168-b7d0-a9fdd4783b4a"
        },
        "item": {
          "id": "eb8a23b4-e5bd-401d-85f4-03596405dd2a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4de6aef4-1ee7-4a2f-adcc-05d8f0be1b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4909812-0755-4b18-a9f0-9cc84d42a712",
        "cursor": {
          "ref": "cfef98ec-91d2-443e-9cc8-7dfb5c85e497",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d4f0e9ac-2342-460e-b0dc-473d850c44dd"
        },
        "item": {
          "id": "b4909812-0755-4b18-a9f0-9cc84d42a712",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0cdd2cba-9d93-4eb3-a3c1-ebf3ee721013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a463b7d-f364-4847-a1fc-5a9c362306f9",
        "cursor": {
          "ref": "9770661e-8f9d-4245-a4b4-9b4559575ef0",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2a0e758b-6fd7-4f0c-b419-ccb5e1dfbbf1"
        },
        "item": {
          "id": "7a463b7d-f364-4847-a1fc-5a9c362306f9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "073ea739-c041-41a5-977b-de530c62ed15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8d329b-d1c6-43dc-9834-eb5efed94bce",
        "cursor": {
          "ref": "ab460cde-e0c1-4a80-9bde-3750d50fa9ac",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "49379050-802b-4586-affd-6930c747e6fc"
        },
        "item": {
          "id": "ad8d329b-d1c6-43dc-9834-eb5efed94bce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dc10f34d-d7e6-441e-9f21-27e6fcb02085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e941409-5461-4d42-8364-19b5cec9bd19",
        "cursor": {
          "ref": "692f0135-c649-4859-ad75-71292f1d2c1d",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "53da24ba-933f-426d-b96d-c6583c71f979"
        },
        "item": {
          "id": "3e941409-5461-4d42-8364-19b5cec9bd19",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fe7b6d10-c7ae-4b10-9865-5d708781b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1e7243-c52e-4559-92d1-a944bd52c4b2",
        "cursor": {
          "ref": "d0b1c2fe-c84e-4c5c-8c56-874faf601eee",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3d2bfd03-2614-4f31-a407-f0174a0dee88"
        },
        "item": {
          "id": "1b1e7243-c52e-4559-92d1-a944bd52c4b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "006bf98f-d2aa-4c73-8d2c-5f641decd0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de374707-7056-4d38-b436-686e3539c8a5",
        "cursor": {
          "ref": "37eb2a25-a9a8-4bc2-8c49-64611594be23",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3e146055-3b9c-4311-bbb5-61d0344053d8"
        },
        "item": {
          "id": "de374707-7056-4d38-b436-686e3539c8a5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8ef15b25-2a56-4119-8c17-9f86dc6cc04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e806abf-7d05-4f49-80b1-4a4e869fc682",
        "cursor": {
          "ref": "c071f449-a7d3-46e9-8a72-80c007e7991e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0303de73-48fa-4238-9279-e0e987bc82a9"
        },
        "item": {
          "id": "3e806abf-7d05-4f49-80b1-4a4e869fc682",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e1115086-175d-4b2b-9de4-3cf0010ca239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff7f799-90b1-4e58-8106-a85f48c316e4",
        "cursor": {
          "ref": "808b87ce-94b8-4ef5-837f-b7a258670e69",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "df3c74ac-ab0c-4cc0-8167-4d2df8180052"
        },
        "item": {
          "id": "5ff7f799-90b1-4e58-8106-a85f48c316e4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c754c428-a34e-4f98-83d2-fab572316de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a64cf8e-400c-40ce-be80-969a5e0e74af",
        "cursor": {
          "ref": "888f0028-6adb-4b20-a698-314f80602ef9",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c10381f9-c636-4456-98d1-f5515a940d2f"
        },
        "item": {
          "id": "2a64cf8e-400c-40ce-be80-969a5e0e74af",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8372c88c-aa34-4b25-80af-095d557fe5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5abc45-d32a-4161-ac3d-3d46f1287b59",
        "cursor": {
          "ref": "eab97861-a09a-4933-8f11-76f9c8cc0146",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "638f2fed-c71d-4ae7-b79c-7077db3fb177"
        },
        "item": {
          "id": "9d5abc45-d32a-4161-ac3d-3d46f1287b59",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a66cc353-1821-4692-ad3b-3dcc3d125908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07ba841-1a64-46ab-b16e-3849483235ff",
        "cursor": {
          "ref": "991efbda-6d91-4361-b208-0e8a3efba6c8",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "75803cd8-798e-424c-8a56-de303e08e451"
        },
        "item": {
          "id": "b07ba841-1a64-46ab-b16e-3849483235ff",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "41f76174-ec95-4eb3-a2f8-b408c0736f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c21698b-7078-4544-90d5-c149bd6b8501",
        "cursor": {
          "ref": "f3ec39fb-55f2-483e-bace-230dfd279abe",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b9d4141d-ded7-47ec-86da-aa89fbe993c7"
        },
        "item": {
          "id": "4c21698b-7078-4544-90d5-c149bd6b8501",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f172e80a-4739-4c11-bb99-432cdaa45477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe49858-2049-4788-8f58-5329249b85e4",
        "cursor": {
          "ref": "956c6991-626c-4017-bdc3-a297955c80a5",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4e682fd4-bd07-44d8-8951-257c10138d26"
        },
        "item": {
          "id": "ffe49858-2049-4788-8f58-5329249b85e4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4cac3abd-abcc-4293-a41f-b36e6620a4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74c82cd-6f04-4b15-845c-8669d1bdf9b6",
        "cursor": {
          "ref": "8bcec2f1-bdfb-4724-b072-57df9038374e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1ad0df18-7e3c-4509-a3db-81f92e506bee"
        },
        "item": {
          "id": "b74c82cd-6f04-4b15-845c-8669d1bdf9b6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d3b6a1cc-2f3b-4569-9b7d-da5b27f9f73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785458d9-9ab4-497c-8a2c-498f54baa064",
        "cursor": {
          "ref": "9a228498-ff72-45d1-8b28-5be745606c31",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2de786c4-b45d-4dd7-b275-666a45f06995"
        },
        "item": {
          "id": "785458d9-9ab4-497c-8a2c-498f54baa064",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "04a19cd1-79bc-4e50-b834-1932a7fc9464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aa39b4-ac8b-40d8-878b-b0ba5daeef61",
        "cursor": {
          "ref": "c30243b4-06d3-48a8-bd5a-6e6c894527aa",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "045919b4-3291-46ea-94b9-d46c78156534"
        },
        "item": {
          "id": "a4aa39b4-ac8b-40d8-878b-b0ba5daeef61",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d122dcf4-437f-497f-927e-869bbaf44e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b2d0f9-735d-46de-87f7-14f79391b76e",
        "cursor": {
          "ref": "57bce1fc-cbb2-4c71-bfe4-5caeaa9c5246",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9f93380d-bf8c-4d65-8eea-647c0b7648b1"
        },
        "item": {
          "id": "95b2d0f9-735d-46de-87f7-14f79391b76e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "61cb2271-ac60-4b59-bbce-4048890d8368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d80889a-1ff1-4cba-a67c-8882dcc32535",
        "cursor": {
          "ref": "e04c93ee-a322-4426-a8e4-da82ca43e156",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "50766081-524a-41a8-bf7b-881ae7c62c9b"
        },
        "item": {
          "id": "3d80889a-1ff1-4cba-a67c-8882dcc32535",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3a8fd245-9ab4-4f67-b8a7-4fdc1f29f95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7445f074-8d24-4761-8b9a-c37700521502",
        "cursor": {
          "ref": "cd3195ef-dda4-4e2a-a708-e42c7877b7ee",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0fb4e872-14fb-464c-85ac-bbf1a49f3f1f"
        },
        "item": {
          "id": "7445f074-8d24-4761-8b9a-c37700521502",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c5b67e41-3f13-4a0a-9af7-3b313df97de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dbc996-e354-44b0-8ba4-71c93287f4a9",
        "cursor": {
          "ref": "2393b746-cc6e-4767-955b-384de47da3db",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d068d1c5-cdcf-4784-8a3f-2668df0a4b97"
        },
        "item": {
          "id": "04dbc996-e354-44b0-8ba4-71c93287f4a9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "29c8a468-a111-4de6-922a-ac56260777af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc772aa0-8837-445e-93f5-e37be520d9dd",
        "cursor": {
          "ref": "44123dde-52fd-4898-a456-5f4e409720b1",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cdf27977-a274-4eee-a58f-dbe8101a73e8"
        },
        "item": {
          "id": "cc772aa0-8837-445e-93f5-e37be520d9dd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "07ac9d25-fa17-4483-9482-a1f5e0973230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4839db20-fb66-499c-b90e-64c251b5cf6a",
        "cursor": {
          "ref": "79d40ee8-5d7c-4271-ad49-c748aaaad0ad",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "586b196b-699c-4d85-8be6-2413e47221b5"
        },
        "item": {
          "id": "4839db20-fb66-499c-b90e-64c251b5cf6a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bfdb2348-8f3c-4632-908b-1252d5a7d349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f639f7f-2678-4354-a299-e1d3dbad8439",
        "cursor": {
          "ref": "92f4246c-f4ce-4304-a277-a3afa2c02be5",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "550845d2-85b7-4e9a-a665-4431fd079ef3"
        },
        "item": {
          "id": "9f639f7f-2678-4354-a299-e1d3dbad8439",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e2b3c534-a792-4d56-a71f-314c2804aeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a78fc0f-2702-4189-9c93-f354169b02b0",
        "cursor": {
          "ref": "bcda3241-db65-4541-abef-21fa782ebb89",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "74641a8a-17d4-4d5a-8af0-8f80f12c6a40"
        },
        "item": {
          "id": "5a78fc0f-2702-4189-9c93-f354169b02b0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ba7f4710-b850-488d-a48f-de6d37a471dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c79589-526d-4e08-b7f5-878416acfc8f",
        "cursor": {
          "ref": "c25f399b-adac-4405-adbe-00235e8fc44c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "320dae41-fb0c-466b-ac44-ef7a1c66e638"
        },
        "item": {
          "id": "39c79589-526d-4e08-b7f5-878416acfc8f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4f8e3249-704d-47ba-a789-b5689f8e0fa3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f5293e-3d29-4c67-8155-d14edce0d854",
        "cursor": {
          "ref": "718f450a-5cfe-4b13-9ba7-c8f45dded520",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cad592ea-6d6b-443f-b08b-6f2304740879"
        },
        "item": {
          "id": "a7f5293e-3d29-4c67-8155-d14edce0d854",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f9dc2efc-892a-4833-877a-83d0e1cbfde6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbc8910-cca3-4518-913e-8351cb796016",
        "cursor": {
          "ref": "3b20f50a-f6d5-4445-b6a5-1e922989e51b",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5e7df1d2-0990-4468-a80a-28d7306308ab"
        },
        "item": {
          "id": "8bbc8910-cca3-4518-913e-8351cb796016",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "254c7f10-dfff-4897-ab0c-5805af368f80",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ca883c-a39b-4197-8830-05db00da1c00",
        "cursor": {
          "ref": "00ac706c-8e93-48df-8f80-99a855d6ea50",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1985a35e-61ff-4ea8-b23a-f0f5541a9f6a"
        },
        "item": {
          "id": "e1ca883c-a39b-4197-8830-05db00da1c00",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8fdf56da-853b-4355-81c1-fb06f41af6af",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0f92a2-ee1f-4f09-aed2-dbe6ac90e48c",
        "cursor": {
          "ref": "27006350-e30c-4a62-9a9f-9994849d208b",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "50c81cfe-b148-4c0d-867f-a3084155a2c8"
        },
        "item": {
          "id": "fe0f92a2-ee1f-4f09-aed2-dbe6ac90e48c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5ff039d5-7ba5-412a-9839-868fcdfbcea9",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12d56eb-2b14-4ae4-8d59-fbd113b890a6",
        "cursor": {
          "ref": "6780912a-4882-4e1b-a436-81d0c31dc9d9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "15cb1a46-6d2a-4701-b68b-73e2c970f812"
        },
        "item": {
          "id": "f12d56eb-2b14-4ae4-8d59-fbd113b890a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "641d31cd-893c-477c-a119-ba2108e19d77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12d56eb-2b14-4ae4-8d59-fbd113b890a6",
        "cursor": {
          "ref": "6780912a-4882-4e1b-a436-81d0c31dc9d9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "15cb1a46-6d2a-4701-b68b-73e2c970f812"
        },
        "item": {
          "id": "f12d56eb-2b14-4ae4-8d59-fbd113b890a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "641d31cd-893c-477c-a119-ba2108e19d77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12d56eb-2b14-4ae4-8d59-fbd113b890a6",
        "cursor": {
          "ref": "6780912a-4882-4e1b-a436-81d0c31dc9d9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "15cb1a46-6d2a-4701-b68b-73e2c970f812"
        },
        "item": {
          "id": "f12d56eb-2b14-4ae4-8d59-fbd113b890a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "641d31cd-893c-477c-a119-ba2108e19d77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356ab301-f327-4c38-bceb-4e655abbaf2c",
        "cursor": {
          "ref": "5ddc7a6e-42fd-43dc-a8e7-da85cd396239",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "03b0c5bd-40e3-4552-a6ce-f7f72a955c5d"
        },
        "item": {
          "id": "356ab301-f327-4c38-bceb-4e655abbaf2c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5ba101c4-b2c6-4bbd-8653-697f91a62989",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 47,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238331d0-f751-48d4-803f-5cf98d0a8d2e",
        "cursor": {
          "ref": "3386b210-34cb-4fdf-b905-0448d8e7a194",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3c3fcf49-6fd7-4ded-a496-33ad0b9dc8bf"
        },
        "item": {
          "id": "238331d0-f751-48d4-803f-5cf98d0a8d2e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ff7350cc-78c8-4cba-a379-0a04331aed27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238331d0-f751-48d4-803f-5cf98d0a8d2e",
        "cursor": {
          "ref": "3386b210-34cb-4fdf-b905-0448d8e7a194",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3c3fcf49-6fd7-4ded-a496-33ad0b9dc8bf"
        },
        "item": {
          "id": "238331d0-f751-48d4-803f-5cf98d0a8d2e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ff7350cc-78c8-4cba-a379-0a04331aed27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4856e3c4-b6f6-4ef4-a181-6d6de80a7f21",
        "cursor": {
          "ref": "057ef44e-c6af-4c26-aff2-4172229a2b97",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7ca26588-32ff-44af-93d3-be1a9acec361"
        },
        "item": {
          "id": "4856e3c4-b6f6-4ef4-a181-6d6de80a7f21",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "9af55344-7b79-476a-a4a4-06c2b748ba85",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acba5141-4886-42f7-8733-0e5ab2a5a2fb",
        "cursor": {
          "ref": "5090114d-e881-44f4-96de-b8da2b2583c6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e4f30249-8847-423d-872b-ee1c49177573"
        },
        "item": {
          "id": "acba5141-4886-42f7-8733-0e5ab2a5a2fb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "563daa2d-bfa7-4931-9681-733be496d88c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acba5141-4886-42f7-8733-0e5ab2a5a2fb",
        "cursor": {
          "ref": "5090114d-e881-44f4-96de-b8da2b2583c6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e4f30249-8847-423d-872b-ee1c49177573"
        },
        "item": {
          "id": "acba5141-4886-42f7-8733-0e5ab2a5a2fb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "563daa2d-bfa7-4931-9681-733be496d88c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c56b83d-ab1b-42e8-a7a2-791574d79569",
        "cursor": {
          "ref": "7c072df6-b063-440f-a4f7-375734cbdc58",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4a2a962d-ca90-4c4e-97f8-8241f0124901"
        },
        "item": {
          "id": "0c56b83d-ab1b-42e8-a7a2-791574d79569",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "5e41bedc-61c0-42fb-a85d-bb18a6febb55",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 47,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}