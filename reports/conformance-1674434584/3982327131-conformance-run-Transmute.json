{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "78a8970a-74ce-460d-9983-307513064484",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5ef5cd7c-95d5-4409-a7be-8aa0bb3f950b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "941ca8a1-ee4a-4986-b93b-f83ae7674f34",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ebd5bb79-7ce5-4a22-8973-f35d541a6d1c"
                }
              }
            ]
          },
          {
            "id": "ab231275-b829-48a2-b583-e5d6e8622f9f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d24a02b2-f42a-4e7e-8638-0fbb578b1d23",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "210b9d27-e7f7-4a52-9b6c-6192c8a6180c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "af8a2f55-cde1-478e-aefa-65646658d5bb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "077b02f8-dab1-4dc2-8520-450d10b25898",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a33df852-7b6a-442c-99fe-b35223875552",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f2841f0-2fbd-4868-9c04-410c7d61c166",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fc64c8e-5f5b-40f8-bff7-6e5b1c0ac2b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63299669-7b1b-4166-aa28-c3265a3cb470",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4069cec7-9e5b-496e-a7ee-9661e20f1199"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46fd0da4-1383-49b1-94a7-a30b72e6f3f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "abb466d7-9005-49d4-b97e-33b8e14f082a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e89b035-8d6d-46c9-82cc-ccfa01c743b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a9704902-cb01-421e-bbf3-7b92f971f8ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb20f97c-996d-4617-a9ad-84f932b05cf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79ae9c27-8c48-4013-a50a-cea7403863b0"
            }
          }
        ]
      },
      {
        "id": "7fc89323-6a0e-4457-905d-19be6af9c786",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b91cb10d-250e-4a31-8fd7-bdb85f512b2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2452011e-dc84-47b2-9e04-aaa995b14447",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af83e584-baf6-4f8c-bfb2-670508f00e0e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a0f893-8007-41ef-8619-31cec462ceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e9f7898-ecbc-464a-bf87-9533f733b791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a6f0fa-b683-4ada-b5bf-88ccd88e94f7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3952d9-7f57-4726-b092-68cbc0a97922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34dd1ed8-9482-4f5b-8a00-eedb1dc6465f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c279339-1025-4436-9a13-441116a0a3c4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af74fb8b-96fe-490b-80ec-7154eb18afad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "574e3ffd-a17a-4c7b-9491-e4d0d300a441"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c34a64aa-0ad6-41aa-b0c7-c519acc69756",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fabb55c3-5d77-4242-a654-9be657c769d2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5898305e-0eb2-42b0-8fca-4a4a10b9e7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba2a552d-b69e-4a18-af2c-e2fae11f5c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baeee5e-bb9a-4f20-8dcd-36f54ce8664c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf606e6-4c26-402f-83e9-4962a883a9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e401f7d3-ac96-46f5-8e36-246d34ec3c0c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9e45b2-21f8-4500-a18e-a11852c54f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c360c367-ce2f-42e3-ac13-6534706caff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dc4e77-4805-4074-b68d-640627a9f21d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d96d6143-b6af-49a8-b5a0-f45db36e2e7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "653ea1b9-c708-4da9-948d-fcca3519bb99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9388ebff-8bad-4fd3-b408-898627d332b4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c52b0527-09b5-4973-8ab1-ed6819ff6c09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bc9aa3ea-d766-4d40-8da4-c10243334121"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebd898af-e36c-4e2e-b954-07b0c0b81312",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f2857ac1-4847-4687-b06a-18e79b05f426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1993da39-6936-4d01-bc76-ab0b0cbda919",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "059c70b1-a7a1-465e-867c-9a8231b33215"
            }
          }
        ]
      },
      {
        "id": "b08017d0-8a67-4930-a045-b9bd200db726",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b1f535eb-6a48-4ad3-8dbe-d9e41aa08ce7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c02d2fef-cc0d-4352-8b10-707fd70c5d31",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8338c624-f79d-43ce-ba0a-abee0c48475e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df428ae9-277d-4b40-87a1-da388673fb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7b60e6-9567-4b30-a8f4-3a4d137395ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c8c262-7d7f-4033-80d6-0e39446e350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29f47b59-6dcf-4712-8acd-6b454c679a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1a3b33-ebf8-4eb9-a74b-333df4fbab54",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206a7cdf-0065-4a03-b280-62f10b49bfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87daf17d-a5c2-4586-92cc-849781da40ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e64237-9208-4a43-b67e-7c790c72f75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b8d0219-b7ae-4800-a140-c5592e8c83b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e242924-be76-4c22-a0f2-05a64c2e1346",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c794e306-c1a0-41f5-bb57-26e272a37e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118a48ce-d9b8-4650-bb82-6d77a834c761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2a06e2-67ab-4bca-96ea-5627cf4815a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c10ea6d-b769-43e7-aac1-e61424b65498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7969bed0-4905-45c9-9c47-c97326dc10d2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1091b344-31a1-4ba3-b0e2-eff69f038482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7538cf44-2216-4ab8-a0c9-76bc42c39cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c62a1e-3a17-4548-b3d7-e82cc4dc78a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9af361e9-697a-4512-805d-f323a74d1efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ff4992-9777-4f8a-abda-b740ff137df6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8717c4-09de-4b5d-849a-046f782fc21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac89c6ef-b240-473f-8e61-b70117e0955a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68caa32-c7df-4007-acad-dc2190cc3e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e98afa81-d50a-411e-b05c-6e8d6f86c3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45f51b0-8ab1-4c7b-865b-3d8fc8b5d998",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaf2200-bd1b-4c12-be8a-6de1e1eb864e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cae242-8807-49d5-a8f9-e2ec017ec139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968ea33f-08a2-45ae-91d9-b49ebdbaf944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27f0f0b2-1b98-4d6d-a0b9-2660b7c50dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132143f8-08fb-4f7f-a7b1-ab872b1b9ca7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e8cdbd-1961-40c6-8030-73711d3d69f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bba3a03-89ac-4175-8e72-04a59944c0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a5dc21-feef-4f34-ae4b-11e44b614b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da854435-8bdc-4e72-bd7d-716673813b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2871c1-1155-4a5e-9c21-d06de1031bae",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adba24b-a16d-4ecd-b624-b73532481147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e509b6-ce39-4b85-a0a4-191b09c5abc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec63a5a-c041-4e99-a6b3-e8b44d4c9a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57fe74b7-4655-4094-9c20-4ce48efdd4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71ab161-44e6-4766-8546-f84191d43bcb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b257f18-d96d-442b-ac44-d32d3f4a27f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa00bc6-b4b9-42ba-a22e-8e9ec13ee54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcff702-df52-4113-83da-b7caae820450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64dff0cb-ca60-4109-beda-8950225283f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297be457-8161-4ee7-af52-12575f123151",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a1eeb1-29ac-4f23-a77b-24c491fe0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c158963d-eed7-47ef-837b-dc9cf8054d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d6f48e-32f4-44b8-950c-d85dd2318620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6087603-0b53-498e-9635-2c9d6dbc35e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ced7d34-55ff-4125-9808-f25261a36c17",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81adfb66-7a90-488f-8107-1248f701d70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc13ca8-d5f0-469a-a43b-1f705a7c8d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd4fa91-8187-4b74-8816-96c0f3deb7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b147754-aa76-4076-813d-8a75fdf47f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f3f4f6-4999-4f90-96c0-f63bfd08e5af",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f0cd49-a0f7-48e2-b36d-55f190d25ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d187aba-36a3-42dc-8172-89ae2da40e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89b4009-1a2f-459b-a8c4-6a4d9930fb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfd1a5e3-607b-4b69-ac1f-8dda55256965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82da4219-54b9-4685-9560-74c096a73b90",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a855965a-c3fc-4199-ad2e-046a01994637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17fd60e-43e7-48a3-bf94-12ee616135f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0736dbd-b6b2-4eda-a4ad-2c324ecd7fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f24e08e6-3370-4aef-91d5-1550600e1e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a63d965-bd6b-4595-806f-7e4774eb193a",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338437db-e74e-4360-8a42-18af41a45cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed00a16c-a7dc-4f11-af14-a96e7fa1b425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b545e0-43bf-4dd2-93f8-bf3f38155417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "7803618c-a432-472d-b8fd-4c775dd9438f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e21b7f1-95a4-48cc-9202-5925aa1cfba9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c1a7a8-2e2a-45b6-80c0-da30de358e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9864c9-7f72-4bea-b479-8174ba293357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2438dcb8-1330-48b4-89ae-07d0a7998597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5dde7b4-8c4f-44b1-b3c0-ca7d94debd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c88ad35-72f8-40d3-b859-a52352884752",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e253c5-5847-4cef-bdd4-951e51be2d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6a0bde-92e4-470e-949d-92b571b8f3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44063060-557e-469b-89bb-6453049fbb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd05e523-d3b4-4c55-992f-5948a4b71851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27e6da1-75a4-48db-be8d-1cd9f8c4d0a0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdcf184-5452-4cc0-99bf-482ab6672e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf2d160-4a98-48dd-93b4-b442d96df3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23415600-3d29-4c8d-9b4a-a89ec0876d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ce34aef-c9fd-4cd5-96b9-23dbfc7a95a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d449d6b-3ce5-45ea-bfbe-f1992fe8d377",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e7befe-3315-4c14-a3db-ab45f9478419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f58f6b6-3048-447f-8812-184e6faeeca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f03caf-9cc2-4ffa-ba50-b3fb832d4dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "507da619-6430-4d2a-9ede-20431ffbddbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3af0e45-1deb-4229-bee9-c39b6223c3df",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d41d88b-cb55-4e2b-ab69-f1f9c2b91aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ef770d-3163-4a9e-a904-3b9611f08439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b92347d-865c-43a5-b726-d0935fd7efea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c13566bf-4867-45c8-8661-a4e9e79fdb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be11ac62-106f-4230-93af-de4f7b83224c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde25c54-8c0f-42d5-9473-220a5fe192db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa741cae-3cf8-4c1f-86c8-ba3036aa9fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aa0b75-0f71-4478-9629-3870af544513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f1767d-0204-49fc-81f1-d05e4e06a0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba663f5-d03d-4812-8813-c9840ee7b9ee",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09281953-6735-4956-a8ee-e93ef4354b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9821a643-74e9-4b7b-903e-9ad153a3dd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ce3045-fd51-41bc-a0d7-7af1d80b6aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bed1d6fd-8ffb-4eca-9d95-2bb6f07b0d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca086714-f9d4-4b2d-b8d3-6745e0471ea2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6728112-1123-4112-9c22-ed3cbeb60238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a65826e-e83b-4922-93a3-0ce9eb28590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7325af-57c4-4b37-88b3-5f11328edcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee187a8c-4069-4904-b1f3-b879188294ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cc4231-5fdc-4008-afa6-639877142980",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d909b45-0cc6-4218-aaf9-be98e1a538a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f23ba3f-0440-4db8-a9df-76e42d686900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b435dc19-4a13-420c-9557-ffc9f8644f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2011e87a-61b0-4503-a482-6078addfe44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfe0f18-f1d0-441a-be38-907a5a9ece9e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dd08d4-b28b-425c-b565-9b99c03e868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccae830-f77b-4c97-9eb2-f6886d03b984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9d71ad-7e3c-4ba3-9f9f-9292b03c6a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "410afa89-f95c-4e83-ad47-8374ba353536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d1f291-14c2-4164-91ba-563dbb98638e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cefee61-2f4f-4c18-86dd-777cc3470b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b1ac42-8e90-441c-a55d-d6a4d232073a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5535c10e-8bf2-4b56-986a-44fe82a9b671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc03133-d083-404c-b200-9c86b157263b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3fd10b-7ea7-4961-b24c-73408180c721",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1a2276-bc49-44db-a7b6-627dfd7af924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c4da63-ad03-4a46-b04d-6db9a670c4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66e68db-f1ed-46a9-b4f6-a08cf7817b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74a91b2-23a7-457d-8ce3-f4087b3b985f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe27cb1a-e809-404b-93cb-a7c62a862d5a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b4f372-f578-4c90-8f29-1cc26a5f2e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf9e6b4-06e0-4e3f-a6ff-f40f5ec330f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037dcf1d-a741-4419-a28a-fec5a12cd9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6c5b32-5098-4100-a87e-f91235a7a965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff2a8de-0d07-4154-b7e8-b0a9bb05f7fb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc9ddb6-7a14-4dbd-a2cc-ea76e828b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4644f446-987f-4837-ba83-8ac8258849a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd016a8-147d-4970-8fdf-936a569e3a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2452e4b9-e2b6-4a19-b0bb-225d33079aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9913e5ed-fa78-465d-bcfb-64935150db4a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efead7d-a1ae-49e2-9080-27191db4c9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9552b7ba-e8be-44ff-86b4-795525e0011c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4ada4e-7516-4159-9efa-8a4532854f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff69015-4dec-43fc-939c-c67caec58bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40efb81-1527-4c30-9ed5-72febd8af8cc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913f92da-b038-4a7f-a85a-03359dbac17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c097c204-c484-4922-9789-eb71c7cfb533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a47bcea-b3a0-4201-b19a-c1cfb0c6ca30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf11d2fb-2fb3-48b6-acbf-f19c9d441456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1f3230-4d6d-41d1-8279-70b880330e42",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92c3f37-a8ab-438d-9764-4bf15292e03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2198782d-c55b-4d7d-b067-aef9653604fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf23000-ea5a-450d-bf81-6e6295fceda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2621eb-115a-47e2-996d-37a1e2e8fa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aecf61-519d-4ebd-b4ba-94b63051f0de",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16060790-70ed-4f81-97e1-3fbaed596923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2209e5-6572-4490-ab12-3f1995830856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b984616-7a68-47b2-af13-c59cc680cd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9165df22-250f-4616-b842-af4aad80053d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947ca327-802f-4aee-869c-0e1f68f18b13",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637b92d4-5293-4b74-a34a-cc0e702e773b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a351425-ad39-4104-87a7-3726e1ab09b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6668b6f0-59e3-4057-b1f6-6872d6386849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc47310d-b134-4d35-9913-6744c24b8c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd66923-2053-47fd-bfec-c44c1f2595d0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb860c6-331e-4424-b04e-568e241d1b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d197862-35fd-4f79-b075-98486420a43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c86d1d-eb37-40b8-9fb4-2eda85bfed22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b18ce72b-a69a-409d-b7f4-5ae667c405de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb2adfd-e1ec-498f-ad25-ad737292460d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0af8d60-0488-4ccb-960a-a3c3deeadf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d6b114-3114-4a29-9f4c-17a85ba43699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1518ec-3630-40e8-82d5-8693b61e440f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d0630d-f0c1-4b61-ba11-fd6002028426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e5fe71-6381-4ece-829d-1b8c4bd57d7b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b536b8c3-3da0-4395-9427-cf74a382368d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7b4149-dad8-42b0-ab1c-8f1135cb32da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c088073-ef2d-494a-ad75-7ea78da7e1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e80e57-fd76-4cfe-8392-6e73b368e818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a9e9de-638e-4f5f-82e7-77c54be2fdce",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13882012-0a18-4743-8b06-072ba6b0e180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12814ba7-a151-4841-b6f1-85d6fd129f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28b4b67-738a-4a03-8ed1-deaffe94c755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8d59ff56-5e4e-462d-9a32-64fe9173d41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe953a8-201d-43ac-9a8d-32104e40d1db",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb9d680-716d-4178-93ee-d34ae2503e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "900e15f6-dd93-4e0f-ae96-e19de9b00b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54bc793-c842-4672-9af1-7e1093719114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf957be-b95f-4a30-924e-2b3213030163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf513aa1-9c82-4e96-88a0-90df1eb7b646",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee29a9f-70a8-4eed-ac2d-927bfcee14f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3279a29a-5dca-4905-9795-de63b3accf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab22b8ef-80d5-44b6-bd2e-fe70595db483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31cb522b-f214-4949-904d-f33f67c60f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb71130-2487-45d1-83c1-f492396c5152",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ad6d3f-5e9a-458f-b36c-599d291b55f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbae704e-8bcc-4bdd-b1b3-fa1ff62cdf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ae7f94-f924-431d-a70b-dc1c7e77d857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c97a49f4-5649-4666-8b9f-98bab1bf966d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810b144d-de6c-4764-bfcf-bb1b7d6c96d0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5ff1fa-9e40-4c34-ae28-1e419bb09a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d739b0a4-7788-4fd8-913b-5037298c7e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b95bfa-99d1-4a2d-b98f-f75c00c31f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70ee4a58-8506-4708-ba6e-4d56f3c6a1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed576ca8-c1b5-4dd1-9088-b41fb2b0a19c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6536bbe-f405-4f1c-a204-517036ea34cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f06da28-6706-466b-abde-3c55aae153b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0176dc6-ae00-4312-83be-62916b4dbd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "253e4c01-7804-408b-ae54-1bbc4e92c638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195abf50-d41d-4bdc-a340-e63cddf3f25f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3bbc2c-1843-48da-9a44-9cf385db5ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befbeeb4-57e7-4339-b7c8-dff4525aba14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51735e97-a782-458d-bd66-003b3312dbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27653d7b-afb6-40ef-a201-1cde0d4fb474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafc4a78-2da6-41a9-a36b-bd66fce92c2a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b926b4a4-fccc-4037-afc5-9c38e452ff8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db843439-85f5-45ed-ad9c-756e25509536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dec65e-0fe4-45aa-a7b8-185cc74edffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b44c2e52-55c0-4605-a3f1-2419e04b3ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69263729-8cbf-43ce-93e9-d3c1476a39ed",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ba4ed2-48a0-4ad9-8f0d-40da540ba242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb54d85c-2aaa-46c4-91ba-e31d703f538d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe479ef-8719-4b5a-8482-5ec328101aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd063dc7-12ae-4627-ae5b-747953ca32a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30a4158-76ae-470f-a1ee-6dbb29cc2c5c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946a491a-bdaa-4cf5-85df-868b53950ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91a7fe2-0211-4160-aec5-3f7b5922ca36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba1f12-4780-4dc5-86e3-6c9c22055b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "748f0df5-4cfb-49a2-b9ee-0ef5b37c5a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ef5758-5b18-4ccf-a663-e940fc6e6a09",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc63d62-ed47-4b81-9fae-10c1adc6ff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151ddd1b-1f4e-4590-bf50-8437b611eca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56021b3-c988-4695-984a-6d4e9eececd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb476ed-2cdb-4e16-b6a1-4865bcd4f04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9dee68-4a73-4bc3-8480-bdcda6ba50d3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8313d0-293b-4b78-937e-f5dc2982e45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b2605b-0736-4878-b208-a0995b91e25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b97c64b-b404-4fc2-b932-da2da072935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48807458-c725-4a9e-ba92-618793e1e29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3065c5-4f14-400a-a7c1-773d175e0fa7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60ae6ce-f69d-45f3-87c9-d14178aa1ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a592853-d1a9-41ec-896a-84efb29ce05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0cb443-c1e8-41ee-b2db-ef827973dfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5f9555-af47-48e6-aa0b-223b5f4b4281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4a083d-3b6f-4436-bcbd-3f323d6e6811",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e162300f-0b66-4ae7-824c-cbf1ebc2e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1976716-8fd7-4565-b67e-36bae334e11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff09dd5d-88b0-40f8-9030-d8440e3d90f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcabdfc-dcf9-4ef1-af09-e6a884ca9e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff401a25-e3b2-442b-ae8c-ddf81f6dc7a4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f303eee-3a02-4eda-90b8-efff76720ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb41535-6c25-457a-98e5-736a1280f7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08194e36-be2f-4d75-8e4a-92dc8fbd6710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "988762aa-15cf-400f-88e2-45b8c5761844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f30b46b-30dc-48f7-854f-e2e8a2e58e90",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5b4178-f727-46de-bfc0-7c46a491ef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046a4117-a9ac-480b-963f-c61a1ad79e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870e26c1-4f03-429f-aa74-bdcc215aaa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4cb74e-935e-49f8-a12b-000e662bacc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186e85b2-35d7-4c3b-a5c0-557208aa4b56",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8348985b-0649-41f7-af35-2b20fa9a484c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e7d271-ebb7-40e9-b223-13e38d20a19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0e6362-88ae-4549-9e4b-4de79c47d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50244b8-e531-4a41-9189-74d6cd8a72ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e522da4-9e28-4baa-8ee1-d8d865cbfd7d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92f0f9a-2738-4f89-85f7-a55eac407ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aca1dba-6434-4401-ad6c-4c8bfc2ce183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e2e1bc-c299-412f-b79f-2f434378c064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "315587fe-29aa-48a1-9ffa-4a9dafd98c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4babff3-f93f-45f2-aab5-b87d0f9343d4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48cdc68-2fc9-4f66-a709-6eeb9ab83e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a7dade-ef3c-49d8-af08-8d7bb7471b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80562211-e49b-4172-a8dc-171f80fb2bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d985c2c5-61c9-4e61-84b1-65507b767ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7278d4be-4e44-445d-9ec9-e3124a846870",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a071c3f2-c07a-4b90-ac03-461ea04312c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89366f2c-f067-4c77-9188-54b1b047a18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b03a35-fead-41e5-9e61-37a909f98fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa714dc-ad60-44c5-8fe1-daf155bd34cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd18f69a-4cf5-454b-a7b0-c9133fdf4eb6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6655ae4d-2d92-49fb-ba64-c81489af5093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bcca32-93c7-4364-8965-78108e91a66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510cd6de-d4e0-497f-ab78-90a848a118d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3ae0c7-dbfb-4b6a-be25-32bf70d38554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b85f32c-ce0d-4f93-9a35-9d7bb7a9ec71",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516cbb0f-277a-46fd-aa49-d58edb541806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28743c49-d7f7-4e8a-88dd-167cf54e6c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33668ca-b135-4321-9f47-8aa50934c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "41e31ea6-f216-4523-aa84-ee457c017f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a959184-48d4-40bb-a48b-63f8e656e355",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe4bb1b-3c6e-47fe-bfc5-6a18f365c144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fed56a7-e453-4337-bc15-79bfc40dfabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88d424a-12fb-4b20-afa9-57eb5cb35655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9904a30c-f6e5-4ded-a05f-9d48ac5305e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d180b48-92b3-45a3-8bb0-9d46b082472a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63768348-5c73-4a6b-b06b-a428fd2bfb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14cdcb2-1be5-454f-a8cc-924e85655026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7caaf4-f26c-4958-8656-4496120dc13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5df45e-4fad-4753-89d6-fdd77d5d4f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d4d18a-822a-47c4-a56a-058f3e893999",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e17087-6c53-4afe-8688-be3ae09a21c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e19bfed-e3d3-46c9-86e1-d602ce9a8104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e787f6-5f47-4018-a3be-6ab529dab28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d69b32a-3bde-476f-8607-b1f4bfdf25be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cebb98d-2a26-407f-8410-c22d728dbdc7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4281dfb9-637a-4239-9bc0-716a3a23f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b477ed46-879c-4aa5-9ed2-6c112177378b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cc4048-73f0-412b-af41-477cc67862e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "096b24da-4114-461d-86c4-f150e6e76ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e224ac-03c2-4191-bb79-15d227a662b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833e6e47-7d54-456a-b14d-310875db468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1b5265-4522-4d69-b1bb-3aa961ebeac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6affe3d-d736-42cb-b517-67f98bd76563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b6eb6e-c789-4fc6-a631-8953519e358c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303e8bd5-34c3-4b6b-8c21-77f12d4e87f6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421d5b24-94ca-4107-b3d7-a7a36f1c49ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201870e3-2fe7-4054-9842-2856b2842e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895f88fe-6835-4835-8281-04aa919198af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf84c1f-0541-45d9-902a-850cbd0981b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923a2510-21ad-491d-b66b-11c78cfa2b1f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d656e3fd-c901-42c6-91dc-3aa2193a7953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00dc936-2246-4fbb-aeb9-4e6b80ec7701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6070bb-ecb6-4f42-8a5c-97e767813ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "838b6e4c-cf8a-414e-89b1-69596f3a36ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6ab8ba-bb4d-4589-bd22-d515a6d78272",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d46e3fa-d1f8-4224-8b71-c4ba86f32851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4aa4b7b-89fb-4ab6-9a5e-b1873252c32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7e1c10-8dbe-4761-a574-e9888fb081b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b059948-abe9-4bd5-aad2-3ee750195d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fec351f-ca9c-484e-9813-f0ebaace0c4f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a9ef1d-1621-4f48-bb46-f01da6f296b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e025ad5-ef63-4448-94db-73ea56bbb26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e652b06-67c7-41f8-a8aa-fc140b1a1a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de2db1ce-ccc1-45d9-8506-67b876d8a71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18b2952-d53d-4f03-a536-c872b03022ed",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741529e2-f0da-4325-a5f2-ff28d1e617ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d7a2d5-52ed-414f-a271-776c7c54401b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7ce585-c13a-43d5-abae-d40afcd7655c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94a14992-26ca-44aa-b396-5ca6df1055d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117a3f3b-d1ce-4b63-9505-45aab148c6ae",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a98a6c4-837d-41a3-8d52-1ba5595a38d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598e4567-59a0-44e7-a964-2064f9d120c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d845b43-1538-4ba4-a8fd-04858762fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "053a021f-6867-40fe-8935-3b88a66290c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74139ad-08b8-4a8b-94be-f6c97c701ba3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0169cc1-e75c-404b-b919-14d18de5cb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0a4262-85a2-41ae-9b88-f22531da4aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f783e742-aec8-4b02-8d46-8723d73a7d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d0fa4c-cd0a-4ab1-a083-89eaa48c27a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c421c8-5f0a-4a14-8cfd-565c6765cea0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24226c4e-f287-49ae-b074-446bbd95dd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb502a7-bba2-4ec1-9694-af3166086304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6f1ab6-282a-412a-af00-56c57e1851d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2bef21-4931-4344-98f0-b402266a573d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e81297-b438-40db-8e19-51ecef89f7b4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd64c1c-7949-4e50-a10c-50eefb88ee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d25772e-8424-455e-8a1a-fb70f1e71af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb25241-4c0e-4124-ab74-7353a13e532f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc5d238-d406-48ec-ae59-db2116e72912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796c2887-1a29-476d-a41a-3e15ff3e0f31",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c0aa44-9d61-4f88-aea7-0dd2ca98697a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12331104-82f0-4ca1-b7c4-1dce5cb87385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87778f3-be69-4e21-8799-14f04f37d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f11f54d-b971-4d7c-94b3-e82dbde86534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ca2c9c-fa83-4934-96ac-03f50afd9720",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d370143-8a76-4829-8289-cbf8841573d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01679192-74ac-4894-9b24-00a54ee84729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89b90af-6ab5-4744-aa3f-fb26c4793a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb5c7c5-d1b9-4ced-a7bb-f40529f3c946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18ec7f4-92ab-4f6b-b57c-692b2a53e9d2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b024dc4-2ace-4719-8694-2a62cf743ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90747ce-1f6c-4dfa-9f6a-2363e5678309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a1f00e-f566-46cc-b30e-14c0f8325017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce84751d-85ef-40df-8b43-0a4067931a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071fab5b-569d-444f-9fb2-9df28cd83cd2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbce9f8b-74c9-416b-bed2-592122554008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ace50a5-1757-4e08-aa0c-0f19bc8ecc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedb0b3f-7caa-4c96-b6bd-e67bcd17987b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "823357dc-a4a3-43b4-a479-4703ef5d1366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224f8d2b-7446-4088-bb0e-70797d3ac26e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8141002e-7c5e-4914-a57f-c728149a4e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce2eefa-cb27-4672-a701-2038292b43bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007cf5b3-b2fd-4f87-b2e3-104b11b44b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9578f91-2d42-4712-aeda-b053456151b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49bee40-e72b-4205-8186-a0e81440bdee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c38eb9-20f5-47a2-b65b-168bbabcaba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360c7afe-2e91-420e-90e4-4eeaad301d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aecb38c-b200-4b45-8c23-c05c189f6aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d739da11-3c38-4f22-afbe-08ccd2a1fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb0fbb4-058a-43bf-b395-cc80e58dde27",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a869950d-5322-4557-a514-58a33d9ed1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25cb3e8-253f-411b-b073-6da0c209344a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c01031-9192-401f-b638-7d15431967cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e478d80-c297-4b57-bfbf-7b3de28cb7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a10d9ee-5a37-4080-9c30-b5d3d467e7f7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfd376e-1adc-491e-bfd6-b1484caeb8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cae379d-c6b0-4164-9722-3ce466b29c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e6ccff-a929-4c08-b183-231dc5277b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17d6516-7361-44ad-954c-566751849a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2155d549-e63e-441a-b671-af8ec63cf5ee",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3826006e-b579-404f-b66d-49be8910e95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5c6500-5d99-46f4-a187-c418451b6185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938e6ccb-91d8-4225-9c8f-69b081f3d105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b727b9-1ffe-4c19-9874-09b2db3d0e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60fc1ac-3478-461d-8989-4ddbfae11d4f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e4c317-f634-4793-9af2-af3d1db99428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ee5d32-fee5-469c-b73b-3e9d3f761676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6babed2-769b-4066-825e-da38ed512726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72d6fa2c-b64b-44b6-a766-58a89f12d67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d726cb7d-077d-40ae-8379-f58d0638c841",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0117247-bc8e-424b-9248-ae8f1047f2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01f3160-7819-4844-83f9-026583dfe2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3527e150-f394-43ec-ad56-6ce424a5e988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "580da7e5-b613-4367-a877-564d4c6fee4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cd74b0-7619-422d-80cd-3cb631b4680b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dd533b-2687-47f9-aa67-7bacc2fb9172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c930f80-8da8-42da-8ae1-a67ca9a7293a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d53e3c-27d5-41ce-9def-83e64c7d0c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb43d9fb-e79a-4770-bb24-2f7177d88a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb695816-717b-431c-9312-0d8508b8cba5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4225436b-59d2-4936-b1c9-aa3752350ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493d2b57-287c-4090-bb8d-1ba0460fe232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338a465a-f675-4ab7-8e15-4920b8a2bf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23027602-78d1-4b55-bd0c-1149a3dc8a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fca10a-6d01-4ba7-a2f2-15cc3fd48c7b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059f1ba0-aa1b-4bf3-9d0e-32e8a6e64c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3258a7-357f-4711-9e45-2ee4c5112d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63adb364-5c6c-41f0-993d-08bd2ca1c2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89cf5c9-bab2-4fc2-a5cd-83b4209762ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595714a4-b320-403b-83f3-48c26768f755",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf89e313-604e-4e65-97e1-d7c2a0aea7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ce778e-1818-4ce5-b85c-629eaa12624d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5295a2d-ae64-4d16-804a-2f7e4dbfc940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "226e5e0c-dcfb-4649-a7b5-b56da5e985bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da55ecb9-8d13-4d0d-8e5c-948b0d395232",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf9950c-48e8-4672-bc9e-2ce9bada98d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0860a7f0-63c9-4491-91ae-a629ab3a61d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d6435a-ecc1-4faa-adb4-09266a04577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd60f726-e361-49b4-88b9-65773dc02dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611eb7b4-787b-4500-bd4a-d9882a98f304",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61da118a-1574-4e94-82d9-f6fe6dadea1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017496d3-644e-4ca9-90ff-b09d580c51e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55583cb-d03c-4be2-8bc4-2b6868d5b634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e651ff7-2496-4f6d-904d-752d24af8750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6c48e7-fecc-4790-9476-b73695e46dd9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50013f5-a793-4d9e-b95b-22ee017b3c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90e19b6-d7bc-42fa-9dd1-8570e7abc2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e592e2e-a87c-40b5-9d35-0d519480ff0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd06c96-83ab-45e0-9887-c1b0af9e1af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf034d3-7b5f-4e9f-9e42-ca984438ae7a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf52a50f-6cfa-46fd-860d-666363c44010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8eaedc-8d8d-4710-b926-34febf512439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a988448-9c1c-4c5d-8ad4-59ca0f6563a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b87221a-e5c8-49a1-9ce2-5188250cbad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5817bf2-f45e-4f16-a7b7-7def89f7ca72",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577696ae-fc86-4ac6-9ccb-48139f9b7325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6df300-6f5c-4a08-a6de-696aab6d06cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b9266e-0292-43b0-9a0a-5a50eab9ec26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e32240d8-8080-4304-8a94-fca01bd983a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefcc6be-653a-42b7-9444-dccec4b29a1a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b4bd72-bf5d-451a-a04e-cf7f05ec4b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81f3f66-1ca6-4749-a013-4afc97baa583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c28994c-b480-44c0-a3f3-c37bc27284bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "08721cfe-42eb-470f-85e6-37be5d60def1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9837acb-33dd-4389-90fd-19b3dc239e2f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8917759-61eb-4694-a16b-c4ec32ab0e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba82bb9c-e896-44c9-ba97-a22303b07fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb8c4c8-e8eb-4404-b68e-028d3fa53834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b58053d2-29e6-4636-82a6-3682037c6657"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b65c790-8ea9-4392-8148-9252f4093473",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4418de5a-1989-4ea3-8897-8b2752a26084",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5616c416-dd04-4c0f-b419-96304e95292c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53501e55-d7c3-403e-89b0-dc0b499f6893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2af74e6-f518-40fc-b9ac-c25837d99d42",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "94f7a514-81bf-4dfd-9092-eb5364ead2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125f98cd-2046-40a1-99b5-9728d0c9d384",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8eae66-b7a9-4789-866d-a2662b8b7575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c17e7755-2423-4c2f-bd99-c220a9e564ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e92bc21-0b56-4887-a882-edd694a6d5e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e3a77f90-e70f-4483-a6ee-e282e1071e92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "139bb490-d75c-4ab7-9b67-ce1560709eb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2859b43b-7027-47a1-9a00-3cde8383b26d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "805eadd4-7a15-4df6-8eef-f04a4f9831b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68ccfe25-f4e0-4fdf-bc85-a147adb4b8e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "656054cb-7149-4f35-9734-46c4997d3c04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc4c5bb2-fa66-43a6-9640-16eb4feb7db1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d717bb34-200f-47b3-98e4-dba434d266e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a631ecb9-38fe-4343-acf7-3079405ff69a"
                }
              }
            ]
          },
          {
            "id": "3bb3a269-a44d-4575-865f-e3afbe9699e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "524bf8fd-7bd8-4d3c-954a-8608d478d13e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50301d83-800e-4456-abc9-4c5870d3877a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f83b10ff-74ba-441a-9e6b-8dedafb62c51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14b3eff7-f329-4b6b-ab18-7865494762ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6896db79-205a-4236-872c-1fdbac9ac663"
                    }
                  }
                ]
              },
              {
                "id": "12f5c981-a40e-4ff9-b934-a97b04f4705c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18921ca8-7355-4a62-9c12-bc986b0b8b26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7f8a506-1611-44d8-8bac-0ee0e307ff6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25848a03-648f-4f8f-b41d-4ab16a744a1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c7e2fb2-4025-424d-9c6e-32a3127ff031"
                    }
                  }
                ]
              },
              {
                "id": "e3b1530d-9323-4eae-923b-d754bab58ea9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f0ff920-7dc6-4b56-9aa6-159fe7721367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0af232f8-f951-44c4-ac64-2f21661352e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00758e16-c65f-4e5e-a407-021c30a6cd6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f2d03eb8-2b7b-455b-a050-c02fbab76dbd"
                    }
                  }
                ]
              },
              {
                "id": "640c52ba-7a37-4aaa-b300-c1c62d216cfa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6439eee7-3bb7-4b56-ab7c-1d18b800c802",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f34986a0-90fa-41fa-a570-4cfa52c99a20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5630f11-3e4a-4b0e-8505-f843f8acc18a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "62b0a15e-d876-4560-a0fe-6cde575f83c5"
                    }
                  }
                ]
              },
              {
                "id": "12a9918b-adbf-4ebe-938c-84c390edc65c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8588ae70-f6cc-445c-8324-f6cf1437294b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26541993-c8c9-4ff8-b9c4-48ca2a16fb64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9896c2a-637a-4fa6-8345-3eb5b14d3a90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf54493b-94b2-46be-ae03-9c1e5bcbc334"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96b73a8e-3406-40b1-86a4-a801f4561791",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ea74f3d-858c-493b-b491-a951b51fc398"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7c8a7a7-d2ac-4f09-a1a9-be2a4e3473c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af4c9b4d-ff43-4653-90c3-19bc0ca6f5b0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fd7cc04-3752-4b1d-8543-d00cd3837b03",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "398eaeb0-5b57-4fbd-8e2d-71a9bff435fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ef1c3ab-e977-436e-82d7-1973892c5d0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a522d006-c533-4593-b8a0-d9027fad94d7"
            }
          }
        ]
      },
      {
        "id": "6be57a8a-66ff-42aa-aa88-52dc5038a428",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7c12789e-7684-421e-9898-e8db42ba6d00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76debe73-efe2-44d0-94cb-2b22ff1dde36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d92b932f-58f2-4483-a31c-b8e234073adf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f0fb0a-4afb-4fc8-a658-63f096cc1fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88e9231-c509-45d4-b48c-a86da590c2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07820023-b67d-4845-aa94-30567488d017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "473de462-fa42-4cfb-a372-3921247ed8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7319175f-efbf-4594-b21a-3efc70dd70c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e39ab62-f5cc-47b4-bb0b-e0f5387385a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f1a3a6-fa1c-4630-a10c-3432383c90a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b07d1af-18fa-43a6-be9a-0597364f1ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc0b778-b67f-483d-a17a-e94a8022b575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aecd10-4407-4b61-9650-c7711b4fb1d5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31dc511-2b8d-47f9-90bc-f1b80f95c89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82b4a69-8c77-401c-bd9d-eee7a5d57f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bce6cb-3ae3-4fbc-858a-66e59907f8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00aa9cc9-d67a-47f3-a739-ab227edd4bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0235331b-cc4e-4e0d-9f4b-a87948318d6a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57048d5-1ff9-4d45-92fd-aaa324f93863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d537212-2464-488f-ae64-c55d4d2fde2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca42ddc1-86fd-4b9e-8343-fbc47d55d5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca917f99-1816-497b-a0da-c4dfb98dd832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437f2e12-3bd5-44c6-9294-6a35e90b0aa4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b73cf4-2dbb-48e6-8629-dfea9562c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16dd18b9-c6d7-425f-a19a-74cbba8a3c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4262125a-d340-4f50-a785-453ad1252654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e15ea43-9b28-4dc8-a7a7-eda9e9f75629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f23596-0770-489d-8950-1110e12bc9c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2f817f-375b-4251-9b19-be92b8915df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242e360b-c62a-4884-88db-2afee19529be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b250c8-8ab8-4f8c-ae5e-4fc8c2ac8dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "355e62d9-59b2-4e2b-bf71-c74a4e24879b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938c0a06-1081-4798-af6e-60e656605441",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f554771-2a76-4d2a-9cc2-80259e79c8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127802fb-5d0f-4761-94a0-88ca9acc300b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6117afdd-0c53-4994-bd9e-fb11bd327a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f60cd1-3f61-4ac9-946e-ce9a46429f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7202aff4-af9d-47ef-ac7a-d2745ac00ac9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc7163f-0e65-4815-9fc0-11d51350a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d343a1e-862b-4e21-a780-7dda1878d79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53eba5d3-6a36-46e6-8799-9a4cd10f2718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da714f2f-e0ce-4380-b833-46e193cf884a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636c38b6-4ba2-41f8-bd96-db5a72044879",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea42a0be-68b0-4392-8237-209bf6778f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04052952-00e2-43ba-b117-e59a734e3b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ae235-3017-45c5-a5b0-1f29f11b90fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b5b4df-7d3a-4410-95ba-ff1e56c587d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ab3885-142e-4675-9ab6-be3eccf1f02c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaf9019-660d-4820-931a-a681063d1188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2500795c-6a14-4d45-88cb-3549b7cd1f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ccd2b1-0f66-49c2-a564-9f468f1f4384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece8e433-84ef-435e-a2e3-5587c5e08939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d444bcf-d013-40e4-8fa1-c9448dfbe852",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a62536b-5097-4b2a-b98c-e4f7db556955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e611a1f4-1f76-4e94-9f64-2df79edc7979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cf5e41-cf20-423e-b82e-6431eb1ddb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdb7f6a-9578-4fee-8c74-87925efd35f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad75e9e2-87ce-450b-95b3-af83be251f69",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bd352a-1a44-48c8-a78b-5d1a0a7052f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e3b18a-c75b-4fae-89e8-0e1000b83992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d491d80a-a664-4225-ad7a-e1311e4027a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2c423c-40e4-446a-9045-f84b0b5672d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6234e8-4bd2-48f2-a183-7de635f95d47",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540985b4-da48-44e3-9361-dc84805c0314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea553a0f-e76b-42f5-aaf3-3826d19bbaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f84a41-3ee2-408b-9c54-512950114d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2af5a70-4382-480a-8217-000efbcfaf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21345240-3037-4c97-bca8-451b242393d7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2192ccd2-e195-4559-8b19-0326c5e718e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04945c38-96c9-40b4-82e8-9423a56f2e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3a7318-86e9-4c8f-9300-d1c879018317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd28157-713c-4677-bb99-77f6c16ccd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56459fb6-c6bf-46c3-a7d5-9cc26701d672",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3807563-f1e7-4976-91a6-1d77a83146ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3451ed4-d59c-423e-88d6-7c6877a97214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7446a2b7-525b-4e40-ab9b-444aa427070b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "60624c4b-db4c-483e-a59c-a0e86a3eb0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d656dc1d-4648-44d1-ba8b-54e7099bb644",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7da14e-1af1-4f2d-a930-3a7b6b2ec103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036c00b5-04bb-418c-b092-34761d609f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ebb785-5285-4567-a26a-bbe5a07322fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd0ae14-0eaf-4ad1-b151-044cc5acd002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c4af4f-5a5b-4b5f-9575-a4a01303e16c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42690520-0055-4fbd-a888-4f946a5d172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900a05a1-c7aa-417f-bf34-9eb1136d3f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6e67e0-9884-4fba-9739-33a22d77322b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca79f3a-74d0-476b-84bf-63d50389f112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a322acb0-da3f-4c61-8fec-24e43623f3bd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f12e017-c21d-48de-8367-86af5469c53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0ebd18-63cf-4288-994d-635882918312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92fb891-b023-47de-a9ab-b4e03e34efa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e4d276-2caa-4c79-8775-149b6d0f3b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6075db61-8c8f-4054-9ba0-328023f0160b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa969a1-f95c-417b-b367-5404b98e0912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a91dca-7239-461d-a83b-6de825b7d702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0566ee-265e-412d-be95-25db5eb6179a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b84363d-28fc-4151-9b02-555ad43d72bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cab0b2-54c8-4b95-92bc-5af12159cc46",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a28a5db-0597-47e4-88c1-4d4cbe1a1373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e91b8b-7a94-4dd2-953e-e02840e999bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84398392-e3fa-4226-a0d9-c306eefd74d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93464267-c9ce-463c-9976-16dae04b418a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67e472b-12eb-410d-8a58-ed7000a27660",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c65f40-9540-476c-a5f0-40c8b3dd5dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b828c9d1-e90b-4428-b56b-d4c1393f47c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2140a01a-6d9e-4a5c-b493-ae7f0b64ae44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2aad8a-633c-4e44-a7a5-b68066d82b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873f2482-c446-4bf9-8878-f12eb5038c76",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb13dfb-b62f-4d0d-bd5f-5d8021de0b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7551e5e-69f2-4666-8afa-0f432d86fc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df62d040-dc9b-4f20-885a-f219c9651477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d52037e-0a96-4a56-bd5f-d501c24fa437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2f2f68-e731-44af-a0b6-f570e14599ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b00b3f-144d-45d2-8a1b-da4983c4578f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79d859d-6289-4c1d-8f23-7c7b05225e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c870f101-a72c-4928-a3a1-1baa9cb5936c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd987b7-9645-4051-bdbb-37b54f58e37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3105ad4-8234-4ed9-9e54-70ce81d84316",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5010509-94d7-4106-8613-6bb8437bef60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808a9a35-a654-4b18-a9c2-8497efaa2411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c7e937-9b05-46b9-8d79-26c621def358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecd6b43-2027-47a8-a80b-cc04074145e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb07139c-e269-4f55-ae86-6808713c3b6c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073629e9-3eee-4a8e-be2a-40e152357076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3c84a5-4735-4237-8d8d-7392034fd31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457a7092-1065-4b95-bef7-7a480344ffcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1342716e-2f80-406c-8d9e-6c0e667aead8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d56570-380b-4f12-a93b-a027bf009e3a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7871ba-0f48-4ab5-94f2-a29c55b37f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd68010a-de0b-445a-8bdc-aaf042e3cb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26105e41-e6b7-42a8-a15e-79b1eac51636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0879b69-38ef-4738-9580-d935ca749bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b18909-663f-4683-bd9c-2e40b92a424b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833f322f-3b72-4a47-8e4c-ef666f7db612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b604a77-da6d-488a-8ab6-aa39d02ecd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c84780-7558-47ff-8178-eb7749e548bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b19e8e-b74e-498c-88f5-bd25729af317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0417724e-35a1-416d-9c39-689ad2250adb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09875fd-8e9b-41fc-a147-4d6b03cc258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b696f4-80e1-4e2d-8863-7b3f1409f853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d7533a-5193-4224-9b2b-4f459b0f5188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce784c3b-c214-4628-bafa-255478abd24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff19b46c-d00a-406d-ac04-b2750c7b8aae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5b90c3-5b0c-479a-baad-9d6ce5e9964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6134de5-7520-4190-9f4a-0cd9a38c1f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe71ced-5333-418a-8c3f-a7a10509c536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91119695-4aff-4743-a26a-9c924e1eb093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337470f4-3d0d-4f4b-8709-ab2dad740922",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea703422-6fc1-433d-95ad-e8556383b62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731be6aa-31ba-4bcb-b249-a8e07427b7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6d0ae6-a57f-4504-b5a1-0914b3944c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc074f78-f44d-41f6-901a-82e1a4e61866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81b0f4f-a821-4e16-893e-8bbe6e6b4922",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca7896c-96bf-4263-9d4e-50fd9c4caef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae84c22-43d8-44f8-b40f-0e7a5cdbbaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9d09e-16b2-4634-adfe-61c3cadbd4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b545c525-58c0-40bc-8254-a8d8a63d5ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7732126-0319-4d3a-849b-c7b9880954d3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155b72fb-cf81-4b00-986d-cdac8d960824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a1c408-a80d-47f3-8b4e-e7d92dc1ad3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290886c5-5d00-4bdf-964d-8d53eb1b4b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "296a2347-d55c-4bae-9f5e-f73b22782918"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "552fc6d7-16e8-4ea5-bb1a-b3f0b82063d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac3ed395-6378-4760-b6ec-6aab77653a7e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e49006-7e87-4f90-a40e-44d1f930e461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436686ac-f37f-4276-819a-24a936738f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b07a3e-99d5-4734-b812-dcb3c0870759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed3df99a-960d-4f4a-9861-b40b3c1bbd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c3869e-a9d2-4f77-87c3-9dce8a5c9c7a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaab88ae-495d-4ce2-9e3f-3a43a487e045",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "5943c2a9-682a-4547-bea1-46f1b578a1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfdbb47-5946-471a-b33a-623004ec3853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b3be9c9-0364-471e-9c1a-572dd2a7974c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba44079f-f983-4a94-afc9-7d7603e4a965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1517fd80-f826-46ca-94f1-05a57f690016"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d25d0d0-7cab-46af-9262-eaf96a7e0ec0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01d0091e-cd35-4e42-bb4e-8b10d49e65b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e7986f5-5747-45de-bdef-03381f7384ee",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03ad6544-8fd7-4178-ab2e-1daeecfc0daa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dd3dadc-0782-417a-8ee0-5e9012e01751",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c903a09-2cef-427c-9365-6426bd2b77e3"
            }
          }
        ]
      },
      {
        "id": "69f7c3e6-626e-4917-b8d5-4a023b164a82",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ba82cfaf-2725-4a43-8917-14380616dd36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55271993-9e4d-4733-873a-dd2c91fb57e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ae31475-607d-4b68-8145-911054ecba95",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec7d4e9-9694-4468-9934-ce4a245ce392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db5e081-4b8c-4ae8-8af2-dedb0e24c2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73b019f-44b7-4b0b-9341-dd82d4f14d85",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081b8649-8a52-4df6-89d9-1af19280ea16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b24312f-e971-49be-b2f6-9bed7937cc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561c2e50-48e9-43f7-9623-63ffadd278d9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8032c04a-36b2-46a5-8894-11a6ce5eefbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670bf9a1-505a-4b1e-8215-9b8aaf7eb5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c2c78f-c2af-473d-ba43-35330d0ef7f6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2160ce0b-1da1-4837-bc78-78c5037b52ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adeb9145-3304-4fd1-b94a-ad892c80cea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a933d74-8e1a-48ff-b49e-7cc7c3283663",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf660026-c4f7-4a1e-be95-fbb63fbff051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221c472a-9c26-4539-aaf5-39e5b8bfadd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf0c86e-92a1-4f9a-94f4-23edcbb80992",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c1a763-a3cf-467e-8e18-7b514bb3bda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f351bf78-0920-4e3b-a415-dd19b7799a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be124252-5742-44e7-967a-55132a8a2e58",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81f3ade-e383-4185-aeed-5293c776812d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fc610e-09a2-4bf2-b31d-ee0be0e7a45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4128872e-6b5c-4ed3-ba04-c2616518f461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb85152-1813-4aea-87da-ad03f95ea3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddb3f5a-e521-470c-b091-9cd6c2e9ef45",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5baaa76-cc22-4ef3-a705-c5b41888eed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058de23e-166e-48f1-8869-608326ac35ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b20ac5-9671-44c7-be1d-2103b1587a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c604a2e-153e-48a8-9309-011eeecc083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e22e2b-7946-4224-917b-4c0889fa368a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b13a7c-8f91-4a0c-9615-8a34ef78ad41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa24ad15-446c-4ee1-a380-1551badf11f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f99b2c-7783-4277-9031-c401a2f57903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c661905b-c35b-4e2a-a63c-c20172413531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fea5777-3097-4b58-9f22-fb498be257f3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922ff121-2121-43a5-aac2-b819c2be909f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8989f764-f170-4cf1-b1f8-722a5d0f9c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a86fe8-4c13-48c8-b9bd-9caae6e90429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72eb8b3c-bc75-4efd-8977-a5bcdeccd82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55e5726-e22e-469b-8056-773773713d87",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cba586-22c2-47d1-80bd-86f1883e049d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d735f1e0-265a-4a13-aab8-038d099b3cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905857b7-d9ae-4706-beb8-7fe57762f529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e377c1f7-0cdf-4846-9e6c-c347195ac79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a922f03-e14a-4d84-a39c-94248d21323d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b988ebb-1225-4171-806b-71f4cc75cae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153e43b5-d878-4836-9276-a706c893f118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0438d707-9823-4b42-a80e-45131956a53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fcf74c-64f6-4238-b9f5-91c22a563387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3427a662-b14d-4b18-8ca6-1b52bde4f199",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96d5b30-35c5-4512-96ec-62eac50f11cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fe787b-251f-4822-ada5-72f91867e166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b680a370-d844-4cea-a585-8c442f850441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7602d94c-9d83-4ea8-93e4-67e3d4b2bd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977d7c94-4199-4bec-ab6d-119164027de9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0903d8b9-0605-43e1-970d-386a825ec519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59791bd-3aa9-4bd5-972e-70d7a936f3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f3142e-0e27-47bc-8047-739cceb55539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b1e04b-64ca-41f9-a036-2f445e654789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea68dac6-26cc-4770-92fe-a9b909c1632c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b417ec6-d45c-454d-9117-d9748e1a8233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870ef197-fdcd-4077-ba2c-099b17f96428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a2204e-8686-4ddd-9424-c16063513d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77913c48-d6e6-483d-a972-1ce04d95e99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff032a24-d915-4d89-b890-5fa6a7089b51",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd791336-1bd3-4bba-9abf-2e0d73f6df7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7430c208-ab2d-471b-891d-0e5c24e31aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dfcb22-e71d-4cba-a981-0a8a67203fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54c497a-fa70-47fd-833d-c38e98c33c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff1fd13-1656-4d7d-8d82-7cff157961d7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f7105c-66d1-408d-a8cd-aa869e972213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af91dc8-d662-4dac-b08d-110fe7ab3c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d28edde-343b-44af-b6c6-9fbea05f5dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128d4dd3-0ee7-4284-9380-7e52afcfee00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b56302-aa92-4fa4-b9d4-7d134d9ea59e",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257fc0d6-c18b-4819-9f96-f4d6ca0cdf7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0014af-7f75-453f-9121-34e65ad7f765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aea35ea-fad5-48f3-95f3-621b8c97816d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29814de1-7af2-4674-bbfc-49748f053a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4946ffa-f64f-4eb9-bf13-a47186edb423",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2c6e9c-04aa-4e9c-b689-06c67c5d67e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87845d27-7d02-4776-b3e4-4ea4ee574a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc99dd41-a3ba-4ac8-8a11-00780967e530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a8a719-14ab-4a7a-9112-a244ea75e171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5a38db-2a94-449d-9d93-dc92047a5e1e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dd60b0-3dff-4182-9f19-fd584c564482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d4d20a-7cd7-4b2c-9ff8-cdb261e683c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d361d0-51aa-4ae1-a27d-6a98c4db4ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf6dbcd-51c5-4057-a710-2122aab6ba52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0317dc-af76-4c18-88e9-e5776d8da4ba",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb6f2b1-49fe-4803-a382-f0402c356e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea59d74-804f-4a92-a3b3-7d8f514e9fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a6349e-cf71-42f9-b7b2-05bc44631c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9ece1b-2ee9-42b8-807c-c3790964882b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15684143-42a1-4444-aabb-a2e284ce7d84",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb68826-e655-4fa5-b4e1-c6ab709f9d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01703c16-070e-4e7f-aa44-641ac214c99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d13096b-ad88-48ba-aecc-ca40e95c4a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6b4768-c368-4c59-bd86-d986c8cbe3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1567730b-d4b8-40f6-b1ae-f6c3910365c2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d919832-0b49-4679-8fac-fe05a8cff30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff33bd09-297c-4fa2-ba32-feb8ec1c4b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c07205-f4e1-4985-87ac-865efc98a89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39c5b2a-078d-4a4a-96a4-65c8ba7e1416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926009f1-4f95-429c-921d-841937128eb1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d196edea-6a14-445a-9aaf-b7e008c7742f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba058da-ea7f-4bf1-86e2-5a3bf32f1f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cea2ac6-9b63-4a7e-8a89-783eb71b67ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d44318-460f-400c-9a7c-4b5d4ea3ee99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd47d68-667c-4d78-9d5e-44d0255b910d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08168fc-fdb5-409a-8f4d-13a38ba8988c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7f88cb7-d146-4124-bc68-7c1757f3d675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0827ae3-99a4-41cb-81ed-fad034408a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8150dda8-11ba-4a5e-9393-806fceb00dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f30604f-3c11-4b30-8bb3-0785bed859ff",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fa2839-a85a-4995-8769-40cf2b8ea116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516e5ffe-d02d-4a12-9fb9-0d0b80344ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fe036a-b33b-4b9d-b05c-afe879ab2c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ced50d-6e1a-4eea-aca5-b3f56a969838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5d7f0e-522e-4c47-b4b2-a49b7b8f8405",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93aa1f8a-00ea-496d-866f-28fce682df52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9419c742-662f-466d-852d-2401de97b46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2c657b-b3e7-495b-8ff6-a13333d3f527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b5e4a0-7b7f-4a8b-82ef-35f660c488d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc8b149-04bd-4816-a232-1deac6952860",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355794cf-7703-440a-8421-e27eb4c7b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11163c50-9648-4fef-8382-d0e4a5d93cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4617ed-aaa7-42a8-84ce-d4ef74dacad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a870214-3ceb-481a-b1e2-b986a129e8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e59a3e-947e-4d07-90cb-63ac0b3be856",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b54ea70-68e1-4806-9b99-e3ebaf546c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1f1007-6253-4267-b179-2784f420c54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26bebd5-79d0-4ea2-8ffe-7b66fac6fd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d430c7-727a-4b59-86b5-7bb86cad1666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6fc391-62cf-451f-b85e-061a64bfcd39",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0863fa88-b51e-47bb-9e9c-ee9e103d282c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b57ec3-b688-4df3-aeca-c17e63371e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c650b514-40e0-4f6d-a28d-bd707076c52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3111ca-06c9-4a75-905a-7f199a5783b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4609a3c7-3335-4015-a977-7518657f5e91",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95354095-0342-40eb-a1f7-eb80d7beed9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97db1ae-1899-4770-9ece-61a8549fa767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d430e3cc-cdd7-497e-b09e-81fe7cc38dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46721860-d2d3-48b5-9682-e18f31e4b7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4d34c6-f9b2-4392-af8f-b3d680bebf63",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e34dc0-4601-4568-b806-2d4191974fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701839d2-42a1-4618-b798-33452384a22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bb615f-8f4c-4111-8271-bd7cdba79ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa7740b-ca3e-4fae-8ad1-476263125871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae948e96-a5df-4663-ab47-52c58c9273a5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676b17be-96df-4054-ad56-e9c5a5392c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f8e3a33-fb7a-4ce2-ba46-b150fca33297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432f889d-3ca4-4810-ae56-38d13aa97dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87fa1f8-dbec-4d7d-a8fc-baf3978b2a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e17a126-b7e5-4858-89eb-3f58010851f2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b69ecc-3834-4758-b5b7-9c438e381f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c28068b-b31f-4437-aeb8-3d438d67b7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a17a56c-eb44-4da2-83f8-d5a3ea8fe3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e566962-e523-4513-a4a9-6aace91144fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516c7b1b-11b7-4f78-b16b-b741bbaf8d79",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c93cfe2-56f7-40d0-87f6-2e4e9c6c0f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34dc34d-8fd0-4681-aad7-0f91a9f7528b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61321e3f-12ff-4217-805c-1ba308090b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47d6247-bd23-4653-a32c-bb5ac755598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b98b1d-20e6-4131-b004-e1867d295a0d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a304408-162b-4996-8c27-4acb365c4fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba09df5-9ae3-408f-9332-ab7e3fd460c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba0e873-8702-4270-b1a9-a6b63518a37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c938879c-b0c1-4234-993c-dfd7109ec205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82642825-2098-4cf0-b78d-95a35634f7a3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd60d7ff-1514-41d7-b795-a4d4cbb94002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d7fcf5-8fa5-4360-8b01-06c910855dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381e4e6d-3c46-457e-b970-0c93aa27564a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc23557b-623e-4200-b8ba-fb784f535bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be91bc2c-9642-4832-80fe-e136659cdf53",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c602fc-da49-4aca-9f6e-674bbffb0dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20d272e-04e2-4c38-839f-565f010352ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98270770-50ff-4ef2-9e34-26099eff050a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2e1bbd-e408-42d3-a257-e37572c90e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304c35f8-873d-4916-8d77-9f2e8168509e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20796cc9-f82f-43bd-9f20-743abfb4f601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e6e948-4fa9-4801-8d46-eae53d0254f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0369f4e2-e247-4ea7-a6f4-38301484ca05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d65caf8-3560-4b92-a796-3c5e5adf41c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2453c9-52ac-46c6-9b7a-927d726d4a65",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c00300a-9a40-4e7a-9f46-47d3d822f4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067524ec-50d4-4775-8ed5-4d10aa4d1a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e81e851-73f2-45b4-a667-75cd756b74cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e1a5d1-dcba-44c0-a605-6adeb067463d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec433214-a0d9-4787-b768-86b6c9a3e782",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9811137-c8e3-4810-bb2a-8d2f2760f1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29f0784-8d9a-4ce7-ab92-ae10fabb9d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2265ada6-9be2-4a00-b748-7b109faf6295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff35abc5-e32c-4b26-8fbd-12f015fa6137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17ec41d-c3c4-4a59-bf71-b7550d874db8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c90a15-5326-4057-9d63-55c234c9a4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11d435f-f796-4ba1-a355-5c69476d2611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba71c56-9ae1-405a-b5cb-c205b560d55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34f803e-970b-4926-9a91-d9205f0e020d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae7738a-6573-4597-9fba-68d868afe14b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24560045-2abe-4144-b9a1-6c0fb9c941fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4d359a-6b72-4daf-bfba-45cf50f549d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb6266f-7f6c-43bd-b807-5558fc6b0354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3702db-cc26-45d2-93ef-927f344ca4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f11e5a4-9f59-42f7-bd95-ca9dc4ddcdcb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18abfc34-0b48-41fa-8512-b9b02483ad1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef724a52-e4c9-4466-83cb-f67d7a004cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703a8b3d-5548-427f-b8a8-4264712a8f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c339a94b-0d47-494a-893d-4372d09644f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfeb5f9-f36a-4959-93fe-260ebc2536b2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e7089a-1125-4aa0-b48d-4159f12a9ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66c64bb-1ec2-40ec-a3c5-be0291ea9e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb68a3f-025d-422c-b8f5-3f5669dfea99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538b3d15-9a71-43a1-b334-f6bb0c671801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c624f31f-e54c-44a6-be0d-b510ddc7ed72",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6660ea50-b725-4c9c-8d6a-3afed116a07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542f263f-e3c3-4c5a-a6df-9b2d59307214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4d93a6-e874-4337-8069-d0eeb6f46bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc5457b-0338-455d-bd1d-1a694af77087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9e27fe-1ebb-4407-8935-255fba20f950",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02536019-9699-4ccb-8891-234f9c266043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7a31e8-2d01-40f3-9579-32f57525f779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05bd173-8fe1-44d2-87a2-13981761466b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ce04c2-9bcf-4752-8fd4-0b31e803f170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dfe49b-a4cd-403f-b467-ac988fa0da1f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029f22de-3253-41e3-8dd6-34cf6df3cdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65858f77-6b38-4a90-ae8f-0ab2449ebec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f628d92-607e-4672-bf65-95e6b2889318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c1718d-0f53-4453-88b5-61b0fe918940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89601a8-536e-42d4-b883-78d048d9e44b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b25a70-248b-4cb7-a9df-8c6d494cf18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130ab2fb-6fc6-42fb-b8e8-18b00b0dffba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76175e5-550b-4a8f-b9e2-5de09a95e917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739b5da9-0c8f-4d21-bb7a-ebe8c0426b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e93b8c4-20c1-4ee6-8480-ac7f9f0796f2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4ed406-88a9-4841-8592-1d1e61af4f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4b1c6b-e57c-4e4e-b353-9328b342730b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e3d398-3eb6-44bd-bb5d-bc8713988a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777958da-2280-4161-b9ef-b47a362c8ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5517cce8-030f-47cb-b5ee-8c1d3774ea84",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4356c17-e040-41b1-9153-80f0119561e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88afc64f-04ae-4f27-b574-f99c7ebc6174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163b3b14-7109-42be-86ff-fad705d18f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c684bf-0d84-4824-8468-faf2b4bd4c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c53f17-d8fa-485a-8195-36a4176b58e8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4ee857-70f1-4426-abef-0f790ac951c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c391e7ec-b875-48fc-80d5-9b9586099f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7c30fa-338e-456c-b40e-207027dc8306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4f6602-040d-41c9-85a8-14572dc52016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c85665e-1bc6-4c36-9f31-934aeeec0e1d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1063ba73-d19d-4bcc-a443-c670b0940a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6a0c8f-e53d-4efd-9611-9e6094918b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddb907b-0dff-4ef9-8043-f7c863eb746a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8939be52-88c9-4b26-94ad-c72b301d7e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d146a4e-2ec0-4330-ba38-a4d2406132cf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e560d018-966b-4fc8-ac4f-be2823656a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9832180-46fd-47d8-8f9b-54657c53df99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe0f618-dcd5-4e2a-b3bc-97bee509a083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6a06a3-717c-4614-b28c-ef1ce700795c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9982a0-88ec-4ca1-9016-5003a3c2f458",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf17306-6bc6-4a00-b0a4-375a2baa7c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80643a20-6d9c-40e2-893b-8b9a37c7d839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46c944d-fcb4-42aa-933e-c9a25bf6de23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cf7bf1-7de2-4d97-9afe-4276c173a7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f702aec0-e7aa-42a2-b53f-8650e593f4de",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7c2df6-aea0-4605-8893-a90c2ca567e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353e6b86-1fc0-4fe6-9f3a-81b38b909f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4ab138-77a2-4bc7-a6a5-646fc7bca202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752d1774-31c0-44d7-aab6-ad03973b4f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0d653c-74df-4ec4-a4a8-2d6836ddca05",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a32431c-6f93-4494-8d0f-4c29a959af37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a757c0-62c7-494d-a47f-7c24d602d72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4586b343-d651-4146-a942-2cfae707e5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3593d1e7-78d9-4d0f-b1d2-fa255f44d141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f5c8b0-451f-46fd-bdc7-a6ba2fe0dff7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7c5049-ae19-47c4-8433-3bd76e613b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834e4a6f-4fe2-4331-accf-100cbcb9584a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c899d8-ec42-49c3-ada2-65cafed2ddde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11566b9-e925-4f92-b494-87f68ac7eb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bf7a40-a7dc-4534-a953-f92ca134bd77",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d01acf9-3820-4a31-b8ae-6fdf68b4670c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26b4211-88af-4679-ae84-1314034e3957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0efbf5-3ffe-4ea7-86e6-4f69dc5a9c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6270bb8-7209-4528-a743-f9007cac8b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b6a91e-f366-4223-92dc-424ed185ec25",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f66c08-db2c-4689-bb76-f7b7ec159395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51726f29-49c0-4db0-98e0-e91c21bc9d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db72878-65dd-4e80-b190-f820c417b3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0176dfd-a304-4fc7-982f-085aff544b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bafbbb8-beb1-4f30-a697-cbed013c18cb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9b2bf0-5e5d-4008-abf1-5bc255e49159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca72186e-1f67-4788-a783-5a3f26be1e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0e9163-89cb-45b8-85b3-19922f2c819e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939280f0-d7ed-4004-85b8-a8186e7cbe45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60301986-9f5e-4a36-adfd-dae8286eb267",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5250af-d7e3-4056-a3f4-ce35fff165f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df3f79f-3382-4d34-a1d0-34a1a3b9e39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5126b110-9d78-48f1-8bae-6442a32daa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ca8209-1912-4be5-8f6b-785ab7ee7640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b68629-7614-4e59-a997-6aea2f492329",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7fe1aa-568a-401b-86e4-98d46e1cc96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ce0a1f-0ac5-4274-a52d-7fb3c1569e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b10aafd-bec6-4dba-8b7f-2ff6a5373e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fa12ea-2fca-4030-b00b-356be426a05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc957db2-74e6-4b3c-bdba-b8818fbce578",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09af3da4-6adb-454f-868a-0a7769f9b4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5263cdb-4996-403e-a16b-91d65a6c97e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3cfd8e-34e9-45d2-a533-1072a6529b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355587c4-79f0-47b0-9be1-93d4518e2570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbabc9c4-e9bd-4633-a91f-403fecbd136a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053e7bb5-e6ba-44a3-a6e0-51db9e0382d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a392ae45-121a-4628-b852-3197347d58c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce82e14-bbc9-4ec0-be56-e1578f400b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6288b6fe-18e6-4d4f-9665-65653a49e02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b1b5f2-caf3-4a28-adf6-da7a7aa86544",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fee5814-59a8-4ffa-a7b5-1f81de282a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df79cfe-da14-4105-b99d-ca6e74ca8520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94deaa1e-e5fb-461c-9f0d-9b170da6d128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa935987-e6cd-4f99-9290-1cf29405feb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af32a0eb-d195-4c55-82a2-87de06e1347e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d15a442-37d7-4463-a293-4deaf1d94bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b5035c6-4aae-4551-a02d-1afd4796d305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65fc336-f881-491e-9a83-557d26bff812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b88e012-629b-4e52-b2be-dd9992c1aeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e515dfe-b51f-42bb-8b01-5c05e8b3a520",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5931e7-0754-4901-ab29-c8d3236cea24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c55b75a-342b-427a-9626-7e4cb1859e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077f7d23-ba4f-4a5a-9b94-a507dedf28c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccc970b-05a9-4600-91c9-1a1657d01ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3a531b-7aca-4fdf-97fa-bdfb46d045ad",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b5dbfa-b50a-4fed-aec3-b7e21f47a94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe075267-e58d-4756-8a13-d8669af46eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b18379b-8468-4a34-bca3-c7127588beca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8cb2a8-1a00-496d-8dc0-e37195b6c4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79538e8f-cb2a-4ee9-8aa8-4ad4d122c31c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd5f236-4a36-470a-a206-65dbba9214a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3141ea1c-4ce1-4c48-bad0-8f271fd151c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a15b38c-3464-4615-954e-c6b51c5c9892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597650fa-35a5-41f3-8d38-40ef1997dd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498f8b27-a5db-4833-ae9f-08ca99f82642",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0197f78-9f75-4c5a-abfb-7bba65f398bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6430857b-f5e9-4691-b42c-ac5451994fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4ac518-7dfc-4083-ae8e-cfec3e45aac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519ec974-dbff-403f-b4b1-545b0d201c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d1f7a4-f5fa-4740-a165-6bf0320027fd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90ff876-4951-4926-916d-e62491ec5c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc90e2b-536d-439a-91a2-c0985d51a883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d26707-190e-47d1-a458-068927f550c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6291655-9d4e-4216-a91a-12d292bd283e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6758cad8-369e-4915-b959-4f7d8bc1de84",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef83d10-2684-44ba-9b76-90dc185410d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "612a0d85-99de-4328-8c45-8cf4b3f84435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3908e70-8791-4b13-8413-7d132873fbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b4ae98-1033-41e1-98db-e2eda22f2174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e31985-fbe7-4db4-bf51-a88d1b5dadbb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b325e385-9f54-4e66-b76a-1730a153fb1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61da7a41-ce01-4251-8b98-813356b90488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea2e90e-62a6-499c-980d-79752677fc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3d858d-7972-420e-a57e-7e00cb839c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d38d0c-645e-47ef-b634-e95953402aac",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d00ee5-e253-42de-968f-3ee8c71d1079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9885531d-0c9c-4afb-a689-08e75c7a292f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06042923-c0db-4e04-96af-3ab034eb58ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ff3134-43eb-4df7-8720-a9b1348ba9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adc0b3e-0b98-4f71-bb72-6690acbeddd4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d721d1a2-a25f-4259-8464-5ce74dd9b999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79bbb0d-5e99-482c-849c-325cdbfca46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4a37ee-90da-4310-88e0-ef8e8d068eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea3f72-ac63-431b-b98f-693a5b01f174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86713eba-a9b2-4911-8e07-3bf3eaac8158",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032deaf0-9174-495d-96e8-679afabc78b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e46aff-99b8-4748-aae5-09eb397629c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5493e9a-a3ff-4394-b645-f2d45e28b6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a8a55f-9718-47e8-9835-66af378936c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9642f8de-dd10-4fba-a634-318035c957fa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148fec1f-ffba-4729-a1e1-3f75990b67e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a394883a-2414-4173-8c83-67bfde790671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c78b4d-df1f-4e5d-8f2e-d4da416d3f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9d4713-778e-42f3-b8d8-d960e0394329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c96f11e-0054-4cfa-9bb2-f311b81d78f7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e346867-49a9-48ae-b46d-2aa36634999f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be26a22-92e8-48ab-9daa-f5388ca5f0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c58719-4437-4678-aec1-5e729f9e1648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e42fe51-870f-4c5c-afd2-ffecb438c4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e547c28a-252d-4530-9a1e-a45657f2481a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd99a960-e0bb-4316-868e-a95c2890f99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e74ba6-53e0-41d4-91a7-63937e552d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608f3413-1247-4983-824b-e70c4df8bbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d6187a-959e-4658-872f-de902d985194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550e24b9-6a2e-4b9d-aa68-bc3a97d73961",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bfb1e6-b096-43ab-9a6b-2d2af313f379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d66e88c-fea1-4bf8-936d-0306728748e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cf383c-7c36-4f07-8dd8-81d15c1fed19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf82eaf-fd54-4df5-aa67-97228639f7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafe8a8a-6c4b-4ec5-a7c8-f9904fede076",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273fda6b-e448-4703-b893-9a12cc481675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302bd65b-8afe-4233-b65a-db92da58d3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08539947-19da-42fc-983a-059d431ca516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01065643-af9a-472f-a93a-ccb60371ed57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40988532-1f8b-484f-8ea0-39c441d076d9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a434f6-2a89-4f86-b4a8-3c792bdc99f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e930972d-d711-4c81-8d19-9d8ff45a1122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfd3292-ce75-4eb8-8bff-8f571a8d8d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f35ec2-e032-412d-8271-4e3a5cafd648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46b0787-c8ae-4e1c-97c6-fd335711fcfd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8298a09-00b5-4156-b876-1e3e0c5bafe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82eb985a-b5e3-4cbf-8bd2-386af29cb172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab486558-4dbe-453d-8f88-e8553d369607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0460cddd-6968-44b3-b7b2-617a494cd22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19e00ab-0e4e-4b83-8e0f-a3a5a6e1fde4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c002836-7f34-45b0-9b32-c4418aed09e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04a8cb4-93de-47ef-840d-e2aea11b9640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b459bbb-9ae6-40e1-b475-ff4214c7decc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b5acd4-c117-4f2a-adc9-eba1d78390cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5268bd3d-9976-4ac4-8454-08172387a1d0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284ee63e-80b2-4f3d-b2e9-c301ade48d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "621690d2-694f-4f41-b040-8e9ecfed9069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2e41db-8e28-4397-8b4a-17a3e4be1ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4569c2-ef7f-4aeb-b53e-be5eb8ae57a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d03a2fa-b672-4d71-b792-4f753b7c11a6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450727d5-98b8-4c0d-9d6d-02298c81993b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be43f020-0145-457c-8b2f-8bcfccad542a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7882a9a0-6f84-4248-be58-807aa334f4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60785d4-c748-422c-8e77-7efd748cef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdc8109-0017-4cf2-a1bb-cb27dc1ef0da",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02869155-52c1-4c45-8b2a-d1321e0720a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f6ffa3f-9809-4ab3-925e-b9336ead1446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a68eee-df45-45c2-bf97-fbc86133a0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7234105-d2f0-4a85-a966-b5417d72247b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ad3279-fc6c-472a-ac23-1dced6f08d32",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d309e50e-6dca-43e4-8a13-e12258c534dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ba808e-b8c6-44db-b79c-d448549f94ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f6dee7-3e84-4a4b-b9fe-2c9ace6b2692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da11185b-e352-4a8a-a562-ce9350d35051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5aeb9c-658b-4ed8-9147-00af0fdcf864",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bae5a2-d1b6-47c9-a0da-230609248fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf3481c-0ceb-4890-a1fb-eccc06d224de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b586c678-4584-45a1-a515-b25f191a91db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566e1a5b-331b-490b-8fdd-5fc4d819bfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9965620-3b83-4d37-8309-358a56d31271",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bcff6b-f7e0-413b-b92b-f1767369606f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86749332-e848-457d-85a3-38c98aba96ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b6fc45-35ac-4d99-8cae-6bb962390383",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1952d36e-dcd3-43da-a5f4-5823be54a891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c213c9a3-dc5c-4006-84aa-82affb81ef10",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e055ae6-8dd5-48f2-8421-dc8315d36791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f7e84a4-cbdb-43aa-b95a-66c7ea0ce0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a0e12c-4bc6-4171-8bee-7d681fb38255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2faf0bbc-3af8-490a-a1b0-8cf65b31a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e97a3-8791-4733-8a21-16dfa1930d48",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a969fad3-1311-4380-b522-137aa93603a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756dbfd0-826b-4654-b91b-ee8c2702e1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3719cf-c660-4547-8d83-9f9f59f1c6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cd26b2-717a-4721-9a0b-560645b5f601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b40a814-8c5f-4624-885d-e71259e6c8b0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed12ad11-aeac-44a4-84db-799159d74f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3b8a6e-69a9-4460-a1e3-d31a50b9e683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eac86a2-8590-4e7b-bff1-64a0e2f99e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131ccf93-338a-49c0-ac3a-089e7cd49acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e2b1d4-efd5-4900-a905-c7f11caea336",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ab03c9-c3c4-40dd-a0a2-bc56179579d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e3f557a-2c79-4198-a592-bbec04bd77ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fb4968-5069-45ac-9dd0-eceb31b7f221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a14030-6fd1-4911-8bc0-d1f1ab10a529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3505eb06-b81e-4569-8051-da72733f2403",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350f622d-82fc-491d-9d3b-6920149c1526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1e77c3-b4f2-49ba-93e4-90ced388f681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d443e5c-5a6b-4ccc-a79f-d1455ee621b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60535d70-32e7-4d89-8a02-b42740763977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe62aab6-8a96-41dc-85ab-0c1e68c15fcd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bed729-4d00-425f-ab04-c0a77a80d37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79230940-bd0d-4e73-8141-db192472b561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6d3248-eafa-4876-847d-fcc983b23ff7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769c4f1c-a7a5-4b35-b5fa-09feb94bc915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47900d01-adb9-4207-956c-4bbcd0850522",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135635ca-e901-442c-99bc-ad807cc2bdf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e626b157-1587-481c-ac43-a56871d36ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cde1e62-21a0-4a6d-91bb-6635441e9916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f2d353-b07e-45da-8ba3-4b7ae72590e1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe92ea2c-3ee2-4e9d-8790-6cfb8acccada",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60ead668-83e3-4727-a6a4-a707966d05d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43eadf3a-4f0f-41f7-bc6e-5e39b5454731",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "faa613ae-0470-4ab0-be48-bbce12857658"
                    }
                  }
                ]
              },
              {
                "id": "57188c8c-9edd-4fec-815f-cc30159a7ddd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abecc8bc-fa90-4d0d-90d6-59cd5d9ea9cf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7635305-9042-4179-bc2a-5258813c77f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f3a38395-dc0a-4f29-92b9-2839174010d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a623acff-bf20-443c-85d5-9bfb989cede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b8d1cd8-3c7f-4606-b94f-8febcffea0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c4ec56-9196-4567-a0fa-c939dfaad2b2",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b49b0aa-31ab-4dcf-8109-e02790ecfcee",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0bbb16ef-8ffa-41cc-9fc0-e8cbb7f07d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c3c59d-7d70-4452-85e1-23369fd03de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24c6cc15-26c7-43df-9b70-05c81ec75161"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07f8b5fe-f017-4cca-8579-adab083aae60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b01f559-19b4-414e-8c73-555d88031358"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1ff8a7b-d85e-4130-b959-83132c5bb118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcb48538-651a-4a7f-b5e9-42474c16948c"
                    }
                  }
                ]
              },
              {
                "id": "37c3bfa5-f886-432e-b26b-1c1397c9de94",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3830d125-d6b3-417d-85da-2a7ae66c9772",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11f363d-edcb-401a-a082-146102c1ac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a5425c27-10bb-40e4-bcb4-d610a5bf8fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08a0c7a-f3c9-40ed-9aca-44e952d6285b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1268d890-fcc9-4444-90ac-b89cd9e262d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5c3f55b-1b59-4772-b355-c83bc9935ec5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71df29ef-4860-4b13-8e6f-496a54ff6a3a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c455ba8-e124-4fb2-a3d4-4dca4bfd5af8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a9fc054f-f37a-4957-b589-67a2d0666b0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "720a6ee0-3c6d-4ba4-8f3b-673e2056483e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60c1feea-3d0c-4165-98ce-fc1457b8a5f5"
                    }
                  }
                ]
              },
              {
                "id": "369ccb05-00e1-422f-ad8d-bd9d10737a6c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "189646fd-a853-4ebc-8f5c-c2dec9d5de7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00e00108-a109-43f6-8304-b3b47bcbe6e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ddb2905-59ca-4018-9bcf-dbd79aecaa79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "893220e8-2531-45ec-9d35-eba67f445f5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "452b825a-5229-4834-aed8-d6dc4f4ac210",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dab3f73e-5a5b-449c-9c0e-8a206e43dc43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96b11afc-8061-4bcb-b3f5-662128428c7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "faae4cb3-94ca-4821-bcdd-f92d1f270b20"
            }
          }
        ]
      },
      {
        "id": "809844eb-bc8e-4657-bb80-90be2dcc6a7e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c679dd34-a67a-4408-9192-99500cd86ddf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc17128c-7ebf-4091-b5b6-8f61d395ba79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09747c7d-f687-457b-87b2-b98fc0482b52",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349146bd-b053-4cb4-90c1-955711c1ce4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "95475d66-a7ea-4437-afa5-3b613b9e4463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26a65f0-d856-43ba-843f-93c0c85b5538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "541b1893-bfca-482d-afca-46c069eb284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51143828-e932-4322-be69-fb0203aeeeb9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d752f-0223-4873-8c2e-fb527bedb261",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5ab881a6-5180-47c1-9e12-7e5b9acef1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4b13e9-5fec-4fb9-a80d-acce7a8d1691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64ce84f1-6ad5-4578-9041-8a3dd6870ca1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "766bd012-59c7-4fe4-a01e-6d900e24def8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a44bb3f4-467b-419d-b6d1-272ac9edb3c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef026207-0922-4c2c-a192-c525ee0f12a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06ad298d-01aa-4b46-a7fc-a5622da0023f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0766c563-537c-4108-a6f8-9f1a6d36fa9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d8e8a37e-fc6a-461d-a968-f56a5291cd40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1c69f2e-6388-4560-aca3-903ac7fb13b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26ea87ad-7429-4d1d-bea2-0ed59e6f5fda"
            }
          }
        ]
      },
      {
        "id": "0faceade-376e-42f5-babb-3cdb740c10da",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3f2ef5f6-c46c-494f-a786-da0db19f05f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2760412e-4396-4b43-93bd-7cb082039456",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "856567a3-76d2-4619-8a49-adeffce92572",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351d5d29-0c25-4abf-bd65-35ec35cee68b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12accdbf-14c9-496e-94ce-006a55d23294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9dd7af-fdb9-4358-96dd-a38564a74461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe297320-4d73-4775-b1f3-148a5c11b2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e89dc6-0782-4f7e-bb81-ee3f51042a6d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5ab15f-b41e-4313-94dc-f241b7421ae2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "710f46e9-3890-4e21-8966-b5721732ff59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33061e5b-0a34-428a-8f7b-41463cd78308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36f46b45-9f6e-4935-80bf-b97562e092b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adebcb62-5585-43db-b894-439613b7d330",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d87ea43-5f1a-408d-8f97-2f6be8747fe9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8215b3cb-1d9f-477d-9911-a41c6d3cf220",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "078ee7d5-b72b-49df-b262-762e995e9bf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "234ac47d-21d4-4554-988a-eda75e91da9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "76683dff-99b4-4c41-9fe3-78d7fc49ad4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "245785d6-3a42-421b-a26d-5b59389c0a20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f024b5f-2572-4d9b-b821-97e4e13be27a"
            }
          }
        ]
      },
      {
        "id": "a13f2ce6-4cfb-4c00-baf0-2d78b4171b3e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b9ea12d9-7828-4594-83f2-63f32b5789ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cff12d54-748f-4427-851d-8f5bc74a4072",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b1d2858-3e52-4a02-9bb1-1a1580a78921",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484af838-113c-4232-b28e-9d1a875b7f78",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58fce868-4837-4c7f-992a-9873e3aa8a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552b1c4d-a85e-4e45-a892-ce7885cd998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1ea3115-bb30-4bcb-8eba-aea5a482a93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843fa293-7f25-43ab-a006-bcb3491875fe",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92088003-93c4-4afa-b251-4712e795991c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8984d6e9-2fd9-4742-9c47-c10a0395fd62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82f2941-04b6-4a0e-8b7a-06c6322ccea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "693f5de6-e399-44c7-a1c6-c7916c184bd9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "633c0877-b929-4cde-bd09-50b0114a3482",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad9593bf-6487-4638-9fb4-b23c72250f07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da93f37e-2d67-49a3-8592-d9df7e69f43a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34b05011-2f50-4455-b595-31886aff87ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8c0b7e5-8110-4f65-af4a-18aeb83981ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "45257af1-2c99-4d83-abfe-0b1d88795e91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0c5e236-4641-4f43-af81-5b58130272b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97ddad75-354e-496e-85a8-8768ed5c1329"
            }
          }
        ]
      },
      {
        "id": "8a8245d2-b786-4b9b-92cd-7939d8addf5c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83338751-f287-4520-ba67-7bcbc4ab1b21",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eb73408-5303-445c-bdb5-6e9a596ec004",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ac5b132f-dd90-4585-b9d6-c59ff7204570",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d60cabc9-2f9e-4fb9-8992-1d69404c18de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b54ff4c5-c2a4-4102-9468-618e0739474c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 576.2900763358776,
      "responseMin": 7,
      "responseMax": 4564,
      "responseSd": 620.487877344961,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674434242675,
      "completed": 1674434407325
    },
    "executions": [
      {
        "id": "5ef5cd7c-95d5-4409-a7be-8aa0bb3f950b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b99a4253-3b7e-4a28-9c36-9b0cbdfc96fc",
          "httpRequestId": "06ea23a3-2bc4-4ad2-9000-a8708e710416"
        },
        "item": {
          "id": "5ef5cd7c-95d5-4409-a7be-8aa0bb3f950b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "32f02ffd-9e8f-46fc-bd09-8e5c6d7f82ad",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 0
        }
      },
      {
        "id": "ab231275-b829-48a2-b583-e5d6e8622f9f",
        "cursor": {
          "ref": "caa0e7f4-49c7-4e28-9ce4-65179c59971a",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dce7d913-ba67-4b88-a2f6-55c1dbedcbf4"
        },
        "item": {
          "id": "ab231275-b829-48a2-b583-e5d6e8622f9f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c26916b8-7b10-4225-ba1e-feca1d231b06",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a33df852-7b6a-442c-99fe-b35223875552",
        "cursor": {
          "ref": "e3c7a5d6-0a87-4483-9d2f-941d679dae01",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "70d1817c-6f5c-4c3c-8853-db55c3a23479"
        },
        "item": {
          "id": "a33df852-7b6a-442c-99fe-b35223875552",
          "name": "did_json"
        },
        "response": {
          "id": "450f77c0-90bc-4086-aa59-2abd330dd10f",
          "status": "OK",
          "code": 200,
          "responseTime": 1163,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af83e584-baf6-4f8c-bfb2-670508f00e0e",
        "cursor": {
          "ref": "945c02d6-4d2b-4f5d-a281-a1b650c57b78",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0aec98d2-ee27-451c-b679-c805ff06c4ef"
        },
        "item": {
          "id": "af83e584-baf6-4f8c-bfb2-670508f00e0e",
          "name": "did:invalid"
        },
        "response": {
          "id": "a2fe4257-6d42-4dc7-b4d2-43dd721134e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af83e584-baf6-4f8c-bfb2-670508f00e0e",
        "cursor": {
          "ref": "945c02d6-4d2b-4f5d-a281-a1b650c57b78",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0aec98d2-ee27-451c-b679-c805ff06c4ef"
        },
        "item": {
          "id": "af83e584-baf6-4f8c-bfb2-670508f00e0e",
          "name": "did:invalid"
        },
        "response": {
          "id": "a2fe4257-6d42-4dc7-b4d2-43dd721134e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a6f0fa-b683-4ada-b5bf-88ccd88e94f7",
        "cursor": {
          "ref": "c97530e9-70cf-47b2-bdbb-94098f14602e",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4df00ea7-c294-4771-83c4-e07e5280a241"
        },
        "item": {
          "id": "14a6f0fa-b683-4ada-b5bf-88ccd88e94f7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "20583c7b-5140-47e0-9eb7-f9d316a905ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 700,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c279339-1025-4436-9a13-441116a0a3c4",
        "cursor": {
          "ref": "11b28861-5669-4f6b-b3fa-1ead59784dcb",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2c908a05-69cb-49cf-b719-7b397e974112"
        },
        "item": {
          "id": "9c279339-1025-4436-9a13-441116a0a3c4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ba69c79d-5926-4508-a4e8-f8d44f56c87e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 514,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabb55c3-5d77-4242-a654-9be657c769d2",
        "cursor": {
          "ref": "388c4389-7412-45a7-a847-485e26cef479",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5d682421-3b43-4969-9f98-68aa43f986fd"
        },
        "item": {
          "id": "fabb55c3-5d77-4242-a654-9be657c769d2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "30915587-f4d0-4949-b556-8470a31ecbbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e401f7d3-ac96-46f5-8e36-246d34ec3c0c",
        "cursor": {
          "ref": "a0063a2d-6199-4ce7-b2b5-c4059d549006",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "37d04356-e203-442c-9ef9-e44be31ed3c6"
        },
        "item": {
          "id": "e401f7d3-ac96-46f5-8e36-246d34ec3c0c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "42c8c29e-d333-40ec-aab7-52ae1b7ae14b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 522,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e401f7d3-ac96-46f5-8e36-246d34ec3c0c",
        "cursor": {
          "ref": "a0063a2d-6199-4ce7-b2b5-c4059d549006",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "37d04356-e203-442c-9ef9-e44be31ed3c6"
        },
        "item": {
          "id": "e401f7d3-ac96-46f5-8e36-246d34ec3c0c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "42c8c29e-d333-40ec-aab7-52ae1b7ae14b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 522,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9388ebff-8bad-4fd3-b408-898627d332b4",
        "cursor": {
          "ref": "6cfc2866-6591-41bb-b099-4aef33ac040a",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "439cf042-40a3-4c9c-a9b3-e93da5f144aa"
        },
        "item": {
          "id": "9388ebff-8bad-4fd3-b408-898627d332b4",
          "name": "identifiers"
        },
        "response": {
          "id": "14762882-7553-4200-8649-90636eb3b4d6",
          "status": "OK",
          "code": 200,
          "responseTime": 839,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8338c624-f79d-43ce-ba0a-abee0c48475e",
        "cursor": {
          "ref": "c9f5a45d-1039-4e09-a313-339107b41e14",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24ef6be4-2f96-4f96-97e6-86f84b99f5e6"
        },
        "item": {
          "id": "8338c624-f79d-43ce-ba0a-abee0c48475e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bebc8150-e951-4bf0-8599-5afeeb8bd02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8338c624-f79d-43ce-ba0a-abee0c48475e",
        "cursor": {
          "ref": "c9f5a45d-1039-4e09-a313-339107b41e14",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24ef6be4-2f96-4f96-97e6-86f84b99f5e6"
        },
        "item": {
          "id": "8338c624-f79d-43ce-ba0a-abee0c48475e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bebc8150-e951-4bf0-8599-5afeeb8bd02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1a3b33-ebf8-4eb9-a74b-333df4fbab54",
        "cursor": {
          "ref": "3cced3c5-30f7-471f-a9ed-e3527dae69ca",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "396defcc-3555-45f3-beab-deaa8c5ff9e9"
        },
        "item": {
          "id": "6b1a3b33-ebf8-4eb9-a74b-333df4fbab54",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "807399c9-1285-431b-a0cf-5e404af9f140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e242924-be76-4c22-a0f2-05a64c2e1346",
        "cursor": {
          "ref": "3601f300-b06a-4530-94a9-ef5f08bb549c",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1e3f3893-458f-424d-8cea-b22964bf6a12"
        },
        "item": {
          "id": "3e242924-be76-4c22-a0f2-05a64c2e1346",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "70cceb4a-d11b-40ef-8b27-6294cfba2787",
          "status": "Created",
          "code": 201,
          "responseTime": 2430,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "7969bed0-4905-45c9-9c47-c97326dc10d2",
        "cursor": {
          "ref": "fc8a6a4c-c2f6-43cb-b3c0-0520dc6a5bf2",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cdd74ecb-6646-4af5-baea-7f88e194278d"
        },
        "item": {
          "id": "7969bed0-4905-45c9-9c47-c97326dc10d2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6e9e2008-8200-40cb-81ee-daf39480e4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ff4992-9777-4f8a-abda-b740ff137df6",
        "cursor": {
          "ref": "2e7dcc51-f333-467e-8206-ef5a1deadee3",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "089c0421-e7fa-41cb-afd9-8934107ecfb6"
        },
        "item": {
          "id": "e1ff4992-9777-4f8a-abda-b740ff137df6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5a294304-5262-4a7e-a520-d2c194ec1c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45f51b0-8ab1-4c7b-865b-3d8fc8b5d998",
        "cursor": {
          "ref": "791440b2-0f31-4645-8d37-78280b8138d4",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fb9ac236-05c1-4522-be88-a11c61b3cb21"
        },
        "item": {
          "id": "e45f51b0-8ab1-4c7b-865b-3d8fc8b5d998",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7fd6c994-b589-49b8-ac6d-7f76eb781ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132143f8-08fb-4f7f-a7b1-ab872b1b9ca7",
        "cursor": {
          "ref": "ab072650-8575-40e6-a5fd-b1f8494fc0c4",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2c47af33-4179-4458-92fe-c4468259ed17"
        },
        "item": {
          "id": "132143f8-08fb-4f7f-a7b1-ab872b1b9ca7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bdafa751-00a5-47bb-8a0b-d7918cd93ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2871c1-1155-4a5e-9c21-d06de1031bae",
        "cursor": {
          "ref": "44a547e5-95b0-4eed-876a-d0a618504d16",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "56e71596-5a59-414a-8a21-09789a522540"
        },
        "item": {
          "id": "4f2871c1-1155-4a5e-9c21-d06de1031bae",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "97efd034-94a3-48fc-900f-d84ee425e444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71ab161-44e6-4766-8546-f84191d43bcb",
        "cursor": {
          "ref": "061e58c3-4fdc-4ec4-b9d8-ae1558b97928",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6b099654-d68e-4da2-ac7d-8ef89ff8223e"
        },
        "item": {
          "id": "f71ab161-44e6-4766-8546-f84191d43bcb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e042bf75-f107-4a8f-9dec-1fd586218fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297be457-8161-4ee7-af52-12575f123151",
        "cursor": {
          "ref": "623374ad-f2ab-4cfa-8555-e6e7552d24c2",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fa4ce393-36ec-456a-82ad-82fc7804cc7e"
        },
        "item": {
          "id": "297be457-8161-4ee7-af52-12575f123151",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e375ef9c-47f1-4823-88c7-214b2e357733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ced7d34-55ff-4125-9808-f25261a36c17",
        "cursor": {
          "ref": "52a05fcc-1bd4-4528-a9e4-b6067159b882",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b4083b23-50ef-42c1-b4fb-601a05a96ddb"
        },
        "item": {
          "id": "8ced7d34-55ff-4125-9808-f25261a36c17",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "309ac796-b620-45d9-b223-7c3acbdb7360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f3f4f6-4999-4f90-96c0-f63bfd08e5af",
        "cursor": {
          "ref": "2cc06a3b-7cb5-44b4-83ad-5e86c7b55c96",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3467affb-c000-44cf-9dd8-b2f7198fc0a9"
        },
        "item": {
          "id": "77f3f4f6-4999-4f90-96c0-f63bfd08e5af",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3a9bf171-b4a5-4032-a035-558cc3d54d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82da4219-54b9-4685-9560-74c096a73b90",
        "cursor": {
          "ref": "c06f49ed-490c-43ba-96c7-88c5a2e1f3e3",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "85341e93-1597-4e74-9644-c827aa98bf89"
        },
        "item": {
          "id": "82da4219-54b9-4685-9560-74c096a73b90",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fc1efccd-1a77-4279-ab3d-f20a4b697600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a63d965-bd6b-4595-806f-7e4774eb193a",
        "cursor": {
          "ref": "1f2df6b0-142f-474b-b93b-c481aedb6485",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "311cbfce-5cd3-4bc0-87e6-85f8d8d70023"
        },
        "item": {
          "id": "0a63d965-bd6b-4595-806f-7e4774eb193a",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "4dc54516-d0a1-4b04-859c-1b30ef2fd79e",
          "status": "Created",
          "code": 201,
          "responseTime": 4373,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "6e21b7f1-95a4-48cc-9202-5925aa1cfba9",
        "cursor": {
          "ref": "b7f3bdab-b2fa-4a66-96e4-12c24188ed39",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5c0dfa20-d570-4f7f-8313-8a4c208bf08e"
        },
        "item": {
          "id": "6e21b7f1-95a4-48cc-9202-5925aa1cfba9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bb971876-cced-4684-b32f-1129d55c8b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c88ad35-72f8-40d3-b859-a52352884752",
        "cursor": {
          "ref": "d9707dd1-ae40-435e-bbda-b3c958c08025",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fa5507a1-8196-43ce-819f-c5a624468121"
        },
        "item": {
          "id": "2c88ad35-72f8-40d3-b859-a52352884752",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e0d354a5-1298-4200-a3c2-1e5c74ccc050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e6da1-75a4-48db-be8d-1cd9f8c4d0a0",
        "cursor": {
          "ref": "1f9b6816-a979-44b7-ad46-9d9553552fdd",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b642f158-a508-46b5-87a2-7d49b4211371"
        },
        "item": {
          "id": "f27e6da1-75a4-48db-be8d-1cd9f8c4d0a0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2c35df27-3c6f-4d48-9708-bff8faf4e2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d449d6b-3ce5-45ea-bfbe-f1992fe8d377",
        "cursor": {
          "ref": "3e31b610-f248-4f6b-9efb-47081e505db0",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "072f3eac-80bd-4221-8122-12d6d3df00bd"
        },
        "item": {
          "id": "2d449d6b-3ce5-45ea-bfbe-f1992fe8d377",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "83fb009a-978b-4c3e-a008-1beaefaa1a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3af0e45-1deb-4229-bee9-c39b6223c3df",
        "cursor": {
          "ref": "a22f7d46-deee-4257-b3c0-6157e88dbdd7",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "06eb7a67-3938-4188-8d59-e1e4f42b71fb"
        },
        "item": {
          "id": "c3af0e45-1deb-4229-bee9-c39b6223c3df",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a4847936-2337-4475-8305-ea7e92a7ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be11ac62-106f-4230-93af-de4f7b83224c",
        "cursor": {
          "ref": "ffdc4bc6-7792-4f1c-b0e2-3e6bffe69395",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "83caaf76-0087-482e-952f-74d31d967070"
        },
        "item": {
          "id": "be11ac62-106f-4230-93af-de4f7b83224c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "364b5d86-1ec5-4789-a481-8480b62165ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba663f5-d03d-4812-8813-c9840ee7b9ee",
        "cursor": {
          "ref": "8442586c-6c2d-4a99-a1f9-caf318c363c1",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6ec3d3be-eee3-49db-a60e-f71eb0d39ef9"
        },
        "item": {
          "id": "8ba663f5-d03d-4812-8813-c9840ee7b9ee",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d2c956d3-06b4-4759-aa91-f8fb4aae468f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca086714-f9d4-4b2d-b8d3-6745e0471ea2",
        "cursor": {
          "ref": "a7cb8b56-95d5-4f61-8ccb-e194895d77a6",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fcaa5ee3-bd85-4d16-bca3-a747a47269b7"
        },
        "item": {
          "id": "ca086714-f9d4-4b2d-b8d3-6745e0471ea2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "78f0ed83-973b-474b-a441-4dffa2a8ac44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cc4231-5fdc-4008-afa6-639877142980",
        "cursor": {
          "ref": "24cbb659-63ea-4cdf-9d49-0e24bbe0779b",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "769f3210-5d42-4228-8a14-5203622195af"
        },
        "item": {
          "id": "63cc4231-5fdc-4008-afa6-639877142980",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c6cd2daf-98e9-450a-9357-8ba1896ff1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfe0f18-f1d0-441a-be38-907a5a9ece9e",
        "cursor": {
          "ref": "5091ae18-2cab-4649-b5dc-44637c988870",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2be7b736-b115-4429-9998-75e257426a10"
        },
        "item": {
          "id": "adfe0f18-f1d0-441a-be38-907a5a9ece9e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "45980acd-7514-4df8-b901-e119dc4b3e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d1f291-14c2-4164-91ba-563dbb98638e",
        "cursor": {
          "ref": "f0a58224-c27e-43ea-9a07-cc68090cebe2",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2dc489a0-a035-4ca6-a279-9f87f8e25de2"
        },
        "item": {
          "id": "09d1f291-14c2-4164-91ba-563dbb98638e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1097aa8c-45d2-4eb0-9a7b-db1ecc3fb301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3fd10b-7ea7-4961-b24c-73408180c721",
        "cursor": {
          "ref": "27a7a420-59cd-42c1-b6c8-ba4ddd728328",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b27f1e9a-e9f3-4099-a312-87725a791641"
        },
        "item": {
          "id": "9f3fd10b-7ea7-4961-b24c-73408180c721",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "05babe11-eccf-4a9f-a776-a379d1dc5dc6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1701,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "fe27cb1a-e809-404b-93cb-a7c62a862d5a",
        "cursor": {
          "ref": "76d2bde2-95aa-4cdd-bd85-9c2d8ffe90b2",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "edfe6aa0-44ac-4e73-8e5d-2348a54e115a"
        },
        "item": {
          "id": "fe27cb1a-e809-404b-93cb-a7c62a862d5a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dd48c64e-c6aa-404c-81b6-56a630c09daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff2a8de-0d07-4154-b7e8-b0a9bb05f7fb",
        "cursor": {
          "ref": "5b04adcc-da6a-462e-9cce-ea8813fed1f2",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "22199915-7f4a-4436-bdef-aa2f80839a81"
        },
        "item": {
          "id": "9ff2a8de-0d07-4154-b7e8-b0a9bb05f7fb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2342b4b2-ed72-4582-9c06-af2e15c01ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9913e5ed-fa78-465d-bcfb-64935150db4a",
        "cursor": {
          "ref": "214f09bc-36e5-48f2-86fb-58ea9caac45e",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4b9eddbd-4e97-4630-9a1e-6ecdd0886cbd"
        },
        "item": {
          "id": "9913e5ed-fa78-465d-bcfb-64935150db4a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e6625d95-5076-4772-98c7-d543d9e76eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40efb81-1527-4c30-9ed5-72febd8af8cc",
        "cursor": {
          "ref": "3eb7dae7-1083-439f-8b93-6611217a7659",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3f764ef7-0307-4112-8de1-18be1e1c4755"
        },
        "item": {
          "id": "f40efb81-1527-4c30-9ed5-72febd8af8cc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d503fe86-5e73-4147-aae2-1af48f6c02f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1f3230-4d6d-41d1-8279-70b880330e42",
        "cursor": {
          "ref": "87ced60f-fd87-4826-9f27-18d05c53c3fd",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e8e6da90-6c6e-42b6-b01c-b414c24d8ae7"
        },
        "item": {
          "id": "bd1f3230-4d6d-41d1-8279-70b880330e42",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "44e6ffda-21e0-4aa8-9bf2-5fd711c70deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aecf61-519d-4ebd-b4ba-94b63051f0de",
        "cursor": {
          "ref": "52f34f26-7a98-4642-9842-64eb15b1c176",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2adbb18e-4c17-4e63-bd59-5f989cdde8b6"
        },
        "item": {
          "id": "d5aecf61-519d-4ebd-b4ba-94b63051f0de",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "008d06e6-bb08-46e7-864b-e10e781cf196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947ca327-802f-4aee-869c-0e1f68f18b13",
        "cursor": {
          "ref": "4bfa5a1a-3664-48f0-b02e-1804453c7db1",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4ee37557-5c40-4194-9dbc-cd14aac6208d"
        },
        "item": {
          "id": "947ca327-802f-4aee-869c-0e1f68f18b13",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2fd80738-dea6-42af-8d57-7bbfa0158a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd66923-2053-47fd-bfec-c44c1f2595d0",
        "cursor": {
          "ref": "ee57bd0f-6114-4372-97d8-b4a8a7a3616a",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d1b0b649-ebbb-4379-addf-e024af0c99d9"
        },
        "item": {
          "id": "7cd66923-2053-47fd-bfec-c44c1f2595d0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eb972606-bde0-40da-b7d0-2d1ba059f101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb2adfd-e1ec-498f-ad25-ad737292460d",
        "cursor": {
          "ref": "d15b81b1-4afb-4ae4-a2ba-71ca54890ee2",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "70c4b427-c808-4fc8-a014-792028b11121"
        },
        "item": {
          "id": "7bb2adfd-e1ec-498f-ad25-ad737292460d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fd50a626-555b-4826-95f1-42e4d4388142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e5fe71-6381-4ece-829d-1b8c4bd57d7b",
        "cursor": {
          "ref": "362e10e5-8859-44d9-96c0-f759880e7020",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "64359616-2e5d-4d6b-beb1-0ce44f8dd02b"
        },
        "item": {
          "id": "32e5fe71-6381-4ece-829d-1b8c4bd57d7b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "704fa667-9b71-426b-81ec-a87084dc2e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a9e9de-638e-4f5f-82e7-77c54be2fdce",
        "cursor": {
          "ref": "d2020609-707b-4c55-92af-85fa45dacbc5",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "532a779d-93a5-42db-ab82-3a66d3308160"
        },
        "item": {
          "id": "a9a9e9de-638e-4f5f-82e7-77c54be2fdce",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cdde8240-1ae9-444c-af63-040f7968c3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe953a8-201d-43ac-9a8d-32104e40d1db",
        "cursor": {
          "ref": "d41904aa-95d5-4ad5-8a3f-485e278a83ce",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b40dd1ff-e318-469e-be61-566494d92fc5"
        },
        "item": {
          "id": "ebe953a8-201d-43ac-9a8d-32104e40d1db",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f747fbb0-7331-4bb5-aa67-03f88ca3f658",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 595,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf513aa1-9c82-4e96-88a0-90df1eb7b646",
        "cursor": {
          "ref": "f6f7e6f3-f8aa-4f14-b504-bde5f45d27c0",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ca0f4c00-eb06-44a4-9a29-e2b7994866d6"
        },
        "item": {
          "id": "cf513aa1-9c82-4e96-88a0-90df1eb7b646",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ba081eca-fa93-4ef2-815e-d31401082014",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 508,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "2bb71130-2487-45d1-83c1-f492396c5152",
        "cursor": {
          "ref": "e9cc7618-fd9d-4d18-82c8-69581c2ecc79",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c8298eb9-798c-4486-a341-4c87f7252da1"
        },
        "item": {
          "id": "2bb71130-2487-45d1-83c1-f492396c5152",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "22ae21c7-cfea-4e48-b577-3829a96a5484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810b144d-de6c-4764-bfcf-bb1b7d6c96d0",
        "cursor": {
          "ref": "d1b208f1-f1e9-4a91-9b55-ccefdf89d724",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a8f71a57-c0eb-4baf-aa64-77723bf08365"
        },
        "item": {
          "id": "810b144d-de6c-4764-bfcf-bb1b7d6c96d0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1268d58f-4d1e-4af7-a125-09ec73e8e254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed576ca8-c1b5-4dd1-9088-b41fb2b0a19c",
        "cursor": {
          "ref": "7601693a-738a-413b-b184-fb141d033f77",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9c59965f-9fde-473c-9329-db5073ab4c9f"
        },
        "item": {
          "id": "ed576ca8-c1b5-4dd1-9088-b41fb2b0a19c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "32937f7b-1429-45a5-9d7d-241115fd51d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195abf50-d41d-4bdc-a340-e63cddf3f25f",
        "cursor": {
          "ref": "cafacd66-6a02-423f-ada3-5d2cefea4d8e",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8c4d0cc5-8501-41d6-87e1-a989923a73da"
        },
        "item": {
          "id": "195abf50-d41d-4bdc-a340-e63cddf3f25f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9bb0bfed-8fdc-496e-b905-5c14d6963ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafc4a78-2da6-41a9-a36b-bd66fce92c2a",
        "cursor": {
          "ref": "c7b64669-07d0-4595-8bca-44123ea711fc",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a0aa3f2e-ebb8-46cd-9444-3bec47384d1a"
        },
        "item": {
          "id": "eafc4a78-2da6-41a9-a36b-bd66fce92c2a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0b6f2c2c-3ad4-46ab-88ea-596fca7b6854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69263729-8cbf-43ce-93e9-d3c1476a39ed",
        "cursor": {
          "ref": "598223c4-14f9-450c-b1d5-3205a04e5d15",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "28ca045d-d6df-4ba3-a935-62a35df4118f"
        },
        "item": {
          "id": "69263729-8cbf-43ce-93e9-d3c1476a39ed",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "75b42a59-edbc-451b-83a1-818e1ffbb5d6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 576,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30a4158-76ae-470f-a1ee-6dbb29cc2c5c",
        "cursor": {
          "ref": "116b9471-f0b1-4119-ac1b-b3ec5df7fd42",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "453b12f1-1ebc-496b-bd60-620ab9211f04"
        },
        "item": {
          "id": "a30a4158-76ae-470f-a1ee-6dbb29cc2c5c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0f09e6ad-e77b-4c21-a979-ed253a570cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ef5758-5b18-4ccf-a663-e940fc6e6a09",
        "cursor": {
          "ref": "c9887ec5-20ce-4a7d-b367-4c770abe9f82",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7a6858e7-16db-48f2-b93e-2b24682a4964"
        },
        "item": {
          "id": "c4ef5758-5b18-4ccf-a663-e940fc6e6a09",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6668099b-0126-4486-94b6-3c59a0816b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9dee68-4a73-4bc3-8480-bdcda6ba50d3",
        "cursor": {
          "ref": "2be62842-d293-49b6-8001-360b32c82431",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ae145f82-071f-468b-aadc-4939a8193d1e"
        },
        "item": {
          "id": "9a9dee68-4a73-4bc3-8480-bdcda6ba50d3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5a26b5a3-6db5-4f5c-a079-fc4fd0111fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3065c5-4f14-400a-a7c1-773d175e0fa7",
        "cursor": {
          "ref": "554a4712-2276-498b-85cb-a7b76c5d6575",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fed56f1d-9877-4733-8351-9a82fd7caeab"
        },
        "item": {
          "id": "be3065c5-4f14-400a-a7c1-773d175e0fa7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b04ac812-2333-4a61-b0bc-572635e8104c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4a083d-3b6f-4436-bcbd-3f323d6e6811",
        "cursor": {
          "ref": "4f4c3656-b291-4733-bb5f-1780c806b4af",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "04b8a327-df71-4788-978d-84d23cef6aa2"
        },
        "item": {
          "id": "8d4a083d-3b6f-4436-bcbd-3f323d6e6811",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "08d25cc8-5fa7-4da3-b9ab-f91b629850c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff401a25-e3b2-442b-ae8c-ddf81f6dc7a4",
        "cursor": {
          "ref": "c67169ec-6d77-482b-b13a-61ae33190ded",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cde893a7-9e5c-48c6-a200-d34c51a927da"
        },
        "item": {
          "id": "ff401a25-e3b2-442b-ae8c-ddf81f6dc7a4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "76d81565-76eb-4553-a4c6-75dc8645e07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f30b46b-30dc-48f7-854f-e2e8a2e58e90",
        "cursor": {
          "ref": "6d88331d-8fc7-4493-b4aa-4c161d8fd1ae",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "802bf440-04d4-4591-9444-faaab090352a"
        },
        "item": {
          "id": "9f30b46b-30dc-48f7-854f-e2e8a2e58e90",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "faf9fcf4-f189-4d5e-a0dd-881cbdbc2d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186e85b2-35d7-4c3b-a5c0-557208aa4b56",
        "cursor": {
          "ref": "563865d3-14b0-4503-aebc-df4075650f96",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cefbcf33-777c-4e9d-b8c3-873ee4ea42c7"
        },
        "item": {
          "id": "186e85b2-35d7-4c3b-a5c0-557208aa4b56",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cdbf40ab-5f97-4d41-b2da-29c21fbae2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e522da4-9e28-4baa-8ee1-d8d865cbfd7d",
        "cursor": {
          "ref": "80534cfb-fbf1-40da-838b-78cdb3673000",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "47f84a68-e927-4e83-8c73-0c39c4dbad27"
        },
        "item": {
          "id": "3e522da4-9e28-4baa-8ee1-d8d865cbfd7d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "df4166e7-bb79-494a-a998-8afca35a545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1256,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4babff3-f93f-45f2-aab5-b87d0f9343d4",
        "cursor": {
          "ref": "66229b68-7971-4509-8caa-f90ff6befcd4",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7bc5f8ca-062c-4a29-ac1e-2db61b3a86d0"
        },
        "item": {
          "id": "e4babff3-f93f-45f2-aab5-b87d0f9343d4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "497513f4-3b55-4668-b525-bc14e7d43a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1105,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7278d4be-4e44-445d-9ec9-e3124a846870",
        "cursor": {
          "ref": "a1b15550-06c4-4b58-bd1d-c62b5bf505e7",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f77c6d41-6750-4727-9e53-6e860e1a645f"
        },
        "item": {
          "id": "7278d4be-4e44-445d-9ec9-e3124a846870",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3b0ae087-94da-467f-8216-df3a7904e07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd18f69a-4cf5-454b-a7b0-c9133fdf4eb6",
        "cursor": {
          "ref": "069da0d6-475b-4a2f-9529-3946f2ab6a39",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8488411a-3001-42c6-9b71-d7d2e910107c"
        },
        "item": {
          "id": "fd18f69a-4cf5-454b-a7b0-c9133fdf4eb6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c82a94aa-8a9a-47a2-af07-29548772acd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b85f32c-ce0d-4f93-9a35-9d7bb7a9ec71",
        "cursor": {
          "ref": "11ed3254-045f-4e97-8292-40a4f12d895b",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "54498aa1-8524-4043-99bb-4b97f44072b9"
        },
        "item": {
          "id": "9b85f32c-ce0d-4f93-9a35-9d7bb7a9ec71",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5750e4ae-6eda-404a-b944-e7d29854fdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a959184-48d4-40bb-a48b-63f8e656e355",
        "cursor": {
          "ref": "2e995dad-8214-4b30-8036-6dbb145a82a9",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1adb7471-b5f8-4cf8-a917-541f3b0c08d6"
        },
        "item": {
          "id": "5a959184-48d4-40bb-a48b-63f8e656e355",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3bdb2fbc-d19a-45cc-a75b-e27d0377ee4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d180b48-92b3-45a3-8bb0-9d46b082472a",
        "cursor": {
          "ref": "2fe7a97b-c7c9-4618-95c1-9970746a8a5e",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "73e9f0aa-ed75-4c7f-84bf-d3079fd54eac"
        },
        "item": {
          "id": "0d180b48-92b3-45a3-8bb0-9d46b082472a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5018b5fb-f37e-4253-8565-20b5a5514c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d4d18a-822a-47c4-a56a-058f3e893999",
        "cursor": {
          "ref": "408a1d65-0adb-4f66-83ec-1221ffd1ba1d",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3504c0b9-cf2b-4de2-bff6-df175359d5ad"
        },
        "item": {
          "id": "84d4d18a-822a-47c4-a56a-058f3e893999",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a7f63a96-ca05-43cf-bc12-1f080779c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cebb98d-2a26-407f-8410-c22d728dbdc7",
        "cursor": {
          "ref": "92f85ef2-bab3-4ef3-8e99-410b9a405f7e",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2c51efa0-8982-4863-90cc-f45075d42f10"
        },
        "item": {
          "id": "6cebb98d-2a26-407f-8410-c22d728dbdc7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7f67ee95-6f20-4f89-af67-c968d45d58d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e224ac-03c2-4191-bb79-15d227a662b3",
        "cursor": {
          "ref": "f6f01ff7-6e84-4fb7-bb5b-c4e96174d5e1",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9f791666-f318-4f42-ae0f-f122f8ea7502"
        },
        "item": {
          "id": "06e224ac-03c2-4191-bb79-15d227a662b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "64c6355e-aeb1-4995-8799-1213e9eafb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303e8bd5-34c3-4b6b-8c21-77f12d4e87f6",
        "cursor": {
          "ref": "2d1f0096-bc6e-45c4-840d-e80fb2e94cb0",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "980586d8-8990-4818-9c25-eeb6775e881a"
        },
        "item": {
          "id": "303e8bd5-34c3-4b6b-8c21-77f12d4e87f6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e6ee3cb0-35e4-4f86-b962-1ab4e8c850d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923a2510-21ad-491d-b66b-11c78cfa2b1f",
        "cursor": {
          "ref": "5f2b17ad-6661-4898-a24b-5f4060c0404c",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f8fd5884-ccf9-4700-8cb1-39ddd0c513d4"
        },
        "item": {
          "id": "923a2510-21ad-491d-b66b-11c78cfa2b1f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1545446b-401d-43fe-84a7-873a14470b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6ab8ba-bb4d-4589-bd22-d515a6d78272",
        "cursor": {
          "ref": "d7a39b8d-d5e9-4437-b6d8-f80df74c83e8",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "880d3ad2-cb9f-4ec8-8296-64f2cfb3eb4b"
        },
        "item": {
          "id": "8a6ab8ba-bb4d-4589-bd22-d515a6d78272",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0decee25-b6de-4ffa-a9dd-316d879756c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fec351f-ca9c-484e-9813-f0ebaace0c4f",
        "cursor": {
          "ref": "309d0dde-7381-4a54-bbf4-ab85283c1df2",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ff108b03-9289-4672-bba4-a25b248a99dc"
        },
        "item": {
          "id": "8fec351f-ca9c-484e-9813-f0ebaace0c4f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ba1da217-a71d-4737-9ebe-c1052b92bdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18b2952-d53d-4f03-a536-c872b03022ed",
        "cursor": {
          "ref": "f863c14d-3529-4469-8b70-bdf1abc7b4fb",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5cfad798-4e93-49cb-be8c-1e4d880e772f"
        },
        "item": {
          "id": "e18b2952-d53d-4f03-a536-c872b03022ed",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "08e81c9c-31a4-4453-b349-716342ec3353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117a3f3b-d1ce-4b63-9505-45aab148c6ae",
        "cursor": {
          "ref": "38a8c515-d32b-4b89-845b-d9606ab74980",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d06141c1-da4e-4bed-95e3-8b69dc3b890f"
        },
        "item": {
          "id": "117a3f3b-d1ce-4b63-9505-45aab148c6ae",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1dbb2adc-8a43-49fb-8f9e-da21cca117ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74139ad-08b8-4a8b-94be-f6c97c701ba3",
        "cursor": {
          "ref": "f615d23b-ff57-47bf-ac91-dc3388376ca9",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "94dadc83-6651-4dc5-bf68-a190ab888a62"
        },
        "item": {
          "id": "b74139ad-08b8-4a8b-94be-f6c97c701ba3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ea2b8989-b736-4f85-bbc6-de2bda81efab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c421c8-5f0a-4a14-8cfd-565c6765cea0",
        "cursor": {
          "ref": "cb2d8bed-e5c6-41ee-b43b-f71a9699cdaf",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "83cd56d7-d90f-4281-8c52-d78d96dc3787"
        },
        "item": {
          "id": "53c421c8-5f0a-4a14-8cfd-565c6765cea0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ebce92bd-478e-46a9-b551-84ccc2b8a588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e81297-b438-40db-8e19-51ecef89f7b4",
        "cursor": {
          "ref": "235e1ace-35e2-424c-9619-44000acac880",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "35060e7f-522d-4511-8b50-85bdb450d97f"
        },
        "item": {
          "id": "40e81297-b438-40db-8e19-51ecef89f7b4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a37eb42e-0832-404b-81af-da038f5b3b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796c2887-1a29-476d-a41a-3e15ff3e0f31",
        "cursor": {
          "ref": "85068991-3eae-4ee2-b37d-286f2542c733",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aad19c98-f96a-4ad8-b1cb-17ca1b862a60"
        },
        "item": {
          "id": "796c2887-1a29-476d-a41a-3e15ff3e0f31",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a3ea60f2-c932-47f1-9ab3-c8d378e75c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ca2c9c-fa83-4934-96ac-03f50afd9720",
        "cursor": {
          "ref": "03a98581-9e1a-4ca5-8e9f-a00dbb50d3d1",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "237269b2-8f15-4bcc-b2a0-90b1276f0875"
        },
        "item": {
          "id": "b9ca2c9c-fa83-4934-96ac-03f50afd9720",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9282caa0-595b-4f1c-8b83-c45590002b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18ec7f4-92ab-4f6b-b57c-692b2a53e9d2",
        "cursor": {
          "ref": "c0edb2a9-a532-4014-8b05-b57b3f1fe125",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e40a4e1d-d0c5-4dbd-b74f-06eaf54e4bb4"
        },
        "item": {
          "id": "a18ec7f4-92ab-4f6b-b57c-692b2a53e9d2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e396c23b-cd2c-4c71-9108-3efe185e04d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071fab5b-569d-444f-9fb2-9df28cd83cd2",
        "cursor": {
          "ref": "d1328fd1-43d3-4bc5-a090-7b5ec1fe818a",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6771eb2d-3cde-4947-b994-f92d52b0952f"
        },
        "item": {
          "id": "071fab5b-569d-444f-9fb2-9df28cd83cd2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f5e33f3e-1ef6-461a-b7d5-14d683d26640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224f8d2b-7446-4088-bb0e-70797d3ac26e",
        "cursor": {
          "ref": "3bb3027f-d302-4f69-9ab4-04bed3a75653",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "197ce8a7-0cde-43dc-bf95-37b4b683386d"
        },
        "item": {
          "id": "224f8d2b-7446-4088-bb0e-70797d3ac26e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "468b3d59-6ceb-4d32-a065-cf75c54dab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49bee40-e72b-4205-8186-a0e81440bdee",
        "cursor": {
          "ref": "41c9c496-5523-4d7b-9ca5-e3c0c56250df",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e51da740-ad4c-4cf2-a649-a3eaf0a1cded"
        },
        "item": {
          "id": "a49bee40-e72b-4205-8186-a0e81440bdee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "007a5101-4c73-433a-a9a8-b90a229e9dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb0fbb4-058a-43bf-b395-cc80e58dde27",
        "cursor": {
          "ref": "bd478f65-63a2-49bb-92da-32dbb28eb297",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c3d18927-b2b8-465e-a0f8-88b3b3b02c2f"
        },
        "item": {
          "id": "6fb0fbb4-058a-43bf-b395-cc80e58dde27",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c431f18b-bfee-4605-821a-13c22ec12169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a10d9ee-5a37-4080-9c30-b5d3d467e7f7",
        "cursor": {
          "ref": "e9c710d3-3312-4937-98fc-e70fcbcfb648",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "edd04f58-4c1c-4a1a-9bc5-b51f578f972b"
        },
        "item": {
          "id": "5a10d9ee-5a37-4080-9c30-b5d3d467e7f7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "66e6f61e-ced3-42b3-8e38-d22e11f33945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2155d549-e63e-441a-b671-af8ec63cf5ee",
        "cursor": {
          "ref": "2865286c-62e3-4754-a8a1-5ac657a56857",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d6c2a724-7833-4c7c-9b67-8bf2d08543ba"
        },
        "item": {
          "id": "2155d549-e63e-441a-b671-af8ec63cf5ee",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "51044013-c42a-49c1-8a3a-93f9146d825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60fc1ac-3478-461d-8989-4ddbfae11d4f",
        "cursor": {
          "ref": "639c9732-f575-461b-8ee3-977e716d2bcb",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "205167f0-e4cc-45b2-aa6b-20bdcb90cdc3"
        },
        "item": {
          "id": "b60fc1ac-3478-461d-8989-4ddbfae11d4f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1c142cc9-6f41-40dc-959f-94c48672bb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d726cb7d-077d-40ae-8379-f58d0638c841",
        "cursor": {
          "ref": "e0dcd631-343e-4a66-8210-86ad947d8ba5",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43e41d04-008c-4d9e-bdfa-c709aa24d1ae"
        },
        "item": {
          "id": "d726cb7d-077d-40ae-8379-f58d0638c841",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db357798-de03-4170-a05a-9c2b1381f6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cd74b0-7619-422d-80cd-3cb631b4680b",
        "cursor": {
          "ref": "4b875aef-2bd7-4a19-984b-044a6106c085",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6e5343e4-a297-48a7-981b-ae0d9fa3e890"
        },
        "item": {
          "id": "13cd74b0-7619-422d-80cd-3cb631b4680b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6d3e5679-52fb-4067-80b9-f47e952ab2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb695816-717b-431c-9312-0d8508b8cba5",
        "cursor": {
          "ref": "532453e6-3d82-4118-be57-a7b703c96375",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fe65d5fb-781b-428c-9ca2-6edcc7fd7fc6"
        },
        "item": {
          "id": "fb695816-717b-431c-9312-0d8508b8cba5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "12f16449-4721-4256-bd58-5c84f07689eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fca10a-6d01-4ba7-a2f2-15cc3fd48c7b",
        "cursor": {
          "ref": "5f60ce4a-e326-4912-800b-074b0670f540",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2d0c6b03-774f-49e7-8257-908e0fac2673"
        },
        "item": {
          "id": "c7fca10a-6d01-4ba7-a2f2-15cc3fd48c7b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d80d23e2-6297-4260-a36f-dac44b9b5ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595714a4-b320-403b-83f3-48c26768f755",
        "cursor": {
          "ref": "fd5b31ef-8f08-4cbf-97bd-c1383acc0cda",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "18760a7e-4c68-4222-8025-758c92f4a642"
        },
        "item": {
          "id": "595714a4-b320-403b-83f3-48c26768f755",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fec2ba2c-c94a-4436-99ea-bfd4fa2c19de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da55ecb9-8d13-4d0d-8e5c-948b0d395232",
        "cursor": {
          "ref": "e4ec7573-faae-45b4-b6b2-476dd1837f5c",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "61b08922-9e76-4588-81fb-e67ccea70b06"
        },
        "item": {
          "id": "da55ecb9-8d13-4d0d-8e5c-948b0d395232",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "267d3a3f-a99d-4e71-9a5d-f32bc165fdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611eb7b4-787b-4500-bd4a-d9882a98f304",
        "cursor": {
          "ref": "7974ef52-0f3d-42a4-9fab-3fe639511f29",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7df06c72-c2dd-42a4-9fc5-f9bdd31fa245"
        },
        "item": {
          "id": "611eb7b4-787b-4500-bd4a-d9882a98f304",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "244b5555-09e5-48b4-b2ea-4a41a0501d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6c48e7-fecc-4790-9476-b73695e46dd9",
        "cursor": {
          "ref": "7af019d0-c4e1-4426-aaec-e2b3c7237216",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "395852c7-3082-4eb2-9c91-edb19484f77b"
        },
        "item": {
          "id": "3e6c48e7-fecc-4790-9476-b73695e46dd9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "235f362c-6094-4824-b8b7-edecf53d29dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf034d3-7b5f-4e9f-9e42-ca984438ae7a",
        "cursor": {
          "ref": "5ab9899b-9fd2-420d-abe5-0dfdeac15950",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "24e8a915-0229-4ae5-96f8-0b40e2c31900"
        },
        "item": {
          "id": "ecf034d3-7b5f-4e9f-9e42-ca984438ae7a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2f93532e-9aa5-4a8b-b901-10e4d9fe8a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5817bf2-f45e-4f16-a7b7-7def89f7ca72",
        "cursor": {
          "ref": "e572100b-675e-4ad5-b16f-c6e43b1aa21a",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "910bf44f-a689-488b-bdb3-be882f5b9dd9"
        },
        "item": {
          "id": "a5817bf2-f45e-4f16-a7b7-7def89f7ca72",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "af74a5bf-85b1-4637-b7f3-abf2f50d3fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefcc6be-653a-42b7-9444-dccec4b29a1a",
        "cursor": {
          "ref": "a51bf902-abca-4494-9910-2bfd6828ce75",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "909c0042-e294-42a4-8fd9-1cf843e1f10f"
        },
        "item": {
          "id": "aefcc6be-653a-42b7-9444-dccec4b29a1a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a44c8800-27be-40d8-9a5a-94db231010aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9837acb-33dd-4389-90fd-19b3dc239e2f",
        "cursor": {
          "ref": "29325b1c-84a5-48d0-8796-cc19c9ec045d",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6e073919-f54e-4497-9e44-6ebae1f97824"
        },
        "item": {
          "id": "b9837acb-33dd-4389-90fd-19b3dc239e2f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a4360f60-f593-457d-a965-a81dd723e251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4418de5a-1989-4ea3-8897-8b2752a26084",
        "cursor": {
          "ref": "5db23342-26db-4c46-aa46-6f2fe0ca9a65",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7079b61f-aa77-44e1-bd9b-80bfa933c309"
        },
        "item": {
          "id": "4418de5a-1989-4ea3-8897-8b2752a26084",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "76b5ff28-d701-403a-a841-c1ea180ab398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125f98cd-2046-40a1-99b5-9728d0c9d384",
        "cursor": {
          "ref": "b92278fc-2b12-45e1-a83b-67228f3a9231",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7a3105d1-409d-4595-8e78-e5ab150d0926"
        },
        "item": {
          "id": "125f98cd-2046-40a1-99b5-9728d0c9d384",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "02a2e88d-41c4-41a0-b205-013370916bfd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 507,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524bf8fd-7bd8-4d3c-954a-8608d478d13e",
        "cursor": {
          "ref": "3a5484e4-1129-4fca-9ad1-b7910b4af50b",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ce7b0c2a-314e-40c8-a0cb-3c7d41b6b0cb"
        },
        "item": {
          "id": "524bf8fd-7bd8-4d3c-954a-8608d478d13e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "de7d3bcb-6bad-432a-af39-7e227c0cda8c",
          "status": "Created",
          "code": 201,
          "responseTime": 4331,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "12f5c981-a40e-4ff9-b934-a97b04f4705c",
        "cursor": {
          "ref": "a8d7988f-188d-4c55-afd4-4b800ef56f94",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a2bf9d0e-b59e-41cd-b4c0-2efc708f374a"
        },
        "item": {
          "id": "12f5c981-a40e-4ff9-b934-a97b04f4705c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "adfd3c86-550e-4795-af01-e752abc748b1",
          "status": "Created",
          "code": 201,
          "responseTime": 3673,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "e3b1530d-9323-4eae-923b-d754bab58ea9",
        "cursor": {
          "ref": "d684762a-a9ce-4e8e-bdf9-898f1882ba86",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8cc23a32-64a4-4d12-a3f0-97a661e04523"
        },
        "item": {
          "id": "e3b1530d-9323-4eae-923b-d754bab58ea9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "94a3f887-ecc4-4798-a36a-0f7b87d3ed63",
          "status": "Created",
          "code": 201,
          "responseTime": 4224,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "640c52ba-7a37-4aaa-b300-c1c62d216cfa",
        "cursor": {
          "ref": "a91513db-f0e5-4d5c-a32c-818208986e09",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b0a5788c-917c-47a6-b242-1a73d08f52ff"
        },
        "item": {
          "id": "640c52ba-7a37-4aaa-b300-c1c62d216cfa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1a077df0-62ca-4268-b3c8-e48333c91928",
          "status": "Created",
          "code": 201,
          "responseTime": 3692,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "12a9918b-adbf-4ebe-938c-84c390edc65c",
        "cursor": {
          "ref": "288ce8a8-fc03-473f-8757-1addd5b352bd",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ea8898fb-ca93-4ffa-b646-a514723e1b32"
        },
        "item": {
          "id": "12a9918b-adbf-4ebe-938c-84c390edc65c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "13d6b2b5-32c8-4283-a3a4-4accaf4643c3",
          "status": "Created",
          "code": 201,
          "responseTime": 4564,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "d92b932f-58f2-4483-a31c-b8e234073adf",
        "cursor": {
          "ref": "16d6dba2-0086-45f2-8a9d-2f7bf5d79b61",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a882d3c0-69a7-4a04-a60f-98f6cfb86cea"
        },
        "item": {
          "id": "d92b932f-58f2-4483-a31c-b8e234073adf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e18ebc3-88d8-4572-a6a9-d52bb064831e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92b932f-58f2-4483-a31c-b8e234073adf",
        "cursor": {
          "ref": "16d6dba2-0086-45f2-8a9d-2f7bf5d79b61",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a882d3c0-69a7-4a04-a60f-98f6cfb86cea"
        },
        "item": {
          "id": "d92b932f-58f2-4483-a31c-b8e234073adf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e18ebc3-88d8-4572-a6a9-d52bb064831e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7319175f-efbf-4594-b21a-3efc70dd70c6",
        "cursor": {
          "ref": "96268529-2d52-4a66-8486-ebc67d74e6d1",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "651f3ac0-5de6-4133-9dbb-977951dd7f95"
        },
        "item": {
          "id": "7319175f-efbf-4594-b21a-3efc70dd70c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "56681042-e31f-48b1-875d-b305b4a8d250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aecd10-4407-4b61-9650-c7711b4fb1d5",
        "cursor": {
          "ref": "33791555-8f97-45a1-9f68-465ef93901f5",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d2518965-51d1-43d2-9f42-66fb1bb77274"
        },
        "item": {
          "id": "44aecd10-4407-4b61-9650-c7711b4fb1d5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "46450547-600b-41fa-822f-cd7e0527b700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0235331b-cc4e-4e0d-9f4b-a87948318d6a",
        "cursor": {
          "ref": "75249651-70d3-4eec-857f-fbd8d955d001",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3c80080f-a55f-49a0-a0eb-896c9207e276"
        },
        "item": {
          "id": "0235331b-cc4e-4e0d-9f4b-a87948318d6a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8b4dd16b-6e8f-41a0-80e8-add724cfb2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437f2e12-3bd5-44c6-9294-6a35e90b0aa4",
        "cursor": {
          "ref": "ad77b6c8-c1e0-452d-947b-ac99ef45a0aa",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a96e41f4-3522-4581-9095-e29925c22315"
        },
        "item": {
          "id": "437f2e12-3bd5-44c6-9294-6a35e90b0aa4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c4cc1c19-53c1-4064-ab36-a9c84f76d1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f23596-0770-489d-8950-1110e12bc9c7",
        "cursor": {
          "ref": "88a94add-6062-4203-be2b-6173b98beaca",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ee8f6801-5e08-4087-9435-7612be76a2db"
        },
        "item": {
          "id": "d4f23596-0770-489d-8950-1110e12bc9c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f51c592a-4668-4746-8fc3-df7ad13f3701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938c0a06-1081-4798-af6e-60e656605441",
        "cursor": {
          "ref": "a8be348a-0c57-4e37-a2b5-e43f04342e20",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "deb8a3aa-27c3-41fb-ba6f-5b64face1b1a"
        },
        "item": {
          "id": "938c0a06-1081-4798-af6e-60e656605441",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1a52e45d-cafb-411c-a0d9-0cbb91f6989a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7202aff4-af9d-47ef-ac7a-d2745ac00ac9",
        "cursor": {
          "ref": "47de43d5-9ecf-43cf-89ea-50212aa7eea6",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0bac2a93-225a-4d47-9dde-800251bd4cac"
        },
        "item": {
          "id": "7202aff4-af9d-47ef-ac7a-d2745ac00ac9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "139837ba-2ee8-4f57-b1a1-5cef2de6e541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636c38b6-4ba2-41f8-bd96-db5a72044879",
        "cursor": {
          "ref": "4ab0e3dc-46d0-4a6e-8207-021bdcf15d62",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6bc2bcf0-5277-42b4-ab83-6f9a48a53281"
        },
        "item": {
          "id": "636c38b6-4ba2-41f8-bd96-db5a72044879",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "71f2a4fd-609c-45e2-9b33-f5b82f5b8255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ab3885-142e-4675-9ab6-be3eccf1f02c",
        "cursor": {
          "ref": "019d0e26-a433-4ec3-9037-3418823a7b51",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4dc5e435-450b-46a3-881d-0b7eb5f82006"
        },
        "item": {
          "id": "97ab3885-142e-4675-9ab6-be3eccf1f02c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d0d5c8d6-6760-40d6-919c-16b1097ba51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d444bcf-d013-40e4-8fa1-c9448dfbe852",
        "cursor": {
          "ref": "46325aee-2446-4eac-92ea-32254c9f0869",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "56e49755-5d8b-4141-8888-a50e2d911a57"
        },
        "item": {
          "id": "8d444bcf-d013-40e4-8fa1-c9448dfbe852",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fcdd3c79-83bc-46a3-bc12-00fa651699e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad75e9e2-87ce-450b-95b3-af83be251f69",
        "cursor": {
          "ref": "8173c3cc-d6ba-4ddb-a191-67af73060911",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d1d27de0-5c19-45a0-abd0-2cf9c926bd5f"
        },
        "item": {
          "id": "ad75e9e2-87ce-450b-95b3-af83be251f69",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "41b9a5b9-4b91-4cdd-9d91-53f60d1a08cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6234e8-4bd2-48f2-a183-7de635f95d47",
        "cursor": {
          "ref": "023733fe-26a3-4e9c-a0db-4bf019b383e2",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c2acac90-9f63-40ee-a8bc-19af30ace134"
        },
        "item": {
          "id": "0d6234e8-4bd2-48f2-a183-7de635f95d47",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7a3e5479-1771-4dba-af5d-c03bda08e028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21345240-3037-4c97-bca8-451b242393d7",
        "cursor": {
          "ref": "f892a298-f76d-402f-be7f-ae9e41381290",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3aee07cf-7533-41c5-ad47-6a4aa8e260c7"
        },
        "item": {
          "id": "21345240-3037-4c97-bca8-451b242393d7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "90d03473-8f2f-48a7-a8f2-885a7e754154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56459fb6-c6bf-46c3-a7d5-9cc26701d672",
        "cursor": {
          "ref": "e0c2ae7d-57c7-434b-8954-d2cb503c5bc1",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8c75abb7-33ec-482d-adb2-7f3887730a49"
        },
        "item": {
          "id": "56459fb6-c6bf-46c3-a7d5-9cc26701d672",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c8c73a9a-6f00-4efd-92e0-5fcd48bccc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d656dc1d-4648-44d1-ba8b-54e7099bb644",
        "cursor": {
          "ref": "35c88dba-6039-47e2-9877-734edb75d72d",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c95c2103-6132-4239-b6fe-76683dd9f6a5"
        },
        "item": {
          "id": "d656dc1d-4648-44d1-ba8b-54e7099bb644",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6d510070-392c-4014-a74a-98ebee37af72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c4af4f-5a5b-4b5f-9575-a4a01303e16c",
        "cursor": {
          "ref": "4efd5a3c-3f78-4edb-9b65-09ce9abd4ecd",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f0368335-14d8-40b9-8a3e-98013299271a"
        },
        "item": {
          "id": "f6c4af4f-5a5b-4b5f-9575-a4a01303e16c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b7cd7006-6efb-4068-8864-df8c9af1971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a322acb0-da3f-4c61-8fec-24e43623f3bd",
        "cursor": {
          "ref": "342c05fc-4a4c-4443-99be-a3b27e98889d",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a381708b-a66d-4678-9042-d6178f940dfd"
        },
        "item": {
          "id": "a322acb0-da3f-4c61-8fec-24e43623f3bd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a0612880-9a97-4dce-a4b8-bf4927b6f4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6075db61-8c8f-4054-9ba0-328023f0160b",
        "cursor": {
          "ref": "1833e772-6bc8-4e75-a83b-0b09fa3e4cb2",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f38eafbc-d3f5-4a8e-98ec-fb3882f95fd7"
        },
        "item": {
          "id": "6075db61-8c8f-4054-9ba0-328023f0160b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6f8c022a-4ded-4257-aa3b-de2ac9361ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cab0b2-54c8-4b95-92bc-5af12159cc46",
        "cursor": {
          "ref": "400f5310-9c3c-4a86-8d70-e9974ca67da7",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6381b9de-7b51-4a26-8c08-b77d21534884"
        },
        "item": {
          "id": "90cab0b2-54c8-4b95-92bc-5af12159cc46",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f3c2e4d5-0305-4b71-9c3a-02b638f82088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67e472b-12eb-410d-8a58-ed7000a27660",
        "cursor": {
          "ref": "3a596e4c-d08f-4fa3-bd5e-8a6f4e38b70c",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e716e792-0a58-4465-868c-59434cf7c9cf"
        },
        "item": {
          "id": "f67e472b-12eb-410d-8a58-ed7000a27660",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6d6fbbe4-60c1-41a1-b260-cfd99b01e3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873f2482-c446-4bf9-8878-f12eb5038c76",
        "cursor": {
          "ref": "240ffd7b-2891-456b-8eed-99b345342990",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "18aed3db-5868-4c6d-83f1-a740e8d51707"
        },
        "item": {
          "id": "873f2482-c446-4bf9-8878-f12eb5038c76",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "debb8b8e-036a-47d5-83b1-0a965ac1a6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2f2f68-e731-44af-a0b6-f570e14599ac",
        "cursor": {
          "ref": "f89918f0-27ef-4c01-93e0-cbb8372b7ce0",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a5e82d91-ac49-4764-a031-b3410defd078"
        },
        "item": {
          "id": "5d2f2f68-e731-44af-a0b6-f570e14599ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e65eaa70-bbff-41e2-a0ad-7875237dde84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3105ad4-8234-4ed9-9e54-70ce81d84316",
        "cursor": {
          "ref": "f6b0fb01-36b4-4f22-92a9-f7549c232d50",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4fc5ebfc-880a-4c57-bc69-5c9d2baf084f"
        },
        "item": {
          "id": "b3105ad4-8234-4ed9-9e54-70ce81d84316",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a4c7dd23-647b-4b1e-a1b0-7a63121ede9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb07139c-e269-4f55-ae86-6808713c3b6c",
        "cursor": {
          "ref": "f3fcd305-3265-4977-9204-cd34f84f9cab",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "36fb3f3c-d40e-4ea0-96f6-6e612cd010ac"
        },
        "item": {
          "id": "eb07139c-e269-4f55-ae86-6808713c3b6c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9bdcdcb4-79e2-49e5-9e7a-3a1905bed5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d56570-380b-4f12-a93b-a027bf009e3a",
        "cursor": {
          "ref": "222daba9-80e4-43a7-9407-eea6d0dfe8dc",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "35e22a77-944a-480c-afca-4fa65481e72d"
        },
        "item": {
          "id": "b0d56570-380b-4f12-a93b-a027bf009e3a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "310457e6-a64a-4461-b551-d4018ef5cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b18909-663f-4683-bd9c-2e40b92a424b",
        "cursor": {
          "ref": "ad6a5e96-a369-45e2-9294-ff51fa197582",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a7ce850f-f594-4fa1-9f5c-fee1152406c9"
        },
        "item": {
          "id": "73b18909-663f-4683-bd9c-2e40b92a424b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1ba58867-d633-442d-bffc-b53042c69b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0417724e-35a1-416d-9c39-689ad2250adb",
        "cursor": {
          "ref": "356407b2-8b4a-4fbc-a91f-0581c42b4c10",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4853545d-f263-40de-b522-232b610043b5"
        },
        "item": {
          "id": "0417724e-35a1-416d-9c39-689ad2250adb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "67add875-1d25-4dc6-af38-049f801c641e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff19b46c-d00a-406d-ac04-b2750c7b8aae",
        "cursor": {
          "ref": "980ffb92-6713-4cb2-9b18-3b8b800c8387",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f7a0296f-81f6-472f-a501-73b88c69c196"
        },
        "item": {
          "id": "ff19b46c-d00a-406d-ac04-b2750c7b8aae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "de2ceb17-dc2c-4d70-be82-c84c8874b52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337470f4-3d0d-4f4b-8709-ab2dad740922",
        "cursor": {
          "ref": "a9e9726b-750f-4aa4-8cbf-d52fbeea493e",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1f56f1d6-8c84-4268-949d-844522ff29f7"
        },
        "item": {
          "id": "337470f4-3d0d-4f4b-8709-ab2dad740922",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fff3beed-6a8b-468f-a6bd-9cf8d3f0b44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81b0f4f-a821-4e16-893e-8bbe6e6b4922",
        "cursor": {
          "ref": "99e5fcb2-9e9c-4e48-8c1f-dc4877c7375d",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2a13420b-46aa-4a0b-a800-e82a278d6700"
        },
        "item": {
          "id": "f81b0f4f-a821-4e16-893e-8bbe6e6b4922",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7d683061-663e-4542-9912-d2328a6542ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7732126-0319-4d3a-849b-c7b9880954d3",
        "cursor": {
          "ref": "28461372-611a-432f-bad7-b936be58373f",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b62e2beb-f146-49e2-aeb6-beb1091f8d70"
        },
        "item": {
          "id": "b7732126-0319-4d3a-849b-c7b9880954d3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "adf4549a-6dd5-4370-bbff-20db0a032f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3ed395-6378-4760-b6ec-6aab77653a7e",
        "cursor": {
          "ref": "5b73fed5-94c6-444d-a1fb-f56557aa3ab2",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9c6c1422-25fc-4951-bbb3-d21091418433"
        },
        "item": {
          "id": "ac3ed395-6378-4760-b6ec-6aab77653a7e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dedd1547-4ff5-4a3d-bbe5-45a3248f0b2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c3869e-a9d2-4f77-87c3-9dce8a5c9c7a",
        "cursor": {
          "ref": "dac90b03-be74-471a-96a7-fabd2facf243",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b0d2fa57-7b88-46c0-b2bd-5d7f383326e4"
        },
        "item": {
          "id": "76c3869e-a9d2-4f77-87c3-9dce8a5c9c7a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7b2225c0-277b-42ba-bca4-9877b28b54fc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 501,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae31475-607d-4b68-8145-911054ecba95",
        "cursor": {
          "ref": "09b90359-4147-4d43-a68c-d674aa70966a",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b032ea78-fb8d-4c2a-8417-0f08ec32cb8c"
        },
        "item": {
          "id": "1ae31475-607d-4b68-8145-911054ecba95",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "886183e3-b162-4e9b-8699-79a1939f0bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae31475-607d-4b68-8145-911054ecba95",
        "cursor": {
          "ref": "09b90359-4147-4d43-a68c-d674aa70966a",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b032ea78-fb8d-4c2a-8417-0f08ec32cb8c"
        },
        "item": {
          "id": "1ae31475-607d-4b68-8145-911054ecba95",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "886183e3-b162-4e9b-8699-79a1939f0bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73b019f-44b7-4b0b-9341-dd82d4f14d85",
        "cursor": {
          "ref": "7f527890-b120-4433-b605-065b6565b2a2",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "59d8abf1-aff0-49d9-b812-c2c22a1ff734"
        },
        "item": {
          "id": "f73b019f-44b7-4b0b-9341-dd82d4f14d85",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5dff5bc6-7ba8-42be-9bec-e72f0ede63d5",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "561c2e50-48e9-43f7-9623-63ffadd278d9",
        "cursor": {
          "ref": "8cf7b51d-1ade-4387-b8a7-19855dc0daa3",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7a8dc85f-950d-4dcf-8f85-3269055152fc"
        },
        "item": {
          "id": "561c2e50-48e9-43f7-9623-63ffadd278d9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "99abbc73-61ea-4d5a-8b6c-8fdc5e056703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c2c78f-c2af-473d-ba43-35330d0ef7f6",
        "cursor": {
          "ref": "cd0e8616-7268-408f-9355-6263a54c37f9",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "23dfb02d-0c6b-422b-bc25-d8306843a42e"
        },
        "item": {
          "id": "83c2c78f-c2af-473d-ba43-35330d0ef7f6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3fcdb3a5-4403-430d-898a-2f2bc5c91639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a933d74-8e1a-48ff-b49e-7cc7c3283663",
        "cursor": {
          "ref": "8c0b051e-8a0b-4748-860b-9829fcbf5188",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5f74767e-f4f1-4c9d-8118-aec00251a6e5"
        },
        "item": {
          "id": "2a933d74-8e1a-48ff-b49e-7cc7c3283663",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0f8f4e3e-4d3f-4c96-8175-bcb8b351939b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf0c86e-92a1-4f9a-94f4-23edcbb80992",
        "cursor": {
          "ref": "89ae5efb-eff1-4f42-bd56-b85cf74a4a78",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "71a1c08c-08f9-40ec-af59-6fcf0199d438"
        },
        "item": {
          "id": "2cf0c86e-92a1-4f9a-94f4-23edcbb80992",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eb29e342-823f-451a-92e1-279ae8944f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be124252-5742-44e7-967a-55132a8a2e58",
        "cursor": {
          "ref": "8dba92bf-3517-4fad-bde7-0dc93c3f6816",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4676b5c4-af56-47f4-8442-88208bf70278"
        },
        "item": {
          "id": "be124252-5742-44e7-967a-55132a8a2e58",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "64df2868-8ca7-4c7d-999d-8b94403ef842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddb3f5a-e521-470c-b091-9cd6c2e9ef45",
        "cursor": {
          "ref": "f4b4f72a-ea68-4527-a31c-835ea7397796",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "408c5244-b9d3-40fe-ba5a-30e2c503e3d7"
        },
        "item": {
          "id": "dddb3f5a-e521-470c-b091-9cd6c2e9ef45",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "364d69d0-ee2e-4aae-b0c6-d55b2b8a535f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e22e2b-7946-4224-917b-4c0889fa368a",
        "cursor": {
          "ref": "f79a6fc8-6e13-4b37-8247-30aa095d9a1c",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "567eb0d8-1779-42d3-8a58-18cb8548a505"
        },
        "item": {
          "id": "68e22e2b-7946-4224-917b-4c0889fa368a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "938056fa-6643-4c79-8f51-95cb63e393d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fea5777-3097-4b58-9f22-fb498be257f3",
        "cursor": {
          "ref": "b0412cc8-f965-44af-b09e-67dbd6cf2983",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4bc4be59-c00b-45b9-a962-84b821eeac85"
        },
        "item": {
          "id": "5fea5777-3097-4b58-9f22-fb498be257f3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "61551f54-4d09-4c7a-b29b-f656ad73835d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55e5726-e22e-469b-8056-773773713d87",
        "cursor": {
          "ref": "d3e4ffe3-e0c0-47d0-a0dc-5fe0f8c7a4f4",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "018cc6bd-9505-447c-af23-043f04dffd81"
        },
        "item": {
          "id": "e55e5726-e22e-469b-8056-773773713d87",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "52917fbb-ce76-4e3c-a9fc-70a276800c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a922f03-e14a-4d84-a39c-94248d21323d",
        "cursor": {
          "ref": "b9b274c3-eecc-4214-abed-331c1960c3f2",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d5a08596-0470-4cd0-98ba-03ee42445022"
        },
        "item": {
          "id": "9a922f03-e14a-4d84-a39c-94248d21323d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "da2283a4-e637-442e-af81-cfacff632834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3427a662-b14d-4b18-8ca6-1b52bde4f199",
        "cursor": {
          "ref": "fd0935e7-d3bf-4aae-87eb-3ede5879fd34",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "911a72bc-a0e9-4828-83db-6925a8f34deb"
        },
        "item": {
          "id": "3427a662-b14d-4b18-8ca6-1b52bde4f199",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "be7eb880-6e0a-438f-8f99-2fd914c86fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977d7c94-4199-4bec-ab6d-119164027de9",
        "cursor": {
          "ref": "1bd4c1ef-47db-417e-9919-d88a7bc59c40",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f98bb20f-9c94-4890-9851-8219e2ae71f7"
        },
        "item": {
          "id": "977d7c94-4199-4bec-ab6d-119164027de9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0391dc25-1af9-4180-b2d7-bc1104b4ce05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea68dac6-26cc-4770-92fe-a9b909c1632c",
        "cursor": {
          "ref": "5da2f08b-1a39-44e4-b83e-40c0c98912e7",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6c93fbcc-664d-4fc0-b1bb-51d6baa63fde"
        },
        "item": {
          "id": "ea68dac6-26cc-4770-92fe-a9b909c1632c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2e2893c2-c05d-43e4-ac81-e8a2e01597c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff032a24-d915-4d89-b890-5fa6a7089b51",
        "cursor": {
          "ref": "4daaffe7-a49a-4419-9331-28e3da61d27c",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9fdcae27-185d-4989-8ce8-eaeac7414475"
        },
        "item": {
          "id": "ff032a24-d915-4d89-b890-5fa6a7089b51",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9106b90f-7276-407f-9ee7-8fe87f6379e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff1fd13-1656-4d7d-8d82-7cff157961d7",
        "cursor": {
          "ref": "a77f51be-62da-49b4-a0e7-88e3f0b25803",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "937b04d5-4d99-477b-a7f3-d2bd3e9d29b7"
        },
        "item": {
          "id": "1ff1fd13-1656-4d7d-8d82-7cff157961d7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "73526f81-77ab-4cf6-969a-e27661cca285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b56302-aa92-4fa4-b9d4-7d134d9ea59e",
        "cursor": {
          "ref": "83bd2c2f-13ba-4345-9a66-1f950f48a76e",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cd859474-2d12-4bf4-bcc3-63f346b5d216"
        },
        "item": {
          "id": "44b56302-aa92-4fa4-b9d4-7d134d9ea59e",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "748d9f2b-b525-4636-ab18-18dc0489a2b2",
          "status": "OK",
          "code": 200,
          "responseTime": 2318,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "c4946ffa-f64f-4eb9-bf13-a47186edb423",
        "cursor": {
          "ref": "6c25b6eb-f5de-45eb-9cd6-2b4b34ceb22b",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd690e94-3900-48cc-a905-d9db148c7601"
        },
        "item": {
          "id": "c4946ffa-f64f-4eb9-bf13-a47186edb423",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5c0d1d6f-fb3d-4c58-963a-ccc56f683cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5a38db-2a94-449d-9d93-dc92047a5e1e",
        "cursor": {
          "ref": "7a3554d3-5250-4ec1-9da0-66f97e5e9e88",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d013416a-a334-425f-a1d6-c1f84ea9d1f8"
        },
        "item": {
          "id": "4a5a38db-2a94-449d-9d93-dc92047a5e1e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2b50ce0b-a58a-4b0e-947d-972b0d885bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0317dc-af76-4c18-88e9-e5776d8da4ba",
        "cursor": {
          "ref": "d811f246-c99f-469c-ab36-13f31b25547f",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7f36fedd-a027-4fdc-9efb-da65b7e5ae8c"
        },
        "item": {
          "id": "9f0317dc-af76-4c18-88e9-e5776d8da4ba",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7042a872-2f5f-4193-bbcb-35bc8eae63fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15684143-42a1-4444-aabb-a2e284ce7d84",
        "cursor": {
          "ref": "7ed633db-ed2e-4c3d-82a4-8417ea7a62ac",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9a6ee95a-371f-44c1-9300-4375d9ea4110"
        },
        "item": {
          "id": "15684143-42a1-4444-aabb-a2e284ce7d84",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "83e06ef2-5835-4587-8817-4722a8f69e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1567730b-d4b8-40f6-b1ae-f6c3910365c2",
        "cursor": {
          "ref": "8086afc0-ff4d-42a3-b642-393f9bb02728",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "733574f1-89c2-4efe-8cda-516260719d92"
        },
        "item": {
          "id": "1567730b-d4b8-40f6-b1ae-f6c3910365c2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1523bcea-1c8f-4104-b929-cb701b782387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926009f1-4f95-429c-921d-841937128eb1",
        "cursor": {
          "ref": "7360e60f-d2d3-4937-8504-7fb1a70c9cf9",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1eb4acff-1417-468f-94ac-cdd16dc397d7"
        },
        "item": {
          "id": "926009f1-4f95-429c-921d-841937128eb1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7b30f84f-f5e2-4814-824e-13f56e5c5936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd47d68-667c-4d78-9d5e-44d0255b910d",
        "cursor": {
          "ref": "68ca73a8-1bf6-44a8-81cd-5ef63186166f",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3b7b2f8b-38e8-4f6a-af75-3edfe263fdc3"
        },
        "item": {
          "id": "2bd47d68-667c-4d78-9d5e-44d0255b910d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a2a15af5-14d1-46a2-b54d-068afa1d866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f30604f-3c11-4b30-8bb3-0785bed859ff",
        "cursor": {
          "ref": "e0757d2d-6839-4ab5-95c3-a64f06f9edc0",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a50535c1-2270-43b0-bb18-1fbcb3103f89"
        },
        "item": {
          "id": "3f30604f-3c11-4b30-8bb3-0785bed859ff",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "277c0c92-ad19-4cfb-b6e2-0a36c9842e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5d7f0e-522e-4c47-b4b2-a49b7b8f8405",
        "cursor": {
          "ref": "77135a4f-0198-40d6-ab8e-25012a0f1493",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5dd70971-9b16-4681-beef-0a50d1e040d0"
        },
        "item": {
          "id": "bd5d7f0e-522e-4c47-b4b2-a49b7b8f8405",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "409eda84-e8f1-4bca-af41-cbc6f3ddb2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc8b149-04bd-4816-a232-1deac6952860",
        "cursor": {
          "ref": "3d76eebc-e9fc-4174-a5e1-6333f5c5cca4",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "09c8ec3d-cbc0-4ff7-b822-cc22273c528f"
        },
        "item": {
          "id": "1bc8b149-04bd-4816-a232-1deac6952860",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d940c3fc-9c1a-41f0-9f04-82ed19109229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e59a3e-947e-4d07-90cb-63ac0b3be856",
        "cursor": {
          "ref": "8ca9cbb4-63d5-4e85-9e3a-c5a390843196",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5bae2d4c-4195-448f-a1c6-cee66069497d"
        },
        "item": {
          "id": "09e59a3e-947e-4d07-90cb-63ac0b3be856",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "122964f6-4bd3-4451-97f7-e4cfc5f16687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6fc391-62cf-451f-b85e-061a64bfcd39",
        "cursor": {
          "ref": "aa9f0940-3e1c-4b8e-8d04-84c63cbde837",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aa069c79-98f7-4309-8b81-310fcd8edbd4"
        },
        "item": {
          "id": "cb6fc391-62cf-451f-b85e-061a64bfcd39",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0c19e7a7-0f45-4b41-9f90-fd5ab1d8db42",
          "status": "OK",
          "code": 200,
          "responseTime": 293,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "4609a3c7-3335-4015-a977-7518657f5e91",
        "cursor": {
          "ref": "191a5738-edf4-4db8-8e26-f5d50e5ddbb0",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "32e4ff1d-c8b2-44b4-b908-07557af48d16"
        },
        "item": {
          "id": "4609a3c7-3335-4015-a977-7518657f5e91",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c7a81172-433f-45d9-b245-31b0fb037fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4d34c6-f9b2-4392-af8f-b3d680bebf63",
        "cursor": {
          "ref": "dd78b149-2221-4a90-8aa9-ca95bee7ec30",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4f2289e6-b758-4c81-a2f2-2ea25ab494cd"
        },
        "item": {
          "id": "4b4d34c6-f9b2-4392-af8f-b3d680bebf63",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f89a85a0-1b28-4dcf-9e6b-f5b1e64cdc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae948e96-a5df-4663-ab47-52c58c9273a5",
        "cursor": {
          "ref": "f00db47e-c6d2-4b82-ad1c-dc8e89002451",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "52f63630-d9dd-45bf-a012-017da4d3e0a8"
        },
        "item": {
          "id": "ae948e96-a5df-4663-ab47-52c58c9273a5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "56c79c8b-9775-43fb-b4f7-ed2f257fa4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e17a126-b7e5-4858-89eb-3f58010851f2",
        "cursor": {
          "ref": "4f83a661-8fce-453c-a659-d326d434e336",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "577a6c9b-e082-49e5-b87a-20d8f375ea2a"
        },
        "item": {
          "id": "4e17a126-b7e5-4858-89eb-3f58010851f2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "579f44cc-e5f7-4b94-934f-5791de7c62e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516c7b1b-11b7-4f78-b16b-b741bbaf8d79",
        "cursor": {
          "ref": "a9537840-fc2b-4426-a2fb-9b748185b4af",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "48079ecf-04a4-4d09-a71a-a3b43cc5b475"
        },
        "item": {
          "id": "516c7b1b-11b7-4f78-b16b-b741bbaf8d79",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "75391afc-bf2b-4a6a-a50d-24b0a2765e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b98b1d-20e6-4131-b004-e1867d295a0d",
        "cursor": {
          "ref": "be17c076-81c9-48aa-88d7-cc2757ffc470",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "90a4c16d-af41-465a-b433-35b976cefea4"
        },
        "item": {
          "id": "29b98b1d-20e6-4131-b004-e1867d295a0d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "083133a9-65f0-41e2-807e-ac2607deaa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82642825-2098-4cf0-b78d-95a35634f7a3",
        "cursor": {
          "ref": "79a540f7-f2e6-493e-9378-f316bfea55f9",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "714fc967-09ca-4c51-b5b7-c191f2eaec40"
        },
        "item": {
          "id": "82642825-2098-4cf0-b78d-95a35634f7a3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "02952de4-ca90-40af-a75d-7202f169964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be91bc2c-9642-4832-80fe-e136659cdf53",
        "cursor": {
          "ref": "0fcf987c-b67b-4a2b-a0c8-3dc6b0eec99f",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "173f93c7-911e-447a-bb55-4954d16fa28e"
        },
        "item": {
          "id": "be91bc2c-9642-4832-80fe-e136659cdf53",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fe46aa80-f48d-469d-9605-9d8f0a9fc49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304c35f8-873d-4916-8d77-9f2e8168509e",
        "cursor": {
          "ref": "e75aeb8a-6906-48f3-96b9-98702a8250c0",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "74773ef5-c7bb-46aa-9ebe-000daa9584ce"
        },
        "item": {
          "id": "304c35f8-873d-4916-8d77-9f2e8168509e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ec3631eb-8e02-4585-a9a6-5664fe3301f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2453c9-52ac-46c6-9b7a-927d726d4a65",
        "cursor": {
          "ref": "4d0092bb-8e9b-4b41-b5fc-a54afdd19ace",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0a86fefa-0777-4396-9553-21f3f4bfc5dc"
        },
        "item": {
          "id": "4d2453c9-52ac-46c6-9b7a-927d726d4a65",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a52a9e5c-1c7f-4084-83d9-631e60369e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec433214-a0d9-4787-b768-86b6c9a3e782",
        "cursor": {
          "ref": "dae875c4-8150-4805-898d-cb0cde238162",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d0364a6b-9a8f-4487-8bbd-9cc221e17794"
        },
        "item": {
          "id": "ec433214-a0d9-4787-b768-86b6c9a3e782",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "02fc0885-ca5d-4876-a570-21dcd34c0492",
          "status": "OK",
          "code": 200,
          "responseTime": 297,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "c17ec41d-c3c4-4a59-bf71-b7550d874db8",
        "cursor": {
          "ref": "047d801e-5615-4f3a-ab9d-e6e40163cb10",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7d4ec84a-0e2c-49e9-b815-046877595462"
        },
        "item": {
          "id": "c17ec41d-c3c4-4a59-bf71-b7550d874db8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1b905cc4-34cd-4d3d-b377-58a69c2d2daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae7738a-6573-4597-9fba-68d868afe14b",
        "cursor": {
          "ref": "b362f3f5-4398-4b3a-a39f-0b4f7e8dc880",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4cd8a1ed-a24a-415b-857d-975e31d33e6f"
        },
        "item": {
          "id": "aae7738a-6573-4597-9fba-68d868afe14b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3e2c9088-83c2-429e-af72-6cf02128eb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f11e5a4-9f59-42f7-bd95-ca9dc4ddcdcb",
        "cursor": {
          "ref": "72d8174c-5048-4490-983a-c34f198ba2a0",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5c42117f-8c90-4839-adb3-4823b7796371"
        },
        "item": {
          "id": "7f11e5a4-9f59-42f7-bd95-ca9dc4ddcdcb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4572488a-f7ba-45f4-8015-8a21f4237993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfeb5f9-f36a-4959-93fe-260ebc2536b2",
        "cursor": {
          "ref": "36578d61-776e-456a-88e9-c8669c36d376",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d0c64890-8997-4585-8ac2-7565f0907781"
        },
        "item": {
          "id": "3dfeb5f9-f36a-4959-93fe-260ebc2536b2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e6f47380-b55e-4dcb-80d4-5646dacc0d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c624f31f-e54c-44a6-be0d-b510ddc7ed72",
        "cursor": {
          "ref": "78f6bfec-ce13-4770-b775-6d3a09d05a87",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "09463f96-2e71-4e52-b669-836ceb411a07"
        },
        "item": {
          "id": "c624f31f-e54c-44a6-be0d-b510ddc7ed72",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d76da57b-8e9d-477c-82d7-f394a0d823fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9e27fe-1ebb-4407-8935-255fba20f950",
        "cursor": {
          "ref": "cf2841ef-ae85-4c2c-8803-3d50eb664252",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a1d525b0-9399-4ad5-86a1-fcc6096fbbf9"
        },
        "item": {
          "id": "fe9e27fe-1ebb-4407-8935-255fba20f950",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0677ca8f-3f01-4f1f-8699-2cef4e48990d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dfe49b-a4cd-403f-b467-ac988fa0da1f",
        "cursor": {
          "ref": "0fd467fa-bac2-48e4-b344-5c04af672621",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1a007ca5-0670-46ff-8881-488892b0a20b"
        },
        "item": {
          "id": "d6dfe49b-a4cd-403f-b467-ac988fa0da1f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c09253b4-577f-4312-9a91-9408bb3b7744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89601a8-536e-42d4-b883-78d048d9e44b",
        "cursor": {
          "ref": "5b4e899e-e372-48a1-832d-5e58caec9111",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c65e5516-11db-4d87-93dc-5c80835bc4f7"
        },
        "item": {
          "id": "a89601a8-536e-42d4-b883-78d048d9e44b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7d955a44-f628-475e-90d2-4910b0f671df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e93b8c4-20c1-4ee6-8480-ac7f9f0796f2",
        "cursor": {
          "ref": "1da3b45a-c022-4508-85a4-366a9d097101",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3c948687-032d-45f5-9554-8942b0c02724"
        },
        "item": {
          "id": "2e93b8c4-20c1-4ee6-8480-ac7f9f0796f2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "45b7b545-cee5-426d-a186-a439910c3f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5517cce8-030f-47cb-b5ee-8c1d3774ea84",
        "cursor": {
          "ref": "155e02a2-24e7-4ce8-8f27-6880622967ff",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "16c6d3c0-9534-480d-afce-490268bc55ac"
        },
        "item": {
          "id": "5517cce8-030f-47cb-b5ee-8c1d3774ea84",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1f95b53f-f71e-40c2-8cab-77a3bf553f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c53f17-d8fa-485a-8195-36a4176b58e8",
        "cursor": {
          "ref": "720a21fa-f6db-4de2-9de4-2e9cb3fc62ba",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2de1467f-8151-42d0-af65-97fc1633fa67"
        },
        "item": {
          "id": "31c53f17-d8fa-485a-8195-36a4176b58e8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1fc354a2-6e80-4bc7-ae21-b5911930a7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c85665e-1bc6-4c36-9f31-934aeeec0e1d",
        "cursor": {
          "ref": "200bb5c2-6161-48e9-9e47-af5e32936cc2",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1abe941e-532b-4bf5-b2bf-b4ac2d0a3147"
        },
        "item": {
          "id": "9c85665e-1bc6-4c36-9f31-934aeeec0e1d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "54eae22d-0241-4d63-827d-4831b7867094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d146a4e-2ec0-4330-ba38-a4d2406132cf",
        "cursor": {
          "ref": "3c70a08a-9733-4b54-93a9-b75cec1fc253",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "490d497d-e1b1-4572-950d-1d7008531cd8"
        },
        "item": {
          "id": "1d146a4e-2ec0-4330-ba38-a4d2406132cf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8f85c795-24c6-40a4-bfb0-24596dd5db62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9982a0-88ec-4ca1-9016-5003a3c2f458",
        "cursor": {
          "ref": "b518049c-fe9e-4039-8059-a172d3f548d0",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "da086cdd-315f-4595-a56f-8ff41498f586"
        },
        "item": {
          "id": "9b9982a0-88ec-4ca1-9016-5003a3c2f458",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ba04c04d-847b-40c4-8ff5-a7daa98d8fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f702aec0-e7aa-42a2-b53f-8650e593f4de",
        "cursor": {
          "ref": "f661fb90-860a-4333-8ac5-1e865618efaf",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e3fc0fa8-a082-4cbb-a7c9-feeca03cc4a5"
        },
        "item": {
          "id": "f702aec0-e7aa-42a2-b53f-8650e593f4de",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3829a923-3aad-4a15-89ea-80df5dceddfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0d653c-74df-4ec4-a4a8-2d6836ddca05",
        "cursor": {
          "ref": "248d6077-2fbc-4e29-8d30-25f2efc5125b",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e665dcef-54a8-4799-92b2-456adfefe781"
        },
        "item": {
          "id": "db0d653c-74df-4ec4-a4a8-2d6836ddca05",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "292974cf-fccb-4c59-a1e8-b5198bef6988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f5c8b0-451f-46fd-bdc7-a6ba2fe0dff7",
        "cursor": {
          "ref": "9a7fdf5f-18f0-4e5c-80bc-8e81fc2b9281",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "01ce91c0-881e-4ad3-ae7a-9c483cd6b1c9"
        },
        "item": {
          "id": "06f5c8b0-451f-46fd-bdc7-a6ba2fe0dff7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "62f1541c-3826-4782-b976-85ac35c390ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bf7a40-a7dc-4534-a953-f92ca134bd77",
        "cursor": {
          "ref": "f5742fa4-4453-405a-8552-d1dd4a5e3b52",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d162dbad-11cb-45e2-97e9-bab5d3ece94d"
        },
        "item": {
          "id": "87bf7a40-a7dc-4534-a953-f92ca134bd77",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5a62d24f-280d-4e25-bebc-7892599e989b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b6a91e-f366-4223-92dc-424ed185ec25",
        "cursor": {
          "ref": "6ecb0067-e878-4e4e-87da-75f182c10ca1",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3ab9a4ad-4d52-492c-96f9-5108244d23f2"
        },
        "item": {
          "id": "b9b6a91e-f366-4223-92dc-424ed185ec25",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "639752eb-db94-4452-ae4e-b2498f40ee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bafbbb8-beb1-4f30-a697-cbed013c18cb",
        "cursor": {
          "ref": "984b0219-da2c-4dc6-8c15-9f1e2a9003c7",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "44f9351e-3392-472d-b830-413ae9ec4caf"
        },
        "item": {
          "id": "8bafbbb8-beb1-4f30-a697-cbed013c18cb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ac3c4850-d233-4e33-990a-a3b136dcb5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60301986-9f5e-4a36-adfd-dae8286eb267",
        "cursor": {
          "ref": "7230389c-835f-4f4c-804a-088ed68c380b",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "84433844-2219-4831-930b-73b93ca923f2"
        },
        "item": {
          "id": "60301986-9f5e-4a36-adfd-dae8286eb267",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3ad4ca8b-6809-4da8-ad2e-052579a47ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b68629-7614-4e59-a997-6aea2f492329",
        "cursor": {
          "ref": "63ae1797-e524-497f-a40d-88e721636032",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d9a63698-b8a8-4fae-9f84-abf5703a798c"
        },
        "item": {
          "id": "32b68629-7614-4e59-a997-6aea2f492329",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f92d103e-c445-43da-ab22-807f3cacc86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc957db2-74e6-4b3c-bdba-b8818fbce578",
        "cursor": {
          "ref": "c93065f5-42ed-4d0f-bb95-6d6499a1ac15",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3061ff56-cfb1-4595-9d84-4d1934290e6a"
        },
        "item": {
          "id": "fc957db2-74e6-4b3c-bdba-b8818fbce578",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "aae9d279-86b5-43fc-95ac-76dbd73ae4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbabc9c4-e9bd-4633-a91f-403fecbd136a",
        "cursor": {
          "ref": "bba05c92-2425-4b34-a197-7c8c10309944",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dc96fe39-d853-42aa-8a51-6a11b4c2b7f3"
        },
        "item": {
          "id": "fbabc9c4-e9bd-4633-a91f-403fecbd136a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "710b4764-af76-4c84-837a-bbaccf0ee8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b1b5f2-caf3-4a28-adf6-da7a7aa86544",
        "cursor": {
          "ref": "3054e4a3-adac-429a-bfe9-dab40451579c",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7f8ce6f3-2928-4400-a99e-c9ce272c5215"
        },
        "item": {
          "id": "e1b1b5f2-caf3-4a28-adf6-da7a7aa86544",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "27daa299-af27-4ad2-b4a7-32b91f48e1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af32a0eb-d195-4c55-82a2-87de06e1347e",
        "cursor": {
          "ref": "a5e56704-d82a-4727-81ff-a88cdde752b5",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a8674f32-6534-4cd0-9aa1-923095ef9e40"
        },
        "item": {
          "id": "af32a0eb-d195-4c55-82a2-87de06e1347e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7bb1c99e-c54b-4c2e-8cba-4e95c0319a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e515dfe-b51f-42bb-8b01-5c05e8b3a520",
        "cursor": {
          "ref": "ab2ca69d-c55a-4a53-95b7-ef27e6a3f5f1",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "900ecc0a-66e0-44bf-bb4e-2691015a7e9c"
        },
        "item": {
          "id": "9e515dfe-b51f-42bb-8b01-5c05e8b3a520",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fa85c63c-b167-45ef-ad01-d66c4c587d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3a531b-7aca-4fdf-97fa-bdfb46d045ad",
        "cursor": {
          "ref": "1fdf8d79-72dc-4e2d-ab5e-32fb5ab41866",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a70a38f1-f8ea-40a3-8c19-f84a33cf6cbd"
        },
        "item": {
          "id": "0b3a531b-7aca-4fdf-97fa-bdfb46d045ad",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "20b1066d-2a13-4e10-9c86-ccb43ad35009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79538e8f-cb2a-4ee9-8aa8-4ad4d122c31c",
        "cursor": {
          "ref": "bf7b99a2-2853-42b9-ba3e-516a200197a8",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "860a8956-faa1-4425-b6f3-6a8949b089e6"
        },
        "item": {
          "id": "79538e8f-cb2a-4ee9-8aa8-4ad4d122c31c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "aedc8486-3751-4774-9e8a-f91231c931e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498f8b27-a5db-4833-ae9f-08ca99f82642",
        "cursor": {
          "ref": "79dc79a3-742b-4682-900b-f823fbf996b0",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3d4e0b57-4d4e-4cf0-86b5-fc18f87731b6"
        },
        "item": {
          "id": "498f8b27-a5db-4833-ae9f-08ca99f82642",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "75d605fe-09d7-4c7d-98bb-3ddcc96cc0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d1f7a4-f5fa-4740-a165-6bf0320027fd",
        "cursor": {
          "ref": "362dcb74-98e4-4b7d-958d-37249bbabef8",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5bcb48e6-7d30-4dc1-a144-1d2e55b6fa56"
        },
        "item": {
          "id": "b7d1f7a4-f5fa-4740-a165-6bf0320027fd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b96f3f18-e222-4ab7-861d-ba67bd9a2489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6758cad8-369e-4915-b959-4f7d8bc1de84",
        "cursor": {
          "ref": "5cdeb848-68ab-4220-b0a8-e4426a3673d2",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "78f4b425-8995-4ab6-ab60-28f46f5034c2"
        },
        "item": {
          "id": "6758cad8-369e-4915-b959-4f7d8bc1de84",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c9dd33b-9ba0-4bf0-befb-0d3829c4d612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e31985-fbe7-4db4-bf51-a88d1b5dadbb",
        "cursor": {
          "ref": "18c7c8a8-63eb-4a6c-b416-8a97453457e6",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1b273c18-e609-41d3-afa5-9f3f28a0fe6e"
        },
        "item": {
          "id": "30e31985-fbe7-4db4-bf51-a88d1b5dadbb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "82de6123-0afa-43fa-a9d6-f49fc54ac575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d38d0c-645e-47ef-b634-e95953402aac",
        "cursor": {
          "ref": "3ddb28d0-86bf-4364-b8a9-821e31e05f38",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6bf75ec1-6881-4bb7-bf44-96becd85cd65"
        },
        "item": {
          "id": "a5d38d0c-645e-47ef-b634-e95953402aac",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7d60f18a-badf-4909-ab79-ce9e32397224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adc0b3e-0b98-4f71-bb72-6690acbeddd4",
        "cursor": {
          "ref": "bdaa53b8-ea85-4c44-8015-5ac73d5e00fb",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ad6c7cfc-8416-4b58-a750-53fa5abf7773"
        },
        "item": {
          "id": "9adc0b3e-0b98-4f71-bb72-6690acbeddd4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b3b2a5c8-c4e0-4794-8d97-29640e888efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86713eba-a9b2-4911-8e07-3bf3eaac8158",
        "cursor": {
          "ref": "98d9330d-f175-4705-824f-c1d338275438",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "42969b17-e4de-4780-b121-e16baa1176bb"
        },
        "item": {
          "id": "86713eba-a9b2-4911-8e07-3bf3eaac8158",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5c43cece-627e-4bcd-8926-da62b131edb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9642f8de-dd10-4fba-a634-318035c957fa",
        "cursor": {
          "ref": "d03ea87d-f9a4-4b80-b9a8-f861589bf504",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "47d63595-4d1c-4566-a783-86c1de0ee9a5"
        },
        "item": {
          "id": "9642f8de-dd10-4fba-a634-318035c957fa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2fa566f8-05f8-462f-b9fb-81148238388f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c96f11e-0054-4cfa-9bb2-f311b81d78f7",
        "cursor": {
          "ref": "738d9fa4-40b2-46c1-ab1c-eb8ea1ce146d",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "89961bca-219d-44ff-acb8-5cc72cab24d0"
        },
        "item": {
          "id": "5c96f11e-0054-4cfa-9bb2-f311b81d78f7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9b86e50c-32f4-4369-a514-d3cc4dda8ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e547c28a-252d-4530-9a1e-a45657f2481a",
        "cursor": {
          "ref": "8514ff4a-8b8d-4c39-b416-824a4075a2ae",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "56d784b2-2c32-4e6d-9cd6-c231b22147f6"
        },
        "item": {
          "id": "e547c28a-252d-4530-9a1e-a45657f2481a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "77ee701b-9159-4cd1-af4a-3233a3c67dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550e24b9-6a2e-4b9d-aa68-bc3a97d73961",
        "cursor": {
          "ref": "ffe0a087-a591-4e57-a687-d8c46efa1c1c",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b7ee9e20-4b02-4412-8d44-857c5d6f216a"
        },
        "item": {
          "id": "550e24b9-6a2e-4b9d-aa68-bc3a97d73961",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6d618182-b2b1-459b-85c6-d82a3e7f853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe8a8a-6c4b-4ec5-a7c8-f9904fede076",
        "cursor": {
          "ref": "be8f58c1-f81b-42ae-8e48-f520d1657a59",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b48100b7-d92c-4f0b-8cc7-0192c545632b"
        },
        "item": {
          "id": "bafe8a8a-6c4b-4ec5-a7c8-f9904fede076",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "82c5e0a9-5489-4d96-828b-6894b9f04d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40988532-1f8b-484f-8ea0-39c441d076d9",
        "cursor": {
          "ref": "d155841c-2be6-4550-a989-245d5d7c5fa6",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "02e8930c-3182-44a6-8fe4-0866bb5da547"
        },
        "item": {
          "id": "40988532-1f8b-484f-8ea0-39c441d076d9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d47f2eb2-7762-42a0-9ded-5f2aeadc857d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46b0787-c8ae-4e1c-97c6-fd335711fcfd",
        "cursor": {
          "ref": "0f57d7f7-b301-462f-bf27-7dcddd039676",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2d5cb160-0afd-4288-a2ef-9b532ec1e3b9"
        },
        "item": {
          "id": "d46b0787-c8ae-4e1c-97c6-fd335711fcfd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3572f684-63a1-408d-ba3e-e99176669c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19e00ab-0e4e-4b83-8e0f-a3a5a6e1fde4",
        "cursor": {
          "ref": "9c8c0ea8-ce67-4edc-b86d-57e642afe7c3",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "38376f0b-bcca-4cca-be8c-c25b0a905096"
        },
        "item": {
          "id": "f19e00ab-0e4e-4b83-8e0f-a3a5a6e1fde4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e1103289-3821-4efe-871a-524b7924e63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5268bd3d-9976-4ac4-8454-08172387a1d0",
        "cursor": {
          "ref": "72836bfc-dd03-4d5c-9bbf-c8b3c6b2f8f2",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "636a9720-5263-4f28-9d21-bf9e096ffc6d"
        },
        "item": {
          "id": "5268bd3d-9976-4ac4-8454-08172387a1d0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6ccd0dc4-7af0-4493-9e43-e67b953da9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d03a2fa-b672-4d71-b792-4f753b7c11a6",
        "cursor": {
          "ref": "cf988c82-54b1-4d0a-8b9e-2188c9f405ab",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f01b3337-482d-48a5-8f02-b309829a5946"
        },
        "item": {
          "id": "1d03a2fa-b672-4d71-b792-4f753b7c11a6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d65d48e8-d828-495c-bfae-e6f4574bfe22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdc8109-0017-4cf2-a1bb-cb27dc1ef0da",
        "cursor": {
          "ref": "0a346831-cab7-429d-8bb3-0517d98779f5",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "74528800-8a13-416a-9e91-4acd9d5f4cb0"
        },
        "item": {
          "id": "4fdc8109-0017-4cf2-a1bb-cb27dc1ef0da",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "64ba074d-7d26-4b5e-8aa1-b9c539bdeaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ad3279-fc6c-472a-ac23-1dced6f08d32",
        "cursor": {
          "ref": "602fa7d5-be4f-4ee3-a27f-68e4f5efe66d",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4c509363-b9f0-4618-867a-6e22e20f7bf2"
        },
        "item": {
          "id": "e7ad3279-fc6c-472a-ac23-1dced6f08d32",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "311e2c3a-bce8-4e6b-93d8-90391fe35dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5aeb9c-658b-4ed8-9147-00af0fdcf864",
        "cursor": {
          "ref": "7e38d52b-7abb-43fc-89c5-3701cb519b9c",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9dc9ccd7-3cad-4a96-841b-fe7232183a1b"
        },
        "item": {
          "id": "9b5aeb9c-658b-4ed8-9147-00af0fdcf864",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "18ba0fd8-c2d9-40d7-a529-8679f6742d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9965620-3b83-4d37-8309-358a56d31271",
        "cursor": {
          "ref": "7278533d-ec75-49f0-9c60-74b1b160a2a7",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "54849c6e-9b0f-4b66-89bb-773329c53a1b"
        },
        "item": {
          "id": "a9965620-3b83-4d37-8309-358a56d31271",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a7aeb941-e55b-444c-8da1-f89b0bb64bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c213c9a3-dc5c-4006-84aa-82affb81ef10",
        "cursor": {
          "ref": "4478429f-e97a-4ddd-a865-53a0af7cadda",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e1621eb-26d6-4b48-b4aa-74d0520fca66"
        },
        "item": {
          "id": "c213c9a3-dc5c-4006-84aa-82affb81ef10",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a2e8ce64-205f-412a-9f1c-3b808285f83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e97a3-8791-4733-8a21-16dfa1930d48",
        "cursor": {
          "ref": "e18d480f-4a77-4600-b729-4c45ba579b65",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "11d7d334-250e-4182-bfbb-932e283a1b2e"
        },
        "item": {
          "id": "9a3e97a3-8791-4733-8a21-16dfa1930d48",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b6147296-65bf-482e-abfa-0401b57647f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b40a814-8c5f-4624-885d-e71259e6c8b0",
        "cursor": {
          "ref": "27bd23b3-06d9-4c43-9abc-7f3940a72710",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f5597d32-3dfb-43c9-9f67-508b5b0cf73c"
        },
        "item": {
          "id": "5b40a814-8c5f-4624-885d-e71259e6c8b0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4abb1e0b-1ac4-4eb3-93a0-b506f6fc2d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e2b1d4-efd5-4900-a905-c7f11caea336",
        "cursor": {
          "ref": "40a4eeb2-50c4-4571-8078-c6dfa1bae1be",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "307f051e-3c6e-44c1-937b-369763dc1e19"
        },
        "item": {
          "id": "f1e2b1d4-efd5-4900-a905-c7f11caea336",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a5b285b8-ec72-4d8f-9ae8-cc9af4b5e31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3505eb06-b81e-4569-8051-da72733f2403",
        "cursor": {
          "ref": "a8c4e6c5-ab9e-402f-989e-372d12482390",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7f66e02f-2a94-4048-b167-7ad18455069d"
        },
        "item": {
          "id": "3505eb06-b81e-4569-8051-da72733f2403",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f57dcfbc-7d27-4e67-95b2-a18199555c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe62aab6-8a96-41dc-85ab-0c1e68c15fcd",
        "cursor": {
          "ref": "40959297-054e-47ed-a8a3-af23c63e506c",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9ee951fe-9d94-413a-a107-b7e2197eabb6"
        },
        "item": {
          "id": "fe62aab6-8a96-41dc-85ab-0c1e68c15fcd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "12e7ac15-7767-4fc5-bff0-5ab6056c689e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47900d01-adb9-4207-956c-4bbcd0850522",
        "cursor": {
          "ref": "c26dabf0-ae6d-4922-b46a-3e02f8c331fa",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "589063f0-b088-4629-b1eb-69bb5c19c4bf"
        },
        "item": {
          "id": "47900d01-adb9-4207-956c-4bbcd0850522",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8a61ec57-ea74-473e-aa1c-50328d1dded5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abecc8bc-fa90-4d0d-90d6-59cd5d9ea9cf",
        "cursor": {
          "ref": "a34b5e85-5c2a-4bf3-9616-75e2c4a3b593",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fa257558-4176-4ba6-bc70-404b54a85299"
        },
        "item": {
          "id": "abecc8bc-fa90-4d0d-90d6-59cd5d9ea9cf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1504373a-323e-4956-b949-cad28bd2d40b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c4ec56-9196-4567-a0fa-c939dfaad2b2",
        "cursor": {
          "ref": "4ccfe568-6861-47b4-9b85-f01c6f5b6bbd",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4a5fc73e-03e1-4350-a365-6508077b532c"
        },
        "item": {
          "id": "68c4ec56-9196-4567-a0fa-c939dfaad2b2",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a5f588c8-ee85-4d4a-9b58-36ee0a595e51",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 288,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3830d125-d6b3-417d-85da-2a7ae66c9772",
        "cursor": {
          "ref": "e2746ca7-621b-4da4-a165-09ed3dab08db",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1e7f7338-c6ad-4f44-9aae-93030d39adca"
        },
        "item": {
          "id": "3830d125-d6b3-417d-85da-2a7ae66c9772",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4488aaf6-ce6d-4da2-a9f0-e960bb7017a8",
          "status": "OK",
          "code": 200,
          "responseTime": 400,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "71df29ef-4860-4b13-8e6f-496a54ff6a3a",
        "cursor": {
          "ref": "cc37e600-de81-492a-9c80-68d4f403041e",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1197f0b2-fdf7-44ee-bb9c-77f14b597f67"
        },
        "item": {
          "id": "71df29ef-4860-4b13-8e6f-496a54ff6a3a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3e4414ab-6c98-4499-a15b-e6342fce5769",
          "status": "OK",
          "code": 200,
          "responseTime": 2222,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "369ccb05-00e1-422f-ad8d-bd9d10737a6c",
        "cursor": {
          "ref": "d352bea9-6a70-48ad-aa0e-fe2d9ec4e772",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "14e6aa21-4698-4109-a968-d7e23bf5c535"
        },
        "item": {
          "id": "369ccb05-00e1-422f-ad8d-bd9d10737a6c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e0f433ab-8292-4902-9769-da82ea051525",
          "status": "OK",
          "code": 200,
          "responseTime": 1842,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "09747c7d-f687-457b-87b2-b98fc0482b52",
        "cursor": {
          "ref": "d5c79295-6305-4879-8e68-1dd5806fcdeb",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "037fadfc-0b34-4165-88b2-89515017a5d1"
        },
        "item": {
          "id": "09747c7d-f687-457b-87b2-b98fc0482b52",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f398208-de90-4f85-b556-b87884ef8841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09747c7d-f687-457b-87b2-b98fc0482b52",
        "cursor": {
          "ref": "d5c79295-6305-4879-8e68-1dd5806fcdeb",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "037fadfc-0b34-4165-88b2-89515017a5d1"
        },
        "item": {
          "id": "09747c7d-f687-457b-87b2-b98fc0482b52",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f398208-de90-4f85-b556-b87884ef8841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09747c7d-f687-457b-87b2-b98fc0482b52",
        "cursor": {
          "ref": "d5c79295-6305-4879-8e68-1dd5806fcdeb",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "037fadfc-0b34-4165-88b2-89515017a5d1"
        },
        "item": {
          "id": "09747c7d-f687-457b-87b2-b98fc0482b52",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f398208-de90-4f85-b556-b87884ef8841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51143828-e932-4322-be69-fb0203aeeeb9",
        "cursor": {
          "ref": "5b6f7989-73f9-41e3-9de6-499ddfb3ec49",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "89e06cb7-c377-431a-8aaf-d6225ad47593"
        },
        "item": {
          "id": "51143828-e932-4322-be69-fb0203aeeeb9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e6a465f4-6f1a-4af7-b357-c617404b14c2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 299,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856567a3-76d2-4619-8a49-adeffce92572",
        "cursor": {
          "ref": "7bdbcf80-f25d-4a7b-b978-18e9822135e1",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1d5b1c68-4f1a-448c-9976-ab848ceb21b1"
        },
        "item": {
          "id": "856567a3-76d2-4619-8a49-adeffce92572",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "562e46e1-a8f6-4219-9ebf-2ba0041b1079",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856567a3-76d2-4619-8a49-adeffce92572",
        "cursor": {
          "ref": "7bdbcf80-f25d-4a7b-b978-18e9822135e1",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1d5b1c68-4f1a-448c-9976-ab848ceb21b1"
        },
        "item": {
          "id": "856567a3-76d2-4619-8a49-adeffce92572",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "562e46e1-a8f6-4219-9ebf-2ba0041b1079",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e89dc6-0782-4f7e-bb81-ee3f51042a6d",
        "cursor": {
          "ref": "96c7beb6-4728-49b8-a763-137042215c56",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fd294c4b-e290-4678-b10e-c53223d823b9"
        },
        "item": {
          "id": "d3e89dc6-0782-4f7e-bb81-ee3f51042a6d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d3ba1be6-4979-41ee-ade1-56cbfa13e103",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1d2858-3e52-4a02-9bb1-1a1580a78921",
        "cursor": {
          "ref": "66aa635b-6be2-48f3-9582-a60eef6d812f",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "29fb2db1-7ba4-4363-b8e4-a48313fa88dc"
        },
        "item": {
          "id": "4b1d2858-3e52-4a02-9bb1-1a1580a78921",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "79d82146-77b2-4539-b767-7b56c229155c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1d2858-3e52-4a02-9bb1-1a1580a78921",
        "cursor": {
          "ref": "66aa635b-6be2-48f3-9582-a60eef6d812f",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "29fb2db1-7ba4-4363-b8e4-a48313fa88dc"
        },
        "item": {
          "id": "4b1d2858-3e52-4a02-9bb1-1a1580a78921",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "79d82146-77b2-4539-b767-7b56c229155c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843fa293-7f25-43ab-a006-bcb3491875fe",
        "cursor": {
          "ref": "8377e694-e8a0-411c-b299-1a7d453a45cd",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3b52ddff-30bb-439c-8787-b2f44a7b2ca3"
        },
        "item": {
          "id": "843fa293-7f25-43ab-a006-bcb3491875fe",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3beb56dc-4c95-4c5b-90e5-b994be7156a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 842,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}