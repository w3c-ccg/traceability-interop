{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ab6a8287-2d63-42c3-bf96-d43fa6b36088",
        "name": "Clear Cache",
        "item": [
          {
            "id": "12fb7c4f-21ab-46a7-9091-f6b7a714905e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5fdcc963-64de-4918-a076-452f0c98c8a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "89fe2c58-e2d3-423a-839e-1729a282a6f4"
                }
              }
            ]
          },
          {
            "id": "c2e3287c-9ddd-4648-b58d-8646070baa69",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c83c3c47-6ad2-44f9-8168-c04eaaafd5df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1ba9cef3-6aff-42d6-af27-0072da85a1d6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1159baed-41bb-40cc-ade0-2cf2238b40a2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dbaf8611-f6a0-4d09-ab45-625936d67488",
            "name": "Positive Testing",
            "item": [
              {
                "id": "88a00c86-eed5-4abd-b9b9-5ca58201646b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a90594f-efdc-446b-81b2-26ae62d97521",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b071aa87-08b4-463a-87d2-04b5a33f6fb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d55a8cd-0219-408d-8ab4-d5f357c84d31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c33d6067-050f-48a2-b6a7-a8109f7c9860"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "63980f93-ace8-49d4-a87b-a5f27b80b883",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e3a07ce-f836-4607-98b4-8e117e57eebe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa1f79e9-536d-4aba-8511-3272f86062c4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f5f85df1-728b-49cb-815b-b8f208876965"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd24130c-972b-4765-93b7-1ea8cda5b7f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cc6b991-985c-4273-a69d-122317daaeac"
            }
          }
        ]
      },
      {
        "id": "bd32cded-5874-408b-9bc1-c467e8a7508e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f942c5bb-39bb-4d2c-8d4c-366a29b37814",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5275b64f-6822-44f7-a736-afa95ab23f5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a89d979-918b-4e7b-aa87-a6a1c4d53c76",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a70c601-a767-4abc-8122-b02337cc150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6433c65-ca6e-4ca1-a17c-37690472eb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5936565-257a-45e3-b47f-65c07840896b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f39fd7d-07c4-410c-aa77-ec36ff8b5eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "986a1179-a687-463b-836b-1a904295dbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c916003f-c281-48f7-9841-27dbc91f77e9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04b38a6-543f-44e4-aca6-8eab108fdcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b65cfad-16cc-4d06-8884-34d2b2f57fc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e658da3-1d3c-4824-b5a0-7e78b982e46b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac4806f0-6ff4-47ea-97d5-0ce6d3400df8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e320c0c-3fb2-43f2-8b10-9f2c393e3916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "761d5103-2ee2-43fc-a836-2b8670ee28d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0917460-7e7a-4e23-8258-60d3e67e2068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeeb756c-d9f9-4a24-b685-102bea312775"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3b0e56b1-550d-48e4-808e-20b835a9b9bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f5c38a8-bff3-4cf7-a99b-265820d4432d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6befad5f-112e-4ef7-b3bc-ad593831b985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9ef34d64-ed87-43e1-b9ad-be969c509a37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e783f06-6d75-44d0-ad74-150c68e691a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ce2e3012-b591-44f5-90f3-c5e9bae39170"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7cdadba-4b13-4711-af4a-8910de1101e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dedf60d4-050c-4b71-932b-a09612b77304"
            }
          }
        ]
      },
      {
        "id": "e4f4162b-99c0-4533-a7e1-f2cea9eb733b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "62cc2439-c178-44f8-b1b5-f75e65080a9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7a56896-c4d3-4449-85f8-c94833733cc5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a1096722-540e-4619-9d1c-b51db40f1b4d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760086eb-f6e8-4a9a-b879-72d2536125ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7324a0-7f73-4170-a3f8-6ee7d0eb99d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a234562e-7792-4784-bccb-7cd06e5128a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d6d9483-59c6-4e13-8e9d-57118b7b1938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36be357d-8291-4182-9658-ce0d433e190f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec77d87b-dbd5-42ed-8b4b-f3e6bc50026c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc746ab0-b65c-4549-be37-cc8c717afe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92275f2e-bb97-455e-8912-d27f2dc45766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f695491e-0529-4d7d-aeb5-3c030ec8fdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0839106-b788-4cff-b624-c99e819b5be4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772a957f-e69f-4b19-a053-555853d94254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d99250-5aa6-4194-a4bb-246aca8a3864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e61976e-0592-437f-97f5-b3fb67643536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "470889c4-ba83-4b58-adaa-948d8e9a1fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a00cd92-7409-446c-bcdd-5a00f78bfaf0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c421c8-ba0c-44e0-be29-d9cf31d5ad31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a24afe-76da-43a4-ae8b-1a54d948e604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47af667f-3e3c-4595-8d87-ffd2d5bde636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29953e42-2b0d-4d63-a0e3-ca692880a407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d87bc0-45ce-4e55-861f-bb9ca38b0590",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48ea872-b645-48c2-98ba-edb07f449553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8061b588-4aee-4d3a-9153-9de0b3a9f4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a01024-5bcf-4090-ab47-b37e16f2c9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca54333b-58d6-4f4f-a583-34032457385b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fde16bf-d634-4df8-b51f-829da5694293",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68c7926-4446-4c25-b45f-8b52dca781c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c3a852-d621-458a-9860-ce61d2e6d3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a8062f-1a5d-4849-b5fe-ce263515dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c44bcc1b-a206-4405-ab91-42e7c189cca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9897e4e4-1434-47bf-bdf7-260742f4d1e9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f92bb7b-3660-49c0-ad9d-1990b3758164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bade416d-7f13-4f02-9681-e950a2bec083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d49324b-a890-4b8c-ac47-7dd5e43cf112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4b64c15-34db-4827-8373-bc4045a7d3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da16817-c303-4ce8-b2c4-e1f8ba4241b0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c94af0b-8e04-44e8-a9e4-a3b93d63eaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8155df57-609d-48b3-afc1-89d4d65d4606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859d80d1-042e-44f6-b4e5-678a46f5a67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ab0560f-90f1-4153-b7f7-a5a5a3244ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73465980-465e-41b8-a429-2fda66659225",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d9277d-6f35-4929-a27e-683a04231cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb057c6-d5eb-429f-aef5-316a579a864b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf612e3-114a-4a45-976a-b05a649e127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3bf1957-570b-4d27-8ca4-f92ab2d34568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6d4018-7953-4f1a-aa93-88ca04686f2c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2575c1d-f6df-44e5-9998-2a2dbda2d2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd25921-acf3-4e88-9776-68ba77ffb10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2921de0-366c-4e24-8e5b-d1399cefabc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f7af3d7-064b-4439-9f02-a00f8da67738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efa1d07-1629-4210-a3b4-ce297486c1a9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbad5e8-b2f7-42c9-84cf-29e0aeb11bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fd7ee7-3f20-417f-9aeb-fc11e5a7bf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df8d5de-62e0-423e-946f-eb08d961f615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a907a50c-dd7c-4335-8b18-685d2cd7a1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f75352-53a8-4374-9160-e289bab6d32b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12d0b42-3c68-44a0-8992-a149d8bc2852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df326c3-b4dd-49d7-9770-b92afc1f4e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef61d0e-0164-489a-af2c-e47bbc5d93f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb8b8ea6-b0ae-4097-8731-6a8bb143d237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f398a55-bb48-46a7-821f-2afe5f629a6f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1a7018-3fd8-4201-8ac0-eae3f6273e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3db203d-9d97-4481-98b9-5e77f0dfe3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714fef82-4a09-4328-8b02-4f0e2def7dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ebe48c-2e59-46ba-8ea7-a3f39e3c18f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d211439-833b-46db-8d8a-3f9e299da3e0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8054991a-cb64-4845-b0ef-ea049f806bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b63c017-91f4-4b5b-a45a-3d6ed5a8d27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6714f6-3731-402b-9855-58dc70e0224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4af86cd3-3de0-4676-a106-90201e6a5d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a33fc3-c928-4dfc-8633-9d28ffd5a2ca",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bff5664-e2bb-4b7f-aa9a-249d711664fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5182bd-ceee-4bb3-a863-d6ee623fcafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acdeae8-6ee4-4c81-96f7-10fe03326661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02f53861-19c7-4a6b-96f5-1a5a98aa7d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8eb2a0-e894-4d81-80b2-eb3c041800c1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3820311-9d0c-4cd3-87c6-315c68266fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51503cc-1dd6-40ce-ad2c-57f66e952d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f00c30c-8be1-46f9-b327-9127b0a0540d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c6e0a20-fcfc-47ca-b4e0-d5d4bab11c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea4b529-3446-48f0-ac6c-fac7ea1e3024",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3382d34d-3f2a-4d30-8fea-db82d7e6335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a4af08-1b4a-4c7d-b946-d94a69eed9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1ccf09-496d-4b60-8e37-5bd3a99ffc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "848aa033-7686-482e-9b9f-f93a93f44bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477de49a-d8a4-4381-b42b-6fef62b37354",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37af69d6-0367-4e61-b3a3-9bb2ff80e900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fd2990-a7c9-4fdc-b952-636abda63a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57748a7d-9bf4-4f89-b414-3005edf31af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bba3e0e-be63-4546-b0d9-9301ead3dbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314edbfb-2a0c-4bd7-b7b9-78fc94951963",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdbe04c-701a-4120-8215-982ebad6226b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa19a481-25b0-467f-bc7e-caf33295a04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf1dfb2-d0e5-4fe1-a9d7-b5b50a6408ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f084ff69-819e-4217-b48e-e8dcf9972426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58a1e14-918f-49d1-a981-fb916997a313",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11083d7d-9a87-407d-98ff-e8b9474c6e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3e7802-5e96-4302-a5ed-1d74536e3194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c496b2-80a1-4a02-93c0-1d1f41884e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc2047a-bb34-4a78-b808-6c5d4ba9216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d36d28-29a3-4672-8f25-95b76e89e070",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e32708d-0eb5-4dab-8098-1b2c9dc34276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69ce134-f42b-4cef-8d02-0b378c6c97cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2bba03-9ab7-41a2-ad7f-410ee91bd15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be8de5bf-14ad-403a-8f5e-401df1903811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a62697-b666-4af4-9919-f5911f937ea2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5ee422-593b-428f-ae8c-a9a24082e2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e9c66d-b8ca-4ef1-ab62-caafd57932fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f106f83d-9aef-4149-9e05-604c4fccbbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce32b0c-794b-419a-b484-f147903356db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b16b687-5ed0-440c-a70f-2fb1de2c5a8f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a381f59-461c-4bbc-90ef-769eefe73670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b98dcc-bb40-44cd-a5ed-ae4d7a62b0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d88b050-f9e3-4cb0-9620-baba28fb8d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8d083b-2f96-4a2b-bee1-6461d631fb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e2f38d-b76c-482e-b65e-99b81025572f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e064d3f-ed81-4e73-bcb4-7c3e52e6d61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756cd4fe-041e-454a-a6ae-2e47b48bef67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c679deb8-8dbb-4c5c-ae09-c0367036d68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c279a80-171f-4802-b16a-3cfafcb199d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5139ba40-285f-4902-8ecc-1c9b20cba5a9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e08f60-f9ca-4f1a-82ed-eb13344f7fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1928dd8-578d-4b84-94e2-f1391114cff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc12c33b-7225-4c64-8141-41ab8d1fb016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e8eea8-400c-4d2d-8116-94e3632d5ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7d0cdf-20ee-4b64-9471-1e506fec0292",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53486efb-9977-4db8-a5e7-11c9336f9221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0ca6b2-f119-4f4c-ab5a-1e11efa56678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d3993b-bb99-4335-98de-8b22d146044c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e136c6c-ecdb-47ff-8b54-feebc4f6a0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06145bb0-45ad-4e5d-9e20-78070c2d9ee9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c84cbbf-0f9d-4164-89b5-9c96f4b30bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae459485-fabc-4e97-b96c-d127d9d58992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3098a7-550d-4c3f-9480-25ef914a5a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0945a38d-1629-4b4e-9c1c-bbb4cda5c81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fa46f9-a571-4a83-862f-1f223ece6cb8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0052e7ff-fd79-43c4-96e4-a805f68430e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca28caa5-dacc-458d-95ef-2c5520c8da20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298a87ce-c4e2-48e3-a57e-5a4f721ec0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c9c45c-2066-4ece-a938-eff33511bae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1a1282-e978-4243-86bb-ac2498552625",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17aa5f0-0bfa-45bd-94c7-2e29ea995a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac0202b-4579-433c-9cdc-634759e135ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca8a4f-96fd-4a67-996f-6249b9acddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "828c73d2-c0fe-4ec7-a693-1f662b891e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe400ce-f1f0-4f25-8788-d705de42e350",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb941835-3673-41e4-961d-343421c0e6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7a54f8-173c-44b4-a69c-13373378f5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dc6e2b-1d94-45fe-8756-4745682989db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "db160875-93c6-4898-acef-5f39ff5f4525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290f6e50-cc35-4c1b-8ffb-93f129093ed1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8bb948-bb26-4e7d-83fa-f32bac62798b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbaeacd-9e7a-490b-aafe-a1ff69deca11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd8ccbc-1519-4cf4-999f-6f00f20f4caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "701e08dd-46d3-4201-8c85-daabf53d8d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ba1ef4-142f-49e5-9721-1bc3a9e6b185",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39b12d3-f3e3-4f5a-9dae-68600038880e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d530c69-e66e-42da-b25b-e9c23f8c2685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d4a312-d909-42cc-9495-471a9c6eddad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56c6e875-76fd-4a00-a25f-2d2a96065e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856a97aa-d0d8-4f5e-b1b4-2135e53b3434",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303e7f86-7c6d-43fe-ae64-6d5998d00b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97de69a3-be7c-4d24-8539-3d916bbb6b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cfa72f-17c8-4476-bc97-a170a674bd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "036e9b6c-adc8-454f-a665-fbff72abac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141c5a2d-fba7-488d-9c62-ff04efae0c75",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e68954-e6c0-4960-9c62-d58cd5774e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f79360-5087-4486-84b6-bacd6cfec0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242b1b64-6742-4be4-8548-aece59d9d42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b09083-00d3-4305-91a8-9bf1bb04d8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48e1635-9228-46d7-b38a-85a96045f580",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7ecd9d-6a4a-44fd-ab4d-8a991a0e675c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e4b4d6-b0a6-4af2-9f81-01c0a1d06369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1ba2e9-bc77-46cb-8df0-cf04defefe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a6003c8d-784d-4fb7-a9ba-b7b0e8d0d87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31732458-08d8-4e64-be0e-bf0eafffdb75",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9f4386-0c6d-41c5-b9b1-44686f7ac10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f099a50-c85c-4401-95ea-25d45d4c45d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66342610-3c90-4e8c-b535-9ab99d961e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8233836f-55cf-4b8b-9cbe-9644a7b3bc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a19f1a2-e53f-40f0-8f4b-6c9e08f2d873",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a603be8-2a1a-48b6-a18d-f539c0f1f962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace7a271-8dab-4c28-ade5-9bf890be94f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc6f390-a3b4-4498-8057-60647c09f352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9903864-bab0-46a3-a252-76c14f0c1219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934ff793-a15f-488f-af16-9eda181a57d7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423121f7-f046-48fd-9d23-bbbc28436c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b0b252-b4df-49ca-8600-b9e14f5a85ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2e0f84-6861-48d1-aa10-a754a9b742ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49fa1c35-384a-4f86-a4aa-8e32731d1981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d470c2-7ece-45ee-ac77-cb2de1e5a3e0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4c05f6-740a-4ac4-a991-e95512d6f8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf62ef5-8dd3-44a4-8f4c-bb9b6953ac8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf48cf1d-b796-447b-9911-dd02355e1b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1796654-6481-455e-84fa-d81847e99f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1887981-249e-401c-935f-090bfe48d4bd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb077c-7125-4ba6-9012-038e9687f21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b029d28-7b12-4677-816e-a50787bda139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e7a77c-3552-4f88-963d-948d67763fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55ea44c-4213-4514-ae0c-b2125c9500f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5a8a4e-3344-4f11-823b-fe274856d436",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9cecb5-2c32-4e19-a7bd-46e21d02363b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a091732d-eb92-4054-99a7-54934dc4146a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accfac75-ba16-4f00-9b6f-234b65b48b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6353cac-1981-4b92-8b4e-151dc36741f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f17737-54ed-47fc-acd3-54018b58685e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0763e9-3770-4c54-a853-b1182a62c56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9a5201-4727-4712-baec-632ca5c550fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22656269-3e87-42cf-8df6-431c510bd352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe10f3b-f76b-4ccd-9c2f-19cc920e0932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb2cac7-f0c3-459a-b8e1-7d8e1eef3df1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414c3c52-758b-4bf5-a7af-12a936a4222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf99095-d9c9-4671-82ef-f7855e24087d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d724f85d-b369-425e-b7d6-39a9c517f096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "031b5a72-5ec5-4a86-b8fe-084dfcb6d836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c252865-8160-4900-b3a3-a372811a1e4f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dcbc76-86c0-4a94-8114-501acbff2687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e27c67-726c-4105-a89f-46e5b7e4b1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323c5d30-5bfb-4cb3-a45c-7df5beec3203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "229d078d-333d-4753-82b9-a89c0ccf71e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbbe100-771f-4760-9818-74b016eedcee",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f5b189-c044-438b-a762-b77d88b7d2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d835156c-049a-42e2-8d76-9d8dae0495ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8856dec1-617f-49c7-9314-0c3eb9fb64ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d2069e-4129-4c7f-b585-5e534adcbf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06acd61f-4167-4d08-a97b-938633f2a5e0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a71d505-31c1-4f5f-b1a5-1e5b72b9b059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d813a6-5476-490a-97ae-53b5efc9a5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabac457-e229-4732-8882-5d8c350ea9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15dbc130-d893-4092-a3fb-e43c5417a57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e528875-2db2-4fa2-a955-b4c8807a3ca0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f13402-e41b-4d8e-9374-665197fef5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16663888-c081-4cbe-9dbd-dffaa8595571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1cadf0-0366-4c5c-ade1-6421a08ef123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20277517-9a94-4302-af3f-ee3067d884f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617d5369-79a9-4dd3-87c6-94cf842eefaa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166ab615-7a06-45b4-87c6-b05160365e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc195f93-22f2-451b-af2e-0b1f2f5c68f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37fd2e4-5650-481a-b9cb-7d7909ad9b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c315fef9-e058-40ff-a28c-3f5e3bfbb58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74053c0-b976-4fb8-92ee-2941b71d4b01",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0457f6c6-4442-47e6-9097-0e8676501ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2d88b6-7d03-45af-ae3f-c1e5a0923978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9767d79c-b43e-4b28-9909-1384761a1ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03ac317e-5acc-46b5-abf0-d8bce320ae16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6552ba-f023-43cb-9655-a203cd43b308",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7e9c4a-cb94-4795-8bd6-23ecf5d1dfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd05b0f-a5eb-4b70-b078-2835cc5dfbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278a8062-57c2-407d-a24e-9c6b81589f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92f22e76-9a26-40c6-951d-22addce605b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4f085e-b4aa-43b9-ab2e-4d530f98965e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35be2cb6-b4cd-4514-9d44-4234255db088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e8cdd4-ab2a-40dc-a6e5-cbd0a38e62cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699ed31d-c32e-4ca8-94a8-f7e4ac72eb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9dd3f48-6455-4418-a2e2-8b9b77a3293e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b57adee-25e4-4b0e-bd00-351bf98d83f9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dcc68c-fa81-4a89-b6d2-ab6dd481333a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ed3476-8798-47e9-9b1e-6c8820a1ff8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b6f7a3-70ae-4b25-a640-d1b130091c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b08bd69-63fc-40b0-8174-2a334e549795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4914974e-e2c0-4bbe-a8be-396e9b360afd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835f29f2-0ddb-4f15-8a21-a2770846941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c03564e-fc83-4181-8553-22db1cb4a091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639c58a6-b20a-489b-bad3-39204386c00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bea8002e-076b-465b-a471-d7d0f63da17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c95a7ab-fc32-4681-abb7-41427148b41a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9932ac8b-b715-481b-9420-18b227e19bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228c5069-f13f-4e5a-b92a-fc1ce896fe55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495b8986-44b1-4cd8-876d-d17d1a7de005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cab72f97-3c5f-42af-921b-a1d5d5397a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421481c8-9b4a-4cee-a742-1eda8d286b2b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94cb099-f5bd-4153-bf5a-eaba46e76748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a427481c-d56d-40f2-ad5e-f5a1075cfb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136d46a6-6420-4212-af93-f009eb5d7ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e56964-8d71-4c24-b32d-33a94b131c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b085fdcc-dc47-4084-ad91-f2465a9abe28",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ac1907-cea6-47a1-839c-7926919ec165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80edae9b-9a29-474c-87bc-38418ef8d956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6f892f-8c58-4496-accf-7623c61b7156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "12ccded0-206c-439d-a564-dbd395ef3ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2c043e-971f-41c5-a535-cc8be435e92d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60b0f01-9adc-4d47-9aed-0736c5937c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcf0a59-62e9-4ed6-b69d-6d26d5f9d298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cb7a1e-7c44-4c41-9c5b-f40593b7b0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a998d801-332a-4b0e-a98d-c1abcfcc8076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb226518-2522-4caa-abd2-8e9ab6724c5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe3c4f0-edaf-414d-8737-60eb9c4f9ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0978f92-1181-452a-90bb-96c67b41a551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bf4e64-598f-4510-aff4-0d7aabbd4a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1895c1b-9104-4143-80ed-cf11baf17111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d75a170-9882-4552-86ea-bc51826446bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9198003-6df1-4faa-bcfb-9e0c2620a412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05331c96-949a-43ef-8962-d89c34b5f5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9541529a-ba5e-49f7-abe4-96e64de18f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4643572f-f749-4b85-9799-6d3bccb6005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a04c81-b696-4588-930a-f24abbb76c9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1720ad-f1e6-49d5-bce7-d98c0c90954c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc77db37-eff1-4f03-9a36-6e9bb1952f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283a2b4e-a9bc-4f7b-859b-d4f0d6e26ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "59170529-a5ec-43b9-8dd4-79cea5626f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3342d0c4-b58e-4949-a6d5-11734d6ab617",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98071d9b-ede5-4606-bc48-36b502130cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ea4697-6061-4a42-9cda-136b26808f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8fdfa3-ab25-466e-b3a9-6faf8e8d3aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbae79a-3c6e-4163-b741-5d6247af6617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9bf2f9-0a8e-4f7d-b6ca-24d1e18ccfe0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7159498-cb7e-4bf1-b1bd-e050b0b0498c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace8f1d4-ea6b-464b-b2f0-8e3d507788e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccd85c5-bfb8-4009-b694-9036d55571de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0f2e69-68c3-4f44-8f3a-c5f293bc8ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb3e716-6815-48e2-a12c-0f0dd2debe85",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482de58f-f2f8-4292-b552-bd42039fde15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34f9e80-501c-4529-8854-a1299d71b606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a4516e-8c48-4f0b-9845-6760da00ba6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df48439b-ee89-421a-8866-78f4df412fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3846bf0d-0f03-4983-87a5-f5d27fab0091",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afec948c-af3c-48bd-8c12-6ebc6d3a65ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60431bb-4a81-4890-aaa6-c49825854d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad60fcac-3fc2-4a80-8c76-b2e3dcc94a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f58bb63b-f1c8-430e-b21e-b8a329827ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a97ca5-2857-4904-888f-362dd8c38687",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e29c58b-fde5-42e6-8841-5d72100a3139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08bc6be-4952-4268-ad7d-6e375b01edbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f66124e-762d-4b49-bd38-5b33e7d9e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf86326-5322-45a1-8c87-273b2cb39af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b8f28b-e95c-4f01-bbba-135467121bf3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5699c6af-a951-43f1-a552-13ccba6a0700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b0c5ac-cb65-4e9a-89ea-ef67bf82c935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76528b1f-8fb9-41fb-a238-b3a42cf50ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8482b7-9e01-42a6-91eb-8d0e6a529bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2aaf7f-c495-4e41-ae30-05d9cea01140",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef4436f-ff17-4b72-b66e-cb30bf810e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8abe92-7ef6-498e-9973-a4133ffce4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5c25b2-265c-4e1a-b45a-90e8baf834dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e58392ba-5d21-4e1a-9035-de0533ac4d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38650006-e102-4efd-b309-1c0de5f7e49f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e01710d-a48a-4c77-bf7b-e4d776bb08c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc9a011-43b8-47f2-b32d-adb2cd47eeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda51891-c5bf-4b8c-8a85-9729dd95c174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0301ee34-0f99-48f9-bc3f-7fd7cf858927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037d4549-38a1-4300-a2f6-1df9234b1f1c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf8c567-4a80-4b4e-8031-267c89864cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b437e133-668c-4d35-9499-68a750fe64c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6de0c42-3918-44bf-bd26-a104b8711855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13fc18b-6b62-41e9-a86c-c12d75e91dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a4185c-abc0-4429-8a5a-3e3b36ab7a97",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a90a0f-2842-4c06-bc9f-dfdfc25c377d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e26d65-5715-4494-b50f-efdd44266434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0966dd9a-6a40-4e80-919c-6fdfc0c3e9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "585b77cb-50d9-4084-a784-523f61607188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdabd30e-41b9-4985-bb03-87e88cb0e487",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18edeeb-f07b-482c-8a21-2e43cd9622e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f744de5-dab3-4ea9-8056-798c4024e238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eafcf7f-62ef-421b-83ff-e229125802a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79e614c3-9817-4219-adcf-b03851e9ed5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e14c99-466a-478c-a26b-02c7128fb47a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d159e9-eb53-4ba8-a10e-513248a47a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52ef181-a1b9-49fb-94a9-6af71de6377d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269d41f7-f3fd-45fa-b0d1-97eb657484cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d52daa-b6a9-4f57-9410-22842406c11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bf48af-1acc-4216-bf75-2e381de808e5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96acd271-de94-412d-9ec2-a88b87f15c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8daf232b-b4d5-4baa-a62f-e9395bbb8eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba096d63-dc78-474e-8ef1-f9609db26df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8144dd-f3df-4358-9bdb-e2de2a664a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90304ded-ee6c-4ebb-822f-ae14798e016a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a75e1a-8633-47ff-a21d-792a0f22343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddd74cb-9f78-4bd7-a3cf-432543031f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8c59b1-546c-42be-8785-11e1bad74922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5f5e01-9d58-4958-94f2-a1ebb9e09934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3e972d-7d83-4e75-b1fa-2251f4560136",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a7e70a-6c33-4279-98ad-8a395750f699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df776ac3-4396-4b84-9b30-c635ed5b618a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b69096-8346-4d13-86ee-9bb720519ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "102aab83-9f49-4ff5-a4b8-89a61a75b236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4e3126-f1f3-4627-a7f6-094f02740700",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dd6079-c488-48f0-8ddc-3083c2a205b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77a9d31-5639-4b1e-90a0-ca846e270a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce1fcbc-dc35-4fa6-ba7d-8b03c1756333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8177e0-eadb-4625-9666-964e8b5502e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f52b81-5c1f-40a2-8c31-233800db9981",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b4f1cd-55be-46f8-9ff5-f2b1ba534c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8efec0-e81c-4ee7-917f-9684a9e22bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808624fe-26b9-43df-a483-8f26a5f40a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5916f203-e3f3-4b02-9ce7-995af432d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e626b7f-bd5b-4269-afaa-0967d08fb5cc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d302cfd7-d774-420b-bb9f-8585df0fa4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b59811-9882-477c-9be4-fca85f267062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d48302b-25ca-4283-bdba-286ed8f0e18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e543e4a4-a7b1-4620-a32f-55b628c18239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f17822-e454-47c4-9f2f-1850d48f0e88",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82fabf1-0c82-4ce9-85f9-c6bc3c694cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182832ca-875c-40d8-bb19-757f2dafd258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117169f3-d01c-4c7f-b6c8-44db6bf72da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "218c15a0-1275-4aaa-8a95-76558a2e8603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d431ffd9-f03f-4939-9adb-60d5ac1f981d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac70829-a02a-4677-8b77-a061777e1f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45374e5-2db3-467f-aea3-88a8b71bebbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21298507-1c31-4a57-821e-981019171249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d499615-08a0-48d4-80c4-bad5e2128b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a68a8d-436e-4965-9a25-680c24eb9d20",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a5b5b6-59d9-4de8-b9a5-ae63e887b32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59085492-06a7-4815-988d-d2607ae6a333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a55f65e-7d87-45ff-b37f-6ae900b788ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca897d5-e3b1-432a-beea-7d848ea7029f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436ea6b1-2ec1-4ec5-a017-fb5fc9ede6d8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b841b4-b412-43ea-a303-396abb95aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea9abea-7c88-4bfd-a9c2-4ae635c76766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b60fc00-92ef-4ef1-bd60-73d43f4a0750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e9223b-db7b-49fd-886c-d4930c5df625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bae8cb-9622-4229-9d08-36d4fc3bb928",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17592c4-4f50-41a5-b150-633af1779c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78023a9e-8bbd-435e-aa16-380f59f841c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28719d98-b34e-4c8f-91cd-390c3e644ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a9d444-dbd3-48de-bb20-8f19f70f26de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b0a685-7fb0-4c59-878a-b897a078897d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c7f3a1-b6f4-432b-93f7-b2b4e50bf0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a63060-6fc5-46ae-929d-478cbf0ccc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9237aa8d-2f45-40a6-8857-56ecf8a6247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43fd0dfc-db47-4129-887c-54e7a52fc476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c26f53-b792-4a47-85e5-6515a6d0975b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7583bbba-24a6-4476-a8e8-a98645dd9a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b797d15-0cef-468c-a2d2-d6d1cceb027d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a222c9-6668-4d1b-90bf-c898654fdb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2962585e-3f40-4b2e-9d7e-cb0019ae991f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749ceff4-119f-4b48-ac2f-3278e31927ce",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4be828-c3ce-4085-b754-d1aab355f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d266f3e6-b06d-4b8c-a0e3-b8380065569d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349c3bfb-ed0f-4011-8c25-e1435da68248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af35c899-9473-4ce5-af17-aaae24d09117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7bf6e1-7c06-4116-aa08-a7c77fdb7061",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390db6a4-684f-4697-b232-3fee87363016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8767dd49-02e3-47bb-b538-04e4db999dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3585af48-831a-4ca4-889c-9e26b89de41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "393d150a-f9fa-49df-8d0f-7eebc9acfb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde25a32-c636-42e8-81b4-487d1674a451",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36d6d1f-8af0-42c2-a20e-72c6421d1679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3209e266-3263-46b7-a54f-d1c3fac55a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b9d084-9c03-499d-97d1-b81b27e2952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f9e45f-e70c-49ca-b891-e8d6c0e6a84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aecc18-1ae3-45e2-91b1-3f013a6f78d2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47c578c-ec9e-40e5-b4af-220beaa5d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1803477-067b-4018-b12b-ea178c5db153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8289cd5-0258-4214-a836-da03e486ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8887f1b3-77dc-4368-8e68-18f9193c9a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bf52d2-afc3-4f53-819b-b2df1654a4d5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30909c6-81d4-43f5-a385-756bbb422aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c5d1e2-a468-4ab7-b6a5-1f9396659d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbe9ba0-f1af-48fa-ba62-857c7018bdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "88a501cc-e0cc-49ef-8c8c-26c15a06856e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d71ee62-a19a-4a55-93c4-67981251121a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe197440-aa98-40f9-b4da-ec3f3c3fb311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aca6329-1d09-416a-8d38-aa5f6ad799f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffea3a4-9ad1-40d4-bde6-a5712e2a468e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c7efe2-ad57-46c4-9c29-e1f976929510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c67a2b-89cd-4551-ae60-a42f2bcc3fb3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd83ce65-3508-4811-a6ef-233d71590b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a6fb6a56-6204-429b-91a7-3837f1fc3128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da09a88f-9201-451a-af30-13bb646d3847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e64b90-45a6-41d7-bdea-988663723398"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c147d8b8-9db3-4649-984c-2f7b0f21b924",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05216ea5-deb0-43f8-8a23-5eb7ea95b082",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cabbdf-d6e0-4703-b646-1b3ddc664209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bce0950-cd58-4f41-867e-d19a726cf5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66de9f9-b6aa-4788-85c2-3432d20573cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42cbaf9a-12f5-4832-a1c0-a353126319f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86775897-51b9-4192-bd81-acb780be135b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bafda305-1f96-47e3-a06c-35b0acfae152"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf09bf1-730d-4142-aee1-d64dc0b2e813",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a0e6ce2-d9ac-4f78-af18-14ff924e2bc1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3029f8fc-4ea9-47c2-a686-57610cdac201",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e04441b-b96f-4d9b-aa87-6c002efa67a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16dcd47c-1a39-4e4e-a992-fd42cfa0d5a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b134b9ae-0980-4b2f-bc3b-246dd4d1fd1c"
                }
              }
            ]
          },
          {
            "id": "64ef56a3-c126-4f46-a6bf-e3983bab108b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e85836c-caa4-4495-91cf-f5611ba15d8c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "90ffa3ee-c23b-4af5-a4eb-cd9d226c0d8e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54543257-14fd-43f4-ba24-40a1351a5d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "49e9f441-8348-4c92-9030-9953924b7083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54e6adc-6b8c-457f-a807-53a6f7ff4e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940f2f14-fde1-4d3d-828f-d6377c3b3e32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f695779f-b1f1-46ba-bb6e-24361130b914",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f80cdf27-db5d-40df-9754-330013d00ef7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e570708-5d5d-41b5-b4b0-c642d1f0b827"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19ce88e6-dc23-476a-90d4-169ec8f0b9ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9659540d-b5da-49cd-b7d1-82ae39c65096"
                    }
                  }
                ]
              },
              {
                "id": "261f3c89-ce5d-4ced-9827-775bff6039c3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfa0b609-398b-4574-808a-fcd934a32148",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a925e2d-aa4b-45f2-9727-07cf9be12a1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2db94f6-7014-4b49-8a9c-51e4d6cd4e6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71f779b6-f5be-4954-b3d6-061334225d5b"
                    }
                  }
                ]
              },
              {
                "id": "cb518193-2f44-4cee-8b1a-a62f6ddc8936",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92ad842c-11b8-486a-a127-9f781a338857",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "023e5791-924b-48d3-b2b0-8f981d896002"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80b9d35d-c9e4-4582-ae2e-caac5f60ff3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3563bb6b-0b1f-482a-b4dc-b2cf2b948d16"
                    }
                  }
                ]
              },
              {
                "id": "8f5bb6cb-9654-4aee-812b-37d2d56188dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e324e44-182d-4b2b-95d4-1ae3d95180a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "811c4b2f-8e8d-4ef0-928f-b9e7df9af320"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47efa91a-4dfc-4a61-82f2-480709f94a27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a1163400-7c36-4ca2-b2e3-633d9f2a0073"
                    }
                  }
                ]
              },
              {
                "id": "99f18ab7-61f3-4483-9c82-6fd8be098d7b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fdcbb7d-900e-47af-8e24-87124e1e49c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a593dae-dd4e-4c37-9268-eaea7c0663c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7601864c-cf35-4343-bf3e-80ac1dddc6fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fb4a2121-e78b-4c99-a945-20d541fbb62e"
                    }
                  }
                ]
              },
              {
                "id": "cf466609-2204-4d36-8d8a-d3cd635314d3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2564c739-6f58-4278-bf6b-9dffb3dc3153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3dfbf0f-4b2d-4580-8003-c38853a41aa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbe2f711-2c01-463b-9570-79063f512e6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b6914f9-ce5d-49e1-b43b-9fd9ad738656"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "514dc65f-0357-4cdb-9734-b38e8eb6581c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34d621ac-6649-4f3e-adae-3aa86862bead"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3064bc68-8b48-4964-960f-b92b8a34ad9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aaaf3213-8921-4c23-ab7b-d636e2ac294d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a809098-2c0e-4e28-a7e6-a2e8d043611a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "328b1233-e2d5-4594-bcc0-a12822277045"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b3f04f0-b7cd-4ec6-b3f1-f383dcaee9f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d3fdc86-b970-4ff2-ba34-2d86412d7c2f"
            }
          }
        ]
      },
      {
        "id": "9f2711dd-d035-4d6e-960e-fbde0a032e7b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ba6b2510-770f-4f90-af57-88d268e70938",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7700b530-1517-4f9b-a869-19e57159851e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f9f020a-df8a-4154-b6ca-d1fe18f54ade",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe1bc94-5d7d-4db4-9d37-483900480178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b36d1b9-0e3a-4852-91c9-e85e5cb33392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac87df9b-b8e9-47f2-aa0c-ed125a2c03f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5998b42c-bf37-4b4e-b845-52c7453f99d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97138ffe-e8ad-49f4-a98b-e31ca75795ec",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653aedc3-bf82-42d9-b920-7e9a0b5327bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0112b133-c7e9-452e-bce1-a0ddea5a9540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f63f3e0-823e-4221-b520-c194b9db2e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d77d25-3160-4f6b-b0f6-fb4ea6e4bfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5c3851-c38e-411c-8389-584be69adf1a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc049a8c-791f-4bde-9dce-e20cc0412240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4b8c3f-eae2-4064-bee3-9268d69af400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde0d468-b716-474d-81a9-cd07415896ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe3e4bf-2729-4aae-b70b-9945a607306f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38598f5e-8d87-4308-b42e-e1823d995ddb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be9903c-e77a-4a57-b6b8-ddf1f0159d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dbd863-a946-49ce-979b-19b5f01c4224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b230fb-bc10-4da2-8e3c-0e0f88943260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66754d6c-75d2-4ef9-869a-43986a1e40dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8051007-dc8d-43bc-87e0-a76591299038",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c733f16f-96b3-44d7-8042-c6b6d157a1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936eea5a-f169-4375-a5bc-437d9c4bc978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d805a0-1f62-409a-bc61-8a5c632965ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c949db-6f73-4a8b-99b3-81b627e535c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed0c625-a3fe-46cf-b428-697e887d790d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397a8600-7ad9-465a-80ba-6dfecc8630d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3e758f-e070-4d85-af41-3586e48bcf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929bd497-ed5e-4b1e-8019-c059e7aa6c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b4fd71-a6e0-4b7a-87dd-d685e76e5d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97e60df-9c33-400e-bb2f-5a5339b4692e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c0bd8e-eddf-4a8d-9a40-5c025851ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22d5d30-5511-4489-88b3-c16adb581e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8581be7-00fc-4507-9bca-17308317da24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d727d0-e3e8-4772-9d11-c1105ea04716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc972e91-1590-40e9-8b36-dde5877c5fb5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b97c3bf-8720-463e-a5ed-9cb6e9563a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf903c30-5a8c-4edf-a6a5-a448840ab3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81da6cb-480f-40eb-aa61-73a9aa85bc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "532e222e-0a76-46d6-912e-aa5e2984c25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2263b023-309a-4a73-a463-fd4f0a0367c1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fc30b0-6c03-46c5-ab2c-36f8349ad7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7870b62c-ab2a-4324-b8b8-f69a2b8647fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcad0af-a74f-44b9-b7e6-2710c85bec23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "def589fb-8269-442c-adce-ac5dc00b31a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0343b978-5205-4114-b15b-8a097c1c6b43",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8656a102-7696-44d4-b8d4-dcbb03c8b3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99569f90-bdf7-48f5-a978-373c266a9b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b86be7-105e-4339-82aa-53ad405a837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ac5bd4-a2c4-4a4d-9513-961bbf9301b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc913de1-1cfc-4452-b26b-d987302ba907",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862661cc-a680-4d21-b6f6-c9b908a3ce25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cbdfb0-83ff-48a2-99cc-d076aa3c506f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a36ba6-31c0-4ccc-b307-a61cfa1d8a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "310d52ed-661c-4a8f-bdda-a86d41fcfbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af4f2f8-f450-47b9-8bbf-73dd2628b50b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29125e78-fdc5-4e3b-ab9e-c338111972f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03c170b-c19b-41ae-b92a-81d9afe14c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaa364a-18e2-4e33-a38a-d9460409c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f2f17c-a00c-4849-bb3b-687c94f069df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a48a8-9c02-42ae-a019-8dd3b190b5b2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f80519-3d19-4555-b234-ef9649e971d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9400a3d2-7045-41bd-929e-b6e3cedbf354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67ae541-8c11-4ff6-a16c-c96f4665cad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3f9af8-a765-4ac6-9b34-05b8e6097a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb099a69-1c5d-4cae-9b87-d738ed830523",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ade6bc-d91f-401a-9f69-7c0e91288af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df12257c-eb1d-4421-8422-ad3c42f7f622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9e2f11-714d-4ef5-b0a6-b03bc40129db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3c24ad-48f9-4850-b641-5b172627ceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d498b5d-7c1b-4a40-8d3b-401078c2b4eb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d149c9-6a52-44e9-b1ec-c2db948ee296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c835ef90-4e3c-4077-a1c0-5eaa3d282d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3b8620-4781-4c2a-a0d0-0066f04418f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bc9fb2-fec1-4ff8-b40e-b997f6ea2013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3817b6-586d-4098-a6fe-1292116400fb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c882c2e4-6f2d-4872-9290-3611b30bb1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef29ab3-095c-4a04-81f0-1edddc31d7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de68bdd-2ca7-4ac0-bca9-f4830730acd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19e6785-57b1-43ce-a289-2c70edaec5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef48b02-946d-4793-844f-dd9dde845457",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69c894f-ea69-4e97-9198-da0451cdfe42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2170e063-2439-4b69-8e5a-dd5a4083d76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a4d638-b796-4614-925a-c039b959190d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5616a3e4-1238-463e-bcd1-1b6711988af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d907f06-6d28-4658-ab92-d822bad4e9bb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ef26bc-0551-4bb8-8079-95812393ee90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efde23a0-0c1b-4820-943a-4d0b1859aa0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6bc6e0-16ef-4f79-a9d7-18ee7437c002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3605a65b-9cab-42d4-bb8f-63b56aad5b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2f2da8-3b3d-4b13-a3ed-21cc5189fc04",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebfbd76-9e02-4587-a5b6-f06c469dd0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b8e97b-36f2-432f-903e-56f2ed972c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17f228a-90a9-4251-b93e-4ae98f26ad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0ed57b-81cd-4b88-bf6c-e2d160c2cb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc11be8-699f-40af-84ed-e90a2f48049b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30bc5a1-c481-46b0-8c8c-469b7cc13fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6178be30-a526-4c3e-a227-45bc174ac0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ce7986-3f1a-41be-885b-106b548da65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30d7975f-0369-4a7e-bacd-c00f01062f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1de1070-7deb-4ea2-b5f5-f44e05006b39",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238afc85-888e-445a-a6e1-1906ae1987e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e41318e-0f1b-4591-a8a9-e2abb242c751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc8f486-c4f3-4049-a5a7-088ff87653b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf5f3d3-5d25-4aac-9a91-552de54154e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61488a4-d5ac-4ad5-aca1-f115a0adc1cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a199ad-5f63-41b5-8e68-ed1d917011f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a86be16-cb53-4dc0-83de-451341848936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62f8c75-bf82-400e-9369-b61a1ddaf672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba9c595-0711-4739-9748-3dcd95c25972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afa4f07-d317-4405-aa5c-8a210aef7600",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535c80b1-2cc9-4f83-9b9d-64d293e8ae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6046f357-be94-4c67-8911-31df9e4f5480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b057c9-6fa7-48e8-8f05-86bc76a4583a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "037c7ce2-6359-411f-9b37-f4e2b3f1f01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7c110b-fd6a-47cf-96ba-b20206e06ad7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d40d65d-7712-429c-8a3d-59a616a812e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6daf214-ae7e-450e-ae19-6b2bc103d03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be97199e-800b-45a3-996f-697ceb10260a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "200815a3-d3ea-455a-b00e-3e5b31f507e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64989275-0711-4fa1-9af5-71f68ab8b082",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e734dcf3-4914-4e5e-a6c7-7c2ad91cf953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1972fae-7535-4457-989e-19a33ed6a712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0a1de7-0fd9-4843-917a-1ce0e899c8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d83be0f-03e6-4c6a-a752-fbb1f25782e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facdf065-15da-4576-bf5d-0bfe35c354dc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebeae49-e829-4978-b174-8720fc7c6036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f67e555-f0a9-4ce2-abdb-443e0136d4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c7e6ce-dd8b-4777-8837-cc034b1f227d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c82d6c12-c3bd-4819-bc2d-b2849c7f5a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26080df-f8c7-4d52-a6b4-c58b30bc5008",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12245170-317d-4a5e-90a6-491b265bf2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653e83fb-9b02-48c6-87f7-ef9b0f0be9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c160b9c2-661a-41cf-8a64-da1d17b36a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7a2b32-b7a2-47f1-88f3-f8531afec7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d878c85-1ef8-4854-9d6e-b5356ce188e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4f6c1a-aa00-41f3-9064-cc04177e8ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ed5b7f-88c0-4cc8-a9f8-9e47d9017e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75163abb-2171-424f-9241-a4ef1e102f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e10a02be-ca19-4751-9ab1-040a07e4e110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cf7933-f144-4aa1-a917-c8292484f1d8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21531be9-f731-479d-9db9-0a317a121042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efe65f0-de49-4d41-b9f6-1ca58379236a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0862e1-fe0d-4218-90d9-e60c4fa23e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a9590c-aafb-47f9-9979-a67131389fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b96ab5c-e744-44b4-95aa-ed42e6c748bc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbefe33-04e3-42c6-ba59-db3a8870eba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e0c18c-52a9-4d00-8bbc-7183b374bda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b79a104-c73f-457f-8706-bb62a55f5efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d17bafa-82b4-4b98-bca2-a4648ba0721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef20b168-b309-4f89-b1a8-9d85f7078657",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe585f5-c3c7-4f14-a3e0-4fdfe63b9585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcb5629-d49a-49f3-83fd-6690c41f62a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c804e4-7431-483f-bf34-8954acb0ca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0545db7-d725-46d8-9345-4ee93737f5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42c6c17-e42b-4b0c-b09c-ca53de1d75ce",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aa505a-2a1a-45a2-b5cf-b57421f8f61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab239ae-cecb-4182-826d-875d7c61d820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e034080f-c2ce-4508-a491-c7b00103c0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf8ca4c-7e71-49d9-be6f-a3453c17daae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce6d23ca-6fab-472b-a91a-132635ac6242",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bf7ac40-9144-4324-9edf-960b6f0e192b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8df0306-e034-4b76-8332-12b832558d4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd9f25b-0c2b-4dd6-8fc9-5bdbac8895d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a27c648-fd60-476b-9e0f-221430c44045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bd9ce04-f730-4635-9c00-b292a38b1bb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58d27d91-7e15-4ec3-9ec6-78b3fa3de7e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90e966cb-d804-430f-9b0d-23f01a642ff9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb849e2c-75cf-4164-afb6-204a1de56581",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d067d69-6143-4cf8-89c5-37c9fa32e1b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c958bd9b-517b-45ab-b835-c30f266a981a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ff8ed10-4ee8-4810-a7be-a68b74b7b59f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b21a85b1-f1f7-4864-987d-c6d40eabf40f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1de0c39b-636e-4ce6-acc0-6062a79b1a81"
            }
          }
        ]
      },
      {
        "id": "de83979d-aa2e-4367-af35-5e73cd19aa16",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0c4849df-9638-4c91-8c0c-bdfdbbe539d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "853676ae-a46f-4520-b5f1-ecd3ec762229",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e841ab72-bf99-48c7-a86c-367a90ed5bae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fbd7bf-45ce-4a12-93ce-7d5ffdda0c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb7dfc8-0284-4694-9c2f-8be3ef2f16fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c74110d-bad5-43e6-a062-1b7167df4212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b329ab1-cb9f-4233-aabb-cd845a11a002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e337c7-2efa-4c8e-b565-a8f635fecd5b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6254be5-6cd8-466b-9906-d9c1709a663d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64ecd79-bf11-43c1-a587-dbc631455a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db365286-9bb3-422c-9bc9-328f03b34458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "581e24c0-20bc-468a-b945-d8c53f807c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c820c9a4-e446-456d-8702-1a2fec448cf1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce96393-fa84-4c81-87cb-04ecf9d7b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37f24bc-fddf-48d3-a3dd-7aee149221c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd80cd6-a873-4ffd-a0dc-e23b5dcb5449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "458cb16b-e1b5-428a-9294-74f8fc1365fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d286ff0d-7c06-44b2-8b17-175fd57dac96",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4093120b-9605-4ee9-b592-46b4206cde1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c612f7-6c88-4495-8103-1fadf8b2b69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cd5569-5b60-48a1-968d-eb23a55f663a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96753b2f-0af7-4be6-ad23-fb8a6b0dc234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026bd440-2ac4-4a97-9747-c78245bdcbcb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddf31d6-a5e3-448d-8674-517272bdfc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11dcaec7-43d5-42a9-8469-b2e8be48ee58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7120d50e-f3cd-4d5b-b0be-6b906182741d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7ac078-9965-4909-8285-5b9d7cef1f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe08cb4-22bf-4047-b948-d4d0c49281ea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b429ca-8393-4585-9d9f-6ea40b8db562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f06f9e0-3727-45c4-bbff-ccbb32687f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f57d8d2-fe7c-4050-8fb1-9751f41cc5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "525c3616-782a-4525-83ad-c22abbe10c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a8e90d-a351-4cb3-9902-5c7f35b21213",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c09b443-100f-46c7-b52d-fcfb6174c215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6802853e-23a9-458e-852b-c702a7247d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52bedf3-7b8e-4421-ba2d-b2a043f4ca48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "abfca558-ca7a-4a57-bbab-5bfdda2b4a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265174ec-04f8-4c24-9756-52be32f462e2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4d0098-286a-496f-bd6b-652ea684e7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5495658f-7b6d-4b96-b34e-df3985bf9f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182169f8-23b0-4507-9c1f-dee9144667e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c41334-e7de-49fd-833d-2f78d2e4ea7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccfcf6c-50d8-46ad-889b-753d54098161",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632c9593-426d-47e5-9133-7630af40b283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6a3196-edb5-4c73-8e39-fab9b9e3679f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880daf89-ecd4-443b-94c6-5ccf567c8a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c88c33d8-e727-4026-838c-ff1b2cebcd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77facfa-e1fa-4e2f-9648-0eb19491eb96",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76a2cb0-f258-4cf5-9384-9533f24f4147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733d4028-1a4b-4cb1-9ab2-c477c5010b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387c23c1-08cc-41f0-affc-8a77d3f19670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7c470c-1314-450e-b51f-efa1be347407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b7a0af-4446-4236-b3be-5d1e63f3b301",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0e5fd0-4a9b-4cab-9a52-b32560fe39d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07628739-2da9-423e-b502-f312eca11b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352441ce-62f3-4bba-962e-2b9fbd6abafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5d7a18-7b40-4331-ab5b-1fdab5454c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafb7ccd-0039-4fa6-8f48-624cf32112dd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447171ee-7bac-4177-ad3d-fd914de3958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ac3041-c1ce-4851-865b-bd9422940a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faa3cf7-8014-4b4b-88b0-d056be750ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19c2db4a-3fc7-4f7b-bc9e-5d81bd7385e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8388506-6fe2-4f8e-864c-f16a2d74a9c7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbbddbe-f89c-4773-9d8d-cbaa1c4d1c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba96758d-8be7-40c3-8f66-82c0789706ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37a56a2-074d-48a3-8df4-80b379de7431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44229ebd-4211-42c7-9c88-38410f14bd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc30bd0-12e6-4276-97e5-d3184cdaafd4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dba7a5-e769-46aa-9c10-9edae292279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ca7af9-306f-410d-80fb-85dd04fd25a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246a11cd-b604-45e5-b155-d31f71513db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eadb0d5a-be74-4d5d-9a8e-9b4378c02c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6802143b-4ff9-4486-b999-770eb8bf1d97",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe32258-9d8d-4379-947e-e78cd4f23682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69dfc794-03d4-4476-ad0e-1eb19c56ab2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a495029-45f6-4ae8-86fe-9f3b423abb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d39c4b-f0b8-41b7-954b-9e68cb5cde53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02fd081-4872-4037-8178-a1f3858d9f72",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcadc86-774b-476d-99a6-4752ee6d75eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c87d15-78fd-4847-8e2b-d3aae60d43f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f630de-a6d7-4656-810b-f219c18608d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0194cca-96ca-43f0-b8dc-d173d0c657d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9640290-0d64-46c4-93ad-387fe5a737eb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a330fda-20e6-4751-a65e-f9192904719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76946bd-ea60-4c8a-ac9e-c06a839fc212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f530e63-38e0-4e85-9117-48e4acd0ac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "309a808e-17c4-4adb-ac7c-dd69c34f3a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063c823c-eb0c-4d7b-bc49-3e924aab908d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22237f54-5346-47b3-9f5a-d172a0fd9757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09460ff8-68ad-4165-a309-bee2c3c6dd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4460bd-1032-4cf1-a88e-0c61e294353c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b14e5967-fe1e-4b9d-8bbd-af1eb761123c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8b97fd-7f8c-44bd-8282-d367718b0394",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413aa50a-86e1-4daa-ae1a-34dab6f1c87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db36109c-d730-4669-8f1d-50910469b268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36954850-07f9-49a6-bff5-f8863c212ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a809ae7-dc4f-4f37-9b00-6d1ec1615921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a82fd1-19e1-4d7f-8648-ed3e44bd9865",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcc63f4-1274-4e85-983a-a60521409e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9c598b-7476-4a73-b7eb-d9b17785ebaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1736d5e9-b208-43f2-95a5-7d87f0774dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2630f917-37fa-432f-a258-b0fe0c3250c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4878e9-5649-4101-9824-34e05d02286f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db49ef81-caa9-4844-a1d7-cab298ce53b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff089da0-34a8-4859-afcc-95126b56cca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc891dcc-6c00-4257-a2ad-81adc3f13158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6730a0b8-6808-4c47-bbe3-724b616f9029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241120a1-679a-40c1-aa1b-d5beb2387c11",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6561e6c1-27fa-43a9-a428-05ccf1ad2633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c90bbd-1fe9-4f88-a1e9-63d365fe91db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ba7c79-a541-4fa9-9746-d6cda9189320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69fb7a2-2c15-4d65-acbd-c6a77cbb9505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37da339-6ae5-43db-8cb2-28d7d01c19c8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0a25af-a294-4d80-a8cb-535e783d3461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2ada56-b278-4dda-ac8f-1b1e5f68555b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128566d4-dc1b-45dd-bfb5-e66301e1a473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7adfe8-ca4f-49d6-90d0-b5151788ec96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f51c5eb-725b-4c9f-99bf-a5f877164b15",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f908397-a498-4493-85a6-20a682f43705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c09521-0058-4e93-843e-e37505747921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a341e452-ab7e-4afa-8b5a-11ac8b3018b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af44750b-6d98-4eef-8ff9-0d56c40df879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c297edf7-9e87-411c-9294-a32e349c8319",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5747e2a7-c2af-47fc-9ccf-646e73f31ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26364de9-b1b8-4e6f-b660-33618be8cb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968dee45-d7eb-45b3-ad93-302f6e5f1d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e172a4cd-059e-41f3-a79a-a99fbef03950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0e0626-de00-4970-8f9f-cdddc37969d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a654a52a-fdc3-4b00-ab21-df785295e48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee8c63a-817d-4293-b9bc-995259a27430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0413afb2-cb0a-49e4-945b-4c45a07a6b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b142a58-3e62-4923-8678-61abcc14b9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd47625-da04-4743-a1a7-cbd0905fc770",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba35733-5667-4764-8794-879756b14acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59407db-32ad-400b-b4f6-2a2a2038ca30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5532e067-23e0-49f0-a3f7-82f23bdcabb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9032e84-2f50-417e-8ad7-ba84cf5525a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215ed8a1-b74c-4df0-a05b-cad9668b3a98",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d37cec2-4491-4861-bb07-dadf5de5e51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a7114f-afa0-4135-9ff0-646898648d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27df4d14-ce49-4d4d-946a-42b313b171e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91109c85-83e8-4615-a5fc-8e465d86a130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9185efd4-6a4d-45da-898b-a8377479012c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fff002-d76b-4b55-aa31-aa6d6c69047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff2392d-248a-4cc0-898f-49b7fdbd8928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd23a0d-aada-4787-80f2-d5de8550752d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcd0da0-28dd-4353-add9-b82c52bed499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237c0332-194a-4fda-ac3f-818b653fb232",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6468129c-3354-4315-8cc3-ca6273ae81ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a005e3f-1823-4ca3-9e75-1b046cf44127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd14464-acb7-4149-9ae5-13f79fa67857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f04db0d2-c4a5-4c8a-906a-895736ccad32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb2b2f4-26ae-4eb9-8de8-1dc5fb344357",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666380f2-fdb5-4589-b5cd-493b00deacdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2b0848-ab88-48c1-b66a-325e32e26351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1441d39-cb0b-4927-9570-f40303334557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f03fa740-d830-4f02-9f2f-173d14c5ed72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff82aee-d84b-4b3b-8b45-47d3208d127b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca0e420-2ca4-402e-a429-3c85039ba134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859358ff-faf6-463f-a76c-1424eabff744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186d0f0e-988a-4608-932f-c350eb68d4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2cd529-6298-4f96-aa3e-3c8f3d4eddc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805a2337-f45f-4f1b-a632-2755202c9855",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e484c2-b11c-4ff5-9f97-c5f6f123c3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddca8537-bbf1-461d-968e-b9d4daeef5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bc7a96-a902-4ec5-b244-b0d28f9eff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02157906-b29f-484f-b317-2115a16f893c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5bd4a2-a637-4503-9314-11ec11bcb997",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0305a85-1849-4dc1-ab64-f33885a7a041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf44c2a-45c7-45b5-92f9-f56c2c08eadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceab3d7c-d81f-49ff-8db8-92081880aaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "599d0f0a-1e62-4d32-97ff-05039fd7c666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c06dd3c-3897-4aeb-bb6f-5b28e597be67",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b3da41-48af-4ddd-83f8-e34434e36a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c070b6-b233-401a-8a71-16e8282f3da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3208e49d-d027-4146-9de5-979fee68166d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c052b2-7596-4b2d-91df-03457990fafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d86c920-825d-40ee-8460-48e38d9e398b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8654c276-6c1b-493c-8433-8d53b93c81a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4f4b1f-46cc-4b25-b753-7eaed14e936d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4891f7b4-a82e-4946-8c62-1705b4798beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab5ea76-3edc-4bf0-b36c-43a308fdc71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826eea84-ded1-462c-b21c-c91ed006064f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0987eb3b-8708-4ce7-9978-e77f34c63007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ea741c-a2b2-49d6-81ce-b89d112b79e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56093602-116f-4276-9892-734397443a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "031f6a78-4fd8-4d2f-91de-14c69b938b95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8369513-43aa-41d7-a8d1-962d674ac6b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc910016-12d3-4998-9d78-95eaa3b70f40",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ed5c1f-b417-4d66-a20d-c1e349805abe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a4839931-2bed-4e72-9836-c4f1e6968bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544b8898-40fa-4a30-b02d-2076ae848b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55867ce5-9402-4297-b9e5-21f4875e22ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "213a052c-eff4-45b9-b213-4331f4a3343e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afd2157f-74fd-4c5a-995a-9baf0880ee5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74fa58de-8a31-4439-8472-160f8ba9f664",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0c2b6de-3dc3-41f2-9f4f-89c453bb8065"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b82b29e7-c9f0-4a09-a053-a990741fdc06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82118765-8460-4fb7-8e85-d59bd7e250e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dee7918-10a1-4c9b-b3d4-6ee70b1082bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4239ee48-8fe2-4582-99d2-a7ac0abbf234"
            }
          }
        ]
      },
      {
        "id": "dc28c765-c906-4969-b715-6a187ff32f30",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e07b5c5c-d79b-497a-b606-94ce991de49b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b85e5e8-5279-47e8-b869-79fc5821083f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "26153ea3-9762-4c36-b9b9-149c73955234",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a82c8d-d157-45e7-8d55-aa5f54627164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3954a5b-1601-4d4e-8356-9c0620b39871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ef0b9e-6ed6-4583-87b4-58a9c499df1b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d3826a-870e-4c3e-af88-28a4a89d6101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ce86f2-0798-4524-885a-5057db2c4258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7630c052-8eb8-4f3b-a32d-93836d69857c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461af800-ac9c-42df-aea2-3278f2b176d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b062fd04-5854-4447-a152-979def5fb9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b62ee-e162-4b8a-8100-a10880dc34f2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb706962-3aef-4069-b7c3-0cb0dd53cdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def7d0d7-6bdd-4957-bcf4-a997e0b824cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632432c0-bdd3-4aa0-99d2-3985016e498e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c10cd2-2d31-43ce-8e82-351aaaf8cee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df05239-6c17-45cf-8bd8-19d9e4998baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e64b42-9e6a-401f-8bbf-2125566b8d71",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3705fc-1803-4d19-87a7-3d4855b08e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2331a1b1-b631-4238-ba2d-1d1322305b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509d7293-aa08-4f1d-b8b9-72ce83a24ece",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54258e7a-ac7f-4454-b634-969b5a236de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e756d9-e21c-4a09-9341-152dce4c35db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e65415-70f0-4959-bfd5-eabe6a867516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4f6410-52b2-4330-8369-66b793f764f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106d19a2-9e16-410e-9c27-fe32d35057e8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33a5822-5e1c-49c6-a93d-7003c265180c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7391b48-bb8c-4871-83ad-ffe8f1d10d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49e3ab0-b970-4fd3-8f80-f8d81b3efef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c97bb76-defc-433e-bf1a-f4cae4854911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7cfe68-491a-40c1-8c42-da22a3ba6b09",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9707a5a8-e83c-4c6e-95af-99ff66313e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd79e88-5a13-4d78-b7ae-8896f460c292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b3b304-bb6d-49f5-b974-47eab05cfe9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc1aea8-3c27-4f07-a9f3-54b150667c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdfb12c-1d43-4d6a-8571-c8a920a2f5fc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e49a36-b080-4564-baf4-d5ad4b1c6b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f883fec-6812-4ab9-aed7-010795cdf9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3294a44c-249c-405d-aa61-efc3035099d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cecab9-832c-448e-a1ee-d4bd56bf8a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de30ed8b-ff33-4309-968b-e6f286aa3cd5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3013b6-73e1-437b-ac43-21deb60dc46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4018b53f-da4c-4d08-bc4e-2127f20ab58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5612516c-7a85-433c-a93d-ed0555c75eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb2925a-2bd1-4a11-84ef-715f061c7b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022972c9-8b25-4425-9237-a445b75e1aff",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8366d4-05dc-45db-8260-f767239baae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0c8b61-6b35-477b-b901-92cb3d9bedaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8881ca-92e5-4793-a264-3f67767f3548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadd6ad9-ccc3-4418-aad1-edd61cb6298e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047d6faa-9b9a-4d27-b2a4-7627ec8b3234",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aaa870-597e-48a6-a087-97005ffe4f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9f7a53-f0b1-41dc-9a2d-e704b9110a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7328aab6-c220-47d4-8937-8942d6e43c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70341c30-35cd-415a-aad2-bff19c83d8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0408e91f-b958-4f26-8621-db8cf593ff09",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab8e0f2-d271-4514-bd1b-2bfe92f31cb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf4daa7-f503-4e25-b10e-d37221e08726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a9c29e-d5fb-4bc8-bd94-be0df45b174b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f8eb93-cbd8-45d1-8502-86f2c0c57788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e065bfe-359e-41ae-873e-b02dc8172e8b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b60034-a86f-49bb-bef7-df28c238f42e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48fe4bb1-b447-45f1-9b80-914e4298fa35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad90d20-8622-42f7-a216-35d29f2c4e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f09330-4914-42f3-ba1a-4a2aa68db795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b5a675-ac8d-47b0-9055-c13c0b7bfe1c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a98f0c8-f072-4259-b9ef-283265d10026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71cffa2f-4400-48e8-90ed-fca5638764f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601a2125-ac06-4172-b02c-f71b78d075a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841bf33f-3ba6-4618-9c3f-830f59cc35b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9985535f-2121-44ba-9f4a-e45f3713c668",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4944f981-004c-4898-8990-09900d47f57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7587453d-a8f0-48e1-8f3e-849ed1cd847c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb833653-a5a1-43b9-8bf3-2f86e4701cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1270811-6cfc-4812-9a97-98ea0e85948d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca0d6fe-b6fd-47ec-9135-8134a37f5720",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202cf061-f312-42e9-8859-3f33713aece9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620d4be1-d0e9-49c0-90ce-a0ac75310f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c50dcaf-8ea7-4a6c-b6c4-316be8d5e542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7134b3-2ffd-4555-b1d5-1cbe194e7a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b074094-5df5-4bd4-96d0-5c25af1ebc04",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5358cbb-71c0-4f42-aa4a-85e07619248e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6d6902-4eb7-4fe0-90fb-2298c7e852a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df08b31-a447-4762-a44f-506784b5395c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bbe072-976f-48f4-a9c9-84fc683c446d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7edb81a-d8bf-49a6-8611-e6a615b732fc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f994afb5-0fef-43b1-a621-e776be7948ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b1decd-156c-48aa-bb3b-50f1ff2e66af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fcc0df-128f-4cec-bbb1-5e0111296458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ed593d-33e8-4709-9def-5096224b41db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a51456-54de-40ea-8d96-19a678c4a38d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bcb7b6-ef88-4030-8950-5f0387229bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fd6cdf-9adf-4475-9ed9-9f9c68e7e11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925a4a5d-fa0d-4c99-ae2a-453a41be9a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732ce008-cf5a-4a34-b757-ec00a2d2763f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da748da8-ab4b-4927-8616-245fcfe4bca9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741123ec-d858-4a51-922a-3fef3e70e6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a3ac0c-01a0-4147-9af3-01fb6f69a722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6979bc4c-3c81-4d70-a241-e72e00e0f77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0844c4-ce03-4a9c-bedc-26b9bfe52da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ad0b56-9c7d-4a66-8290-f58d56f38921",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b790fa9-aa5a-4589-9801-c1e4021a9a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d436ff-b56b-44e3-8f48-173f89226665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2200cd73-8d88-4ba1-a037-4e807e862e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e66bae-6200-4948-9456-b9c7dcab5ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5d5e22-5727-43b5-89c0-80fa2cdd4f28",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e10ecf-fd1a-4719-bd78-e2f31cbfe7aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d30bb6-dcf3-4eac-b14c-6f0fd9e6c3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a087d7-4a59-41e9-869b-a0538109cc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41eee01-82ba-4685-ae48-e01bf4208eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdea8a35-d179-4fb1-b937-3ed818bf6131",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a037a621-6772-4bb7-9eea-0efe2c9dca0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9755e896-9a6b-4a7d-af62-ed2961c378bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1539ebe0-48ea-4aa0-b22b-30500a680713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36711577-516f-442e-8098-f611f8ce84ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c751c32-75fc-4448-8984-3c3c4a21e2f9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f403203d-3594-4f3e-9488-54af7119f05c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a330a06-00eb-42c0-a459-c09d0d95466a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7f0e57-4d82-4c07-a7c9-0e49645eca94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd62c27-f7f4-4abd-ba74-6e94a51a96bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a689cf-e73c-4500-9480-d67f75359c23",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c23daf2-a1f1-4d4c-a58e-ae59012d46d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab038e8c-7e16-415d-b793-4d3efab98137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2851cbe9-cd58-45ed-94a0-905e675f5a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61acfe49-769f-4913-a706-fab145a63d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54537d4d-e7a3-4929-a6c6-90f6dc6de575",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba957a95-b6e4-421e-b79d-e7b31a4c0bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5af9179-ac87-472d-97d1-cc9e1e72e061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fd8dea-63ab-469a-873f-f15a71345273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e48f865-f207-47e9-9f82-02a9ad390d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f360a82f-5cab-41b6-9dd2-a2b30536fb0c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b6c449-54b7-44a0-91f0-00e625d3f30d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed2b7a2-6f73-4c9a-8909-6ac5a18696e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3095781-3c39-43d5-90f9-f2ee9d863f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9365f34c-7be6-4b80-bb7e-0feb60d5838e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e83ff6c-3cf0-4c1b-8d34-53da15f06db3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4964d76b-4a26-42cc-9a3b-de01bc23e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c5c005-8c7f-4c54-b0bc-908b8c208f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a84424-f6c9-4cd4-91c1-6555c9b58e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b90c20-fc22-4ab6-9f27-34430b01828e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178e3dca-8927-40eb-8b37-d3bf3e898916",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d631c8-dd89-46c3-96b2-2e55dc77bf49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbdfadc-014c-4804-81d0-336af47ff13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bd90f1-d92a-4361-8079-51cd34aa5794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7b5cf9-c38e-4518-8a96-5b4aa8962f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684db63d-312b-4695-ba93-88697a3dc488",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caba17d-c1f7-48be-86a8-af3cadb6d787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798e7918-dfd5-4343-980a-3e7bcaef88f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4a3148-49e7-4e63-a40c-1d356302e14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a4cc14-6204-4e89-94e1-4ec42ce8a50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c98433-229c-4209-b18c-ec4c5d28c857",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc878bb4-3d39-4c14-ac50-cdb56b63d069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ed2ce5-cfbd-471a-b57d-c4bdc94fa56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c994c2df-107e-4a78-939d-64407263e150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16f7c3f-8814-41da-9ea6-e52f55d6f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e3b37c-274f-495f-a039-d36de660288e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a058cfa-17c8-4c6b-b2e9-8e750912e00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5290f291-61a4-4c29-a244-8d4d540ae239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fff160d-74e4-443b-bf78-46c44030fe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b660db2-4636-4714-9aa3-4966d9e1c842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df019ee1-fa4e-4746-bb2b-daed65e87740",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dbb407-c5e7-472c-b48a-f3490dd864b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0cbe59-242d-4585-87cc-a299b4bf1e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d20002f-5dc9-40fc-8ea1-e694956b3597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e57db2-6dc0-406c-a74a-4866b49f9a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995b574d-4f5a-4322-afe8-91239e474d4f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c301161e-2008-4ba6-b8bd-218ed8ed6bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475dc29b-aa62-43eb-81e7-f2ffa26b08dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6527d0-8621-47c3-8a4b-b511f9e6de60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651c56ce-503c-4c55-884f-4799fb12be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e69f77f-0a22-4944-aab0-541cbb636687",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a859305-d08f-4bea-abe7-270342ab77c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c156e8-6e53-42cf-8a3b-7397c52753aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3654a34-b7ac-474f-aa70-791c0ee74923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34b62e1-c1ab-409e-9077-98d71acc94c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651f1ac2-f73a-4ae4-a2c6-3d73339d2ec7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911b4bf4-c0aa-4101-b8ad-59f0987462ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f0ccba-9db8-4125-9a16-11e81542257d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da30f796-2108-4e2a-9914-b48327f238f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5bbc3b-3cae-4c25-a354-9ae03a73e2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e68448-07d5-4139-96f0-49aa65ea73ab",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a2c1b9-2ba5-4c44-956e-0bde95049f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d99e15-8bae-4887-acbe-e722bcbf4697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b2fd2f-1e6f-4b03-99c1-5c0d2dfdd5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841b7dc2-3ed3-45c7-84f7-ce6d1284b536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d05e950-609a-4fb7-8f8d-1539129e3082",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5059b8-c187-456a-bdbd-c09c61b5a0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c59af5-d7fa-4bf7-ab78-a6e8d5d352b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69f8a24-ae88-4570-9aa7-0e074ccf356c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d965cbb-3f1f-4054-a0bf-d80dfc14b113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77199aa9-6065-4b89-91e8-4d723c15c70d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570dd3f4-d89e-4ae9-8564-877e919206a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08e5dfc-fab8-4371-b963-c4e46e2df04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3b32c7-16e8-4d8f-aaae-6e867b79904d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f067694-11bf-48dd-9ed8-a819241be330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9180b6da-f8da-47d7-ac61-583eaebc175e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f00abd9-b278-49d8-9d9c-92a6e9053448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25ef1f4-4b23-46d7-8ae9-dc21bc3b0e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038a22ae-7bf2-4040-aaba-da1e97bdb608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded0fcbc-9473-4711-9d80-90b6bf70b0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e6ca3b-32af-4a6c-a479-be17cd09053a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc5101-13ab-4931-a298-2bcba74a922c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d66af9-7530-4ee8-8027-d6d7b22a3ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d06193-3995-4728-9427-3f91a729d96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bbb6a0-dd60-4103-b6da-e8e4270d7085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4207e1-0671-4587-a1a8-29a2f94fd5c9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8ccad6-dd68-4c39-848c-4a82613725cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f27393-a433-4d4b-bb2e-ab7c4a1e3c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cc284c-168e-4ed6-ba5c-c0f153fdbeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b77175-4767-428d-87d3-efa4ce99f46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8373fdd-442a-47bb-b016-a26a0dc436b0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2349aa89-069a-4439-9ea8-68b5875f1019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e2fbaf-03a0-40d9-ad76-3e2f0c98f4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da0af2d-c016-481c-897c-6d2b0c81ccb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280fa130-57f5-4567-a1da-2fe42a9ca844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2546e73d-ed72-4c8d-84ef-5bfd91e17cf6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16496b96-ad0b-409a-b724-fdfa02edc1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24938a5a-f9ad-4c3f-834c-c88bae6b635b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46fde03-2b6b-42b1-a967-142661f2c5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b212386-94aa-440f-89d3-b9721c4e79dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ad0afe-b7f1-468f-8c47-cc6c246ab9a4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81077ff6-3a57-4c4b-851b-a3e04bcc2922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e710a17b-8a86-461b-8c3b-d5890559a7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04733758-5fd3-4fdd-bea5-7777fdbae0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ca00f0-fdaf-4bb9-abbc-c6d397254871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d566472-2c77-4b00-9fb8-7639fdb7ba77",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4850140-60d5-4cb6-ba53-20b9fa2ea8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3cce087-8e9d-4119-b3b2-b9088ffcd432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555ba672-b868-4b69-8fe9-40860faf4c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c3e07b-6907-4fe6-833c-cc11f56e0840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa26114-1bf5-4bb3-a34d-487f636d40e2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1d004c-df71-4235-a6f9-7600b6a8edbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2c411c-65eb-4715-84e6-7acd0a30d119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a82ec8f-1199-4605-80a4-110e65e03551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204ebbc0-4033-4795-8838-f8696adf3aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2a7aa6-a996-4dd9-bd14-3e71215937b6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9bb3f9-7f26-4161-9df3-d5eb2156de82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f99f674-d7d1-4e64-9025-18c8708f3706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8b9d90-e9ac-4be7-8c76-3a57835edb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24be08d5-8c85-4ab2-9067-cf94350e339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eb6adf-062b-4865-a10a-d95181df2523",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4cb37f-4363-4fbc-80b1-90f46b1d89dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031e8110-3fe5-467e-a55f-4e573fed7df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c4f75e-a8b3-4d59-9a8a-3023a18e3f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b412e3-7a88-4207-88d3-0f22ba13774d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb220619-f173-4fa0-8603-f3ed5936a06e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3013d93e-c096-455a-95bf-b6b7b171a16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655ed21c-f45b-4fb1-8495-caa93fc62a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8891fe17-dd61-4814-8da1-7178962de018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cd4fe6-7954-4791-bb93-71155d42a872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc63954a-0445-429e-8d9e-2f8f83b5011b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b4f9b4-5184-448c-853e-bec7f93b836b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998452f4-b469-408d-a69a-47aaa7134740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc2638d-a388-485b-975e-eaabc53f4cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85a6666-97b9-4949-a1c7-078fb8728f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c552ae-63f6-4cb7-a4b2-638a9b38dc83",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44cb13f-4fd1-4e4b-a95f-5d9adb26ae04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003da2e2-9904-49b3-ab99-c11b6ba42491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e54a4f-25a4-44cb-929e-2c57842f98df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41eebd35-10fe-4494-9fc8-90608cd79c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca2f971-25a2-47ba-a7bf-f011f6835008",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0966774-ca95-4088-8ca9-ff066f8bb0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd067888-9523-490f-a95c-a5ec59160476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beaf35a-2737-4a1a-9e87-0268088a04e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113ecf0f-89e2-4950-b1bc-3e97213e3f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fddb8a-176f-474e-a704-5fe86dd29d92",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ac9a2e-9045-4349-af37-9380f9f0b4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430e3232-a922-48d6-8512-09fca9f63f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cfc1e0-f2e8-4d78-aefe-2be82c215c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb4fba5-df99-4aaf-bb79-747090aaa8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57967f28-5724-4ac6-99f7-40a885c32996",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a005901e-147a-4c2b-a854-db192449be39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbad2e8-f195-4188-aef3-99ea24d65a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44835ac4-93ff-4a4d-89fd-6d3570332ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203826db-1fbf-457f-91ec-2a9d6cf961f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e4236c-c08d-4f1d-8afd-107de9da9c87",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a351c33c-1b9c-4918-9264-7b80aa414390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb96976-fb82-49a2-98fd-1b6706102d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6266a041-cf3e-43e4-a3c5-290067289fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c48443b-96b1-4734-b719-027e5d360a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d767a1-b73a-41ab-afd1-c2f2fc3ab0c3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e290f1-b47c-4efd-b613-c3430a81a60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2184d8-eba3-4e05-b9de-095caf6ed352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55d6b27-0c37-4459-b52d-24d542fd0467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c35401-4810-4eac-b55a-31bb445b29d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cc704f-456a-493d-9afe-a50852841e2b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad25e3d3-3e49-417d-a2dc-a3e009f7926a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64308f52-ef3e-44f5-af90-d3c372b8c6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0161d-0584-4e7f-bd17-249b718ecbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ce5b49-5fd0-41c8-a3d4-90b0aaca303e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4194e827-ba85-476c-9ff0-9c49c87e8cf2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc919f97-5a1a-4985-8cb5-a2199b68dece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1bc9cb-61c6-4a1b-bd93-c2b429e836e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e158dd-e1ba-4922-9709-7535268ed06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09d45cc-3ffd-4780-a276-ef372eba5e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3413da72-c5d8-461a-b0a5-1a855e42827e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efaace2-a47d-41a6-805a-b65fc2f545ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fbe4ae-2eff-4e48-b9c8-544a4e316128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980c1469-b3f2-432f-8124-da64911a629b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e941bcd-cbd3-4ad5-8a11-7fc1f6e38e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b9e8be-17d3-4c67-b332-feaf7b81390c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd7d142-17b0-410f-b1cf-4f66cbece318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467b6c38-f38a-4c67-9ba1-4056d965131b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd01d5c6-5292-48be-87d7-15608bbb8ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f9ce00-e7dd-4001-9c67-8a36637cadc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf29524-3799-4102-91ae-0d19dd3da8fd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795b44df-401c-4b11-b95e-176cf884822e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615fb6de-a111-47e3-90bb-2d346947d1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cb79a4-32dd-45b5-bcc7-c9621c2791da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc585eca-ef62-4117-953c-e40f5e64de47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65466bad-573a-4727-9c28-7f20af0f8f4e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f4e144-95bb-4c77-875f-3a59c69033e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4fadd51-5f5b-45e6-89ad-e79d827c65d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3ffd1b-5431-4762-9a56-31ee6b067f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeed0626-33fc-4175-977d-d2641419417a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c71ae9-067f-4d54-b2a1-b0ad792cebbe",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17fb826-2092-4606-8cad-95016b883175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528bdbea-6f59-4c42-a3e6-f9facb410aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b01ce20-36f7-4ce5-941f-3cf1a3dc8439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28584c5-46aa-4f11-b00a-ea68e0b0b5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedf504f-a2ea-45ed-96db-323c1cf5acb5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89501abb-591c-4b4f-804c-89e456a295ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dee14539-8221-4b2c-be2a-0793238f4571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b83964-6170-45bb-9b1f-9f7d5b4ecb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e622b3-7239-46ed-b6f4-18f58fea4a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6dd5f4-619f-45fd-a1d7-f0c692d7e811",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6591a67a-21b6-42f5-9d8c-b2643a83b420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42835b9-af22-4991-92bc-baf4a480fe0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676dda78-6763-4b18-ab81-e9e6b54904ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879c92df-6a64-47b9-85c9-669b1b065212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265c30fd-633d-4d84-8784-ba628cc25e7a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3903a89-3214-42db-9553-2456efb52d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77b7b63-e427-4a32-821e-6f1624576a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa3be89-204a-479b-8f0c-e33d873494f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7845fe0b-8421-4fed-81d1-01f83036f577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68f2859-fecd-4dc6-8ee0-afc9694423a3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e651ceb-a37c-464d-ab5d-f21fc7f3c744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017b546a-d0f9-4b52-a67c-6e5d8a7cef3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05411306-29fe-4259-962d-bccfa10f61bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc007264-f881-4479-ba46-a7c19f653b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4923774-79e4-43df-8e78-2c07490f5a68",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a844d0a-afbc-46ad-a88c-ebfd539bd088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d522db29-3e67-4249-b7f1-6b802fe6c7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7d15ee-08ee-407f-b2fa-8acfaf386bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabc674f-8c2e-48fe-83ab-70f434d910dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddb1e14-7901-4877-89b0-094bc7bde4a5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b14d5e9-a763-4876-bd0b-e736533cf8f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "434d8add-fac0-4572-a9e3-c05c7872e9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dfaa62-abcd-47d7-bc20-7c5d47f1d78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c01fce-2cd2-48c5-b575-5bb3f67cc763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c76b179-6488-4bf8-acd5-4fa98d726f4a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3c3d49-a988-4a5f-a55d-3c4039919f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90725edd-cb8c-4d8c-a4a1-5bba3e505395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1414f904-a408-4ac0-8250-c4a78fe6c29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf98014-674f-4e77-b26a-13de290d0230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c253546-4f08-4f8c-8f0d-036e09e47e9b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4145fc-34bb-49a3-b001-881381142159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec64ff4-3db1-4093-859c-6cbe3d7fd448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb318c6-0457-45c3-80c7-3f4abd787cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a87125-f721-461b-8be3-8ef65d2e04c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0803cac-43ed-4e5a-a297-a5d96f369a33",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04843513-3f6b-4500-ac52-86e0ac77f8c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd8c314-5c72-4b93-b650-17859c766f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cfe862-3c30-4483-bef5-d065cee1b84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf2081c-49f4-4b54-8eb0-93ee7f770d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd33336-9178-457e-831c-a9f3e2e051ad",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a92c438-b261-4d4a-a991-1f8dcce596b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b53be5-3b70-43ca-bef8-7995e877a8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e19c6ee-d99e-4dcf-8e78-7443f749bdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956eb6b9-6b4d-4861-aed2-59759bc6f6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbf87f2-8c63-4098-a2ff-ec69293f59a0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7819a8da-5a2c-4b4c-bd01-758beb54a6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c2414f-60d9-4f0c-8799-009873332641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f779ff39-5956-47a2-a289-b891562bbc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461061df-4dd0-4e09-b56f-9bb06ae2bd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace7c38e-a76f-455f-b9ca-c4e4fb7ca287",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85d86e5-2cdb-42c8-81c7-606fdeaba2fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab3524b-8c06-4e0c-b91d-d9fc0458d569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430e6680-45b6-46c0-abca-c859cdcf85cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13dc7fc-8863-449f-b909-cbb4cfd0c896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5db8a1-3c91-4fcd-bd29-d8e580df13f1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5de5c7-5bfb-492e-a8d3-67998ab69193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f15f5e-9572-4951-9d1a-e64d2f274ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7f7ee1-b198-43b8-a615-3625ce2b2a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3613ca-cc73-46d0-8bca-b046f12039a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e978cb8e-77a3-43f3-bf64-dba3da693adf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef4625d-7ac6-4cf1-9539-f9ab6619d75d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9041f944-cd82-4dbb-8e37-f7c34d89dbe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b58b36-8931-4d49-8831-360180d729e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f01bade-5dea-4675-a070-1a0984742104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f14ecf6-f4f7-474d-ba59-885233e4a2aa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac04771a-50a1-4b75-a83c-fab42b81265f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67cd5bf-f707-49f7-bd26-537e8fdaa9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26755cc8-a680-41df-8641-54771a64d960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edbda3d-d8b4-4c5f-a555-d1e23b8b4ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e685897-a414-4ab7-b2e5-18549ead34c9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543b6dfd-2f3c-4414-b8d2-5c27f76f2f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8debcfba-0228-4182-ac85-c2cbb47a869d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01ea53a-c887-4310-a84a-625226bf5786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2428d41-e6b0-4911-a2fc-ef2cca056c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3640bbe9-e369-497a-8c59-6ee0b9770f51",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4ccf51-0929-4282-b5e9-c0b03a6219b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad6be50-86fb-41fe-acf9-51dfc8c88045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6951adb-968c-49df-a39e-28befc0d70c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50ea15e-5466-4ae9-af89-0b20068e957d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1754e498-53cd-4949-9e82-f11bb72fa6c0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0b5033-37c6-44dc-9492-af98c2041554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f6a063-598d-49bc-a822-66750e16857b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de8cb34-34f6-461c-9608-30a8bb6e93ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd88af4-27bb-4534-8bce-e806314b6dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a045daa3-1af8-48b3-886f-ff5a91e75993",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39088cc-6c26-4477-bddd-60b8acaeb006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb90def-1f05-48b7-a76d-45295cd50e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a184f7-bc8e-45f5-b6ce-2836874b4694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dceb1d6f-3b85-4ff6-b278-4a500b6a4208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a414dd7-41ab-48ad-aa9f-bb8568be040e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424cacb7-5ffb-4f14-b586-670414b6d92d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c8446a-7358-4b4d-a93e-92aecb0d2df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a18d689-e2bb-4386-8d58-353b32353dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672f1de6-ef6a-468c-8e42-cc95bc80ff54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fe3728-8ca6-40eb-b1b1-8154e55d27df",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3970162-48ac-4944-a844-ca3b84454b7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250b0bed-1c20-40ee-8a2c-deb8813fbdb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69f0a57-a0f1-4204-bff2-e9d29d1273ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d1d924-85ad-44c0-8443-e6bac2cf5387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663e8eb3-4afa-4e25-a3c5-fc921787eb9b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d626f29c-c63e-466b-a2c9-300378132699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ba2955-02fe-437b-adb7-8871b2dbcdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0518ded3-e15b-4f74-898f-d862d6fc6f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec6b230-9df7-4e89-802b-1b406477e9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f6dadb-fde8-47e5-b647-5040b5580c43",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc4d644-833b-42e0-acc5-d594aa720c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "251bc766-9155-4efd-aa2b-1f74ddc2d019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ba4657-08af-436b-9a55-e8e07ab9545c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d021981-9320-435a-9094-aa67371ba140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306c0a59-f918-4cf3-9c2e-65804ba77123",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b9c8b0-3328-48ea-84b7-2e5c811d3989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7361b47a-f2e1-429e-86bd-a8283d0bf4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5cb678-f1e9-4dcf-a650-812a4d44ea29",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9947d5-7ae3-4272-9626-5d886a0cdf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dc18e9-a4da-472c-969f-42c822454ef4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714509ea-5493-4c15-896c-242f6114c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c22d07fd-0272-43ab-9443-d700a4dbf76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fb1381-09f9-49ba-bf80-e0f78b4d27b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878b7f98-b148-4db8-994e-6f0969087787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4388f6a3-5ab3-41c1-a822-43e575821a27",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecec73a-f3f9-4359-a69e-dd2177676459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5128bf3-b296-46da-97f7-19aac71d8ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411086d1-0c1d-4261-aafa-4a7f6e343d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4cdf62-3778-4d17-b784-7261368a8ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfcd2a8-a303-4733-bc65-797fdf5a9dbe",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e27518-7bc4-494d-bb13-60f3c23a4171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49be1dad-3c31-482b-93c2-4b44409ddd62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34a3b06-0968-4409-8566-cc8b9022487a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c21ab5-15c5-44e5-93a1-4f061c7c95bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a6bec5-61f2-4262-a146-bdd958d38362",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24287bf-6b8c-4fad-8522-c3e2335acb0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d0072e-0815-4d5e-b190-019d5d2f2507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a96185a-9516-43db-8383-befe44daf6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f6fe0c-a1fc-49c9-82ab-2287d59e7800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1feed69-0202-4b2f-86b2-295e144181d8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2d0cf9-a087-4476-8c8e-744f347c1889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b7417e-9326-43ba-b35f-9f302be2f142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce50f994-6b2b-4b5e-8517-4f5994086d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb4249d-41bf-44c1-9b7b-d11b553261af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccdec3d-5ef1-4c86-bf34-db7f022c4ded",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e50c81-860f-4d58-9ba2-5fbc0f9117bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f22c4b-1742-420e-8729-7ff457a9a704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6405c028-4a09-4830-a8e4-032715da102d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c868e4e-b0f1-45b8-9e40-a83cd4fb7c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7195ebc5-841a-4541-bde0-581314fa4426",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dd7684-9fe5-4295-af4f-04c620b59380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44f0da1-d229-4700-a684-6c4159c3a82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ae15bc-eec8-4622-bf20-c3217d637984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5e57ca-c8d0-494a-bc25-e1ef3788581d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "119a033a-ac34-433a-9401-6d299a88449b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c8df6e8-072e-4968-a1b7-523ba3a3214f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce52b6b5-b2fd-455b-aeb1-d42c6326e7b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5678b270-5525-486f-96d5-29e133d804db"
                    }
                  }
                ]
              },
              {
                "id": "fbc1c261-2080-4d71-9ddc-f1d4245cfd9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d16d5dce-bdbc-444d-92f3-d3734eefbd35",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0921ef38-7c38-487f-b2b3-25647691d06f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "23ad7b5b-54e6-416f-b5ed-2cfa479afb1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cb95ec-227a-4e7c-ab9f-ff9b2270c0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f40c7a2c-60df-42b0-be12-5d927d62da18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52fc0fe3-8e22-4dac-a314-0dc4ddf463ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "448b7cd3-60ed-44e6-ac44-1ce33d87b2f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98e9ab13-e861-4144-96f2-46d433b649cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e510ecb-9cdc-4ad7-ba65-e5ac630b2b25"
                    }
                  }
                ]
              },
              {
                "id": "0ae3814f-f79e-468f-976b-e327716550e1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9470e032-133d-495f-8ea2-c3833a09f46d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30265ae9-9633-4d18-a30f-99f86265b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "87a5b8c6-89ff-4e0a-ad32-35eaf5b6416d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b72999b-d972-42da-b0cb-b2efc5cb0ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2176d26d-cf72-492e-805c-ac6c31e4af6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9aff530d-c34f-45b0-a40c-e79732318fa2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a8b8215-c2fd-42e6-afb4-f7b5ea136b83",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22f387fa-8b0c-4b7c-9e75-69b0f3cacc48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d7b64668-da94-4809-90b4-db4baca37731"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d89b1349-fb6e-4792-8b6f-131cbd6f937e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34b000a3-0717-4ca8-b5a5-b63056555855"
                    }
                  }
                ]
              },
              {
                "id": "1a4467b1-1f76-4750-8985-6d5b154cf7d8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff7bf5b3-1285-42ab-8810-bc7737bd2336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "14843f12-d963-4a48-8a04-d96437645927"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e844a20e-c555-47a6-ac24-0c0181bd438e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a0ad384-60de-4a5b-abd3-276b7cd0e659"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64c97c15-a199-4bdf-b615-08943715ba1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "077a0cd8-1219-41c2-83e4-4d1c3a7d190f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cb891fd-bcf7-407c-a143-68a4d719c6b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67192113-2873-41aa-ad4d-c629d972cf4b"
            }
          }
        ]
      },
      {
        "id": "b43ded91-563a-4e56-8bed-cf1bccfe2b2b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3034ba82-7a95-49fb-afde-94ef7be5b4ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25377acd-e94b-4880-838a-320ea3509495",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7310e3d0-99db-450f-8167-07f7c82b4e93",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0df872-d144-4941-a76d-f7cf1d0e03b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e125d52a-a82a-42c7-b5a0-ff0faaa3a9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc10c1bc-9aa9-49b8-a2d1-3b127edd666c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beaef0e7-b39c-4205-b56e-0b9ebfdf31f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4dc8a4f-51f7-4305-995e-eab4c8b1a60e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19e6dca5-353e-4a54-8939-d87faf601732"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f30173b-c33f-4710-833b-e5ff0b91cfd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9dbef1a-d788-4ee7-a617-6ea7314bb606"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9aa4409-bdc7-40d3-9ddd-01ec9fb099cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c96c53ed-8ba9-4eb4-8cfe-a5d7a6ba9e04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cf4c62c-d8b1-460c-ae79-4913a9606bce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72c407f0-a1d9-41b3-a70f-8fa5d123e5e5"
            }
          }
        ]
      },
      {
        "id": "3342863b-0907-45f1-b06c-3dd013f136f1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "96e9b70b-e92d-4c60-bad0-4c0a22d848c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddbe23d1-f184-45b0-9c1a-478d008b6123",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e24481a-881c-4c31-a48e-101123dd14a0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a42728b-5e30-471f-8a16-d747cb73dd8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a2cf530-15ee-40fd-b6ad-1ee0c6f1aa46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b46871-fa34-4773-9e8a-9d2103889012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "527bf39c-f19a-4b8e-97e9-9ab57478ff66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d52584af-03ac-4b71-a04a-31d06cba4130",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24bf5be5-bdb7-411e-822e-ee59a9e6b701"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad31bd8a-f679-4e1d-81d7-194e57d25b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70371adb-c409-4a7f-a3e7-5d56347c3109"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fce315c5-6684-4bb7-b56d-5d53516b1f44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5bf95960-dd2e-46b8-9a43-481411b3cca6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12d89c39-0579-4402-8395-cfe070acee92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21f87b12-e56f-4394-9b3b-2ea4e4ab34d9"
            }
          }
        ]
      },
      {
        "id": "85d013fa-446b-4302-95ab-5c4c186b7bc8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a597dfd5-014e-40f0-8c49-779cb01030a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82533f85-b437-4405-b002-c2be0da7cf83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd5d2c8a-ae20-4b7d-96b1-42368b9ec901",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268c82ae-4d7e-4e9b-9cc8-07b0b183703d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dc45b97-8a67-43ce-af52-6fdc85159294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cedf53-9952-450e-8915-18f1f047f91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96c923e3-c132-4b8c-b888-9bc61cc298e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaaedf83-a618-405b-827c-a4d4fa333fb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1b575c7-efe0-45f6-aefb-505890786419"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0fff7cf-81de-4b76-b80e-c1090b407151",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7c2d1cd-d8e2-44af-be41-3829e613a3ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "387741b5-0987-4bb5-b561-653b41211393",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2efa3b0-b93e-4337-9989-ff9cbc70ae6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0fa434e-7db5-494a-b5f9-fae80fe5629e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4f1ae0e-64f7-4b32-9520-26ca4edda8ee"
            }
          }
        ]
      },
      {
        "id": "6846c2f6-c772-4be0-878b-6c65354d8ff4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c268df1-8d74-4dd0-a15f-d8a9d06b4b23",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca0135a1-30dc-4251-9990-a841242e2c07",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ea17c6c7-ec09-4402-9a57-cbdbb5dbb381",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d59e564e-124b-43d0-b5fe-bc4614df362e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "916e5f3e-3146-450c-bac0-300065d71a94",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.6385964912281,
      "responseMin": 9,
      "responseMax": 2665,
      "responseSd": 321.1204276227636,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703378278100,
      "completed": 1703378320069
    },
    "executions": [
      {
        "id": "12fb7c4f-21ab-46a7-9091-f6b7a714905e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7b9e1793-6cbf-44a2-9f08-353735d08975",
          "httpRequestId": "1916c4ac-b7a9-4a4b-8262-e2a5b4256b36"
        },
        "item": {
          "id": "12fb7c4f-21ab-46a7-9091-f6b7a714905e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "24913995-b633-4b84-9774-b9bfea5ff28c",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "c2e3287c-9ddd-4648-b58d-8646070baa69",
        "cursor": {
          "ref": "6e368cd5-175d-4f2e-a0fe-286bad8fc64e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a0453f1f-fb55-45d4-818e-2e370be26305"
        },
        "item": {
          "id": "c2e3287c-9ddd-4648-b58d-8646070baa69",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2d322787-71bf-4e7c-b180-a9031978b20b",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "88a00c86-eed5-4abd-b9b9-5ca58201646b",
        "cursor": {
          "ref": "01ea53f1-2aac-43da-8ea2-6ece8b7f6172",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "60b329d0-d395-4784-a35e-c18289c557eb"
        },
        "item": {
          "id": "88a00c86-eed5-4abd-b9b9-5ca58201646b",
          "name": "did_json"
        },
        "response": {
          "id": "2515a223-1c08-4c05-8e14-fe0261dfeca9",
          "status": "OK",
          "code": 200,
          "responseTime": 607,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a89d979-918b-4e7b-aa87-a6a1c4d53c76",
        "cursor": {
          "ref": "b806f18a-07b6-43b9-b490-ae6e0a46d194",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd635110-6f46-4d57-a507-479a65624215"
        },
        "item": {
          "id": "6a89d979-918b-4e7b-aa87-a6a1c4d53c76",
          "name": "did:invalid"
        },
        "response": {
          "id": "79a7ae96-6e9c-42c4-9ba1-a53342a4eec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a89d979-918b-4e7b-aa87-a6a1c4d53c76",
        "cursor": {
          "ref": "b806f18a-07b6-43b9-b490-ae6e0a46d194",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd635110-6f46-4d57-a507-479a65624215"
        },
        "item": {
          "id": "6a89d979-918b-4e7b-aa87-a6a1c4d53c76",
          "name": "did:invalid"
        },
        "response": {
          "id": "79a7ae96-6e9c-42c4-9ba1-a53342a4eec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5936565-257a-45e3-b47f-65c07840896b",
        "cursor": {
          "ref": "b9035f42-e879-4471-b067-88395cd2915a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "03fc6677-63cc-4f03-9eb3-a26b0ffeea4e"
        },
        "item": {
          "id": "c5936565-257a-45e3-b47f-65c07840896b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cc5d60e2-efb1-45b2-98c5-23641b0d6c06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 122,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c916003f-c281-48f7-9841-27dbc91f77e9",
        "cursor": {
          "ref": "4aadf9ef-6dc2-4365-b301-92a86a58f714",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9da8ae8f-a400-43ad-b96e-701156576951"
        },
        "item": {
          "id": "c916003f-c281-48f7-9841-27dbc91f77e9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e2d57a67-ba2c-485b-ac6d-eda8e1b7eb37",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4806f0-6ff4-47ea-97d5-0ce6d3400df8",
        "cursor": {
          "ref": "f3c182c7-0c4d-476e-95f2-0b118d0ed9b6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "adb7babe-9c3f-49c9-b155-1914beac1161"
        },
        "item": {
          "id": "ac4806f0-6ff4-47ea-97d5-0ce6d3400df8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5bb8f052-bf04-4325-ab78-32ff0ba577b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5c38a8-bff3-4cf7-a99b-265820d4432d",
        "cursor": {
          "ref": "c4ca0486-f5a6-41a0-a5d8-8a8b8ecb7dd1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "72ff5940-7e91-41bb-9427-52cdccd263cc"
        },
        "item": {
          "id": "8f5c38a8-bff3-4cf7-a99b-265820d4432d",
          "name": "identifiers"
        },
        "response": {
          "id": "3a0a7daa-64a9-4d40-8ed9-770260143ffa",
          "status": "OK",
          "code": 200,
          "responseTime": 305,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1096722-540e-4619-9d1c-b51db40f1b4d",
        "cursor": {
          "ref": "7347595c-d5dd-40ae-b217-c1e1da3a73cf",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a4a20109-881d-470f-b03c-45975f0c6389"
        },
        "item": {
          "id": "a1096722-540e-4619-9d1c-b51db40f1b4d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a8429d3-7f24-431e-8ceb-abfef1f6729a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36be357d-8291-4182-9658-ce0d433e190f",
        "cursor": {
          "ref": "bf4ab4a9-5844-419d-8053-d250ea95a7c5",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4753cdc0-a256-4ad6-898b-a75c9c1fc3fb"
        },
        "item": {
          "id": "36be357d-8291-4182-9658-ce0d433e190f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "56a521bf-1c1c-4d05-b0c6-3263faf22792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0839106-b788-4cff-b624-c99e819b5be4",
        "cursor": {
          "ref": "4efe354e-6bb5-46aa-8d35-fa122776e1ae",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "901282ed-4eed-4eca-9e07-33148092f288"
        },
        "item": {
          "id": "d0839106-b788-4cff-b624-c99e819b5be4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b444746d-7420-4494-ab8f-32adbaa18704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a00cd92-7409-446c-bcdd-5a00f78bfaf0",
        "cursor": {
          "ref": "049b0520-e712-423a-ba95-41c7abeab175",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "450c223b-4fb8-47fe-9abd-c43cb5014530"
        },
        "item": {
          "id": "4a00cd92-7409-446c-bcdd-5a00f78bfaf0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7385fe18-40ee-4ca7-8a67-61ad169af0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d87bc0-45ce-4e55-861f-bb9ca38b0590",
        "cursor": {
          "ref": "43f116dd-65c8-43bc-876b-075f13d56428",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f1657a66-0266-4194-977b-3e64ab76d005"
        },
        "item": {
          "id": "45d87bc0-45ce-4e55-861f-bb9ca38b0590",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1899512b-719b-4262-a68d-6ee8fbac40ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fde16bf-d634-4df8-b51f-829da5694293",
        "cursor": {
          "ref": "65eb05f9-3e4f-49e1-b723-eca7f2547abc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0cc877dc-f2f3-45d4-9ead-0fd2c49a6f07"
        },
        "item": {
          "id": "6fde16bf-d634-4df8-b51f-829da5694293",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bb92dd45-6bd0-4c8a-ab6b-00afb531bd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9897e4e4-1434-47bf-bdf7-260742f4d1e9",
        "cursor": {
          "ref": "d89f8cb5-cc55-4aec-9c84-dd28b77f7929",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6c938843-2eb0-4c02-bdcc-1cf6deeb6123"
        },
        "item": {
          "id": "9897e4e4-1434-47bf-bdf7-260742f4d1e9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6f83e516-07c8-48ad-a310-763b72241644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da16817-c303-4ce8-b2c4-e1f8ba4241b0",
        "cursor": {
          "ref": "19b5486d-d7ff-4cd6-a404-392b8f298439",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e512f927-16d9-461f-937f-85caf68309c8"
        },
        "item": {
          "id": "9da16817-c303-4ce8-b2c4-e1f8ba4241b0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ec52aad8-079f-4327-89f3-1836f78a6337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73465980-465e-41b8-a429-2fda66659225",
        "cursor": {
          "ref": "afc06ebc-5ab6-42bd-8fe5-865e44c0cf38",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b9940c42-13d8-47d9-bc41-c6731da6420b"
        },
        "item": {
          "id": "73465980-465e-41b8-a429-2fda66659225",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "63d64c3d-7fe5-43bf-a90f-6402a66ee5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6d4018-7953-4f1a-aa93-88ca04686f2c",
        "cursor": {
          "ref": "28bbe9e2-fbdc-4b84-b4d9-fe771e20fa17",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9dea2d68-1615-4b63-8413-4653a74f4a3f"
        },
        "item": {
          "id": "be6d4018-7953-4f1a-aa93-88ca04686f2c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "32c1388c-8987-4fdb-9af5-a20f3a95fbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efa1d07-1629-4210-a3b4-ce297486c1a9",
        "cursor": {
          "ref": "5cfdec71-dc14-45e4-bebb-05b22c7eef7d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0a3c2bf0-0f16-4f22-8197-f41b2cb0a8c7"
        },
        "item": {
          "id": "5efa1d07-1629-4210-a3b4-ce297486c1a9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2d47053f-5c04-443d-af44-855de40e34f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f75352-53a8-4374-9160-e289bab6d32b",
        "cursor": {
          "ref": "c9c84f25-f9b4-465d-b843-4fe32a63de0a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e4262a01-05ad-475d-925d-94260706515a"
        },
        "item": {
          "id": "32f75352-53a8-4374-9160-e289bab6d32b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d5a3495a-170f-4664-a363-4dfb7d295c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f398a55-bb48-46a7-821f-2afe5f629a6f",
        "cursor": {
          "ref": "a5916cd1-0820-4596-b95f-ba273890abf7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0666e21c-6e1c-45e6-b570-c28e3fc73172"
        },
        "item": {
          "id": "7f398a55-bb48-46a7-821f-2afe5f629a6f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "73221fdc-6323-4e08-bddb-0914b2329c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d211439-833b-46db-8d8a-3f9e299da3e0",
        "cursor": {
          "ref": "da7aad24-99bd-47ee-9a19-9af47244eba4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e000d352-f486-4855-9d69-4f54163de6cc"
        },
        "item": {
          "id": "6d211439-833b-46db-8d8a-3f9e299da3e0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e89cd3e2-0234-4e4b-aa2c-432332da6c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a33fc3-c928-4dfc-8633-9d28ffd5a2ca",
        "cursor": {
          "ref": "29c648fc-3bc4-4c5f-98e0-d83c4d8d18aa",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5654b365-789d-4a77-9b72-24489d7d05fa"
        },
        "item": {
          "id": "03a33fc3-c928-4dfc-8633-9d28ffd5a2ca",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dc2d537e-a989-4f0d-bf62-3158edbf06d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8eb2a0-e894-4d81-80b2-eb3c041800c1",
        "cursor": {
          "ref": "06ceef8f-bcdd-48e0-9c93-166e09e059bd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "47974349-accf-4b09-b094-0f63bdc5e63a"
        },
        "item": {
          "id": "0a8eb2a0-e894-4d81-80b2-eb3c041800c1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "75fdf771-ab26-477f-a585-6bf04921f041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea4b529-3446-48f0-ac6c-fac7ea1e3024",
        "cursor": {
          "ref": "a30ec1f5-01b3-4063-9793-a90144e6c76b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "539e6ccd-0679-49ed-a0cd-defd5ac9c8fe"
        },
        "item": {
          "id": "bea4b529-3446-48f0-ac6c-fac7ea1e3024",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4a99ef19-164d-4205-a16a-330cdb1dc130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477de49a-d8a4-4381-b42b-6fef62b37354",
        "cursor": {
          "ref": "9db5d9d5-5748-4eb9-9e16-fdd54f4582da",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "311335bc-bb25-4b66-a14f-d6886df8de4b"
        },
        "item": {
          "id": "477de49a-d8a4-4381-b42b-6fef62b37354",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "97bcaef6-5d7c-4ec3-b6dd-0ab902d42298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314edbfb-2a0c-4bd7-b7b9-78fc94951963",
        "cursor": {
          "ref": "0791b060-6c36-48c2-b408-4608ea818ef1",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "55eed17a-e793-45d8-9c9d-691d38ea75c9"
        },
        "item": {
          "id": "314edbfb-2a0c-4bd7-b7b9-78fc94951963",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "90929280-1c3f-44df-b4ad-4205b4e03b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58a1e14-918f-49d1-a981-fb916997a313",
        "cursor": {
          "ref": "28a8b8b2-c937-476b-9668-aa953c876866",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "86ad66a9-5e14-4622-b89b-9ad0db1cae87"
        },
        "item": {
          "id": "f58a1e14-918f-49d1-a981-fb916997a313",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c86a6b9a-7bd9-48c0-ba87-165687d1bbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d36d28-29a3-4672-8f25-95b76e89e070",
        "cursor": {
          "ref": "ac42828f-34a7-4586-a26a-ac25bc71a8f9",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d3c2b8cb-8f8f-4bcd-813b-917c90ee6803"
        },
        "item": {
          "id": "c9d36d28-29a3-4672-8f25-95b76e89e070",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2ae24f13-11f0-49b8-af9b-a75c7dc7b949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a62697-b666-4af4-9919-f5911f937ea2",
        "cursor": {
          "ref": "0e4c4b76-3af7-4720-92f7-12819477dfa1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e86765fc-b9a2-473a-93b0-b7dfd5074aca"
        },
        "item": {
          "id": "a6a62697-b666-4af4-9919-f5911f937ea2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b86e4688-478b-4e0f-b978-9290be6952d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b16b687-5ed0-440c-a70f-2fb1de2c5a8f",
        "cursor": {
          "ref": "8ddf5ca5-05b9-4c7e-abc8-3d98f93bc9f2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dff2e5a6-4de3-4d16-ab12-fb556c35943a"
        },
        "item": {
          "id": "6b16b687-5ed0-440c-a70f-2fb1de2c5a8f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b00de07d-4cda-45d5-805d-04f899bda31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e2f38d-b76c-482e-b65e-99b81025572f",
        "cursor": {
          "ref": "82303ebe-7ff2-45b6-8e70-b3d661424eee",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a606719a-da33-4d39-bac4-992fd94dcf87"
        },
        "item": {
          "id": "e8e2f38d-b76c-482e-b65e-99b81025572f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e255fc34-5ce2-4913-8d9d-4919aeb47f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5139ba40-285f-4902-8ecc-1c9b20cba5a9",
        "cursor": {
          "ref": "7e441927-9dc9-4534-9ec0-036ac4fb624c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1af6aa30-30bd-4534-997d-cbeece3b1d4f"
        },
        "item": {
          "id": "5139ba40-285f-4902-8ecc-1c9b20cba5a9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c4e1eeb4-813a-4bb1-b46e-eb798b0cb5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7d0cdf-20ee-4b64-9471-1e506fec0292",
        "cursor": {
          "ref": "cc49cf14-b03e-4681-a3f1-4e01e59e5997",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f2f2588d-fe87-4285-b0e0-b3d32749245a"
        },
        "item": {
          "id": "ec7d0cdf-20ee-4b64-9471-1e506fec0292",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f2357281-ea4b-4d43-ba3d-072d99ea2f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06145bb0-45ad-4e5d-9e20-78070c2d9ee9",
        "cursor": {
          "ref": "19579724-bfb6-420c-990d-6ca94f7b8f40",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3e5a91c5-96cc-4175-b8bc-3bf5363a42ba"
        },
        "item": {
          "id": "06145bb0-45ad-4e5d-9e20-78070c2d9ee9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1d31b444-2df1-4c6f-b175-cf56f4888f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fa46f9-a571-4a83-862f-1f223ece6cb8",
        "cursor": {
          "ref": "c5770294-f1bd-4a85-97e4-e5661659275b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "76e1c109-60b1-48ff-8130-778a9872d535"
        },
        "item": {
          "id": "49fa46f9-a571-4a83-862f-1f223ece6cb8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "23c95006-42a8-4576-86f8-4f88cf19627a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1a1282-e978-4243-86bb-ac2498552625",
        "cursor": {
          "ref": "bd9c4737-3978-46d4-a120-2a199799480c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f384c819-d51a-4338-9b71-f805983159b7"
        },
        "item": {
          "id": "bc1a1282-e978-4243-86bb-ac2498552625",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "175c3f5e-acfa-4898-86b1-29c8ba9e04e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe400ce-f1f0-4f25-8788-d705de42e350",
        "cursor": {
          "ref": "0a2d7a55-775f-4d09-a991-5b898228f0a8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9581611d-1f6e-4158-a92d-c8fdf214c1a3"
        },
        "item": {
          "id": "6fe400ce-f1f0-4f25-8788-d705de42e350",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ea0f95cb-0bf3-476b-aff9-d3d5f95b934b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290f6e50-cc35-4c1b-8ffb-93f129093ed1",
        "cursor": {
          "ref": "4102d6d8-88b6-40f9-8fd9-ffb5c58dbc8b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8d0ec037-feb2-47fc-b539-2a9faad4b319"
        },
        "item": {
          "id": "290f6e50-cc35-4c1b-8ffb-93f129093ed1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "86b2c662-c07a-48db-a4d9-2b090e5e0cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ba1ef4-142f-49e5-9721-1bc3a9e6b185",
        "cursor": {
          "ref": "689246a6-44fb-4929-ae62-b275352f6528",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "737db49e-b11e-4f63-a315-fd839b9ad627"
        },
        "item": {
          "id": "13ba1ef4-142f-49e5-9721-1bc3a9e6b185",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0b3c9314-fa21-4a52-b31f-44740cb60084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856a97aa-d0d8-4f5e-b1b4-2135e53b3434",
        "cursor": {
          "ref": "f8f967f7-b721-4fdc-94f8-ee67a1d43aa7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0da55075-b7b7-49dd-aab4-4df11796cbcf"
        },
        "item": {
          "id": "856a97aa-d0d8-4f5e-b1b4-2135e53b3434",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "88988906-b1b1-45ce-a5cc-9a6230129ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141c5a2d-fba7-488d-9c62-ff04efae0c75",
        "cursor": {
          "ref": "6a326e92-bb51-489d-b2b1-f1059939fbc1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6ce38acf-0330-400d-90c0-e2b4eaa6a246"
        },
        "item": {
          "id": "141c5a2d-fba7-488d-9c62-ff04efae0c75",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "870696e9-4418-47e9-90bd-1a339a10b0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48e1635-9228-46d7-b38a-85a96045f580",
        "cursor": {
          "ref": "30395592-1c1d-45aa-a1ce-408967f900a9",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e644a0d1-2dee-4bce-a106-6cbf6f23397b"
        },
        "item": {
          "id": "d48e1635-9228-46d7-b38a-85a96045f580",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "03e950b3-995a-470c-a837-275686815f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31732458-08d8-4e64-be0e-bf0eafffdb75",
        "cursor": {
          "ref": "61f122a8-acc3-4900-9ba4-730f154ec01e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "774aed7e-ee33-4ae0-805d-58ebe065908b"
        },
        "item": {
          "id": "31732458-08d8-4e64-be0e-bf0eafffdb75",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8753182c-8dc9-4091-9ff8-2f57c2d06e07",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 332,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a19f1a2-e53f-40f0-8f4b-6c9e08f2d873",
        "cursor": {
          "ref": "06b83f64-9485-49ae-bdc4-2372276774f9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cf21d31d-7bff-4543-9c02-c6290da70932"
        },
        "item": {
          "id": "2a19f1a2-e53f-40f0-8f4b-6c9e08f2d873",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ead278cc-732c-4750-9147-85975ef34cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ff793-a15f-488f-af16-9eda181a57d7",
        "cursor": {
          "ref": "cea57bec-677a-457e-8eb7-cc80d65165e1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e02c2026-6a2f-4b78-9564-9296df65bf20"
        },
        "item": {
          "id": "934ff793-a15f-488f-af16-9eda181a57d7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a024d022-38ab-4ac6-aaf0-0857a9fae7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d470c2-7ece-45ee-ac77-cb2de1e5a3e0",
        "cursor": {
          "ref": "8ed64aae-ce2c-4d2f-9b1b-4ad63cf844d5",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cef394ad-02d2-4eb5-b4f6-c166727e872f"
        },
        "item": {
          "id": "90d470c2-7ece-45ee-ac77-cb2de1e5a3e0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c908ca92-a6e6-417c-95c4-32dd0aab9c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1887981-249e-401c-935f-090bfe48d4bd",
        "cursor": {
          "ref": "6716c8f7-7043-47da-99a5-02cabbbee3c1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80759548-e70b-472c-a510-c901952e4bab"
        },
        "item": {
          "id": "c1887981-249e-401c-935f-090bfe48d4bd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "803102d8-95a4-4b75-bd12-2d9932d21d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5a8a4e-3344-4f11-823b-fe274856d436",
        "cursor": {
          "ref": "89b3c65a-6981-4f38-9829-dcd40c77f75a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4b6982f3-c527-43ab-8eff-ebfb6c1924cd"
        },
        "item": {
          "id": "2d5a8a4e-3344-4f11-823b-fe274856d436",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c0dc6e0a-3a74-4b1e-96b7-35015ebc0edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f17737-54ed-47fc-acd3-54018b58685e",
        "cursor": {
          "ref": "1880b47f-45ce-4059-bd07-7b714abf57e2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7eea6cf1-5b61-4b82-bd2b-caa4fb296933"
        },
        "item": {
          "id": "b8f17737-54ed-47fc-acd3-54018b58685e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "45c0b38f-cc6b-4d81-894a-7223dc8620af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb2cac7-f0c3-459a-b8e1-7d8e1eef3df1",
        "cursor": {
          "ref": "86fed901-7108-4d5a-8734-169ed9af51e9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bd04f052-dc42-4c6e-9a35-6d32f90739d2"
        },
        "item": {
          "id": "9cb2cac7-f0c3-459a-b8e1-7d8e1eef3df1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e7574fb9-ae29-4d6f-a235-5d96298680fe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c252865-8160-4900-b3a3-a372811a1e4f",
        "cursor": {
          "ref": "77751d0f-ccba-430e-b639-1593a4e50977",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1465d165-6f52-4038-92e8-8303a4d22bda"
        },
        "item": {
          "id": "3c252865-8160-4900-b3a3-a372811a1e4f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "700103bd-226b-4207-8522-65c3cdbb8d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbbe100-771f-4760-9818-74b016eedcee",
        "cursor": {
          "ref": "145e8b24-6a81-4e1f-b1e2-3f3ac6520c7a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "014befc9-2e0c-4809-b33e-d8df825595a1"
        },
        "item": {
          "id": "cdbbe100-771f-4760-9818-74b016eedcee",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a84acbab-f8b4-4101-86d5-8cce54987e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06acd61f-4167-4d08-a97b-938633f2a5e0",
        "cursor": {
          "ref": "edf1ad9f-eb74-460a-a431-8dfa8b454479",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2a3860da-462c-43b3-9b13-e2daec1dcbc2"
        },
        "item": {
          "id": "06acd61f-4167-4d08-a97b-938633f2a5e0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2be94fa3-86df-4fb1-8f4e-276abb504677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e528875-2db2-4fa2-a955-b4c8807a3ca0",
        "cursor": {
          "ref": "95e0b840-5679-404b-9531-913f66b8270c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "63b98a7f-d2d7-45b0-91c8-ad1b38b2c43e"
        },
        "item": {
          "id": "5e528875-2db2-4fa2-a955-b4c8807a3ca0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "382dec3c-e9c5-4e02-bfe2-36fd8321ee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617d5369-79a9-4dd3-87c6-94cf842eefaa",
        "cursor": {
          "ref": "b9db2f14-c290-4e84-adb5-93335f46b160",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "03a59309-8172-40e7-915e-da9fa9f29bf2"
        },
        "item": {
          "id": "617d5369-79a9-4dd3-87c6-94cf842eefaa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d9f9c04d-5f9d-4b84-9dbb-7411b002b9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74053c0-b976-4fb8-92ee-2941b71d4b01",
        "cursor": {
          "ref": "dd8f63cc-c854-42a5-8b62-1115dd605235",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e59b4d37-c1da-40be-b424-00d176af7f48"
        },
        "item": {
          "id": "e74053c0-b976-4fb8-92ee-2941b71d4b01",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1f273447-bfb4-4a24-8b92-f9bbcef57c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6552ba-f023-43cb-9655-a203cd43b308",
        "cursor": {
          "ref": "62d0b29d-46f8-4aeb-a486-5fac9863b428",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7a2c530c-3288-440f-8543-c97fd4c2d0d7"
        },
        "item": {
          "id": "1f6552ba-f023-43cb-9655-a203cd43b308",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "792b9266-940d-4fed-b996-4d9f06f78cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4f085e-b4aa-43b9-ab2e-4d530f98965e",
        "cursor": {
          "ref": "1a802d6d-1ca2-4d97-b2ce-a8e0d0d50930",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "79574056-d8c3-44b2-b97d-937630432c98"
        },
        "item": {
          "id": "de4f085e-b4aa-43b9-ab2e-4d530f98965e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3bd6ef61-26b1-4a50-8a39-ab12a05953ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b57adee-25e4-4b0e-bd00-351bf98d83f9",
        "cursor": {
          "ref": "ecf64417-2c74-4f5e-97be-793a95a4dddd",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e4dce1fd-de24-48c2-a8e0-cf647d3a7754"
        },
        "item": {
          "id": "3b57adee-25e4-4b0e-bd00-351bf98d83f9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "333852ea-995b-453f-81f5-9e8e701db4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4914974e-e2c0-4bbe-a8be-396e9b360afd",
        "cursor": {
          "ref": "ac099a61-8de0-4702-bc1f-9d2edd801e88",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "85894bf3-8f44-4f5e-a164-127ae3de3e34"
        },
        "item": {
          "id": "4914974e-e2c0-4bbe-a8be-396e9b360afd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b86d3879-c905-4cad-8982-2a36faa060ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c95a7ab-fc32-4681-abb7-41427148b41a",
        "cursor": {
          "ref": "d403e029-107e-4a39-a452-7ba7bd333b17",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eeffd86f-164e-486b-a2fe-a58a0c483bc3"
        },
        "item": {
          "id": "6c95a7ab-fc32-4681-abb7-41427148b41a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a4ee7443-8148-4640-ab87-d197683da703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421481c8-9b4a-4cee-a742-1eda8d286b2b",
        "cursor": {
          "ref": "1edf5700-8d7a-44d3-bb97-ebc97bb92c7e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c694dfdb-022a-4b3f-9937-7f11d1cf8ddc"
        },
        "item": {
          "id": "421481c8-9b4a-4cee-a742-1eda8d286b2b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0353690a-ea6d-433d-a0ad-4713be9ed147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b085fdcc-dc47-4084-ad91-f2465a9abe28",
        "cursor": {
          "ref": "e9ecfcd9-6a55-4afd-b52e-c254a78d0fef",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8c333500-bc97-452c-86fc-9680d96f9a32"
        },
        "item": {
          "id": "b085fdcc-dc47-4084-ad91-f2465a9abe28",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f2bdacbd-3f1b-46e0-992a-38db94b6c192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2c043e-971f-41c5-a535-cc8be435e92d",
        "cursor": {
          "ref": "2a4e67cf-a5da-492d-9372-5cc1367d20f2",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "26e199df-238a-4ffa-add3-59612ac3e53a"
        },
        "item": {
          "id": "2b2c043e-971f-41c5-a535-cc8be435e92d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c60046a1-9234-4763-b1a7-df55419469ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb226518-2522-4caa-abd2-8e9ab6724c5e",
        "cursor": {
          "ref": "e52eabad-a928-48e4-9738-bd904232742c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7ae308fb-d26c-41c2-b4b0-ca7e4815a1bd"
        },
        "item": {
          "id": "bb226518-2522-4caa-abd2-8e9ab6724c5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d0e70278-c140-466d-9667-e17b62e9e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d75a170-9882-4552-86ea-bc51826446bb",
        "cursor": {
          "ref": "cb3c9fd7-69e0-4d49-a3ef-fe06478fec08",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "20fe8cc1-c2ea-4753-8b24-990deafd5e99"
        },
        "item": {
          "id": "6d75a170-9882-4552-86ea-bc51826446bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "00a06d8b-680a-4e3f-b49f-2475140694e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a04c81-b696-4588-930a-f24abbb76c9a",
        "cursor": {
          "ref": "c240cd11-2236-438e-a12a-a5835fc0a491",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6a5249f6-fc1c-4f98-8fd4-180fe2bc5eda"
        },
        "item": {
          "id": "c1a04c81-b696-4588-930a-f24abbb76c9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6ceaea76-3541-4fc3-9a3f-82a6ee8f583d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3342d0c4-b58e-4949-a6d5-11734d6ab617",
        "cursor": {
          "ref": "8ec7c3d8-d6dd-4ad3-b3b9-7cad9b0fc312",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0e3086ea-a6d0-42cf-b095-b82df84fda3d"
        },
        "item": {
          "id": "3342d0c4-b58e-4949-a6d5-11734d6ab617",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "72e3fbfd-5670-4d63-bf41-a53de8e5836b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9bf2f9-0a8e-4f7d-b6ca-24d1e18ccfe0",
        "cursor": {
          "ref": "3e539a0b-02cf-4760-b43f-9e108d747c4b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "37d8f4df-edbe-4782-b02c-5d1a9380e1fd"
        },
        "item": {
          "id": "9f9bf2f9-0a8e-4f7d-b6ca-24d1e18ccfe0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0fdb8951-d2eb-497d-aa4a-eb880a82e105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb3e716-6815-48e2-a12c-0f0dd2debe85",
        "cursor": {
          "ref": "463ae0f2-fc80-4ad1-8027-ad415fe6d6a0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "60d3deef-a8b6-4c0a-91d2-11d1c97f35c6"
        },
        "item": {
          "id": "ffb3e716-6815-48e2-a12c-0f0dd2debe85",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1ff51ba7-aa80-41d3-a192-42d232abf930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3846bf0d-0f03-4983-87a5-f5d27fab0091",
        "cursor": {
          "ref": "2eb74943-276f-47a2-892a-ee449c8a7bdb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3f417b6f-3924-47ac-a250-520d7f2bf38b"
        },
        "item": {
          "id": "3846bf0d-0f03-4983-87a5-f5d27fab0091",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "14c63b35-6d20-497b-9bec-7a2101bcece2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a97ca5-2857-4904-888f-362dd8c38687",
        "cursor": {
          "ref": "5f958ff1-02a4-4477-828e-118ed9648393",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "35c2987f-2e17-44f0-a5d5-06b90b0d30f6"
        },
        "item": {
          "id": "92a97ca5-2857-4904-888f-362dd8c38687",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dea2f022-4776-4b18-9aa4-ee98fdb54b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b8f28b-e95c-4f01-bbba-135467121bf3",
        "cursor": {
          "ref": "bcd5ccd5-e36c-4f97-88e0-d11111605ff9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c6f531c9-2b9c-4c24-9033-ab1c1aa5fd1d"
        },
        "item": {
          "id": "d9b8f28b-e95c-4f01-bbba-135467121bf3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e10a20e0-a8bc-4a2c-a79f-18664ff92456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2aaf7f-c495-4e41-ae30-05d9cea01140",
        "cursor": {
          "ref": "89d5ae55-e607-4acf-84f8-5cab7b0eb125",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "539f95b9-63d4-4fbd-b748-556e7e1d22a2"
        },
        "item": {
          "id": "2f2aaf7f-c495-4e41-ae30-05d9cea01140",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "573480bf-30e1-4e93-935a-e31412e40b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38650006-e102-4efd-b309-1c0de5f7e49f",
        "cursor": {
          "ref": "f0ad7fa2-2564-415d-a040-f685dcd90bbd",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7a16cd92-1512-40f1-9c85-825fa661b733"
        },
        "item": {
          "id": "38650006-e102-4efd-b309-1c0de5f7e49f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "99624fff-379a-4dee-8735-264ae3b9caf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037d4549-38a1-4300-a2f6-1df9234b1f1c",
        "cursor": {
          "ref": "21e4e57a-7cf2-4c79-91ac-f36ca7daf670",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "04ab99f4-ca84-4cf8-b957-8b9ae84b57cc"
        },
        "item": {
          "id": "037d4549-38a1-4300-a2f6-1df9234b1f1c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e3d5254a-a9d2-47fd-8457-f478f441225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a4185c-abc0-4429-8a5a-3e3b36ab7a97",
        "cursor": {
          "ref": "a084f6d6-7e58-4aad-9548-ac85a584b66e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eac354ae-f5a7-4c1e-abed-46d37147b0b6"
        },
        "item": {
          "id": "15a4185c-abc0-4429-8a5a-3e3b36ab7a97",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7c72d921-e50c-49fd-9f29-c3d462de8cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdabd30e-41b9-4985-bb03-87e88cb0e487",
        "cursor": {
          "ref": "52060928-afaf-49af-bd8f-f06d3bbd1aab",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3048b2cd-3765-42da-971d-c2b816a1601a"
        },
        "item": {
          "id": "cdabd30e-41b9-4985-bb03-87e88cb0e487",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e08f7c3a-f0ed-4f9d-8ff9-ac365a050ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e14c99-466a-478c-a26b-02c7128fb47a",
        "cursor": {
          "ref": "5a6c0f94-56e9-44e2-b504-e926e7af7bd1",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1ff35980-557d-41d3-a748-5495483510b4"
        },
        "item": {
          "id": "81e14c99-466a-478c-a26b-02c7128fb47a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f5ae3f18-4f57-42ac-97b9-f8241a57dfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bf48af-1acc-4216-bf75-2e381de808e5",
        "cursor": {
          "ref": "a1413e70-e583-4c05-9ea6-db120c5b7789",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c15cf2bf-9c52-4f44-a869-b644678d54bc"
        },
        "item": {
          "id": "a6bf48af-1acc-4216-bf75-2e381de808e5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2789af79-6c6c-4df4-9ea7-0d57ad972fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90304ded-ee6c-4ebb-822f-ae14798e016a",
        "cursor": {
          "ref": "d6d44631-c615-43dd-8814-f22b4c707e6c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4eba5d97-a8e0-491d-9b23-6b9d3948b03b"
        },
        "item": {
          "id": "90304ded-ee6c-4ebb-822f-ae14798e016a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0e856160-2952-461b-bebc-552c32ed8454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3e972d-7d83-4e75-b1fa-2251f4560136",
        "cursor": {
          "ref": "ee88ee25-71b8-4844-b6cf-a3998409b61d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7da424d0-c251-4a8d-b921-295efb2f5371"
        },
        "item": {
          "id": "fb3e972d-7d83-4e75-b1fa-2251f4560136",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "45bb6e12-d2aa-4af5-9661-c908e5e40a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e3126-f1f3-4627-a7f6-094f02740700",
        "cursor": {
          "ref": "6dbd6a50-588a-4b78-ad9d-af29cbf5b4a0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ab9ee830-e9c0-4fc0-b0cd-58863dd2af8c"
        },
        "item": {
          "id": "ce4e3126-f1f3-4627-a7f6-094f02740700",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "da83e719-5b42-40a1-9b56-7af5cebc0714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f52b81-5c1f-40a2-8c31-233800db9981",
        "cursor": {
          "ref": "19576c98-4ebe-4bf4-ae99-88f530eb0f7b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f503c552-7cb0-46b9-9deb-50ec737700bf"
        },
        "item": {
          "id": "19f52b81-5c1f-40a2-8c31-233800db9981",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "66ce667f-0fd1-47f1-8886-f7714165cb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e626b7f-bd5b-4269-afaa-0967d08fb5cc",
        "cursor": {
          "ref": "71f788f5-cc6e-4cea-af47-1005395eeab4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00187754-58c7-49b7-96bc-86058810df9c"
        },
        "item": {
          "id": "7e626b7f-bd5b-4269-afaa-0967d08fb5cc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1215cd9f-195e-459e-bad0-7ce8cabb3940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f17822-e454-47c4-9f2f-1850d48f0e88",
        "cursor": {
          "ref": "74f8c364-700c-491f-8948-f964b6f8c4f3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0dfcd4ef-74c1-4434-a862-dfaa491ae715"
        },
        "item": {
          "id": "40f17822-e454-47c4-9f2f-1850d48f0e88",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8ce8798a-9175-4419-b1e5-479fee2733ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d431ffd9-f03f-4939-9adb-60d5ac1f981d",
        "cursor": {
          "ref": "f75b3a69-c67a-4322-a9bd-fa4bdc814a1d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "825d3fe2-541a-40bb-9f41-6f2c2d0bdd7d"
        },
        "item": {
          "id": "d431ffd9-f03f-4939-9adb-60d5ac1f981d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "666f1c4e-beb6-4959-b130-da25966d5775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a68a8d-436e-4965-9a25-680c24eb9d20",
        "cursor": {
          "ref": "c202a8cb-2c84-4e6d-9d1b-ba69721c2386",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ccb962d4-2809-4db1-953e-3766eb2dac2f"
        },
        "item": {
          "id": "10a68a8d-436e-4965-9a25-680c24eb9d20",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9427cfe3-ed0d-4995-9176-31d150caf3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ea6b1-2ec1-4ec5-a017-fb5fc9ede6d8",
        "cursor": {
          "ref": "b7bce19a-e03d-48ba-8236-994bf8ad5c73",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3dbd0502-39ca-41c2-967c-b00f317370b9"
        },
        "item": {
          "id": "436ea6b1-2ec1-4ec5-a017-fb5fc9ede6d8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ea1d2a5b-3a89-4753-9efc-119686ada56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bae8cb-9622-4229-9d08-36d4fc3bb928",
        "cursor": {
          "ref": "be9bb719-9d9f-4bbd-b153-92557314df7f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "33b3634c-bd31-456c-a425-0d88435a6931"
        },
        "item": {
          "id": "d6bae8cb-9622-4229-9d08-36d4fc3bb928",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6b7998c7-4119-4fdf-9c21-6dd5ecf9a07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b0a685-7fb0-4c59-878a-b897a078897d",
        "cursor": {
          "ref": "b8093345-0257-4d77-9110-0fc79820d69a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ded979c3-411f-4a62-a074-79e1b511c512"
        },
        "item": {
          "id": "92b0a685-7fb0-4c59-878a-b897a078897d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f70e40af-140b-426f-a210-38a7036f740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c26f53-b792-4a47-85e5-6515a6d0975b",
        "cursor": {
          "ref": "c3f355b8-c7bf-4b24-9141-17c1ef874ccb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4c6132c6-4a05-4883-a661-5c90c9aa8ed1"
        },
        "item": {
          "id": "f4c26f53-b792-4a47-85e5-6515a6d0975b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ff58fe42-34f6-419b-90ec-1d95eca1ac5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749ceff4-119f-4b48-ac2f-3278e31927ce",
        "cursor": {
          "ref": "c5ab1b0f-fcaa-4ae0-835e-91657e8d4be1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0f7dd4ec-e151-41bc-a381-f27b4c711d53"
        },
        "item": {
          "id": "749ceff4-119f-4b48-ac2f-3278e31927ce",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4216be83-5c61-4507-a054-1147bbfb3d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7bf6e1-7c06-4116-aa08-a7c77fdb7061",
        "cursor": {
          "ref": "3a76b784-487f-4c30-a32a-8bb95677096c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "11caa32f-08d2-4142-9fc9-6934ea78ef70"
        },
        "item": {
          "id": "fd7bf6e1-7c06-4116-aa08-a7c77fdb7061",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dd7c9a45-3054-4bc5-97aa-f41d1f5f9fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde25a32-c636-42e8-81b4-487d1674a451",
        "cursor": {
          "ref": "36b6fea6-12a2-44f6-9642-385724980bf6",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "998b2797-84db-482e-b6f0-a067d913f6f1"
        },
        "item": {
          "id": "cde25a32-c636-42e8-81b4-487d1674a451",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d58bf5a0-5716-4a58-bffa-03655c6a3c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aecc18-1ae3-45e2-91b1-3f013a6f78d2",
        "cursor": {
          "ref": "ce5600a9-5582-4eac-afba-31ca262af60a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2af5d079-f71a-45d3-82d5-d5d1c8d18cb3"
        },
        "item": {
          "id": "66aecc18-1ae3-45e2-91b1-3f013a6f78d2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c543d4c7-dbc5-4c12-9293-432b11a73c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bf52d2-afc3-4f53-819b-b2df1654a4d5",
        "cursor": {
          "ref": "d5d3d16c-8bb6-49c7-a3d1-afa2e3072172",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "70c1a2a9-dbf0-4e14-8b15-12ade8bf1be1"
        },
        "item": {
          "id": "a9bf52d2-afc3-4f53-819b-b2df1654a4d5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "038b2e48-1e7c-45e5-80bd-2e093e19b564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d71ee62-a19a-4a55-93c4-67981251121a",
        "cursor": {
          "ref": "df5e4903-a423-448e-8215-4a1374016988",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a0a05da9-7490-4c76-98ce-8769477fa179"
        },
        "item": {
          "id": "7d71ee62-a19a-4a55-93c4-67981251121a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9f710a9d-14a6-439b-871f-db72fce527ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c67a2b-89cd-4551-ae60-a42f2bcc3fb3",
        "cursor": {
          "ref": "7df33031-dfb1-4abd-8528-5120e1b481be",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "57db45f3-fa0a-422e-8238-fac3196020bc"
        },
        "item": {
          "id": "99c67a2b-89cd-4551-ae60-a42f2bcc3fb3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d402ee0e-2681-44d2-ba03-195e26fe03d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05216ea5-deb0-43f8-8a23-5eb7ea95b082",
        "cursor": {
          "ref": "1db4f8d0-9a18-450a-93df-c96622c9c44e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "090f668d-99fb-4029-b912-de2479009d96"
        },
        "item": {
          "id": "05216ea5-deb0-43f8-8a23-5eb7ea95b082",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a28f29d7-94ee-4107-992a-1ae211ecd679",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ffa3ee-c23b-4af5-a4eb-cd9d226c0d8e",
        "cursor": {
          "ref": "b432eb6e-52f4-4c63-8c45-110aec3f1b58",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "79be94d1-d87e-4bb6-8618-1fbe8514e984"
        },
        "item": {
          "id": "90ffa3ee-c23b-4af5-a4eb-cd9d226c0d8e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "aa2d7ce9-c62d-4ace-ab00-7fcf03e84ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f695779f-b1f1-46ba-bb6e-24361130b914",
        "cursor": {
          "ref": "e3f3654c-ab64-4def-b902-0272717c34d7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9d162398-6575-4927-b532-81c3684c0a23"
        },
        "item": {
          "id": "f695779f-b1f1-46ba-bb6e-24361130b914",
          "name": "credentials_issue"
        },
        "response": {
          "id": "082553b5-d3d7-4b2b-878e-707d9c8aa4b1",
          "status": "Created",
          "code": 201,
          "responseTime": 2562,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "261f3c89-ce5d-4ced-9827-775bff6039c3",
        "cursor": {
          "ref": "bb7168f0-69c2-4d61-a548-a3709fc72d59",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "036f1d9d-1367-4d4a-8893-7ad8791c1a06"
        },
        "item": {
          "id": "261f3c89-ce5d-4ced-9827-775bff6039c3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "34465b15-82c4-42cb-afac-ac62dabd9547",
          "status": "Created",
          "code": 201,
          "responseTime": 2059,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb518193-2f44-4cee-8b1a-a62f6ddc8936",
        "cursor": {
          "ref": "656bcc8b-310a-4645-bbc7-02994b20d493",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "647434c5-d2b8-42b3-acae-d9fab1f0ff37"
        },
        "item": {
          "id": "cb518193-2f44-4cee-8b1a-a62f6ddc8936",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5a551e07-eb7d-4af6-a87e-2424fb727326",
          "status": "Created",
          "code": 201,
          "responseTime": 2077,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5bb6cb-9654-4aee-812b-37d2d56188dd",
        "cursor": {
          "ref": "56a7cab2-9225-44f6-8d94-50ebc8ba7f4f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cf64643f-33df-45e9-9858-63a04898408c"
        },
        "item": {
          "id": "8f5bb6cb-9654-4aee-812b-37d2d56188dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d2918405-dc7e-43c6-962b-04403a7f1719",
          "status": "Created",
          "code": 201,
          "responseTime": 2119,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f18ab7-61f3-4483-9c82-6fd8be098d7b",
        "cursor": {
          "ref": "c39a94ec-a639-4cde-acd5-f74353e4b3cb",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d6156409-c443-4fb9-907d-ff1ff8d7ff8f"
        },
        "item": {
          "id": "99f18ab7-61f3-4483-9c82-6fd8be098d7b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "436e483f-dd38-409d-9bad-377ede08e8d7",
          "status": "Created",
          "code": 201,
          "responseTime": 2665,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf466609-2204-4d36-8d8a-d3cd635314d3",
        "cursor": {
          "ref": "36a310ea-72b9-4d02-846f-95c692e2554d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a77b9ea4-2360-4420-845f-78aed16ccc50"
        },
        "item": {
          "id": "cf466609-2204-4d36-8d8a-d3cd635314d3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5de94c93-23c7-4786-9a8c-11c80f755328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8f9f020a-df8a-4154-b6ca-d1fe18f54ade",
        "cursor": {
          "ref": "09a21058-d77c-40e2-833b-facb372bdd34",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "262096a5-1317-472a-bdb9-949ecde69e55"
        },
        "item": {
          "id": "8f9f020a-df8a-4154-b6ca-d1fe18f54ade",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7b8d1d86-b261-40df-b501-12228743dd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97138ffe-e8ad-49f4-a98b-e31ca75795ec",
        "cursor": {
          "ref": "2d2e5964-988c-44d3-818d-b1bf695eb7b5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "37b570d0-250d-4c6f-bdd4-81fa226a5eda"
        },
        "item": {
          "id": "97138ffe-e8ad-49f4-a98b-e31ca75795ec",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "31cf81e9-6cb1-4481-a844-a3c945534269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5c3851-c38e-411c-8389-584be69adf1a",
        "cursor": {
          "ref": "06496f98-1bc6-43ff-b2c2-592e0c05fdcd",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c76b5bdc-7b4f-4109-b542-1d68cac10fbf"
        },
        "item": {
          "id": "da5c3851-c38e-411c-8389-584be69adf1a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "84e6c5d3-4c49-42a7-b871-c3e2c0212122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38598f5e-8d87-4308-b42e-e1823d995ddb",
        "cursor": {
          "ref": "e48bfb40-8e61-4d3c-ab7a-a13db89c08b8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0fb53fb9-5861-447e-97f3-73a6a3d7162d"
        },
        "item": {
          "id": "38598f5e-8d87-4308-b42e-e1823d995ddb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "54f81ed7-19ce-4153-9d3e-ef18133ef879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8051007-dc8d-43bc-87e0-a76591299038",
        "cursor": {
          "ref": "b3b75985-bf82-494c-bb56-6134a7842f5e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a07ffa04-56e7-4906-8964-c5d71d37f7a2"
        },
        "item": {
          "id": "e8051007-dc8d-43bc-87e0-a76591299038",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "acea4250-b0ce-4c56-8d21-bc39390c9754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed0c625-a3fe-46cf-b428-697e887d790d",
        "cursor": {
          "ref": "92fc2ede-3b7c-4577-b2db-3b730fa9267f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "398ecdcd-6e5f-4485-9522-5d0217d75bdb"
        },
        "item": {
          "id": "1ed0c625-a3fe-46cf-b428-697e887d790d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a7abc9a7-5456-4070-b724-53af55151f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97e60df-9c33-400e-bb2f-5a5339b4692e",
        "cursor": {
          "ref": "ec2dc5dd-7e37-4065-90fe-e286269bdd2e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "afb07ead-dcc8-40f0-8a2d-d99ca997a338"
        },
        "item": {
          "id": "f97e60df-9c33-400e-bb2f-5a5339b4692e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da51360e-fd02-4442-899a-3a796448ba36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc972e91-1590-40e9-8b36-dde5877c5fb5",
        "cursor": {
          "ref": "c4e2be0c-1b0d-49ba-9e16-2d963af70b84",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b204812c-80f1-48d8-9bfb-4a7440216859"
        },
        "item": {
          "id": "bc972e91-1590-40e9-8b36-dde5877c5fb5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9d99802a-45ba-4baf-b2fe-40326cf4839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2263b023-309a-4a73-a463-fd4f0a0367c1",
        "cursor": {
          "ref": "f7821bbb-ca71-4312-a4c3-5f76365a12d3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "130f8346-975e-4f84-b310-78552cd71ef6"
        },
        "item": {
          "id": "2263b023-309a-4a73-a463-fd4f0a0367c1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bad8c639-db6e-48d4-8387-e5995026e4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0343b978-5205-4114-b15b-8a097c1c6b43",
        "cursor": {
          "ref": "21f14910-a8b2-46d8-b02b-38d748951f61",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ac563baf-db66-433c-aa9c-252c815463ef"
        },
        "item": {
          "id": "0343b978-5205-4114-b15b-8a097c1c6b43",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9aa1369e-96a9-4fe7-b285-058af6ed05c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc913de1-1cfc-4452-b26b-d987302ba907",
        "cursor": {
          "ref": "f73f8f93-3e61-4a5a-8c05-da042300d225",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "78b6649b-f131-4db5-afae-71b6bbf94aad"
        },
        "item": {
          "id": "dc913de1-1cfc-4452-b26b-d987302ba907",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "88886b15-8e7b-414c-bb4c-b029d3f08acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af4f2f8-f450-47b9-8bbf-73dd2628b50b",
        "cursor": {
          "ref": "ad6fdc7f-7bd2-472f-a6a5-d46270a371f0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d50ca685-dbf1-484b-acb2-b520c39057bd"
        },
        "item": {
          "id": "9af4f2f8-f450-47b9-8bbf-73dd2628b50b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fdd6d4ec-2505-4ae3-b3f4-25b66e501036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a48a8-9c02-42ae-a019-8dd3b190b5b2",
        "cursor": {
          "ref": "6b8d705d-1ea1-48f6-af03-30c71d778a6c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8bb72fce-7260-452d-baf5-afa2f7e87bf7"
        },
        "item": {
          "id": "7f3a48a8-9c02-42ae-a019-8dd3b190b5b2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d6772967-73a2-40f4-9883-2d854e93eb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb099a69-1c5d-4cae-9b87-d738ed830523",
        "cursor": {
          "ref": "c40759d3-611c-4b67-baf9-d12cb142fb51",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "856cc00d-c276-4aca-b859-973da79d404e"
        },
        "item": {
          "id": "eb099a69-1c5d-4cae-9b87-d738ed830523",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc1b4b46-6947-44ab-af1f-af8df8839086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d498b5d-7c1b-4a40-8d3b-401078c2b4eb",
        "cursor": {
          "ref": "1f95008f-489a-4944-8f4e-a90b4ad6e11f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5abb5cd3-89f2-4f10-ba17-61879a371786"
        },
        "item": {
          "id": "4d498b5d-7c1b-4a40-8d3b-401078c2b4eb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "21d4ec64-2b2d-48bf-9734-0d882092cc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3817b6-586d-4098-a6fe-1292116400fb",
        "cursor": {
          "ref": "fdb41540-f46f-4098-b401-3535d52aa9dc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d1accfa7-f7d6-480f-8ae4-eef814a30df5"
        },
        "item": {
          "id": "ea3817b6-586d-4098-a6fe-1292116400fb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b6b40502-9b05-40a5-8ebd-1f9b088f261a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef48b02-946d-4793-844f-dd9dde845457",
        "cursor": {
          "ref": "a263f75a-b96d-4e59-8514-18956f1cc902",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "adfa2c35-3486-4fe6-9760-e95670623e3b"
        },
        "item": {
          "id": "8ef48b02-946d-4793-844f-dd9dde845457",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0bcd4668-3291-4000-92b3-7ac607294495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d907f06-6d28-4658-ab92-d822bad4e9bb",
        "cursor": {
          "ref": "96a780e3-7548-4ab8-92ba-382d20d1ae10",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "77bbd740-fc71-4f32-b1c4-123d539a472a"
        },
        "item": {
          "id": "7d907f06-6d28-4658-ab92-d822bad4e9bb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8b0f3fd9-365c-47b9-aef9-83d8b9cc0740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2f2da8-3b3d-4b13-a3ed-21cc5189fc04",
        "cursor": {
          "ref": "995d4c5d-5b68-4ca0-97f8-1c2fbb8b3391",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ee192508-934a-43fa-b237-f8073bdb4f9d"
        },
        "item": {
          "id": "8a2f2da8-3b3d-4b13-a3ed-21cc5189fc04",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8ed78ed3-5320-4866-af65-10873a5aacdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc11be8-699f-40af-84ed-e90a2f48049b",
        "cursor": {
          "ref": "bec62578-49e5-4b09-aabf-9e7e73e527eb",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "82fe1045-4489-4957-bdd6-40f446642d1b"
        },
        "item": {
          "id": "dcc11be8-699f-40af-84ed-e90a2f48049b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7e6d5db8-381c-41a8-a099-bca963570ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1de1070-7deb-4ea2-b5f5-f44e05006b39",
        "cursor": {
          "ref": "64465cf9-e25c-4acc-933a-83ee68eb4307",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f8e57d5c-b4ba-46d5-9752-aac52c361fa9"
        },
        "item": {
          "id": "b1de1070-7deb-4ea2-b5f5-f44e05006b39",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0be7a37b-a416-46c8-b7ff-13ac3ae103ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61488a4-d5ac-4ad5-aca1-f115a0adc1cf",
        "cursor": {
          "ref": "2f490566-45b2-4dc3-a3b9-4296dc95bcd2",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "efa9e4f5-d68a-4814-bc3b-2296a799b8a2"
        },
        "item": {
          "id": "d61488a4-d5ac-4ad5-aca1-f115a0adc1cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "458fb0fa-65ed-4154-b545-2a29cc431401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afa4f07-d317-4405-aa5c-8a210aef7600",
        "cursor": {
          "ref": "97e5fbad-5372-40e8-8ca3-32bd482a7785",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "afb74ccb-51f3-4694-9575-a74f7aa799a3"
        },
        "item": {
          "id": "2afa4f07-d317-4405-aa5c-8a210aef7600",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "51683a02-37f7-47cd-a56f-2c9570fb6105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7c110b-fd6a-47cf-96ba-b20206e06ad7",
        "cursor": {
          "ref": "8976f68c-e396-411b-bf32-cef8506793fb",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5451f9a6-ae55-402f-b148-bc413edffd59"
        },
        "item": {
          "id": "bc7c110b-fd6a-47cf-96ba-b20206e06ad7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b452c97b-9ee4-4b82-8e96-c41389c2c9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64989275-0711-4fa1-9af5-71f68ab8b082",
        "cursor": {
          "ref": "ffa43304-da47-4cc5-9437-1245aabe10c1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "36a075df-6da6-4f22-a360-04ed253ac17d"
        },
        "item": {
          "id": "64989275-0711-4fa1-9af5-71f68ab8b082",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "05933780-b522-4f55-86be-d7241956f957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facdf065-15da-4576-bf5d-0bfe35c354dc",
        "cursor": {
          "ref": "a54afea9-1cc4-4f05-8f83-5c8ad2e13093",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "06acf358-a560-48d2-ba63-fac6ea171b59"
        },
        "item": {
          "id": "facdf065-15da-4576-bf5d-0bfe35c354dc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5c4c9ccd-be0e-4880-86e4-b4ba7bf79da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26080df-f8c7-4d52-a6b4-c58b30bc5008",
        "cursor": {
          "ref": "197e5ffe-08cf-4e81-bfc5-d63d7e567794",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7d78a533-0331-4f5f-b52f-9680a7d02df8"
        },
        "item": {
          "id": "c26080df-f8c7-4d52-a6b4-c58b30bc5008",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "820a5a83-67c7-433c-918f-257ab3164012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d878c85-1ef8-4854-9d6e-b5356ce188e2",
        "cursor": {
          "ref": "21f3075e-a567-4ffa-9630-3526bb70df98",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "daeb9f15-040f-4e84-8f29-fb2c619b0bda"
        },
        "item": {
          "id": "0d878c85-1ef8-4854-9d6e-b5356ce188e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7a7d8c18-6857-4fb2-b3e7-6aa286511627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cf7933-f144-4aa1-a917-c8292484f1d8",
        "cursor": {
          "ref": "95355bb9-3461-44de-9269-f1a14843fc71",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "89935168-0e33-49d6-9970-f6e4ceef7d84"
        },
        "item": {
          "id": "83cf7933-f144-4aa1-a917-c8292484f1d8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1661c589-ffca-4856-bd08-22c89f6fd553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b96ab5c-e744-44b4-95aa-ed42e6c748bc",
        "cursor": {
          "ref": "8ed48081-a620-4488-a3f2-61e03ae606b9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5e49a1aa-c740-4680-bd28-15d504b84d7c"
        },
        "item": {
          "id": "5b96ab5c-e744-44b4-95aa-ed42e6c748bc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "725af363-fb6d-4393-a9e2-b65da058b635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef20b168-b309-4f89-b1a8-9d85f7078657",
        "cursor": {
          "ref": "bf3656bf-c9b4-48ce-94f2-39524bd284f8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "140fa5d5-c1e9-47fd-bde4-4b5f471d21d2"
        },
        "item": {
          "id": "ef20b168-b309-4f89-b1a8-9d85f7078657",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "60419a05-7a4c-4c2b-9f31-e806d8e2d9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42c6c17-e42b-4b0c-b09c-ca53de1d75ce",
        "cursor": {
          "ref": "323797b0-73c5-4ea4-93f2-89a610be721e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "03d257bc-753a-4bb6-b04e-828a09e6517f"
        },
        "item": {
          "id": "c42c6c17-e42b-4b0c-b09c-ca53de1d75ce",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6db02cbe-1fb5-4490-8631-fc3436454a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf7ac40-9144-4324-9edf-960b6f0e192b",
        "cursor": {
          "ref": "b5806536-4546-4e8e-8457-d37407b0dabd",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ffa74c17-1126-4077-a045-b337ed2e1cb3"
        },
        "item": {
          "id": "4bf7ac40-9144-4324-9edf-960b6f0e192b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cb0323f9-2908-401c-bf54-c79265ffd47b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e841ab72-bf99-48c7-a86c-367a90ed5bae",
        "cursor": {
          "ref": "39ad3ac0-e218-412e-af52-daf810eb766a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f0752b47-e274-4d8e-be66-277d1afee623"
        },
        "item": {
          "id": "e841ab72-bf99-48c7-a86c-367a90ed5bae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dc40a608-9303-4dda-a99b-8b1a85222346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e337c7-2efa-4c8e-b565-a8f635fecd5b",
        "cursor": {
          "ref": "a166b2f2-d72d-4424-9665-99826b619681",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "95b9a616-653e-41ff-9e0d-d31a403458e3"
        },
        "item": {
          "id": "03e337c7-2efa-4c8e-b565-a8f635fecd5b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4e946ce5-bbee-49c4-a19e-6fa8d08e4c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c820c9a4-e446-456d-8702-1a2fec448cf1",
        "cursor": {
          "ref": "0421c0b3-1496-40b3-9f28-1c378e116e81",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "83b7dfe7-317d-4736-b593-e876fdb68647"
        },
        "item": {
          "id": "c820c9a4-e446-456d-8702-1a2fec448cf1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d5838585-0233-4cc2-8dc9-7bd04f205723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d286ff0d-7c06-44b2-8b17-175fd57dac96",
        "cursor": {
          "ref": "7a07a00e-4181-403a-b028-57bb60bf29eb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8b0df46d-b8cb-4bb9-8fc2-29e778625fd0"
        },
        "item": {
          "id": "d286ff0d-7c06-44b2-8b17-175fd57dac96",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "11624a9b-5c69-47fa-9682-0f16f63d107e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026bd440-2ac4-4a97-9747-c78245bdcbcb",
        "cursor": {
          "ref": "ffc776fa-3e78-468e-a7d5-951c1bd3070f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7fc76830-1089-4447-bd5b-b80df8bd8023"
        },
        "item": {
          "id": "026bd440-2ac4-4a97-9747-c78245bdcbcb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "067e773a-f365-4354-adc1-70eed0aa7609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe08cb4-22bf-4047-b948-d4d0c49281ea",
        "cursor": {
          "ref": "a4e8722d-d472-4880-81e8-da381a2aaee9",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d22316e5-bee9-4d14-904b-7456d54732f3"
        },
        "item": {
          "id": "7fe08cb4-22bf-4047-b948-d4d0c49281ea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1120168d-081b-418f-9adc-f0f8bec9b665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a8e90d-a351-4cb3-9902-5c7f35b21213",
        "cursor": {
          "ref": "c17f9a8c-aa0b-4626-9574-25b20e1bcffb",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dab5ad1e-50a1-49b6-8b8a-f890d0f00dba"
        },
        "item": {
          "id": "92a8e90d-a351-4cb3-9902-5c7f35b21213",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4d062f0-d83e-4bcc-a401-b682c0886837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265174ec-04f8-4c24-9756-52be32f462e2",
        "cursor": {
          "ref": "73cb1395-0913-4ea9-894c-65f02739e761",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1d96319d-af08-4cf9-99e8-ee2777faa9dc"
        },
        "item": {
          "id": "265174ec-04f8-4c24-9756-52be32f462e2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de006037-0c33-4719-b56c-55094f37b3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccfcf6c-50d8-46ad-889b-753d54098161",
        "cursor": {
          "ref": "4bf05496-3b07-48bb-8893-20bfa2164853",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7f0746d1-74c2-4dd0-983a-119af42b63d5"
        },
        "item": {
          "id": "9ccfcf6c-50d8-46ad-889b-753d54098161",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0d1def65-ec33-473e-aa5a-5478ab43cd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77facfa-e1fa-4e2f-9648-0eb19491eb96",
        "cursor": {
          "ref": "47019ce6-bef5-4a9e-89ee-4f46bf19f8b0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "04e42250-7725-4783-8230-fb07ed81d685"
        },
        "item": {
          "id": "d77facfa-e1fa-4e2f-9648-0eb19491eb96",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1984b0ec-1a06-4502-80dc-0b32c7341c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b7a0af-4446-4236-b3be-5d1e63f3b301",
        "cursor": {
          "ref": "e57c5adf-f6dc-452e-ba25-0315c9fcbcb0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b6361dd0-9920-4c3b-b89e-276ccfa08d5f"
        },
        "item": {
          "id": "58b7a0af-4446-4236-b3be-5d1e63f3b301",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2f41f8aa-a93e-4da8-883b-e7d97e0f9932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafb7ccd-0039-4fa6-8f48-624cf32112dd",
        "cursor": {
          "ref": "2750a925-2b6f-43a5-835d-74dec124dc61",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ba916025-8092-4f88-abeb-ab429124cb9e"
        },
        "item": {
          "id": "aafb7ccd-0039-4fa6-8f48-624cf32112dd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dc613e0f-e916-4881-ba10-20b61b5c4028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8388506-6fe2-4f8e-864c-f16a2d74a9c7",
        "cursor": {
          "ref": "67bd460a-495b-4e65-bd70-0f810b9b1d19",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "857cc82e-adac-424b-b240-20ad784fc525"
        },
        "item": {
          "id": "e8388506-6fe2-4f8e-864c-f16a2d74a9c7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d98514e5-f6d8-45c3-b9ce-376da7372cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc30bd0-12e6-4276-97e5-d3184cdaafd4",
        "cursor": {
          "ref": "543f15f2-0d61-45d2-8b19-7453dc8acbfe",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "01dcc8ae-2026-41f0-8eb4-2851b926ea49"
        },
        "item": {
          "id": "6fc30bd0-12e6-4276-97e5-d3184cdaafd4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5d6351fa-5cbc-44ff-9164-72d9cc607513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6802143b-4ff9-4486-b999-770eb8bf1d97",
        "cursor": {
          "ref": "12f467dc-cb3f-45f2-a628-d28f35ccbad6",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8b887d94-d856-490b-aa48-a8b32d639e46"
        },
        "item": {
          "id": "6802143b-4ff9-4486-b999-770eb8bf1d97",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "edd4010c-c767-4c5f-b87d-0a28a849a8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02fd081-4872-4037-8178-a1f3858d9f72",
        "cursor": {
          "ref": "9d615e00-bb2a-44cb-984a-2fd57ea393a2",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3ba91f1f-6af2-49cd-89c7-70fd85304fb9"
        },
        "item": {
          "id": "b02fd081-4872-4037-8178-a1f3858d9f72",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ad6d0fe1-4154-4902-bad5-7e368186f746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9640290-0d64-46c4-93ad-387fe5a737eb",
        "cursor": {
          "ref": "fb10f89a-b5f2-4f65-bc9f-d0ca92d0f453",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "33ae11a6-449b-415e-ac35-e62519bedadd"
        },
        "item": {
          "id": "b9640290-0d64-46c4-93ad-387fe5a737eb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4e9107ec-a412-412d-acc3-44dd091280dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063c823c-eb0c-4d7b-bc49-3e924aab908d",
        "cursor": {
          "ref": "3a3a4e1d-d7f2-4d2d-8f14-03733d92604a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "782fc1e8-ba40-4505-9e30-8d27a5bd2780"
        },
        "item": {
          "id": "063c823c-eb0c-4d7b-bc49-3e924aab908d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e73fdfb6-ce00-453b-b1ce-3c041a54c6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8b97fd-7f8c-44bd-8282-d367718b0394",
        "cursor": {
          "ref": "244e28d5-f70f-43cc-b065-04c2970f47ea",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1ffc7465-6b5e-4d4c-baeb-cb1b6d805df7"
        },
        "item": {
          "id": "0d8b97fd-7f8c-44bd-8282-d367718b0394",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3cff8f92-ec12-4ed9-9394-f75a57beccbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a82fd1-19e1-4d7f-8648-ed3e44bd9865",
        "cursor": {
          "ref": "a6ae5dfd-c175-4d64-b528-139a7f396d47",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "38233b85-d531-4291-9ace-f7a9fa70c32e"
        },
        "item": {
          "id": "d9a82fd1-19e1-4d7f-8648-ed3e44bd9865",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "154083f2-6648-41c8-af01-46601f57f893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4878e9-5649-4101-9824-34e05d02286f",
        "cursor": {
          "ref": "4bf6cbfb-9441-4f25-a01d-4ff884f87a05",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a713e11f-97ab-4545-b9d4-a1bffdeefaf9"
        },
        "item": {
          "id": "3e4878e9-5649-4101-9824-34e05d02286f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2d3e6751-e7a1-4361-8cf5-fda5b8c68b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241120a1-679a-40c1-aa1b-d5beb2387c11",
        "cursor": {
          "ref": "2904fec0-0a9c-400f-b988-9298edb687aa",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2202608a-e4ea-4844-ab8e-690a0e9c98d1"
        },
        "item": {
          "id": "241120a1-679a-40c1-aa1b-d5beb2387c11",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76c203f9-1786-4adb-a0d9-3b7f82f53ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37da339-6ae5-43db-8cb2-28d7d01c19c8",
        "cursor": {
          "ref": "937d1c6b-7e49-4d5d-b7a0-0e9baf7f07bd",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dd9731c5-4724-48f8-be7c-a7c551397c8c"
        },
        "item": {
          "id": "e37da339-6ae5-43db-8cb2-28d7d01c19c8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "103da754-9d78-4cc3-aca6-7c5f7d49f17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f51c5eb-725b-4c9f-99bf-a5f877164b15",
        "cursor": {
          "ref": "94333305-533d-455a-9c66-f3636977bd20",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b2c14f20-486a-49e9-a036-1a235f54cb3f"
        },
        "item": {
          "id": "8f51c5eb-725b-4c9f-99bf-a5f877164b15",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "58c1f248-a2f7-447c-82ce-e25ce213b67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c297edf7-9e87-411c-9294-a32e349c8319",
        "cursor": {
          "ref": "db04ca84-85c3-42ae-a42a-e25dffce18de",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6f668732-6393-4edd-a073-dc309f8fdf03"
        },
        "item": {
          "id": "c297edf7-9e87-411c-9294-a32e349c8319",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8d34e637-3120-4430-9b0c-354ec147699a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0e0626-de00-4970-8f9f-cdddc37969d3",
        "cursor": {
          "ref": "e4da938f-99b3-4223-9c19-b67c762f0637",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "33506317-7d89-4606-9699-e2f747ae29b5"
        },
        "item": {
          "id": "3a0e0626-de00-4970-8f9f-cdddc37969d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a4599d56-b033-483e-8e43-af5d22273c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd47625-da04-4743-a1a7-cbd0905fc770",
        "cursor": {
          "ref": "2c803f75-e94f-4dc0-ad9b-9905f0cc6161",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8e50177b-d54f-4d7c-a687-f809ad174175"
        },
        "item": {
          "id": "efd47625-da04-4743-a1a7-cbd0905fc770",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1bd36196-a4d5-4821-b2ca-2b454307119e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215ed8a1-b74c-4df0-a05b-cad9668b3a98",
        "cursor": {
          "ref": "e95276ce-5a5b-4e13-8a1d-ca14a23237d6",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "eb478bc4-be46-48ed-ad9d-a101456528a4"
        },
        "item": {
          "id": "215ed8a1-b74c-4df0-a05b-cad9668b3a98",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "322ffd6e-ee18-4503-be2e-b555848f80c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9185efd4-6a4d-45da-898b-a8377479012c",
        "cursor": {
          "ref": "81e4bc81-2d62-4036-9331-73f1d947abab",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9e63dca7-d7de-41d7-ae8d-ea5253d90268"
        },
        "item": {
          "id": "9185efd4-6a4d-45da-898b-a8377479012c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ead1cb53-deab-480c-bd0c-13335621c3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237c0332-194a-4fda-ac3f-818b653fb232",
        "cursor": {
          "ref": "9a34bcc2-4410-458b-9b9a-7364ba9b3d5c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "79bb856d-3752-4e6f-a453-f08db71d30ed"
        },
        "item": {
          "id": "237c0332-194a-4fda-ac3f-818b653fb232",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d585fa70-c81f-428e-9d0a-502053cd94db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb2b2f4-26ae-4eb9-8de8-1dc5fb344357",
        "cursor": {
          "ref": "dcaf8160-8acf-49fd-bc16-72971734e14f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c4d8d77e-886d-45b8-99fd-5e28181a6065"
        },
        "item": {
          "id": "bcb2b2f4-26ae-4eb9-8de8-1dc5fb344357",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cc097d7a-ff02-4197-a18c-35aaea7b38e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff82aee-d84b-4b3b-8b45-47d3208d127b",
        "cursor": {
          "ref": "1b066774-b80c-43ef-a90c-fc1b7ed05dcf",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6cceb410-8659-48e1-9278-9789fb8e4e48"
        },
        "item": {
          "id": "8ff82aee-d84b-4b3b-8b45-47d3208d127b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6eb836fe-be20-4fc5-ada0-3a0a1dd25286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805a2337-f45f-4f1b-a632-2755202c9855",
        "cursor": {
          "ref": "7eb4d236-9dbb-4738-b8c9-50d69f6dc21c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "24951313-9de0-48f8-bd27-8a8266625611"
        },
        "item": {
          "id": "805a2337-f45f-4f1b-a632-2755202c9855",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "713d504b-847d-40a6-8e96-d40d15eae807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5bd4a2-a637-4503-9314-11ec11bcb997",
        "cursor": {
          "ref": "1ff011a4-ea83-4e51-a674-5e21ee019956",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "90716128-e14d-4818-a634-b5cfe97852e5"
        },
        "item": {
          "id": "db5bd4a2-a637-4503-9314-11ec11bcb997",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ec504d82-a621-47ae-a3c0-83d8b26f6a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c06dd3c-3897-4aeb-bb6f-5b28e597be67",
        "cursor": {
          "ref": "4534ce95-dab0-47e9-9fa2-25fb88d7f9d1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aa7f6394-9c8e-4010-90f0-444fb1133dd1"
        },
        "item": {
          "id": "6c06dd3c-3897-4aeb-bb6f-5b28e597be67",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8c3a7629-dfd9-4a39-9e14-3a943fa996b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d86c920-825d-40ee-8460-48e38d9e398b",
        "cursor": {
          "ref": "c81111b6-15f7-4486-a4ef-8404bd44037a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "073e4b2f-1f36-4563-adbe-84ab1079a3ee"
        },
        "item": {
          "id": "5d86c920-825d-40ee-8460-48e38d9e398b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d634f092-7bb1-45a1-9785-4d69fecb6e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826eea84-ded1-462c-b21c-c91ed006064f",
        "cursor": {
          "ref": "e635da8d-7aab-47aa-b457-30d0f38be315",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "57aea1a8-a3f4-4db3-ba05-6e378b329f44"
        },
        "item": {
          "id": "826eea84-ded1-462c-b21c-c91ed006064f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "663c76da-a790-4bbe-8405-c064450a2d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc910016-12d3-4998-9d78-95eaa3b70f40",
        "cursor": {
          "ref": "5dd55e9e-304c-497a-93f5-5279de8d9d0a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "712e20cf-3817-41eb-9362-88ff41da985d"
        },
        "item": {
          "id": "fc910016-12d3-4998-9d78-95eaa3b70f40",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6cd0c660-2aa5-4629-9312-c5c485ca2ecc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26153ea3-9762-4c36-b9b9-149c73955234",
        "cursor": {
          "ref": "80deb431-b341-43d9-90b4-6b554c50b0e8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e3e71fff-b282-416a-80e1-2e9e33bdccfb"
        },
        "item": {
          "id": "26153ea3-9762-4c36-b9b9-149c73955234",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "425288d6-3657-435f-863b-d9888f1c5a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ef0b9e-6ed6-4583-87b4-58a9c499df1b",
        "cursor": {
          "ref": "1089bb75-2063-403e-9c18-daac7f264eed",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "daa73c7e-8fbd-4660-80d0-a3f254c84f86"
        },
        "item": {
          "id": "f2ef0b9e-6ed6-4583-87b4-58a9c499df1b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "89944a28-e370-4c21-afe3-cde0e297837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7630c052-8eb8-4f3b-a32d-93836d69857c",
        "cursor": {
          "ref": "0255ed4f-7205-4957-beb5-de7a7940dc70",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "be3e34ca-85df-4ed1-9211-86408575268f"
        },
        "item": {
          "id": "7630c052-8eb8-4f3b-a32d-93836d69857c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "358e7cb0-7428-44a7-8c14-d9c73771b4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b62ee-e162-4b8a-8100-a10880dc34f2",
        "cursor": {
          "ref": "bc9364c1-27b8-4ad8-88aa-0c4834d08b87",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "88c642be-2905-4715-97e7-a27259b9535e"
        },
        "item": {
          "id": "c57b62ee-e162-4b8a-8100-a10880dc34f2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9a9964b1-8677-4aa8-8f45-836deb366f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632432c0-bdd3-4aa0-99d2-3985016e498e",
        "cursor": {
          "ref": "0cb41e54-c917-4088-b512-f28c32aff4b5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "32521458-4ef3-4ae6-a24b-046324c4f662"
        },
        "item": {
          "id": "632432c0-bdd3-4aa0-99d2-3985016e498e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f79b2217-2ae6-48fa-8d01-1886285623f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e64b42-9e6a-401f-8bbf-2125566b8d71",
        "cursor": {
          "ref": "7892972d-87d2-4e6e-acef-d807fad11dd2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c7f1a607-ca59-470f-950b-a96f15a29a24"
        },
        "item": {
          "id": "50e64b42-9e6a-401f-8bbf-2125566b8d71",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9bdb4af0-d42f-40a2-87b4-9b34ecb772fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509d7293-aa08-4f1d-b8b9-72ce83a24ece",
        "cursor": {
          "ref": "93f28df5-48c0-428a-840b-cc7d8a527647",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "86abc6c7-125c-4ce1-b9c7-ca5378b4ada6"
        },
        "item": {
          "id": "509d7293-aa08-4f1d-b8b9-72ce83a24ece",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "51f2e73a-4358-4543-9dfe-d5f84c87acb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106d19a2-9e16-410e-9c27-fe32d35057e8",
        "cursor": {
          "ref": "7881cbba-24e0-44f1-b7be-245ceb812112",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "02868324-7ea0-41db-9d71-07568678d3df"
        },
        "item": {
          "id": "106d19a2-9e16-410e-9c27-fe32d35057e8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d839d23c-cf4f-4dd9-8ebb-8f37930e5ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7cfe68-491a-40c1-8c42-da22a3ba6b09",
        "cursor": {
          "ref": "5b6cbe6a-9be7-4f20-a2ca-8c2647adbe78",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "17d763ba-1a02-4a28-95f8-3eb3a9a4a228"
        },
        "item": {
          "id": "da7cfe68-491a-40c1-8c42-da22a3ba6b09",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "955b4bc1-a873-4ccf-b7e5-e22002bb2ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdfb12c-1d43-4d6a-8571-c8a920a2f5fc",
        "cursor": {
          "ref": "0805bd2b-05ae-453f-b1d9-3ad43190528c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "92b8f516-630c-4b6d-9c22-5f48c6979a25"
        },
        "item": {
          "id": "5fdfb12c-1d43-4d6a-8571-c8a920a2f5fc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d8f2e06c-5294-4f0e-b30b-edc33ea030c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de30ed8b-ff33-4309-968b-e6f286aa3cd5",
        "cursor": {
          "ref": "efc8e2c8-8cf5-4c4a-8e72-38c3ccaf2b62",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "79ed8c6c-c981-4f65-9876-518b003321c2"
        },
        "item": {
          "id": "de30ed8b-ff33-4309-968b-e6f286aa3cd5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "91cded32-5de1-4b19-a0d1-402bdbe3077d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022972c9-8b25-4425-9237-a445b75e1aff",
        "cursor": {
          "ref": "d7940cb8-c964-4d57-a3ed-cef4595c6a49",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "95e0f19d-d084-40c0-beb1-515280d503d2"
        },
        "item": {
          "id": "022972c9-8b25-4425-9237-a445b75e1aff",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4ba7c049-9010-4c54-bc31-7eb78ebddf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047d6faa-9b9a-4d27-b2a4-7627ec8b3234",
        "cursor": {
          "ref": "8df45b9b-2a23-42d1-b7f9-225ec50850f2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "46b565a9-c329-4871-9a23-546e85987637"
        },
        "item": {
          "id": "047d6faa-9b9a-4d27-b2a4-7627ec8b3234",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4f4a31fe-d5dd-4772-bc1e-3bf6b2380ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0408e91f-b958-4f26-8621-db8cf593ff09",
        "cursor": {
          "ref": "f8ddea0c-a211-4818-ba29-bb9d859ee571",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "88ab7dda-6ffa-4249-9890-1dedb9c2206e"
        },
        "item": {
          "id": "0408e91f-b958-4f26-8621-db8cf593ff09",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c872521d-c036-48ed-b25a-2247b5acbbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e065bfe-359e-41ae-873e-b02dc8172e8b",
        "cursor": {
          "ref": "63c02f38-61db-428b-808e-a3809765b015",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a50d96d5-6a64-403a-85d7-994be7de18c5"
        },
        "item": {
          "id": "0e065bfe-359e-41ae-873e-b02dc8172e8b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "74df3632-e049-48b0-8c63-b984dcd1fd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b5a675-ac8d-47b0-9055-c13c0b7bfe1c",
        "cursor": {
          "ref": "65cd13d2-4b2b-4771-8e25-71539b19ed12",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "00c36341-38f8-4b1e-a03e-5808351782e6"
        },
        "item": {
          "id": "21b5a675-ac8d-47b0-9055-c13c0b7bfe1c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7b396803-126e-433e-8a3a-018e47c7f02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9985535f-2121-44ba-9f4a-e45f3713c668",
        "cursor": {
          "ref": "c8760d25-c0c5-4974-8642-a794707062d0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "883a48c5-ac74-4a42-bba9-2cea53f9b250"
        },
        "item": {
          "id": "9985535f-2121-44ba-9f4a-e45f3713c668",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "32649f1c-5806-404a-9055-9dad98c41b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca0d6fe-b6fd-47ec-9135-8134a37f5720",
        "cursor": {
          "ref": "dff23408-fe85-4559-b667-76353d2bd610",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9d0842e5-d43d-42af-8cb6-74161effbd61"
        },
        "item": {
          "id": "5ca0d6fe-b6fd-47ec-9135-8134a37f5720",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "739bb840-7cb5-47f0-a7f3-13fd44938943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b074094-5df5-4bd4-96d0-5c25af1ebc04",
        "cursor": {
          "ref": "ceff6da7-5fce-4447-9d22-d65107d4682a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "00bc054c-9f16-427c-b089-f3e1393ef2a0"
        },
        "item": {
          "id": "4b074094-5df5-4bd4-96d0-5c25af1ebc04",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6a03bbe2-c7fa-4d27-9473-437fbf03b061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7edb81a-d8bf-49a6-8611-e6a615b732fc",
        "cursor": {
          "ref": "76964f09-07ca-45b5-85d9-b826ae7f8d05",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "95083214-17c3-49d5-9e6c-af2b253a72fe"
        },
        "item": {
          "id": "e7edb81a-d8bf-49a6-8611-e6a615b732fc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "985782b3-915e-4202-b39a-3c5d698dddf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a51456-54de-40ea-8d96-19a678c4a38d",
        "cursor": {
          "ref": "891837c0-c8e4-42c8-986b-2f110fc2f11e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f6788749-c386-40b1-8ecc-069da65a0f18"
        },
        "item": {
          "id": "68a51456-54de-40ea-8d96-19a678c4a38d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "782013e1-8b1f-4bbc-a50a-8f1dc1ba54c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da748da8-ab4b-4927-8616-245fcfe4bca9",
        "cursor": {
          "ref": "cee588cc-c9c8-4b24-9dd2-25caed6f42bb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "be0554df-a70f-40de-a90f-be82918bc071"
        },
        "item": {
          "id": "da748da8-ab4b-4927-8616-245fcfe4bca9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "098ae84f-789d-4f75-87c3-b0fc7c5483d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ad0b56-9c7d-4a66-8290-f58d56f38921",
        "cursor": {
          "ref": "22ce03f0-5bf1-4dc3-bf64-0894813a3627",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bb770090-837c-4865-a793-54a070864e06"
        },
        "item": {
          "id": "10ad0b56-9c7d-4a66-8290-f58d56f38921",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6f0535d3-125c-4be7-bbcf-3dafd5d2a172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5d5e22-5727-43b5-89c0-80fa2cdd4f28",
        "cursor": {
          "ref": "325f7f88-0a0e-468e-a684-1f9a1785f694",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "915d8d47-380a-4e38-bb8e-6df29aa44f0a"
        },
        "item": {
          "id": "8f5d5e22-5727-43b5-89c0-80fa2cdd4f28",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "59148a8c-362d-4344-9e59-c23ef0da5064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdea8a35-d179-4fb1-b937-3ed818bf6131",
        "cursor": {
          "ref": "a8a96765-6042-4ba6-8c6d-df5937ed2afd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d070ca91-7984-410d-b949-cfab1c7f1873"
        },
        "item": {
          "id": "cdea8a35-d179-4fb1-b937-3ed818bf6131",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aeb99c36-e969-46d1-ac14-27972108c766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c751c32-75fc-4448-8984-3c3c4a21e2f9",
        "cursor": {
          "ref": "918b7370-c532-4ff4-8a82-b1269f15ca3b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8cb37e5c-66ba-49e1-8e97-4de70399d9cb"
        },
        "item": {
          "id": "9c751c32-75fc-4448-8984-3c3c4a21e2f9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "400947d3-9f34-4432-884c-3aaab1518ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a689cf-e73c-4500-9480-d67f75359c23",
        "cursor": {
          "ref": "b5aad40a-c717-4eb5-b7ce-353e24062b94",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9fcd3c3e-572f-4012-9407-7689663c4715"
        },
        "item": {
          "id": "46a689cf-e73c-4500-9480-d67f75359c23",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4acf5a08-efd5-4f07-b076-f0cbd3d53418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54537d4d-e7a3-4929-a6c6-90f6dc6de575",
        "cursor": {
          "ref": "8616a0ce-06cd-4f34-9e2e-32ad46ebfdcc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0a428767-f4dc-488d-987f-48c095a0b63d"
        },
        "item": {
          "id": "54537d4d-e7a3-4929-a6c6-90f6dc6de575",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0df10cdb-885d-4959-9222-be57f1898905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f360a82f-5cab-41b6-9dd2-a2b30536fb0c",
        "cursor": {
          "ref": "6b3a49b5-b852-4888-bb67-42f8d456a4f8",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4f69bcf6-b95b-4255-8b61-722fd2412f02"
        },
        "item": {
          "id": "f360a82f-5cab-41b6-9dd2-a2b30536fb0c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "36305911-f08a-4f65-ae27-d432694931f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e83ff6c-3cf0-4c1b-8d34-53da15f06db3",
        "cursor": {
          "ref": "82b4076a-c2f7-4f5d-933d-a2819b4cf090",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "81ba4fca-7146-4f4a-8c29-f372b14a7808"
        },
        "item": {
          "id": "7e83ff6c-3cf0-4c1b-8d34-53da15f06db3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0d4286f4-9f58-4dc6-8cef-8115d9ddfd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178e3dca-8927-40eb-8b37-d3bf3e898916",
        "cursor": {
          "ref": "cd2afb50-3f5e-432d-a631-ec447fbd2073",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0efd8c5d-7b1d-4cb6-b4bb-af60659cd34f"
        },
        "item": {
          "id": "178e3dca-8927-40eb-8b37-d3bf3e898916",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5485f964-8202-40c4-86b3-ca5b2afaaad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684db63d-312b-4695-ba93-88697a3dc488",
        "cursor": {
          "ref": "83ed0542-3bdb-452b-b4e6-920d19fbcaf7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "83604bc3-ed3e-46a9-a942-ca9171b97612"
        },
        "item": {
          "id": "684db63d-312b-4695-ba93-88697a3dc488",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b461cf4c-f0c9-481b-91b5-a640de75b972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c98433-229c-4209-b18c-ec4c5d28c857",
        "cursor": {
          "ref": "a829e1f0-48be-4518-b664-18dcd43668df",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d0017434-b23e-458f-81e3-c5bf4a9b9c67"
        },
        "item": {
          "id": "50c98433-229c-4209-b18c-ec4c5d28c857",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6a2a1ecf-ca3d-4491-b827-d5670c8d38b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e3b37c-274f-495f-a039-d36de660288e",
        "cursor": {
          "ref": "1ec4c546-60bc-47a1-b0ae-20345bdadc4b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e7f78e04-0ead-4c23-9ca0-a291718f594d"
        },
        "item": {
          "id": "d1e3b37c-274f-495f-a039-d36de660288e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "62d8c8ca-b55d-4bc9-8cd2-f41b183a947e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df019ee1-fa4e-4746-bb2b-daed65e87740",
        "cursor": {
          "ref": "a389c76c-c1eb-4b41-85ed-fd6a56afb86b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "55a94e5b-f336-4fe6-ad1e-56ceee96c1b9"
        },
        "item": {
          "id": "df019ee1-fa4e-4746-bb2b-daed65e87740",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b97f4b24-f6c2-40d4-8d27-29091d09fcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995b574d-4f5a-4322-afe8-91239e474d4f",
        "cursor": {
          "ref": "0bc91e7e-e216-46f1-8d47-72a4ef8dc105",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ff028377-027e-4e2f-ba9b-a17e49f829c9"
        },
        "item": {
          "id": "995b574d-4f5a-4322-afe8-91239e474d4f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2f7f6b55-ac12-45a7-a9d9-90eb6d12cf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e69f77f-0a22-4944-aab0-541cbb636687",
        "cursor": {
          "ref": "8f322152-76ac-440f-803f-5b49660459ce",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b9934431-c4c4-4d05-b041-b67cd7231847"
        },
        "item": {
          "id": "4e69f77f-0a22-4944-aab0-541cbb636687",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8b07f682-8ad7-4fd0-9fe5-c3f0b9dc78f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651f1ac2-f73a-4ae4-a2c6-3d73339d2ec7",
        "cursor": {
          "ref": "927495d0-a824-4d44-94b3-d999d7b8db7f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a2e43675-a207-45c3-8374-88eeb8975b3e"
        },
        "item": {
          "id": "651f1ac2-f73a-4ae4-a2c6-3d73339d2ec7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "91b895a8-d9b2-4b16-b3b9-9990a3766d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e68448-07d5-4139-96f0-49aa65ea73ab",
        "cursor": {
          "ref": "6f7f9bbf-a2e0-4a40-b3c3-e057860556a7",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eba379d0-11ed-464b-b332-6cec6099452f"
        },
        "item": {
          "id": "e8e68448-07d5-4139-96f0-49aa65ea73ab",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b8fa7457-9ad4-43de-af1f-f39b919ae428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d05e950-609a-4fb7-8f8d-1539129e3082",
        "cursor": {
          "ref": "090931a4-f68e-4173-a07f-85ff47afe394",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d65a7a16-7a18-4b77-a86f-08e3923d1967"
        },
        "item": {
          "id": "2d05e950-609a-4fb7-8f8d-1539129e3082",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "da29b0d3-d57c-4c1a-82b3-76624aba2304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77199aa9-6065-4b89-91e8-4d723c15c70d",
        "cursor": {
          "ref": "41e69a7c-c62d-465a-8721-1afbadfde87e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "eb38f298-f18b-4ef7-bb70-9f04e147ac8c"
        },
        "item": {
          "id": "77199aa9-6065-4b89-91e8-4d723c15c70d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "57d7545b-0fb5-4ef9-8888-16012102aa68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9180b6da-f8da-47d7-ac61-583eaebc175e",
        "cursor": {
          "ref": "3a800685-8601-45cd-b29f-b940bbf20a97",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4d76b784-dbfa-4a66-a237-9ccb4eb14457"
        },
        "item": {
          "id": "9180b6da-f8da-47d7-ac61-583eaebc175e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a843e3e6-9d42-4821-858f-1e75845b4de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e6ca3b-32af-4a6c-a479-be17cd09053a",
        "cursor": {
          "ref": "0ee40a2a-da48-4ce6-a9bf-d023fc0d8759",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fe5bd188-c503-4401-8007-8e4b7dcdc811"
        },
        "item": {
          "id": "e9e6ca3b-32af-4a6c-a479-be17cd09053a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b7b41619-307f-4359-88fd-02e99d432a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4207e1-0671-4587-a1a8-29a2f94fd5c9",
        "cursor": {
          "ref": "843ea707-0a09-48f9-8ee7-13696ab8c7ea",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9d7ccd3a-e899-4a3e-bce8-12b2b1f3ddbe"
        },
        "item": {
          "id": "2c4207e1-0671-4587-a1a8-29a2f94fd5c9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c8bf9562-ed08-4b4d-b150-99237b5d1fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8373fdd-442a-47bb-b016-a26a0dc436b0",
        "cursor": {
          "ref": "e7a95024-eafa-48ee-8616-f736fee9fc89",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e64b2b80-7ff3-4468-9bdb-fe3f236bc829"
        },
        "item": {
          "id": "e8373fdd-442a-47bb-b016-a26a0dc436b0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9f710abd-bcec-4ea0-90f0-8c6837666c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2546e73d-ed72-4c8d-84ef-5bfd91e17cf6",
        "cursor": {
          "ref": "bbf0fc93-5cc9-41f4-97fd-083a581a3e4a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e90905b4-85d6-4309-a75f-8a9e92a9013b"
        },
        "item": {
          "id": "2546e73d-ed72-4c8d-84ef-5bfd91e17cf6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8071b49f-30bd-463f-8436-6b20e77425ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ad0afe-b7f1-468f-8c47-cc6c246ab9a4",
        "cursor": {
          "ref": "6730d6c0-e58a-4f75-9c64-7e17a289635f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "26d70135-b29b-497b-bef6-a031fd54f4f1"
        },
        "item": {
          "id": "92ad0afe-b7f1-468f-8c47-cc6c246ab9a4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ad307d2b-5689-44da-815f-75d4f82e5056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d566472-2c77-4b00-9fb8-7639fdb7ba77",
        "cursor": {
          "ref": "06ebeb0b-3cb7-4914-87be-14a8769135f1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cde52bac-f131-4e21-813d-e4f9c0e988ff"
        },
        "item": {
          "id": "8d566472-2c77-4b00-9fb8-7639fdb7ba77",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bba77cf0-840b-4377-a0ea-09eccff1e71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa26114-1bf5-4bb3-a34d-487f636d40e2",
        "cursor": {
          "ref": "c66fd618-fdad-4109-9b54-e778b9e8d5d8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b5148c2a-4663-4544-be07-46f86330a55c"
        },
        "item": {
          "id": "aaa26114-1bf5-4bb3-a34d-487f636d40e2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1083985a-0ac4-4afa-b0a8-a18871c2d6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2a7aa6-a996-4dd9-bd14-3e71215937b6",
        "cursor": {
          "ref": "63020614-b396-48cd-b3a9-19675cddebda",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "24d23d12-cb63-45d9-aa53-4c704d6b5567"
        },
        "item": {
          "id": "be2a7aa6-a996-4dd9-bd14-3e71215937b6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "68bc59c2-3dcd-4642-8ae2-be2ab6e3e8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eb6adf-062b-4865-a10a-d95181df2523",
        "cursor": {
          "ref": "08513c70-9b76-4bba-ad78-6c3c3f5d4126",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ad3c94a8-cac4-4496-9408-ab2c8fc2bc76"
        },
        "item": {
          "id": "d1eb6adf-062b-4865-a10a-d95181df2523",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8fcdb566-4a92-49e6-86dd-55a2b7cc0a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb220619-f173-4fa0-8603-f3ed5936a06e",
        "cursor": {
          "ref": "d9fa5e71-7488-4943-8832-b55a2f0f2d9c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6be0fcdd-edba-45bb-a4a3-0f29a6514314"
        },
        "item": {
          "id": "eb220619-f173-4fa0-8603-f3ed5936a06e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b5ae3168-90fc-4fe4-a103-f995e80b3d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc63954a-0445-429e-8d9e-2f8f83b5011b",
        "cursor": {
          "ref": "781ff702-c582-43f3-a5c9-b4822c1dfab8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "56af546c-30c8-4ff9-ac04-7b719ec63ce4"
        },
        "item": {
          "id": "cc63954a-0445-429e-8d9e-2f8f83b5011b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f25b6fe3-2a0b-4ec2-ba01-8747b1840967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c552ae-63f6-4cb7-a4b2-638a9b38dc83",
        "cursor": {
          "ref": "2a37db21-3c72-4bd4-bf95-522e7015f8ba",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6d87c0c1-bb6c-4b3a-b075-a2e71434c0a1"
        },
        "item": {
          "id": "38c552ae-63f6-4cb7-a4b2-638a9b38dc83",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a9c50b1b-0503-4528-8906-30f199e00853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca2f971-25a2-47ba-a7bf-f011f6835008",
        "cursor": {
          "ref": "2f7b0cc8-acf3-4313-a26d-1c750ed8e040",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2e309830-0ddb-4a9d-ac88-feaf41b2b82a"
        },
        "item": {
          "id": "4ca2f971-25a2-47ba-a7bf-f011f6835008",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "30ab7d48-2f06-4692-8609-551a2d45b254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fddb8a-176f-474e-a704-5fe86dd29d92",
        "cursor": {
          "ref": "db70b24f-83a4-49cf-b47b-ad8342c21862",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8de34fe7-ead0-49fd-8907-d78cd5940cb4"
        },
        "item": {
          "id": "b8fddb8a-176f-474e-a704-5fe86dd29d92",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cc1ee471-af50-48a4-a4e3-2104994c7b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57967f28-5724-4ac6-99f7-40a885c32996",
        "cursor": {
          "ref": "e9e09627-1e7f-4b5a-a43f-1d98886cff36",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "226960f4-e2bf-4881-be01-b2c5a01db17d"
        },
        "item": {
          "id": "57967f28-5724-4ac6-99f7-40a885c32996",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a492797c-777c-498c-8eee-a30c3c533571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e4236c-c08d-4f1d-8afd-107de9da9c87",
        "cursor": {
          "ref": "cf1d108a-ee64-4208-bed2-0f4f10633454",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "14aaf229-e1f8-4351-be39-000940b45d13"
        },
        "item": {
          "id": "63e4236c-c08d-4f1d-8afd-107de9da9c87",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "780ae354-9786-4c39-8dbd-8bcc5a53cacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d767a1-b73a-41ab-afd1-c2f2fc3ab0c3",
        "cursor": {
          "ref": "17295131-363c-4e80-8d84-2bbfbb9b466d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2fb9edcb-3add-459a-a749-3bf7547bc0c0"
        },
        "item": {
          "id": "e4d767a1-b73a-41ab-afd1-c2f2fc3ab0c3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4c22fa5c-f293-4e3d-b96a-de04be803f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cc704f-456a-493d-9afe-a50852841e2b",
        "cursor": {
          "ref": "c69d5c04-fdc5-4774-9919-e20feef84eed",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "93817415-6cd7-48fe-b6ee-b069b27777b1"
        },
        "item": {
          "id": "74cc704f-456a-493d-9afe-a50852841e2b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d3431ab2-19d8-4df7-9719-f821d63a76ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4194e827-ba85-476c-9ff0-9c49c87e8cf2",
        "cursor": {
          "ref": "30314198-fbaf-4de5-9def-e4023bfc234c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5e6cf4c5-bd32-4267-94f9-872e10926123"
        },
        "item": {
          "id": "4194e827-ba85-476c-9ff0-9c49c87e8cf2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "682006d0-d73d-4a52-b523-acec0d97e4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3413da72-c5d8-461a-b0a5-1a855e42827e",
        "cursor": {
          "ref": "9f9a43c7-d41e-4cae-ae54-7eb4a6778c66",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "10e6767f-c460-4fef-a61a-593c5e6f9329"
        },
        "item": {
          "id": "3413da72-c5d8-461a-b0a5-1a855e42827e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6f833037-a909-4072-85a6-a604ddf9e7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b9e8be-17d3-4c67-b332-feaf7b81390c",
        "cursor": {
          "ref": "7cf49596-7728-476e-9b17-d5d6500cce79",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "485d41d4-86b1-401f-bfed-34d7f0b47b9c"
        },
        "item": {
          "id": "c7b9e8be-17d3-4c67-b332-feaf7b81390c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a3b9df2d-40a4-4e36-8c76-1d62344db834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf29524-3799-4102-91ae-0d19dd3da8fd",
        "cursor": {
          "ref": "c26abf54-a791-4de9-901b-474ab09514ad",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5ae044d8-17da-4373-8dea-334e58c80ae5"
        },
        "item": {
          "id": "cbf29524-3799-4102-91ae-0d19dd3da8fd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c392eedb-6188-4617-a15c-2e43311f569e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65466bad-573a-4727-9c28-7f20af0f8f4e",
        "cursor": {
          "ref": "dcec0001-c640-49f2-8f0b-67d2cebe394c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d66a47f5-8323-4d28-9db5-51578e1f20f3"
        },
        "item": {
          "id": "65466bad-573a-4727-9c28-7f20af0f8f4e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a0b80aeb-03ae-4c59-b334-8b33598ea976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c71ae9-067f-4d54-b2a1-b0ad792cebbe",
        "cursor": {
          "ref": "3d5042d7-9221-4c63-9b71-a4d20548cc4d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c3f0379f-5cef-4d97-90ae-e39c93e9061a"
        },
        "item": {
          "id": "76c71ae9-067f-4d54-b2a1-b0ad792cebbe",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "72fb5afa-3366-4992-ad7b-139a35c56cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedf504f-a2ea-45ed-96db-323c1cf5acb5",
        "cursor": {
          "ref": "4b4f343d-e4d0-4737-abac-cd94f9775a6e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e474750e-b69d-4f7e-be62-3294ce07a5d4"
        },
        "item": {
          "id": "aedf504f-a2ea-45ed-96db-323c1cf5acb5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "831eb902-a311-4ca6-9757-f9ed57fddd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6dd5f4-619f-45fd-a1d7-f0c692d7e811",
        "cursor": {
          "ref": "c8373d24-3896-4aa6-a4d4-b78d6e29f072",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "45f5b8da-738b-452b-a8cd-4e73e18d8d8b"
        },
        "item": {
          "id": "9e6dd5f4-619f-45fd-a1d7-f0c692d7e811",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e7de7119-785b-44c8-8a14-0c1597c32dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265c30fd-633d-4d84-8784-ba628cc25e7a",
        "cursor": {
          "ref": "99693066-75c3-4276-a106-4bf6616ad362",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "beb98b25-d837-4531-afc2-0fabfb0281f2"
        },
        "item": {
          "id": "265c30fd-633d-4d84-8784-ba628cc25e7a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c6f08e47-35a3-4bcf-bdf3-f02bc659acb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68f2859-fecd-4dc6-8ee0-afc9694423a3",
        "cursor": {
          "ref": "a36df090-7b05-4028-ba0f-7b74904b8aee",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3a26f1bf-7588-428a-a525-4b0bf77d9ff8"
        },
        "item": {
          "id": "d68f2859-fecd-4dc6-8ee0-afc9694423a3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3608e8db-c859-44f2-8c29-2d4f3b270409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4923774-79e4-43df-8e78-2c07490f5a68",
        "cursor": {
          "ref": "3b2fe4a1-221e-44cc-a39b-5f5d2b0a1c76",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "27982259-0fba-4c6c-82fb-0c56ccba8f6d"
        },
        "item": {
          "id": "f4923774-79e4-43df-8e78-2c07490f5a68",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d8782994-847a-40ab-918d-341c02d7ccb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddb1e14-7901-4877-89b0-094bc7bde4a5",
        "cursor": {
          "ref": "a28a4a8e-30c1-4a91-8e84-231a4d4a9788",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "080ee7c4-6741-4c5c-84a9-7d308d233793"
        },
        "item": {
          "id": "4ddb1e14-7901-4877-89b0-094bc7bde4a5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9480e382-af86-45a2-8afa-df2f226dea23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c76b179-6488-4bf8-acd5-4fa98d726f4a",
        "cursor": {
          "ref": "f85ec0d6-05c0-443c-a0fb-d3640af2add1",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "deb062df-c30f-4c6d-9d9a-7d33e0d0fd08"
        },
        "item": {
          "id": "8c76b179-6488-4bf8-acd5-4fa98d726f4a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a2ce835b-0abb-4dbc-80ef-9c64434f734a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c253546-4f08-4f8c-8f0d-036e09e47e9b",
        "cursor": {
          "ref": "2a8211a8-0dc5-454f-9253-11af04d54b4f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a6e80e1b-e335-4cae-8bcd-4e9589e38290"
        },
        "item": {
          "id": "5c253546-4f08-4f8c-8f0d-036e09e47e9b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3df72893-fcd9-4150-8e65-c218b3d8aa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0803cac-43ed-4e5a-a297-a5d96f369a33",
        "cursor": {
          "ref": "8e4c1e6b-d47b-45ce-8b37-d83e3c5ae3b0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e54f35cb-fd95-4e47-930f-0c68d33199ab"
        },
        "item": {
          "id": "b0803cac-43ed-4e5a-a297-a5d96f369a33",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8390cf15-6b48-40a5-9c82-311278f7ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd33336-9178-457e-831c-a9f3e2e051ad",
        "cursor": {
          "ref": "cf7661ed-ebc1-43b3-8036-ea788c18a719",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "55c9c74a-ef40-4c83-a3e6-ca74b8a1a5f7"
        },
        "item": {
          "id": "cfd33336-9178-457e-831c-a9f3e2e051ad",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b1b50fd9-09d5-4813-abd7-f0af0bb8e3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbf87f2-8c63-4098-a2ff-ec69293f59a0",
        "cursor": {
          "ref": "cfdb88d4-54ab-44bb-bb36-a943e834c678",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8842e7fd-ebff-4a58-b058-c2b5122c59e5"
        },
        "item": {
          "id": "cfbf87f2-8c63-4098-a2ff-ec69293f59a0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eae5a385-f315-4191-8f01-79d40f192953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace7c38e-a76f-455f-b9ca-c4e4fb7ca287",
        "cursor": {
          "ref": "e84e1035-eb70-4616-963e-30caebfadadf",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "af44c32f-b429-4be8-a483-74d55a7ca0fa"
        },
        "item": {
          "id": "ace7c38e-a76f-455f-b9ca-c4e4fb7ca287",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b8faab9c-9604-4e5d-b286-6dc5411d41eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5db8a1-3c91-4fcd-bd29-d8e580df13f1",
        "cursor": {
          "ref": "c87130f9-4eea-4786-87d4-70286e6998df",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "25d71687-1eff-41d1-804d-4ecea067b4e9"
        },
        "item": {
          "id": "7b5db8a1-3c91-4fcd-bd29-d8e580df13f1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "168fcc7a-e3d5-4330-b884-a57edc0a0520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e978cb8e-77a3-43f3-bf64-dba3da693adf",
        "cursor": {
          "ref": "2007c823-3565-4c85-bf19-0dd1f234c8d5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "de624a03-7c67-431d-b70b-1bf90f20c261"
        },
        "item": {
          "id": "e978cb8e-77a3-43f3-bf64-dba3da693adf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1ad3b34b-6753-4440-9f3d-60ff431fbe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f14ecf6-f4f7-474d-ba59-885233e4a2aa",
        "cursor": {
          "ref": "b52207ee-5a49-4774-9e9f-38887fbd242f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8632b170-b0ae-46b3-aaf4-081b18a4b3e6"
        },
        "item": {
          "id": "2f14ecf6-f4f7-474d-ba59-885233e4a2aa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9d24595d-8482-47b5-a5ef-fe7d67a470e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e685897-a414-4ab7-b2e5-18549ead34c9",
        "cursor": {
          "ref": "38fc0516-4573-4e17-9d00-9ef49b5e0be3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3b8b7c7d-6327-4baa-8217-03ba7ff3bddf"
        },
        "item": {
          "id": "3e685897-a414-4ab7-b2e5-18549ead34c9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7819b632-a528-494c-8da5-fdf58be9cdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3640bbe9-e369-497a-8c59-6ee0b9770f51",
        "cursor": {
          "ref": "eb0d0416-66dc-4dd1-a27c-25237aef9c75",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7f090b40-8d55-45d4-9516-82856ca403a8"
        },
        "item": {
          "id": "3640bbe9-e369-497a-8c59-6ee0b9770f51",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be8b5764-203a-419a-a97e-741302053f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1754e498-53cd-4949-9e82-f11bb72fa6c0",
        "cursor": {
          "ref": "c2cc6078-572d-4cf6-9bb8-bbf5ee6847f6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "76aa011b-43af-4185-b413-444ff042f927"
        },
        "item": {
          "id": "1754e498-53cd-4949-9e82-f11bb72fa6c0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "232a0305-5567-45bc-87d4-3daf1fd2cdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a045daa3-1af8-48b3-886f-ff5a91e75993",
        "cursor": {
          "ref": "6bd91088-aa9d-4e99-8746-df70a0bac473",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8541cec6-12bc-476b-a34d-ccadc8707e61"
        },
        "item": {
          "id": "a045daa3-1af8-48b3-886f-ff5a91e75993",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "870565e2-14fd-4af1-b522-3dd9273aef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a414dd7-41ab-48ad-aa9f-bb8568be040e",
        "cursor": {
          "ref": "67bc7109-87d1-46b7-af54-b7c0b736c38d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ba00ba71-cae6-457d-9fb1-752841df83c0"
        },
        "item": {
          "id": "4a414dd7-41ab-48ad-aa9f-bb8568be040e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "790fcae8-d49e-4274-8afe-a93c4803753b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fe3728-8ca6-40eb-b1b1-8154e55d27df",
        "cursor": {
          "ref": "3a83e735-13d9-47d5-8979-be158369e53b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7c436dd5-6130-4c3b-b82e-cde98703cb47"
        },
        "item": {
          "id": "f0fe3728-8ca6-40eb-b1b1-8154e55d27df",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "02ca63cf-da82-47aa-82cc-715e7d7daa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663e8eb3-4afa-4e25-a3c5-fc921787eb9b",
        "cursor": {
          "ref": "f1c9920f-29e5-4eaf-9046-9f97216d5a1e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "49ded4b7-d081-457c-8ba2-bdd0d98419dd"
        },
        "item": {
          "id": "663e8eb3-4afa-4e25-a3c5-fc921787eb9b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0825ffdc-3e5b-4b40-8d10-dcbbe26dd305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f6dadb-fde8-47e5-b647-5040b5580c43",
        "cursor": {
          "ref": "cd70ec66-d7a7-4334-919b-f3eab67236b7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "12afa25d-8907-4eb5-a8a2-f8143da09ada"
        },
        "item": {
          "id": "a3f6dadb-fde8-47e5-b647-5040b5580c43",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9ab3c832-af46-42eb-8066-40512e78c67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306c0a59-f918-4cf3-9c2e-65804ba77123",
        "cursor": {
          "ref": "df4cc7a2-e7a3-48e2-acac-5be59cd2805d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2d7f6153-081f-4d18-90b8-f9dcfcd6c1ff"
        },
        "item": {
          "id": "306c0a59-f918-4cf3-9c2e-65804ba77123",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e4b75bdd-86ba-4b9b-b820-5e9a2a817661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dc18e9-a4da-472c-969f-42c822454ef4",
        "cursor": {
          "ref": "d5d638d2-dfdf-45b7-8157-e8bcfd0d538f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d7b3d249-308e-4c7b-9116-51bc39d1b325"
        },
        "item": {
          "id": "43dc18e9-a4da-472c-969f-42c822454ef4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "014ae4fa-2aca-44aa-b19e-7d1bd8f27671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4388f6a3-5ab3-41c1-a822-43e575821a27",
        "cursor": {
          "ref": "62a8d0d5-0b34-46cd-bccc-d18b87b940cb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f3e70bfb-dfde-4de2-bde6-d57be4327751"
        },
        "item": {
          "id": "4388f6a3-5ab3-41c1-a822-43e575821a27",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a13f5f22-5210-4e9e-9ba7-c3ae710cf266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfcd2a8-a303-4733-bc65-797fdf5a9dbe",
        "cursor": {
          "ref": "bcfcd126-9066-436e-b27f-0a5fd657ab91",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c44b3e4a-b613-4200-82a1-4d126bfbeb61"
        },
        "item": {
          "id": "2cfcd2a8-a303-4733-bc65-797fdf5a9dbe",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fad5e7bb-f2de-4318-b3f0-c49f7a935aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a6bec5-61f2-4262-a146-bdd958d38362",
        "cursor": {
          "ref": "d3b1fa7e-7eba-43df-b469-4c5b109cd14e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3cece904-ce3b-43d0-9bc6-dd9f62ecf299"
        },
        "item": {
          "id": "47a6bec5-61f2-4262-a146-bdd958d38362",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c74139b4-4bff-4cd6-a4b4-ecef85ff00d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1feed69-0202-4b2f-86b2-295e144181d8",
        "cursor": {
          "ref": "8dab9753-6337-4396-a021-8d84805218fe",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8e4a31de-0a62-4f2e-bcde-88021c68f9b3"
        },
        "item": {
          "id": "a1feed69-0202-4b2f-86b2-295e144181d8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3dbde6fc-9086-47bf-b0b2-88b6c755a0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccdec3d-5ef1-4c86-bf34-db7f022c4ded",
        "cursor": {
          "ref": "4bbd3686-7e8f-43da-8f05-13d05f1334e7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3ccdf562-8da3-4605-b1d3-232e63b4dcca"
        },
        "item": {
          "id": "4ccdec3d-5ef1-4c86-bf34-db7f022c4ded",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7452abd2-afa1-4bd2-af9b-38d17f7262bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7195ebc5-841a-4541-bde0-581314fa4426",
        "cursor": {
          "ref": "1777ffae-f561-4a63-99a9-3031aeaa866d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0ee9eb9b-4eb0-4dbc-aed9-cee7e20bd82c"
        },
        "item": {
          "id": "7195ebc5-841a-4541-bde0-581314fa4426",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bb8bf806-e798-4718-9079-320c822449c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16d5dce-bdbc-444d-92f3-d3734eefbd35",
        "cursor": {
          "ref": "f0dcb1ab-6dff-4186-b04d-920e812e1b1b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "800fb7b4-a649-463b-b9e0-ae95929668b0"
        },
        "item": {
          "id": "d16d5dce-bdbc-444d-92f3-d3734eefbd35",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9be49436-d9e6-4c2a-805d-f0f4d7f8a7ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9470e032-133d-495f-8ea2-c3833a09f46d",
        "cursor": {
          "ref": "35522a1e-c5a3-43d6-8547-d42afb1bf6c3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6ac201b4-2f9f-4df1-bdc5-909cee89bad7"
        },
        "item": {
          "id": "9470e032-133d-495f-8ea2-c3833a09f46d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "068f9a07-6a87-4651-9d45-77e495e73d49",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8b8215-c2fd-42e6-afb4-f7b5ea136b83",
        "cursor": {
          "ref": "22a61e91-a077-47e4-a634-b5cec5956159",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9067196f-9ddf-43ff-b00d-0c02f20e37a0"
        },
        "item": {
          "id": "4a8b8215-c2fd-42e6-afb4-f7b5ea136b83",
          "name": "credentials_verify"
        },
        "response": {
          "id": "65d224b7-8f83-419c-80ee-87eca8382093",
          "status": "OK",
          "code": 200,
          "responseTime": 1392,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4467b1-1f76-4750-8985-6d5b154cf7d8",
        "cursor": {
          "ref": "2872cc48-3bc9-43d9-8487-a0d7611a0e0f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e6f49382-f3f0-4773-880d-def9c70368f7"
        },
        "item": {
          "id": "1a4467b1-1f76-4750-8985-6d5b154cf7d8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8b67839f-a9b7-4f29-b2ea-c32b16a7ea64",
          "status": "OK",
          "code": 200,
          "responseTime": 1539,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7310e3d0-99db-450f-8167-07f7c82b4e93",
        "cursor": {
          "ref": "87b4d524-80fa-4ae7-835a-d98ceda2441a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "27b3fc56-c534-4367-b1a7-f5446a4d724a"
        },
        "item": {
          "id": "7310e3d0-99db-450f-8167-07f7c82b4e93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5fee08d-404b-4b74-bfea-e7c7c897794a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7310e3d0-99db-450f-8167-07f7c82b4e93",
        "cursor": {
          "ref": "87b4d524-80fa-4ae7-835a-d98ceda2441a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "27b3fc56-c534-4367-b1a7-f5446a4d724a"
        },
        "item": {
          "id": "7310e3d0-99db-450f-8167-07f7c82b4e93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5fee08d-404b-4b74-bfea-e7c7c897794a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e24481a-881c-4c31-a48e-101123dd14a0",
        "cursor": {
          "ref": "18f51f44-2565-4834-a155-66d8d7156174",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "af1f4359-4df4-45f2-a10f-6bc5a10ccc50"
        },
        "item": {
          "id": "1e24481a-881c-4c31-a48e-101123dd14a0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8e2d7952-5f97-4e2a-a52d-1b06fe22d7f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5d2c8a-ae20-4b7d-96b1-42368b9ec901",
        "cursor": {
          "ref": "e392743d-e02e-4002-b7ee-89c790a4dab9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "97093448-9e1a-41f8-aea5-67959beff721"
        },
        "item": {
          "id": "cd5d2c8a-ae20-4b7d-96b1-42368b9ec901",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b9aaf628-2d62-445b-b707-8299a8c9f096",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}