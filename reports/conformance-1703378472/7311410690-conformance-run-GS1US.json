{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "886b4ba7-0f89-4cd9-88de-93ff646a2ddf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "add67082-60f5-426b-8f8f-1f12a7ea9583",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f253d5f-bab9-4a80-ae5c-485e05b78f6c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6de5a4b0-8d58-4b90-8388-b6077a995f13"
                }
              }
            ]
          },
          {
            "id": "bd14bc4e-ced5-4865-8e5e-409d3b66da90",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae2b236a-fa15-4235-a95b-b0f5cc03ae27",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cbe3e1df-db5b-4979-95c7-6570bef05769"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2b7837f8-3233-4fd3-91d8-403481cb9835",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "48e6b5a9-c19f-4b4d-ad62-66ba6812e077",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a3207fe-519c-4231-9018-d99daf3a0e69",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57d2b950-77dc-47dd-86e6-e6a90c5a7df5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a4e8331-f166-48a2-aa2e-d6a7f9b6f4cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2fe97fd-79c2-474c-b61c-17c0a59db085",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9763707b-ae46-4a22-8517-ed71c6ae04ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ee136f9-0972-48d4-96e3-8578e5b7a537",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17a440b6-2a3a-4583-8f04-38094fb980c5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "543e5a2a-a690-40b4-b56a-4bd147b48a67",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2e87878c-2fcb-47c9-86af-f3a5756dea24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8810596c-ad23-453e-8db4-2b541faa5b49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38cdd119-9916-4839-9f13-23fc13662fbb"
            }
          }
        ]
      },
      {
        "id": "6385a739-e9f1-408f-894e-b8ae11521092",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d6f3b915-b10a-43ff-80b0-34b58c6dbc37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cfec4b9-1c5a-4681-b635-d12303f651f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2afd5a2c-f55e-4342-ad83-dd00696ff066",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e012db-f0d5-46aa-9416-9c617dacf782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfcd0ce5-8e82-4721-9a1a-d6d3c34c1304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafad2ac-1bb3-4359-802f-c20da63362e8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494efd50-3d3f-49d7-8e41-bb5287c065ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c170a019-4c27-43ff-9ba8-7e51afcbbf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea5558e-7490-4c24-862f-af5c45c4c40c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eb0f19-8535-4c22-864f-f55e324109f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "233ee9fc-2bfb-483d-8568-80854cbfbb4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b29a4c8-0c30-4825-94ff-50db2c9138fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c92e37af-96f7-4ec4-8dd5-a63504fc6494",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8a7d3f-95f7-44cb-aaa2-4927317e1f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b7c40d1-eb05-434e-ae4e-64c1923100ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb36814-e8f8-4abd-bdf1-fdbe94ab5ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc19a4b-1dc8-4788-a4d1-94ca8444e1cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef9abefd-de4a-4896-8039-3a3b2f9fddda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d7ff7f99-550c-4e33-8752-b95fc8a9ee00",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3167d739-2119-4e3f-bb7c-978be889a677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f31eeecc-5acf-4b56-94ab-9feea8e8f801"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64ba8621-469a-4302-9b90-434320e0cf02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9f839ea4-eaa8-499e-9884-a9f3dad0a6b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e4e86ce-67a5-4f6b-84c3-8f0b990fa52b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e20ab44-7adb-47e1-b228-e7fd609cfc4e"
            }
          }
        ]
      },
      {
        "id": "998c2de8-ec15-4924-a63d-d1c81ae15db5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8a76f99d-27b1-4a27-afcb-a17493d025b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59dac24a-20d6-48ea-b415-5dd810f83f72",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6ca457da-d5fa-4f03-a07c-d175f824ca6e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb3be27-ee54-48d1-b9c5-7f07de6d56ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5e889e-67a6-461d-82d0-0eff534c8fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f712ba06-1ac3-4aba-922d-1ced5942fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6ae3dc3-69a0-4354-9eb9-80393d7b4832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d30bb72-9cfb-4c3a-9656-199dcc88de27",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d348a9d-0ea4-4552-81a7-c564277a8ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d56c1c-3f37-4c57-90cb-32c06afbc5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc80511e-0f44-4771-a9dc-bece3c10c223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47c3df1b-609c-49d7-a3c5-eaea74eb1eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd15cd1-ae99-429c-a7b7-2bf1943af4cb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a2437b-aa85-4814-9c43-3eb7b81fbc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d7bfc7-4cfd-46b6-a555-a2f930930288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e37f34-968b-4675-9a2c-3df23ec5159b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55c0ea26-b0e7-4339-b5bf-9910bc38d2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca6459e-bb44-40fe-bb2b-7455034a71da",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962215ac-8e4b-4bef-a001-ff89857a13bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1aa8eb2-9e3c-4722-a228-6023111f9841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d00a561-52a7-47cd-8d93-fd6d49655d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b8419a6-d4fb-4a04-8324-fb95984db9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4d7a3b-3be2-461f-ad07-27d06a71ddfe",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d03f2c-e517-440a-bca2-1546b76b4910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf96402-b848-4411-a559-dc9809ed994f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100f7974-a14e-4358-abf8-21fff2ee5cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dd74160-31a5-4cd2-ad60-b7db3c3f53ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9e8d73-b214-4f9d-906a-86d887f0f1f6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb89b614-e63d-4b00-ad6c-17a8c4942572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f864f47f-a7ed-482f-bc4f-ee3c40ee0b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec8f8a1-1b48-4cff-a5ce-bb5d010de708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "317a82b7-b2cc-4309-ae98-e6cab06a5004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c719eb-930f-49fe-99b3-6e98bdfd8630",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6554ff-62e8-4fbb-871a-e9fb465c28a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29155dd2-1ca6-4bc8-a0ca-a47d5d00b2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e408076b-fcec-464a-9ce7-dec323adde94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a209b367-b6ad-4a79-b829-f34e419e4302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f353c206-8289-47c4-8f8c-f9f32c72e81f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716cdfdc-b697-472c-8c5c-abbf9e13c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7039274e-2965-445a-bf54-e720bd860bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1091a5-c117-445c-84be-f31865e63ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3be5925-dfb2-463f-992d-d8c11bd5e2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6719f8df-99a5-453e-8be1-f33f9a231c61",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e795e2e3-54a6-4646-918d-0408fda77b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26515932-0db9-496a-b5d8-e03dd8fd8b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdee051-2b46-42c7-b92b-76a3262c4abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee587688-7b08-4729-b987-0a82cfca828e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff615eb1-d2c1-4bfd-81aa-bdb70ee424c4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0233891-7e5d-4c0a-83e1-3eb2ef050afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2d0310-5eff-4bc2-a0eb-e674936598ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db35dda4-6dae-4a43-987f-e909c7a54681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47bd5e7d-7165-4842-9af6-278ebb6da7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ec88b5-8fdf-4c04-a99c-a6164e03e4cd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4d1861-11bd-4182-a075-31601e040c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaea4497-241b-4ae4-9a3f-e308b0707ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93277a31-7ebf-4cba-94b7-f53a2c890d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92a5c44a-2bff-4183-a2a6-6dc3342d140f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7910e92-f0c1-4e91-82c7-80ed04d2e6ed",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b72a735-9115-4417-bbb7-907fbc149fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c506e5d0-39d0-4837-8838-aa4a061ea3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20266e45-bce2-43da-855c-143518fdabe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "999735d5-bd8e-44d3-b91e-75b2b4311ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f81e46-ef48-4768-971e-233da18a1d91",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bbca96-7f32-4433-8d9b-a0f2fafbd029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc4ebfa-b9bf-4262-a327-eab2b444dede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5292aa8a-a955-4b25-b8b1-0542a7717f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b97da589-abb6-4dff-826d-e81e916c858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8188ef2-69da-44e3-a661-f18171cf1eaf",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d80d45f-c0b0-43ed-8f2f-7c5852caa4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0d86df-bca0-451b-bddb-076a2e980395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f76f4f1-3cce-4c4e-b7a0-602df1c30f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71f397f6-688d-4478-982b-b6371a5c947d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789fef7a-5807-4c64-a2c1-a75ec1ba8fee",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bab0b3-f301-4159-8d26-24566b1c8d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61510021-d924-4296-b88c-8c9c5891e94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9839f3ee-d669-495a-89f2-c66df5f6f3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d4115e7-b96a-4d24-bcb2-89cb9436f283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f961c817-0a4e-4b81-a992-88fdebf914e3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746e6605-c764-4629-a31b-60b37cd873f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be301131-b6b8-4d61-a861-1088a800e883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1969af4-6091-4502-bd5d-2840b8e6ce0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f9dacd4-4634-4618-9038-c4e74cea776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74f9517-2695-4457-a35a-be34bbfcc5b5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd60607-1112-4d16-b551-591d29005593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8eb4b49-f540-48d7-8b85-b308141f6e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62004d12-7e78-42f4-a0c6-742ff261121f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f436b84-f554-4a4d-a391-327585c2e1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f12acf-4c64-4410-bc0c-35e38bb1afaf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c966bd-db72-4bb9-a8bc-a6e34aa598e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742788f5-32d6-4254-a434-be422315278e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98784748-add3-472a-94fd-fecd0b7869f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd05da65-1b1a-4115-8324-08675c67801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6994657-0f62-4d91-a287-ce259d3397d0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca819c10-33bf-429d-a50c-37f3d50ed97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c99e46-0e95-4e04-a8a4-a72b18f008af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a54175-a12b-45c6-8e93-ac122cd7e9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e30062b-0bb5-47ed-9b8a-c7e056c72c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ea08dd-515a-404e-9141-511da04511c4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad77e2c-26d7-4a66-8fbc-0f18e7ce75d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8147153-7476-4594-8c56-51d222247b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b786e88-fe12-4ca2-8270-3a02021989d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f054fd7-5e79-43a4-b98b-4b0de19e1422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c3882e-c2e4-4538-b3e2-3c387eca19e0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8235ce71-da35-4f29-82db-9fcee203fe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83733046-efc1-4359-97d6-e131a9c63d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b87010-db1e-49a9-a522-5f0d12f7dd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8061a6a-506d-4db1-bb1c-bb755d108664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312d5f89-1af6-4d5e-a8d6-d5e44ccbb61d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1955485-b185-4fe6-971f-b0cd95f526ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ad68c7-9f1e-40b2-8543-a46386c9923a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc32f23-7f95-4f00-b1bf-12735749d008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50f45350-91ea-4492-8860-1c3f5bdd890e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033491b1-050a-4d4f-b712-65ef24169487",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939c9397-1021-49f1-9c07-76c26e7725bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe36d6d3-5a9d-4586-9145-cb05d2f9e6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c556395b-a819-4756-9e29-29ca9f5c8103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c304ebc-da28-4bf8-98ee-5e719e091b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a283e295-cd47-4d69-93b1-526186f186a0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f815cd-72f1-4004-97e2-53a57785307e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960b6875-e3a2-4ba8-95e7-033b9fc91b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c9b87d-5515-42bc-a041-c1a18fa1f349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a24a1656-a495-48ef-b5de-07d67281f2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38892c6-b81a-43c0-af32-3a8161f09910",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d517fcf-e0e9-41f5-a581-a7975c9cb9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45aad603-4e09-4f1b-9181-32f6def51dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18c418a-0b5a-499f-8aa3-0e281c304167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7adcd38-b80a-4f7c-af11-90afb43c9b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa00fa27-445b-483c-83b3-d34036a90917",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a279054f-0dae-4340-81fe-169b8c8a3483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4a60ab-ef42-4b36-853e-96b28ab5015c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0af42af-6f06-4987-b3d6-5d55100224ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4a1385-7ae5-4939-91f7-2f787551bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a640454f-eefc-4e89-b00d-24308a8a429d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7321d4a1-da9f-4e6b-b46d-b3ab8e417b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497aca1f-67dc-4299-a059-aad379c0b136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65625f80-cad2-4b2b-8147-4081deb517fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af047a55-9040-4dc0-a056-99c7dad134db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1702fff-8998-4b4d-91e9-db68f4ee843e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c77fd77-5e85-4986-8fdb-a47422c8db9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa06d151-f55e-4c8f-9101-772c8c7b3e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172c168b-df8c-4fe0-9703-c6c2053b26c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5945ca70-2398-4d22-b1cb-89f9f2893708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1736b8-5bbe-4785-86be-9336f20a794c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6340d4e6-6767-4991-9d16-d5cd40dbaf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae3a861-8330-4de5-aba3-0fc87072360b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11be1bb1-df25-41c0-aee3-9ed757c431c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5ad810-1911-4bfc-aa11-65d075e0c9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978bbe43-352a-48a6-9a49-84998dd59c80",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635603dd-803c-4af1-8d9f-597dcb2eb91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec543ee4-f4cb-42b2-9b56-77b49c0b8960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a510fb-9312-435b-a962-a294761d84dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a16c4810-a316-4ed8-b22c-d94e1608d2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b245603-7c6f-4132-a58a-e706a529c65d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37716c5-af08-4318-b0c5-be470e9d294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2b2c00-9ff1-4d19-9cad-688a01397107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0e2a86-50be-4b83-92a8-3628b76fe11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6705d77-6b91-4f50-919c-9f344303ea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42428063-f3e8-4e5d-817f-785112934d64",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0997c5f-8449-49e9-a42d-5beae101ba87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12a2af8-6ecc-4afe-811f-dac970409b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c4afc8-9166-41f2-851a-0798a77757b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb7216a-79c2-48c0-81d2-02498a0cc34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c10720-f119-4b6d-ba81-2607baf9533f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e82cbba-58ac-4a4a-8216-f990fc6d7f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80cafc9-844f-4fb7-9bac-60b92fd1bc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345a3ab6-0ee7-4ddb-8fbb-68e3ba3cfed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "833c80c7-894a-449e-99c9-c7ee39559f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542d4b68-ef8f-44e4-97ee-8795f790326d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f825f61-00f2-4b03-a48d-aa9f3da2deac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be9bb1d-854a-4c81-a3dc-a93a5ea6bec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f712f8-fdfd-4bb3-9731-37c512123fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04cb48d3-48c5-4e21-b502-fe5ac9693264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435d7e8f-7e90-459d-a199-db910e8ef165",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6765f2b4-8f93-485f-a232-5364bc4f428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6691c0ad-6a0f-4d65-b730-b3415af0fb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d66ab7-9894-4001-ad49-0fddab62150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c27d6eeb-b81c-49b9-b537-ef64ac3feddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4592838-a950-4406-b5af-aca3b98d32dc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa301d0-a83c-4a05-af6f-5bed7e55502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40d9ff0c-84df-4612-8b71-5a0129d0c2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cd6a5d-ed92-4619-8513-61667561ce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32c59fc9-7d65-47d8-9f3c-e18f26ab313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e69420f-97ec-4324-8f03-b4e60edf0b81",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b94c62d-de60-4920-9567-2d75caffa727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0d0606-22d7-4389-9eb5-2fadedb297ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1017e4-c7b8-4362-8637-6785a0e0691a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f28969ac-9fd8-4280-9d38-7cfe6de65451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba160f8-7961-4793-89d1-8b1ef6420cdf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629022ff-e542-473a-878d-c8980aac9342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cffd0c-eeb1-4fb7-b80a-e7e00f7ecd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d069199-4f9a-43ab-9102-1a4c8b94cf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "426087db-d53b-4a69-ba68-3d929be8c653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e704f6-514c-4edf-9dcc-072cfb6d16c3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5466d8ce-ef65-4c0e-a293-052a5a659b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a601e82-9941-4ab8-9ac9-4e5c6cd1c8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ae1d03-b5a8-4e6e-b816-dc6b7229c02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5773d2a6-afe9-4283-a419-595f640aa6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c4e967-e5ed-4db3-94fa-728f7b8fdd40",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8f735c-ff1d-40d6-9fef-f5550cdf67ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff002a7-990a-4ae3-b095-04eebd3cd5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263f9556-d398-4368-8e4b-cd1cd681a80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6c5c83-68c8-4657-9b95-1a43122bcdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707c0039-3930-4c39-9463-5efc0db2426c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd5594a-431f-4d25-9203-628ae0750596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a092e68-d217-450c-9b96-a793735d6e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e046f3-eb95-4672-bb57-a5e077707e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63347c26-6f35-48e0-88ee-684166041aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1049b1-72ad-4736-a272-2151153322d6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7126ec38-5ec3-42cd-b461-92455c5fca29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff6cb4b-4aee-44f5-889d-766e7fd948fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1488af-1a05-45c3-bdb4-1cc463ca27d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1d59fcf3-52a7-4689-a6e9-3013c9922fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5708470-c265-4f9c-aa33-c60a97a0cc5e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38994ced-bf72-45f8-af0c-28d737a8ac28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9617b34e-a32a-4601-93c5-398fc61e487d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbb3e5b-8a04-428d-9ac5-035655e2e949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34c676d-6297-4995-983b-726fdddc69ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aae17f3-2a2c-439f-8a0b-56c97217d287",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657e1bb7-793f-4c1c-a88d-240334f702f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a47782-4de7-42f9-b692-504b60c0ed9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76085ef-5b22-4025-b94a-cd54caf0e417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "66084355-bb10-40b3-b942-eb2ba3467715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3fb64e-a23e-4414-84a9-bd5425561cb2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e11d4b-e053-48de-8cf7-680b46cf2bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d79822-28b8-40de-ba63-37de31c3f9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c38ad8-5f2f-42a1-9a0a-8ce81866d6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e71943-72fe-4e55-bfe3-3e78d365fc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2c042b-d0fa-452c-a249-0d572d8beb58",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f54649-313e-48e3-8fbb-8b432863b81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86051972-9678-4102-813c-b0323fd91c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3911c905-213d-40e3-9ed3-31ed0ac164f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ed67de-d22b-41bf-baf2-7c2f87f321fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6caa89c-fc43-4a09-9899-252e9e2d7158",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae965e2-e45e-40c1-8468-2c2119a99c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7406cb-068a-4419-a538-84826bd50a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb8107d-600d-4269-ba72-1c787ce1780e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1050f176-34b9-4c23-99c8-800a42bcb37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0fb0a4-b57e-483b-8124-c98a3c847313",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98296684-4e57-4e53-b173-b04090458ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44aa95db-7363-4a59-b410-cb6159b554cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69231e0-b8ce-45f9-9f1c-fbf8f20c2648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6a6f6f-e7ce-4b2f-9035-d5bf1d713e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97863e56-f4c8-4f1d-8b02-c97b4f4538f6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1894c3-e2c4-4391-8523-0e1248291aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ed647a-81c4-432f-ac8c-31f169c1222b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5406132e-70b8-4ad4-a42d-f0f347c73d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "478cd6f5-0afb-4cf6-bbe7-8937ac42235c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09335050-1015-44fc-86c4-543db50a3a7a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c3f5de-1a3a-4b77-90b1-7a2175aaabbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046ac405-b388-48ec-99b6-140d6fd6d8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b59c32-924c-4e16-9912-7a1c35f63823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "610c06a5-a7d7-4306-8c7b-b7ea8a305233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973f0357-51c1-4ab4-b769-693b7259d812",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6d0b0f-dea3-47f7-ada8-d9e7cd29100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3199f1f4-2f7d-44d4-a5bb-ca38d1a55cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab31e8b1-8b38-41ca-a7fc-929d3b3fb9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37b5e78-b0fa-4dff-a35b-f392e9992ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0399e92f-2c85-4a9d-99f5-871333b98311",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4c9a30-4fc6-4b0c-a3b5-fa72a1641a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae99198-aa54-448c-80bb-30d8bf37cb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3413303b-570a-4938-817d-26d62879b6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "423e80c6-56cd-42bf-93aa-b6a41dcfb9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2485e32-9dba-4cbe-bfe1-ed44776a7c9b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1a9d8f-4184-4562-96b0-b6b4d15cb708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd49f60-efb0-4fcb-94b7-bd757104a791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5452b7a3-e624-41eb-ae4f-426fbb41ff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4678447b-4d33-45e7-84ea-6255ac45949b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f60adb-03b5-407a-abbe-d89434b06dff",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfb4e88-eeb0-48a1-9e18-5c7500d2be98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fb909e-95d3-4bd1-a201-6cd83af567de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2583a088-5a1d-4f7a-9fc9-2a9aea8adc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c00c2268-5ce7-43d6-8c74-c2970dc5c439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74eafffc-064a-434c-872c-b297bcae091a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbecc818-2451-45a1-aa39-14107416bd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a12ffbf-39ea-4cb0-aa84-b07ce3a1e8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e9bcdd-a437-465b-a3ab-17dc605bfc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "013b66e0-24d0-4368-b5a6-9da4481724b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c19ffab-8dc9-4c66-97e4-808243846bfc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fd38e4-d357-42d7-a736-e541a725ec3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c26c967-f963-49a6-a6c3-cc89fbdf0ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e902958-de74-4a56-84de-c27c77b9f558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "00a541c4-45ef-4e9b-8682-0610243c1da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f902803-9092-4f61-88c8-95ba7ba8daa9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c11320-561e-4115-a2d7-3525ac692bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339313dc-6389-4857-98b0-251628b50360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b58a9e-56d1-4c5f-a91b-a68344c6826f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "84ceddf7-f31b-43b5-8953-5e4e8c63bffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733b341e-77e1-4c4a-87ea-098c3c9027d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af555a1-8dd6-46a1-b958-bdb9b9bb4da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb62a81-765b-4a46-9bce-649bab635e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c231274-3d69-4461-a23c-41bbebb66051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfcebe2-c2da-40ff-8388-392100b842ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4f7e43-3de2-43d1-a5ba-7e9b4dc28668",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e7290a-46b5-4497-ac5d-c6e8eaf19e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbebced-5b8f-477d-93ef-77b7870d5fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb91ad3-9517-4d0e-be01-f1ec352feb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "065471da-fbe5-4a16-8d2a-90bc53e4618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6f97f8-2e2b-499a-b421-60d79aaa95e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fb6bff-6dd3-45ce-bcbd-d41034477b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78755f8-6372-4851-83e5-8902975bdc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18d2a33-4781-417d-b086-d2bf0c0f39c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0123528-79c1-4c6b-aa09-2ba16ad73ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77630376-e121-42d5-9754-910d578944ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc8613d-87a1-4612-bd25-6155137c5613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0d9c71-61c8-4c68-b59f-d9bd823d8a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f558de3-676e-413e-9ce7-fb435d0a4b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "482b5b5f-396b-4294-ae12-afdce7560715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ef297c-86a5-4c25-99bd-09949b908382",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e74628a-661b-4438-892a-0e1e3f44b2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bbecb8-d3a1-47ab-b452-822b9cd1f8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da15499e-9416-4f9e-9bd1-b6e4723bf9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "69dd1189-45ef-479b-83da-a52f47f60c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbfa66e-e726-4fe5-9ecb-20accacb961d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277fb334-04ef-4b8c-9e98-8c771acc5297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe634be-6df2-4478-bdc9-a85f77b3bc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f526a8ec-062d-443c-8871-07db4422e249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5d4353-c592-4695-8ad9-5babd9229f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ac2650-7d7f-4d1c-af12-7262ef91de00",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9364539-3a29-483e-9379-ece5f63e2864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af98b7c-d3c5-422c-adda-f11260396702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad6d8b8-75b6-48f7-8755-b302fff00214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "174ec2c5-88e5-4be2-ae69-c380ffbd1533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1677b9be-4236-429f-9b68-4dbd3dabbd6e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c1a89a-e451-42a9-8e07-4323b08c0be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915a71ce-6bb8-410f-bd18-cbee62c22c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e77bf6b-59bf-4339-9e4e-611d6584c2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02a72511-facd-4c14-aa4d-321b7fb68799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdad985-0ce0-417e-9921-438341143bb5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a34886c-e75a-445c-a001-be18ddb19f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3cc1c6-26ca-4f2b-b95f-3323b5afeb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81254a40-b765-4e11-8113-9c7b7446e62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb990b63-49ab-4ae8-af98-3429ac883d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1aed17e-59ee-4388-998c-9dee3bd5dd0d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d51986-778f-48ca-bd84-dc94d0acf729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f50a69-1b70-430d-ba6a-ec6350b03c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f4785a-7901-4346-b153-e051f3ce9fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c92792e8-8b56-4ed3-8fce-8b58edf4e825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17d36e5-2fb0-4d8b-ae96-8f2314452ec3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feecb547-85e1-4d3b-8405-ee4bb003e48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49dec88-f530-4507-87e7-34f295635558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06409c98-fc45-4b61-9994-139e5f1be6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a49b151b-bb7c-453b-b7d7-1fd5d616cfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec5cd3b-5f67-4b05-9269-4e64745cceef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822d9da1-eef1-48e3-a0a5-bcd6a8f1d32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0984be9-9bf5-4316-a3fb-157dd29c8dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc440dcd-8a14-4b79-933e-db3de4e62f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb35aa64-2f9e-42de-a9ed-174dd8094fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6102d1b-bfc6-4574-afbb-736a431fb531",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8098e5-5da9-41c1-9411-b6ce1a04bc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da50acdb-04b1-4f0a-8999-6c51645e86f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e691fb18-ebec-4ed9-a393-82de4fdfea9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1454678b-7e74-438d-a01b-2549729f3c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008afc8c-6892-4433-a87a-0e581d956d6d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcc376f-17d2-4c48-9515-64e94ac7674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9967ea24-8080-4b45-a3d0-04ca3d4b4d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70826dd1-54c1-4b3d-b5f0-9ab501c55c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5323e00-ee2c-4ae4-9e41-748cd5b9408d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c1807e-5bdf-4ca5-9887-daccc7d53247",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c6c0a1-7310-469b-bda2-a5a0a677992f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f6ed06-6ecb-4308-8f34-96442e92175b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c21044c-c863-420c-ae11-84be2e1812a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "201556b2-6063-49f9-8277-98326d5d9a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478b5fbe-3af6-4d21-a31b-7508ecea1693",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f99c1e9-6b50-4c7e-b252-e4a9eadf237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96488f1-0ab5-41d7-8fc8-8032fef6b759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2380b87a-1842-4a59-842c-a7c4c3e35080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ced8f02a-0773-410f-abaf-60affbb2c57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd522f8-0479-4942-85ad-15bdd3df7147",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19b66f2-fbcf-432c-b89c-470e80b03eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd5d3b7-aecb-4406-bdde-f0602da04805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c770fd-0dd0-4b79-a561-db87644c5cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd7ce5f-18a6-4ec0-b4b8-de522f60f591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37fbb39-816a-45b0-acb5-b61becdb40ad",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ed6b77-c9b9-476e-822c-5fd62ea5b0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e6f241-c757-4ea1-a006-6507e9593fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c1e16c-5cc8-4c85-8cf2-bd32444ae771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b259f6-b8ea-4149-9f4e-aa822c90f25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5a84cb-c1fb-43d7-b65f-db249b1e2a92",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340a0ac4-0b08-4d2e-8241-6c17a206f900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956fdc94-d844-4809-8187-b08cea4736d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb52780c-0025-4987-8e73-dcf1cf6841d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c51eac01-2f48-47a1-9071-e1c77251ce38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a409e634-0b1c-4f79-88bd-eb5285b298d0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4668375b-b8c2-456d-aa60-8831cc5ab6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7958a1ae-f874-4444-ab1a-badf1c77198f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bab1df7-0218-47dd-a6a8-829970a3ff0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed187d4d-ddd3-49d7-b367-af6ba1825391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9efdff-bb17-4d5e-b9ea-24091b89d14d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c92b2a-49af-4569-b735-0ad279b63b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ebcd58-2474-4a76-813e-a9d6a91724e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f307931f-972c-4008-b683-003db0b3b619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51e6b64a-a9b1-4ca3-a9a0-fa24b1991335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb53802f-492c-4b5e-812b-a27bbac962f9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf463b3-ab97-44f1-9258-b013baa6ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da47bd0-21c5-4a07-adf6-9c359b674ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81e0e64-dc3f-40f0-b75b-4aecce2f90ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "848d789e-40d2-4bea-8878-bf0884a824fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd50f0cf-e1e8-489e-a1e3-d30b558e4c11",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd27c39-d700-470f-8453-a22d64c7d1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfa2a6a-56fb-493c-af14-482e41657b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b23cb9-2fb5-4544-bc8a-78e46b9a05b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0e46f0-af5e-4912-8f51-b55ad9116074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89e2c11-bb46-409f-8831-97db61d47770",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afb67ca-79d6-4569-8d51-9e7f299e1032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4787c265-ec6c-497c-9a13-49389f3a1bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2944ac29-6104-4ad5-b1b7-5a4932a8d10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6b3455-0c6b-4f34-b7c4-3e206720c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8138747d-fe0f-4fea-b492-94368ee73983",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1911ba95-e4a0-48d0-a290-009985c53341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c09775c-22c4-4058-85f7-73e52c814e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c6f0a2-248a-40e8-b28e-3a8c4be927ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93cbde12-dc48-4758-bf40-cf45751fe6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd2aff5-3c63-414d-9083-977163213a15",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980662f6-8c84-4218-9235-6ca1bfd0fb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e6591f-5027-4b05-9c91-0568b8ad21b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6595818-7005-4a91-ba28-954352fea803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c30597-de1f-453f-9639-8c5eab9f2abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec21a28-a471-4a8b-9d44-455838d5a4d3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbdb9ee-04df-4bfe-b125-20bceeb8d6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde2fcfd-5c3b-4b35-910e-0ed0e42e5bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b82c1b-4d59-4151-9d60-4fa8e4bd4851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "376d802b-b0e8-4920-abc8-7eb85f25d737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd76beb-040c-4e77-b90d-7cea92a1af41",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bea09d-3ca7-4778-a6db-8d3bf28edfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22925bf-c731-4870-bb77-9c9cf7d99366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59afeb7a-85b2-4ecb-ac78-00bcff3f969d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a951e6-9345-4798-be71-943799f4fb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde3a1a2-2a76-4e75-9aec-d7054a8a03d2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393b5391-0fc3-4431-845e-40b704b73f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a31005-c34f-4a8f-9d25-eb00f64913e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a6b5a1-a2ae-4e68-9f97-8fcbca7f27b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a506761-dd4b-4272-a5a2-784d4718ca28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99586589-3bd0-4ea7-99ed-0411f7e689ba",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ad6a53-ef29-437c-a268-4627a0c07aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd4685b-db7e-4612-b1d5-7079c794b1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3359e84f-e08e-4d50-809a-13d8ff8c538a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "942737a3-8ff9-44cc-aaa2-e3181864baff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64378f80-9fe3-4524-9eb6-37cfe66c635e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa0499-0e08-446e-9086-a9c2675e6cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bb5a1c-cc15-40fd-8d12-fa19dc0a2d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5a169e-0735-4713-8ebe-40739964798c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31025e36-4ce0-4eb7-bb41-89caebda92e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18268f9-7ca1-49b4-97bf-43ee9bfe34e5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e644db7-be5c-4f58-8707-d58b4f1c0499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db544ea-8e4d-4033-bced-ba3b5aa6b7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61cc81a-2219-46ff-be88-0d1d8cb76127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5ae63c-1919-42f7-960d-0847afa1226e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb6e9dd-112e-4aeb-9bb4-bedfbb9e098d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20756194-1627-4329-a588-9bfd8ccff8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a81e51-7fb3-4ee7-b33e-090996a0cd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c79546a-45cc-46ff-b112-eedc2ffd51ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0976c0fd-4e4c-4d02-946f-6ec50d2112e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efca07b-4835-4e3e-8a86-7e4bf522c580",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a84b25e-a2a8-4395-9177-3210e5de6b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3b22a7-d373-44a4-8c6b-107df839aec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e949666d-a5be-4723-879b-1a43294b0dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3268be65-a8e4-449e-a639-2a894cc159c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4692f999-745c-49e1-bd71-97a13ea8952d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7679dd41-40e6-4383-ac01-148eee4815df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0762d0f5-97c6-4368-99b3-2698f5cd1369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c675099-cfa9-4f7c-902a-254e9979bdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b314c1d2-6836-4a29-8b39-4aecf2aa31f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "489cfbd4-4b6c-402e-9cd5-baf200f014e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36dd37b2-c0b0-4d9f-a58a-cb4c7070ac22",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b66e8db-27c7-454c-ae81-0a8703f88de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60b68b1b-1666-49fe-8b9e-ab92a738a2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf59f889-7585-4f11-9e9e-a17dc76bc64b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "541d3588-8f11-4831-8fa4-b2694024f3c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96fb44ce-7cbd-44a0-9035-87154a98bd58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0477a12-24db-440d-a8d3-370882e604fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10bf8547-d7c3-4296-941e-bfcdd0dc3890",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1ed7f08-546f-4383-a5ab-2a922feac216"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eca23cf8-b4cd-4c0f-8cfb-214b9e87c1c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e85e9f5-dd68-4e94-a605-445fe6b5b116"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f27aebd8-188e-48e0-b025-7c119fdf2086",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5510baa8-8db2-4456-b3d0-1708d56e3455"
                }
              }
            ]
          },
          {
            "id": "160f613c-6e7d-4515-b249-9ac94d5bef22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6325d877-0c39-4db4-9faa-2fbb91526a27",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "15ec79e8-3d43-4784-a645-70479463b92e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178d1727-323e-42ba-96cd-44519da0b8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "43e044d3-d5c0-44ea-ba87-ad2fdf589b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d650756-38fb-49b1-92aa-d317313422c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49020fe8-01f4-4a80-b118-d132c3c7fe19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "38a44879-4355-4946-aa9b-424714b0d804",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d06b03a0-d0e0-4d15-a4a9-d2cd38b59de3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aab081c4-d4bb-4efc-a910-cc69b20e9929"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddd0e597-c2ae-4e06-b32a-cfd72f3cd582",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4930cc5-22fd-43eb-8b5e-823a9b2674a4"
                    }
                  }
                ]
              },
              {
                "id": "56ddf815-5ae0-42c0-938f-a8bdcca4dc26",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e070b5a9-f8ae-4826-b698-09ec21071552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2508ed93-7778-4963-a160-60938507a5b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb8ad65c-d877-4699-80aa-7bfee9ce6400",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a87aff89-98f9-4e7d-9875-1b3e0c95852a"
                    }
                  }
                ]
              },
              {
                "id": "ec2474c3-cb5a-4bc6-91c8-1f84e36aadcb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2858ec56-ee15-4ffc-bb22-deadd99e290f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0a9fa9c-7157-4e95-950f-ed69b1cc9d96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e112fad6-17a7-4e67-bbe4-9e85cac2b05c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f5935a3-6ff8-4dba-9874-8aebca0b2098"
                    }
                  }
                ]
              },
              {
                "id": "614a4988-f3db-4f5e-a3c5-961109e6a320",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b3b77fc-5ae6-4aad-82f2-6db756c8c78a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0caacc0e-b3a4-4bf6-8e12-2dbf169fbc44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cca198a-aff1-4940-bfa9-c0a56ebfefe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3c38e2d1-cee0-4c6c-8fe5-976a854e9cd2"
                    }
                  }
                ]
              },
              {
                "id": "1218a57b-259a-4af2-9c26-4950e918fa08",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2d89cac-2383-4a7d-9455-7aac5a5dfeb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44999bd4-cf88-484b-bae0-1fb9f9c8fc41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17dba651-5330-4a3f-9459-63394424f126",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2d167536-6db7-4ae6-92d5-c6000e3d4a2a"
                    }
                  }
                ]
              },
              {
                "id": "d9669267-c58b-4943-af01-b0d7a5ff8b7a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e16234b3-6d43-468c-a98c-dabd8d81ba44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3915bae2-dfa6-4530-ac72-bbeefd0ceef3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0771582d-d8ec-4665-b675-5720db4eb33b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c98278cf-5432-4d58-99d6-194a6dfaa570"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58a9800a-2c99-4866-a7c3-4ae333869ffc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4c68490-e882-4426-9bcc-54f98b6a6f5e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01ee18af-0ea0-4045-97ae-64a2f1379dcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "313aabc7-9212-4eb0-a05c-f6f1072af0a7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51f82cff-97cf-4be1-ac85-213a50cedc6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4dd182a4-80db-4a5a-a1d4-ebe140944c3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80e01bf4-c073-4d84-abe8-127946876fe8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfa5c792-0ada-4609-a048-cf1ce3f00f67"
            }
          }
        ]
      },
      {
        "id": "448f2545-a369-4f53-a577-faac467752fc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9f46b37d-1063-4818-94a4-363ebcfcb824",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52ad7634-3076-43e9-a8cd-812bb51df5e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd28e8aa-c1da-427c-b4fe-bc8ddc2c1236",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e07db4-1a57-4513-87c8-7bc18b2d7a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fc0859-d6c2-45aa-a488-522a39e5bb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8de4f85-2d66-4078-a4a8-18cb04abb789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87ffddd-7596-4daf-9d57-afb263ced66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cb91e0-0571-47b9-9385-6bc3288e1ea4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97e5adb-6421-4be9-bdb8-434a089b1fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617f532f-6322-492d-97ca-392083113ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c47efc-3658-4a50-ab2d-c8c5ed1194cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b341db88-3712-48fd-b22b-b66581b75321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fce1fbb-b89d-48eb-b0dc-4ea40b1f03a9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3536c6-d1bc-4316-a675-9104fcf6439e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4f4e44-eb9b-4b29-9d36-f920b377ee81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6f7d3b-cca5-4d56-8659-3405b2bb71ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3fb5c4a-c43f-4e04-8b59-3df313c1443d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc66462b-6e31-4a93-86ce-511564888c6e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ceae7f-5c02-43e4-82db-5a91d7b4f974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2111a4-924b-4819-9ea7-36da908a111a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b50d364-180b-4606-b466-05f5be71b134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8433eccc-0f85-42a5-810d-1cb71dea9e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cdf592-3fc9-4a68-99e6-7f503937185f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8086fd64-e785-4724-b689-39954816c80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcacaeae-2e19-468c-babd-f3713ae5fac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb4c6fa-9302-40df-bf61-6491d599a863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06bcd54-f481-4aff-9e22-2a5dbdb33bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7524a784-4e47-48dd-8e43-9bfa2e39920a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ecd0e0-cb59-4787-89a6-6b02a990c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d5f01a-6beb-41eb-be39-497049222aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae792bc5-45a5-4899-82a4-aa8a454f929c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2bd03f-05da-4314-9d34-db34e743633d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee85ad2-dcfe-4822-bc2b-c990f82e64dc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29afa3c5-fb3f-45d1-9d9d-f2e19577f4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71e965d-ec2f-409c-b0a5-86e164d0018b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7970a5b-0c39-4382-a886-b5091c711e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7f4fff-4b05-4c00-b64d-b4e23391a2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ab402e-4b42-44de-921d-e9d7bcb487f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e70d78-22d7-4f27-a6ab-8ff704761670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36064e1e-e25d-4373-939e-1d7f8096027b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283fa416-37d6-4971-a19e-d2b4bb8cfd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2387770-946e-4d49-adfa-504898b91978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085b3599-b22c-41c6-9dee-150c5684a0ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4000be0-801c-4ed7-b846-d9e790e4ae2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ae472d-ffb2-4095-acde-ce1e543df00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8064df9-6b46-4326-bea0-b1280cbabacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89cf42d5-fd61-4d94-90b6-88a32f51c803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b663c6-fada-40f7-a121-8e9c721c5631",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66003936-4e72-4f83-b0bf-55252d8bc864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e662d759-7bab-4582-9fe3-317494bb48c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc3e81d-2183-448f-becc-283f4d459c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e10ca19-6009-4d3d-aed8-742e88830d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce94eae-eac1-4a43-82d9-aa30cb68c8bf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889ca87d-2996-4f4f-9265-25bc22f6ee33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6aa071e-9853-4292-992b-be0f6d3fd261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086cfa33-5617-42a2-8525-d76bfc97e28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "80b3a167-9107-494a-90b4-5644b39dabc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6d7d69-b1d2-483a-b11b-3a4b625df08e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dbd7f9-1164-4f17-8f89-423c9dab9122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0705bda-63a6-40ce-92fa-54bc7c85bf62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70440a94-efb9-421c-a802-551497e97ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb55969-46ca-461f-82ff-0f8df9c6d663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060f9556-95c4-4fb6-bd9d-6043c23c9908",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16676e66-9056-41aa-8ac2-e298e4cf6967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddf0e5a-8fbf-428a-84e9-1bd97246287e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b75702-35c2-4cb6-9da8-a297b7e25cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f22f538-2a53-464e-9ca7-1f59da982de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952f1b46-2673-45bf-a640-29f5750c270b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0124d2-f395-42ae-8a9a-cfc4cfbd53e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea6c753-e007-41fb-a8d8-21f3875ea69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a601b06-b9d4-457b-a4e6-975e2a1beb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead0e7b4-8cb1-42c6-af46-d4655c74682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88707ba6-4678-4a3d-b01f-bfd54a86386b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa808fc9-bb6f-4b08-ac82-472219e499d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800eb862-ad04-434e-ba81-13d049d15fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8435e815-55e3-4c7e-89e1-a71df443e1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e181f4-49c4-41f9-9f5e-2117be5785bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819813eb-8534-4f7b-9fda-18ac15d8442b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44ac6bd-86bc-43c2-a3af-4d8ec81ac6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c15bffd-51b0-4bac-b4d8-a38bedaf7547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00511651-887e-4e99-ab68-f3439295fb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "58cb59b2-de3a-4f03-b49e-5ec1f6dbbfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31ace43-43f5-4c2f-81c5-397d25a2aacb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb6c259-b4de-42c6-853c-3cf029cb2805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66530611-c667-4067-b174-e3e6353b7802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d113016-048d-46f0-a819-2c5aa6b15ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7838b634-067a-4e77-b1f1-e9dc0235e437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795e3aec-016f-437b-ae8e-9b02e9298744",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c08ab2-ff19-4717-8841-20965f879086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbca792d-387f-4df6-b629-c54107a6beac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbecd3b-8d90-4b9d-81b4-86b604ff34a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd5ecdb-10b7-4339-9797-e3c33f71cc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea603419-6512-46c8-a1bb-c8c1d589fae7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b387b1f9-355e-4744-b309-023d96e750f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b0da10-2adb-44c1-961a-c492278d71ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e38a196-359b-4a1a-bd85-d2241c944ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4137852f-fb31-45de-8239-ac110590f6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38354c07-c72b-4996-9dca-5e96871c04fd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12459743-1b4b-43d2-9a9b-bb97c27579da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90b5845-0ff3-4ccd-a1a0-a3d831f6eba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62b988b-42a7-4349-a506-4cc45c2882ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f226255d-0a7a-4495-8559-51e29f7676a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf319334-ed9c-485a-b813-1f80bea54238",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d1c33f-9bf3-4985-9582-fbee72ec3d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0442b206-3205-4de8-8119-a16bdb2734d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a7e01d-8eab-4bd2-8aaa-63bb0de83639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1e8163-6dc1-45de-836a-7999bc8156f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a964059-69c3-40be-acaa-5bbabc92ff3b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fbce28-e06e-40c2-adba-5f94dfe591f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb67cada-7824-45ea-8d24-3b39c368e49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711fc759-8c31-450c-bbba-59c54d2b7d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4508d134-1d4f-484f-902a-483467a7b002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21069c16-250c-478a-b09d-71ac2121d044",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5396cbc-f731-4601-b8fb-2bdf48bb5644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c36e3a-64e3-428e-a709-763a9254e8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8de2e1-8384-4cf9-bc9d-2a7ba1ab9127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d246e0-70ff-41a4-abc7-e256b8160f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa64bcc-2da1-42b4-80f9-58ae50245091",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819405be-0e43-4412-83cd-801946243064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78df8de-8429-425e-85ee-74f377f6bc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3180e6-c8d6-4ed0-ac46-d9b4e248373e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5c2f36-2ddb-44d6-b957-e6e0c44d1bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0674de0-6e72-49d6-92ca-d278302cfbea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff556f1-534a-4a95-a2a6-00dd879f4880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97548413-db11-4797-a653-584f583c936c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebebe70-b8e6-43f9-be39-b754de932870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f302cd76-16d0-4de6-9795-e2471d4f3cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf76488b-3649-496c-a5bc-cda8ccdd5e3d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782bb6e7-0dae-44d0-99dc-ae54efde4353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cd23ee-e3b3-4d37-945d-8396688249c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e929504f-a9bc-460a-b9d2-81e91fea73bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00016d69-483c-465b-bd8d-2692306710c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce751be3-713e-45f1-b704-282b56b38a1b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6cdff3-7ced-4290-b25f-22f720cef09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1e6e6a-b4fb-432d-8391-56d6a187219f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5c57f5-e473-423e-bc27-e3530e795d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5316885-f1d4-403c-88de-586c30435d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bdcda9-e46e-4413-ae51-617879297b66",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d6f266-501e-4e19-92c6-05bc512507a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51be23e5-57b2-423e-952e-ad24cd4ad47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44d32da-7d57-4fce-8a60-f165b3395305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69de0b8-2ee7-4c57-a326-d2ccffd2faaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939e9634-1d6a-4249-93f0-78ce712fddeb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f65a73-ad06-49c8-89a0-b77ea0849f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93811c9-5972-4e63-b861-5328bcc3e328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a1b746-8590-40fc-aa35-83f7aba9154e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e22c42e-c203-43d7-9d7a-515b7c27c521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ee3d1b-ab65-4f09-b53a-1c9634e22084",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f5d36a-14a6-4b03-879a-b0dd688ae2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1305b7-be02-4798-98f9-bb7b04491473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888029de-ba63-4214-95e6-20e395b2f40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "575eb6dc-c2ea-4056-8f9e-f6d1cdda65b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08517848-9ec6-499a-bb63-218053e43d3a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcce32a-6ca9-421b-bcab-3c3c0aa6a238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cc46f9-6f34-4323-ba4e-7342ae24b2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dac55a-a73a-494a-a79b-cbdd9c02bb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "961d4e3e-06dc-4bf3-900c-64741b8896da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e36110-c792-44e3-a82f-0ded9c30950e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873a497b-aeab-4e8f-9771-d807b2ce8c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37982a25-c546-4d1d-94ba-266514d83498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779d8ef8-992f-4b9d-afd6-917731e985bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef45580f-d25d-4599-ace8-b93c7b00b32f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1df516d0-a714-4029-a007-b893bea7df85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05e17d68-a13c-4043-ba13-4eaac5895eec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368a714d-c712-409c-ae7a-3d4b0bb36b03",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81e82d9e-2abc-4fff-ab1b-cc4b6de3ae28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e2cc4d-5da7-408a-b666-53347b33defa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65ac0453-5f0f-4b75-8774-9289cae4ddac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0ad62a2-6b73-4bd2-9de6-3743a3e2d814",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8695679d-6328-42ca-a8ff-ce89a30da3cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb49f3dd-b752-4f68-afed-f4f7a4f52d6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a11e3f3-6286-449c-bca0-e1be8956f6f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0972db4d-f814-4301-8b49-74e4c794cb86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5eccc68-7efd-4660-8ce9-52cba760bb1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "111278fe-c890-4b1e-b761-a3a2e5aa334c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b252e80-0ef6-4c83-8254-df5ab506f612"
            }
          }
        ]
      },
      {
        "id": "2fd549ef-a4c0-418b-88e4-ca95e033de6b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "464322c7-0a08-44e9-8504-9d40d0a4eb43",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c871e42-8ecd-48c4-a21d-6a5a46a3db30",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a96bb422-a9db-40b8-8929-c041daedd4e4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7e977d-4f93-4e1a-9e6a-13edc945b5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f2f729-298d-4e8a-a2d1-f723e19f5d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2114fc-e411-46c1-997d-df5cb90ce2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "69e29b62-5139-434a-8b3e-8f7fc7aff3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51417d30-a572-44bc-8d64-c101f343162f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6cd8ad-7143-4e1a-8305-94660fe5974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71b4eef-dd25-4eb9-92a0-86f8c8d3345b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaff0ce-98d1-4027-8101-a691a21d95fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed903703-6e24-4143-a382-6c7f696ad003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f57bf57-f400-486f-a07b-814c3cf03331",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ee5f85-43ad-40b9-9a6b-7a2c9160da2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a33b5bf-0377-444a-b351-0b2981a8be82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08e5670-41b7-4ee0-91f1-6faa81fb1c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc065cfb-7823-4c52-8a8c-2e33cb7fc686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038cf80c-383e-4520-9ceb-40cf86d6a9f4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6374afaa-a13b-4ee7-a9a4-c2cd7e4c885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc7df23-ec8c-408d-84e9-b8514d6633a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7ef520-222f-4ae3-b4dc-e588d9f34099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f398e09-65f5-4971-a72b-c9b25c66f928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f54b9c-4589-400e-b8d4-f6d9a6a8fd3b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d72df1-da14-4578-b2e6-8aa1a1ae756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385d3a0f-256a-4f5f-855c-531e65e02f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b67b89d-21dd-4be4-a549-409daf77090d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d21d3aa9-c75f-42ca-b37f-849f27455068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9757335-bda1-44fe-905d-0d03a53302d0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669165d2-ed28-42cf-9c3d-c503a44465bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd1127c-7ed4-42f5-9e8c-691cc4c0462b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821eda55-0650-4d81-bb0f-c11dbf3bfa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a0311b-0ff4-40c1-8f5f-020901947a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d9000c-f734-493c-9c2b-c02de1b52524",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342ccc1a-ff83-4a8a-b3c2-8dfb892a6533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ef08fd-ff4b-4369-ae7f-96cb971930d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633e4035-208e-476a-bce1-e582d9743e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b36bb3-f407-46db-a3af-e8ebfc327976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd29061-c0e4-4d05-a34f-fa500baacdce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de614dd1-c642-4381-8d4e-c11c694d7ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80d7987-688a-4f20-b733-0902069f8bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4c228a-66da-4a84-b0c9-1e970fd5b4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00862860-c78e-415f-a161-3bd06856fc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5811b24-ab3c-4328-a582-08021522435d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4bbc11-f645-4b87-a146-3d08c2d4457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8c1b93-bebe-4f36-982d-c7533acf8280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9d832d-deb4-4ef1-9de8-49267b19917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08631023-63a7-484f-b2c5-75287ef5a0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093d8e58-5015-46bc-b609-6d2a9dadca18",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02437c5-aa96-4c16-91cb-e176a767c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb63b08f-c155-4fa9-ae30-c056ad4df77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d49462-ce0f-4cd2-ad4a-821b5326b0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00d1ea52-d344-48d1-9b13-8fe013311a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0478ddb0-8ff8-4894-ad77-c14979c1332e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a772ef1c-0583-4f02-82e0-07b86e222ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2202e44-211a-429b-83b4-ac8d2ced6c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e18ded-7680-4314-aab7-e6247d7f31ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a61000c3-96f6-4e1f-99c2-6039cc0b7fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d629436-862a-4de6-9201-555b54986691",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a30ea3-1860-402d-885c-4964e2736448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b53fd9f-1d09-465d-b584-78b55c2f9795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb19886e-92e9-4b57-ac8a-26eb5c760a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "471dc552-2040-4ccb-8a5b-87a6eda8cddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3c3f79-a2d9-41b7-95f7-9d20a50ac202",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a35218-9ccf-4cfc-bebc-a94271cb90a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adad7a0e-ae7c-4422-a2e0-6e36ac244216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60df8b5f-4fe7-4079-b332-6a10411474da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59b5433-344c-4e88-97ac-5b3f5fde64be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d25da9f-b121-4c68-b142-477b94a06b1d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fac0b5b-6963-47fc-9970-424903802b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fb4892-8428-49c6-a2ce-ea2ec53bcd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60115379-64c0-499c-bb30-a320600d6e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33fb53b-caf2-4c94-955a-120288e7636f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11bcdb6-11a8-48c4-9003-b3986a5f1230",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661d6579-255c-41b3-845f-40c701a6be3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff56ce8f-0706-4606-bd24-f4e6843ea345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283477bf-7968-469a-864a-1b683cf1de3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "41aef50a-c26d-4910-ad9d-b8cda6409234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2bf619-4993-4b6c-ac79-d68b51f850dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b296b6-ca09-4f9a-9391-10e9846d8ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023ff9c0-a53e-48b8-9f98-0dc460c582cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaf9bb2-0c70-4333-87b0-bf588b42068a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4641532-4fb0-4c55-9622-42f92d1e37d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b1e6b4-f6f4-4a6f-aa69-90cf2c80f4d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496ed190-ccaf-475c-926f-a45e65d46430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b690da81-8c8b-4348-8b50-496f4c28ccf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6433cc-11de-4878-a417-12ab8070cf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "215abf01-349e-497c-bea4-04911649f8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3347ed-e25d-41db-a0da-2f7d47725a1b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29506859-ee6f-4ab3-bfdf-e7186523c95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f99f240-5a58-455d-9724-88135886624a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e305c7b0-1592-4b39-980f-4f66dfb57be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d51952-ebd1-4a82-8a70-aa75039ab360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74aef90-7382-4cfe-88c2-45d06f42c237",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822d584a-dce6-4309-9b97-ec02c8bd2d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea589c94-c49f-421c-b0dd-5f36e0dd943f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d916b2f-2ceb-40d7-9fbf-2b607006c61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5e6516-c49b-47df-b715-c2244bc1768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fb80ae-c896-47d2-a23d-3ff57c58f3f1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0503b7d8-8c68-4fe8-9002-272735d0e516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050522e2-0093-46fb-9614-aaa5cd8e2161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0103bf7c-df6b-44dd-8f1f-ef935e7e12f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d139395d-c6c6-4b62-b32d-58e145b3f081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6851b48-9ca7-430a-a33d-f66be71d1c14",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d8e1d6-b29f-44d8-872a-98abae135a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c728f4-9a71-4341-bb79-060462a14bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a061da65-523c-49c0-a441-328c5d5ee17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c3188a-2cff-4178-8093-821557635b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55582c70-6dab-463a-8adb-303d27349452",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbb0e6f-f22f-41e6-987c-6f9ba12f11b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06df14c6-fee2-430c-9427-1e67c983a8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd9c28f-8300-4c55-95ac-3456c4180c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "230a4d07-77c1-4986-8295-aed223631f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03482baa-ed88-4a38-8765-b63120283a52",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45398c48-6f71-4009-b250-ff6e9b215733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470bde10-67ea-4be7-b31d-4a5ee4aba1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e021355-6953-4c3f-ae3d-11ba0629836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1156ac8-446a-4028-9e98-978db1a83f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66dae59-372a-4071-b3ea-83b14e72a6bb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efed36a6-f807-423b-bef5-4319a4af79d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223ff651-499e-4559-9330-7b664c7cf0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0734f39b-84b2-44f5-a072-35efd28bb568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b47e99-0c62-4058-b884-e3e5630e8a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f07cdb-073b-43ab-8012-e2bb1323041e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654e7314-e4fd-4896-b560-1736522ec358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e88d74-f111-46a1-8f24-4d17d65a948f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4930e2d-a113-4ce4-b7c3-6b2022ec6640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe00cfdf-d8d6-4394-bde4-936e63388ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce37df4-f5d9-4104-9cce-3ef976a6b69e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eed191d-ec08-43f0-92c1-92177aad69a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9531e12-7750-4277-a733-9a12f8622dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3861203a-84e3-474e-b31a-ee2634220a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "909ce79e-36da-495e-b1dc-879596b32634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6785e1a-a754-400a-bb50-ef4a592dae13",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e439fa80-479a-4aa2-9037-2271bc45d139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65153af-313b-4479-91eb-2140cc88658b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70222030-a2a6-4c6e-9810-128194998572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b67290-2da0-4e14-917a-43eb279deff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8448fc-26d9-4321-981b-6bf7e2720989",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f853ad44-159b-413a-94b1-dc999ea9f2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb747999-50d4-4466-a8b9-931f74cac735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd21d682-f719-48d8-b8d0-b8f962350b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "216d6462-62d9-4b3e-bbb0-a8dd7e74df0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c629c91-ddc2-4fc0-a3c8-136a23f8c2a5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216840b4-1ee1-4aa9-9a07-69570a32773e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4aaf1d-e9ce-4d1b-9c34-97ca01ef596c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c61b1-d0a2-472e-bc0d-0f6d47d81cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1968866b-8aa6-4e08-bcd0-376c23d83ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e321a4-0e4e-403a-a2d7-d6b5847ad6ea",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653df89f-3215-4f72-9bd3-4bb303f1aa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11a3e48-4d34-4870-83f4-62bfdd2a9e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5036aa3-e84b-442e-9533-4acc6d1de8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "635e3800-a71b-4b19-932b-3ff70dd7d010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e116a4-a0fa-489a-b4ae-21dcfa529e7b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24caac6e-02c5-4977-bc79-788c471f7580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5f5c36-5d9a-48ef-a636-1f9067f7b87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d54fde4-1cae-4b74-b6a5-eb0c5b5c678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f201ca1b-3eb2-4706-be89-9e4e46e41912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46676740-d675-4cd2-abf7-4601cd9c73cc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e345791-0dc8-4086-b169-dbf654fb2c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d5e870-8b2e-4b3f-ab4c-7627abfcc6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae360e77-e6c2-4080-bd48-043d3ddeb6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c20dd5-3dd0-4919-8057-b7609cea97ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2a4d75-2f15-41ba-9582-159acc4c8000",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9669f4-9937-4d05-93ff-2d976f211e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0f585c-4231-4ea3-b99f-3204daabdcd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a7902c-96aa-4e7b-aff5-21965a60207d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3c9fa5-0fc9-4aa8-b5a1-fc6cb99b61cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cec78a-a003-42b5-8835-f252263ad04a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30851d7f-435b-4c6a-ab1a-fc9ff9bc949e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be228e2b-fd18-4076-ab0d-c47afd0f2a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80272a6e-9ae6-4d0f-88f9-bd28d314613c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1cea1f-9ed4-411d-bb6e-8f4abf163d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19561433-1179-4d50-8fda-7db67eee73e9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e2318d-764a-4063-aaf4-b0cec9167edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4405938d-3fa3-4108-920a-634c89cb63d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3556a816-fa5e-4935-9362-123501af5b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "756d7eb5-9bb8-45e5-8ed1-088287a3c779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0ecd40-618e-4ead-b5c9-33e93b3ec53e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a814901-1dfc-40ec-b1b3-9892a33bb046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a530fa-caa9-46b3-aefb-ae1773f80019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c130632d-1fee-42c7-a7ec-50a21ef94edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "280723ab-09eb-4491-abdd-fe74fea64855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad988bee-d0b0-4fc5-9813-c5e6ba27577a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a89ca3-789c-4e49-9d0c-9a71df0fd294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cce4c5-ff5a-49e2-b47c-eeb887949fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c982f112-0d4c-4a01-a6e1-a1ea29fb29a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a86d1513-84b6-4bf8-ba81-e7bdcc518653"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5256ffce-4c4f-49c0-bd6e-285d7141b85b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd0f2dbb-b0b2-4eca-a5c1-23436f824b84",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ac1d3d-2f6a-4f28-b90e-1d96a68e97ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3090f40d-6ccb-4b71-9fae-f2b3d4f48ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da94bcdc-2f28-401a-88a0-eac291d5f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "affa41f8-8bd6-4a78-b686-f850529ea6f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b89ff170-f0cc-40f9-9b26-5f7b52344d9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6c5129d-0c36-4588-b423-8c5a6b8aa7be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38589082-969a-4f7d-848c-81634c6686a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64c88349-bc16-4acb-9ecd-fd5f8bc7c890"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c619dc8b-e575-47c7-a077-62cd052d578d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b677cd57-942f-45a1-8b5d-f8a969b62068"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9200421-2607-45d8-a547-88419420e791",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9912507-6ad4-4cfc-8761-0e0d898ba3ae"
            }
          }
        ]
      },
      {
        "id": "4d53ed19-ba6d-4554-acb2-33f1cbce6018",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd8d4229-7a6a-4541-bd59-f93567b4f4e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23711e73-e274-4eae-a31a-3830d8209e1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31dcc4ff-4a01-4882-86cc-405950acee1e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf632cb0-496f-4193-bebb-34103aafa12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddefa891-f0b4-4358-b5dc-836a5869bba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901524ae-f519-4ece-8f63-71b447f69f07",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89c2564-6065-4d4c-8544-f958d6b1dad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f806100-64c9-45b5-b42d-eb1648e0612f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e473d973-cef0-410d-88a5-b2cb095d1167",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ef17e6-3b55-4a46-9eda-8cd6aa5a5dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f95c3d2-b389-4800-a0fb-2fdf98f8cf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32db1ebe-1ca4-4a25-9bb5-95958397b894",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6c5799-64c1-4779-a44c-8f14c05a134e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174af126-f6c0-424f-9da5-1cba588b0b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfbe06b-309e-498d-bb21-bfdba740f10f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518723ac-9d76-46e9-9295-79122622c14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf225a61-39d3-47c0-a2d4-01b026c82656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424cd502-7d38-436b-a75c-064bf909c263",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d29178-0099-43cd-9db0-0317cf3ba9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d22720-4c54-4627-b9fa-8a2ba790e95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0fab1b-62c1-491a-aa7a-f1b83eac7961",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf2cd6c-dfce-4820-bc95-1fb9916c53a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c9b874-3dc8-4c73-a2e6-9e64999340ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e1f13b-67d4-4d72-b8fd-29388642a4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2400142-7350-4234-8826-e7a4163bd084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b51560-4b1a-4d13-8ef9-7df357dbf6c0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08c8d4f-398b-4ed0-baf6-5b6ed01b8289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88bd24d6-abe8-40f7-a3ed-6e1ac1b0a703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20927f9-4b5f-46cb-a77e-5ba2d35e3c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b050239-097c-419c-b6fa-73c344f8b3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77eef7d-7c78-412b-9ddf-e6e584473054",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d6680c-2c57-411c-a3da-c78be40c51ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7cf7375-011a-4462-9bc0-dccac759f0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18737c2-2e1b-4198-922a-b9a8fd342a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022a16a0-4ac9-411b-a686-17ba3f414af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ab402d-4912-4e6e-a1b4-ff5b3cbb9385",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0389ee-6c46-4014-b93e-ce491c8dc4a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7102d0-725f-4919-a1c5-0353c7a841b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e3d919-4ffe-410e-8fad-4c2933c16776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d82c48-b069-4a9d-9f30-2f389aef5743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc46605-4812-406f-b038-cbc5ec2ab06c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b5220f-e159-4da2-a6d9-1d2b1987da2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba0aa19-7f0a-4656-a8f4-3a642be1e066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9897ca99-b792-4129-8829-0b80fee42758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4f3f30-4dcd-4cfb-bb7d-092c9aad6b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbab9735-0f7f-45fa-b41e-f1b0e7a90f1b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31b79c0-9ab7-497b-9e90-567c355ac244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9688e28-d676-47f2-be62-b06cf10302e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d5266b-b568-4de3-93e7-e30dff587635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158e227b-3746-4925-a611-c38de1dc6781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5199bbfa-b311-40e4-83f2-d1e413eecd23",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537388ce-f771-4ac0-9a82-929be32e5647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e36fe38f-a567-45fb-b4d5-9ad7209be78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81351d36-82af-4517-9abd-94d281051b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62267d0e-2de2-40f8-97fc-73cb458fecd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a419a7-ebac-47b4-bba2-610a12447e9b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65b5ed4-9e07-4236-a0f2-4906aa7226cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7a13a5-8da9-4907-8b62-183f5c653a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407b91d2-9b8c-49f9-b31c-e18aaddb7d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7241b8-8098-4f5f-9340-8a270a040b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c9fa21-2985-459d-a823-8106214df8f2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36abb64d-3f62-4641-aeb1-e0917fd977e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d60d1d7-c710-43d6-ad8a-164d0a965417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfb0a17-9c7c-47aa-bf71-5bea0822683d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674d2107-efb7-44c2-b196-45f8e3e89e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d292ae8-535d-47de-aa75-6aaadc563d9a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3ac2a8-000e-4602-91a1-a9d2f44307e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c5d6ee9-6990-4cc1-be1e-ad118ae93642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3567ba23-effa-4b28-a10f-a1af17e9d9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b27fc53-51d0-4339-9b1b-528f65ee05b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4df981-3453-46a0-a18b-4a802ab37883",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9896d1b-e5ee-4087-b26f-f6178e103c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03f3b7e-c85f-4c48-bb34-869c01fbe4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486a187d-93c9-4d77-8609-e4e16d997606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8722b211-ca4f-48d7-8eda-779df1120a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b44d0c-ea12-40ce-a0fc-6745c019fa4b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad803a00-97c6-4b39-adf1-0846a8909dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6604f2-8f9a-4a22-af05-b904a7e4d39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a28983-b18e-4565-a35c-7001a848f4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a4f7a4-ab21-454b-8f79-b7cf495185c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5136314-ce06-4bbd-9b19-0f2b8639f972",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b311a95-1310-4a23-8340-da58bf88d285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6e83ab-5457-44cf-9df8-67b4866b2953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c33b5d0-a844-473e-b4cd-495708f06b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d35750-070a-4d89-b679-469f014c5cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e243ba02-0553-4e2e-ba8f-2be55817e4eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe5f0ac-7ea5-4715-93a4-f766045c510e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39fc3e4-06f9-4ee9-9599-37407884345d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6480458a-126c-4cd4-af3f-370bb7980279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b233ac-bf42-4c36-9f56-9ff42ea65745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33693cbb-577b-4b5d-8fdc-9c386b456d9c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc6b006-8f11-46f5-bc1d-9da5bb099a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806e9549-df32-40d6-9513-ff08b0dff8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b9f812-45c2-4586-b037-ee951ee8444c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e0db6c-b0e9-4a3d-9d88-24a7d9b16cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ba22ed-cb6f-441b-817b-b0115bc6863e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34617369-0b0e-43eb-be37-eb49b56f6a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff43f7c-de22-4f79-a20f-3e44849c979c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9330113b-f6e4-4c0e-86bd-2921d0d5a882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5b94e2-ebc5-4169-8a84-2a0fac716a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8df7af6-7ba8-47e9-a711-76c3e7926ae0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7ce9e0-16be-4514-bfc6-30bdbf5f9dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4071a9-25f3-4d38-a359-a38294d67d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "badf8635-50d3-47fd-835e-3a366907d910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1263b939-e9a0-46a1-96ff-1f2a5348800c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7434055-1a8c-4778-acbc-20764e4ee4aa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df89ffc4-9534-43ac-b906-277733d8438e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d97116b1-b2ec-47f4-908b-e237437acc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc28c54e-1d0e-4ae1-998c-ef1b990dada5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b332aa83-8ef7-4720-8d93-9344628d0018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b071c4-bc34-45a7-addc-7a6f4b6ffc4d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7e4c3e-38df-41f8-83e1-8c6eaffc81ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436dfa8e-9657-49ed-b9e0-50fa8fde41ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d4d5ae-46e0-4f3a-96fb-042413ed7e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5815eeb5-fdb1-4d37-94dd-edb2233a06f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6022d1c9-9c4c-4914-88ea-87784a4c6beb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14a000f-080d-42c3-8b24-674089c6b60b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41299ee8-28d6-4b17-83f7-07f2ea0e8457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792b32c3-4ae6-48be-8295-91612a997084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879e0ac5-26e9-4b95-aeae-73a0093bd7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4717f063-a209-4f9d-a3d6-ff6ca09af897",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d5e963-25e6-4e3f-bfc2-bde59497cfb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61f0686-9a14-47f3-bcf5-a98dba007322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dac24b2-81db-4d59-9c52-fe48813c28db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c90254-7e50-45d3-beb7-568bca47aba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4d9b7d-b1b1-4514-8f01-940eea2b2d19",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b7b400-b4c8-4137-b64c-6e90c3fac6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69735ef-0eab-4fbb-92af-7ec0bfdc8c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746ea754-a84d-408c-b578-efce2c3c7820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fff1d98-c677-4241-90ec-2a9dd35fb99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85adf11f-38b5-4b30-9cc0-49bbf37b7e3c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2066b6e-f623-4e5f-a79a-08661023cb7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5934272-36b7-47ae-9b08-9fe18c3cce0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e27ae7-285a-42bc-b9c5-66ed3586e3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bf6b53-b6d2-4049-ab50-8aa50c44e93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90da42bc-d73b-44c3-9ecb-8000503c97cd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae131c4-a998-4b1f-b905-4b70e438b3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1acf270b-6e92-4604-b3ec-859f66df1756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff5a954-3a83-4031-8695-a772b76172bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886290e3-d634-4248-a724-aebff6be7875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9115268-99b1-4cb5-bb1d-47ff8dfee70d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f695864c-4787-45eb-82c6-f9e2703fed68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1493c9-3214-4ec2-a23e-5a8f9f4e37a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d6d093-4fd0-4a56-b33a-7b0631e40cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f550b321-4a1c-4f64-a26f-187d666a7755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8014afe-65b6-4e46-b7f9-5186c918e6d8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd14020-b6cc-435b-b64d-6aafe550ed8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dac51d5-908e-4ac8-8b65-6a4c589dc5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5394f49-65fd-4ca1-ad0d-d12419ac63b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9c16e5-6b7b-488c-bd84-6b1f1aa9abd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bb91c9-929b-4d54-9ace-1a6f0e660d89",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dff43c-9e67-4cb1-bc5e-6a89fcd1b7c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd75a27-ace6-4d97-b249-13587d6cc574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d8d804-8e6e-47f7-9e8b-cb00309d0437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdd7643-6c6b-4636-875b-6392150030b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caacb38-0459-401c-8b3d-b8fa2339fa56",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114dcfaf-9a2e-41d2-95b3-bf0cd2206aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8102bc24-c644-4945-ad3f-57070d390669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d3952d-552a-4d91-a7f9-175a1dff6153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada5fada-4cef-403e-b3aa-144b5f527956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1ecd45-026e-4afe-8519-93a71fcafc4a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc8f55b-a0af-40b7-9725-ae914476ada7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3345e1-67e3-4952-bd2a-d342f4017fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db52c363-6271-4506-8b0d-fad69fbc93c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c543e2c9-2d0b-46a5-83c5-5d9e19fbf44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437ed11b-88ee-4135-a690-e09b5507e755",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff47569-cf1b-471b-ad5d-1a828efd2fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462d1a17-59bc-41e2-9782-e4da0ae3933b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc15f887-7c4b-434e-bd28-689db509050e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cf8d13-e4d1-4d2e-a4e9-a0589abec2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f5f5a1-dda7-4124-a884-2fbd20b07014",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ebf7bd-53d8-4600-8971-a17a3347a06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece22413-77e8-417d-b91a-41ee183e0022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036f7815-9114-4504-aae0-a5dec1965ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0c56cb-72ac-4652-afc6-70ad1bbb2155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2f6e71-9298-467e-8d72-4540f1e161c7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3781e04-b391-42cb-8701-a77e493b3114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04068312-059e-4816-a702-61c73838787c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afeef23-2a21-42d0-a6e1-9f6967a97c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ea772d-f2f4-4fed-81c8-ba0a327b68c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d46cf72-aa3a-467d-8ffb-124a85cfbb79",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e62a21b-85ca-4e0e-aa5c-58f906b8957d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8ac791-4fd9-4341-a4bf-64dc781e5cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f16a51-2cde-4e69-956f-15a1ca8d2e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4ebbf6-cfa0-4d4d-ba1e-9ebc90ac21f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bec997d-6045-4e0a-a552-d8b5a7a32cf3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c82982-b3e6-49e3-b841-cbf4730585bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2675cd3c-9ca3-4814-88e9-8c4da5664e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f13b04f-36a5-4d83-8de3-aa64a0b38059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a94f4c-fece-4257-81e9-58569a8c10f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bc958a-dff2-474e-b980-b3ba6594b630",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5f3f46-3818-40d1-8727-e30f73cc5272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fe092c-6712-42a6-aaea-ded4da139ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd588894-b036-4f3a-b054-66a5c208b446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2a88d7-86c9-44f1-a52f-042b6499af97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6513f700-e481-4ae1-883d-bc37761038b1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808c410b-c37e-4446-807b-52149900e8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172faf5f-35ea-4ab0-b242-dcca7ee71cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d13954a-2805-4b29-9324-2bbe5874a013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2209eb36-950a-46b7-aa2a-64c7f12d2b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5697a45-6d1e-4766-bd46-8434c97b2c8a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64938699-bc8f-458b-b827-a5f5d1117946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a697c72-5aa8-4c22-a8d1-7eb375ba86d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26241090-7718-4a0b-ab92-c162d934a66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e206a8-a2be-4cd5-95ec-6aa780acd37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059ce834-932e-4885-aa42-b93c7a3ef44a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790a688a-5fcd-4396-9f6a-f8e01c4d99ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d7e1aa-fe60-4d10-bb56-93cc87e05318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc6b77a-9e54-4ac4-acdf-d0f0f6b6cbf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464e8d35-692e-47dd-ac1c-9f9126aef102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a71da5-eb48-4476-8e16-e2ee9a3ad24e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65759dfb-a2a7-4e67-a1aa-9ab91c8469ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74362fea-e883-43dd-99fc-9563d33ab870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e714dc-a04e-492c-ab7c-1835fa7a2e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d583b78-06bd-478c-b193-a4119b8d988a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0dab74-3331-4880-98cf-28854570c8b0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774b04be-bc21-4ce4-8307-d639995aef93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2894453-bf49-47cf-8e1d-eaff5f2cd09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb82651-faaf-48ff-982f-143c691fe276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606c6c5f-5bb4-44d9-805c-7405f2428106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953de712-e480-471b-a1f3-3b573ba6638d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7c89aa-3b4c-488b-b395-8cafbfbb1bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436451f0-ff12-400c-8126-99657816eb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b65eac3-ad2f-4bbd-9d46-16ef82d6d455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f64ce8-44ec-4764-a734-7392884b27d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2994ec-a735-4730-9661-12205fae40ca",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b1d3f4-d2fe-4a6a-a498-d2ea51911ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fa3369-3341-4510-9866-7ffc20893508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c7da8a-7d3f-43ab-b0a3-5932300e9b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43f04b9-3d34-4469-9885-783404cf661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6028d57-dd87-4c09-8a65-04b2e48ed28f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4523de8f-d557-48e7-bc4e-d466c5eae5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46696482-7fff-43b7-bb87-ac18382f2911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e843aa-73fe-414a-9e70-471134ab0735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a28e407-cdfb-4df7-bd3a-d0d4b0b197bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33457c7e-0e5c-48b5-b86c-b295d1becd79",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919a7450-a068-42bd-9f5b-b40356d88f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d727a82-423b-4ffa-90d0-cbcd946b428d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab417f4a-be4b-496e-bbe3-0f14362f5f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12156971-ca10-4188-b559-a717ce8ed32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b116063-622f-4e74-994c-33b588dbfa32",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a43779-4f3e-4b73-8390-64628b163d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b42f56-9e10-44d1-8443-abda7b9cb784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9e8fc2-c013-4590-be80-f6832e3e4d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4caf47c-00b7-4442-a170-cb4de57ecf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80498088-69d8-43bb-8c30-06cbbebf8e57",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7abf22c-b16f-4e08-90d0-483005ed2346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a621b41-93a1-4ea2-ac63-117667cf045d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d07e24c-743a-4fda-bb6f-5d80a2a1bdba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7ea285-6625-4b03-9466-4a57a9bc82c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55abdf9f-46bf-4e71-a058-e729375c1c56",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c52921f-054a-4fc8-9013-bd01ad58a284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6907e3-003d-4750-b748-663b475a3eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cb4d59-871b-43a1-a91c-d50a0e65c92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476af851-d766-4676-a3b9-223989917d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e59ea5f-0a76-473b-b7b2-22b300ba87c0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d46ff1-a329-4b6a-8753-de0361fd2188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c911c6d1-0431-4d1e-98c2-94c24d4b6976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa23e46-85e5-46f9-af6f-cb1b1d9fcd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4c9f21-b117-4944-918d-acb8dba145f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ccdf5d-d413-4fb0-833e-0ff68f6ac2d0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19381b5e-1628-40fb-a4dc-7eff9a4d5b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b571b0-f5ee-4502-8ffb-bde5700c1a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f2282a-eff0-4863-afff-ac3abed13c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d08e23-88db-4559-904f-b536d22a97ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4e07a7-53f2-48ee-8c02-290cd7abab81",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5066f5-5fcb-4e0a-ae1a-97a2ec030dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665dd608-6e39-4018-9490-dda87fe94fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2197be37-4df7-420f-acc2-2ebab449b45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545e3bd3-b901-4cd9-a32c-7b3ef0c7bd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab614369-0480-484b-b090-7deca6847d59",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b840a4f2-9381-4e65-82f6-7a6f43de1af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9d6ded-1b74-46b5-8a54-6de86db6c39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12539e3e-9988-453a-8bdf-bedf050b91e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b5673a-1181-42e8-bf3e-41e2839d1f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea9c830-7863-43ce-8689-0017499d5715",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5404b2ac-2c9d-4784-8a7c-a44a24f88564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa863e2-0c5e-4f6a-94d4-89729c96d171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26a8655-73a9-49b0-bec4-13e1eecab8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f047fbf7-7ad6-4472-9ead-1ee9ca2b0c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19362605-1db4-48be-820d-46255c16287d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657aa370-4a38-47a7-9523-cf9e283b823e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e26b65-cc4f-41b9-b1dc-e0a87947d623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6798da68-e82b-40ae-b276-aa3c568a37e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31e2cce-9a4a-41e2-81f7-1d2355e65e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d762401a-5fc2-400e-ab08-a5be789f6951",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f954df4d-9a63-43ee-bc1e-1072c83d5f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc98b67-826a-45ac-aee1-a68c0a31c0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d343fb-37be-483c-9a95-7e7fa85bf2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3dc74ee-8489-42bc-8191-79d74e960609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16436b10-ac81-454b-b6dc-5233a164b247",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dac0918-2db9-4ae6-9075-e7dac603f7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4e2035-656b-490b-b189-4b5bced1c90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a5d05e-d6bd-4941-a2c7-cddb0c0f56e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b83ab2-b7ec-4180-8463-bbc303ad4caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d115428-8b6e-4468-ada0-190f42d55835",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712c0d5d-d206-4dd0-a531-c0b96611e71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14f4888-01a7-4fcf-ae3e-27c3d988359a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb21dace-1f2b-4948-ab9c-9183aad83c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a018541d-e539-41a3-b8a8-8ebe62b462fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829d9dee-f66e-4eb3-abb4-5e96b7f5ab88",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0a5d58-5e8f-4998-85e6-1f2184c3b584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbae7b4-8b5b-4714-8de8-8e370732cb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c0f1b9-c159-49f4-9bf0-67f6918f9e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81845880-ecb8-4bbb-86cb-6d8890756ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e8b55d-0dea-4458-bf98-c4d96d98c876",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122fd7d6-5506-4830-9e06-751c19c9561a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b63102-bf2b-4adb-835a-97b124131097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e0aabc-06ab-431d-bcbf-5016a595fccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c628afc-3ea3-4be4-ab92-dea11a93ee29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff7359f-4ab5-4890-9c47-327c7095b5a0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75722794-79c7-4596-9f60-ee80af0a46bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcfe40c8-1272-4b6d-9632-15b4c2f92d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0842963e-9d07-462c-8cf3-f3dbcacd56a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4416a9e5-06d5-4cac-aacc-debceb4c8d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4ab97b-33f3-485c-a40b-d202591d9579",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793d963c-9bdd-44d4-aef4-8a38087517a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b75e95-1863-4bb8-85d2-14d06fd84c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e10bf51-e487-44b8-bf80-f8918bf93603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dab089f-a5b1-4192-9445-f6697751651c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84564a3-ae88-42fe-8e57-48d2794100ed",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e0faaa-df17-4e37-ad8f-b36a05dd9ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "592b3f87-d551-47f3-9ed5-13f2d8d8ac7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a951f5c-eb17-4907-96bf-c034f4ae79fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a323f7-a493-4ead-ab2f-1a9248d56b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5cd198-6719-4b46-8e49-021c0a632130",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4e5b9d-9f29-4774-948d-19d99f4204eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5e47a02-c8e3-443a-a9c8-0d5ff4116577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be49cd57-ba8d-4430-8c87-4e1b3d7df162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e423bb5-d348-45fc-9219-94c3de7f8008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36481267-cc1c-4fd0-bdb3-f86dbd127b84",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0e7de5-a915-4a62-b320-d1941887964f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a1404c-9c9e-48dc-9356-4ff442f6d5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667ebf5a-dba8-4ab1-a3ea-433d3b6ca0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64556941-7931-4116-a30e-55fce942cdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aad4222-442b-41d2-9bc1-252df2fc16fb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5442bfc-336c-418a-b66c-c492e8308d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1351b2ba-e5f3-4fda-8b1d-d7a1f9ba59f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945798c2-f888-499c-8a98-9eb6a8906b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5a85ca-3b7c-4f34-ab74-0a2c4cbe09a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d5f98a-f0da-4ee1-bf95-85fe581edac7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f37049f-06d0-4529-88fb-2fd303c7a42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f1151a-1db2-493b-bc05-032f383851f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da826e0-1fd9-410f-9be2-08a105997852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa58a213-f7e7-42b7-b7cc-dbdb51835c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe91d2e-b82f-4e41-9e22-a0ff4cae2401",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdeb0ca-8fd6-44d5-8bd5-228a061c3416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189ba590-2658-48ff-a3eb-3d059c851922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf23b24-dbf3-4501-97bf-1cfe3396ef23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62155448-89c2-4931-8213-aa869e5c7946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e9db7c-eeeb-424b-b45f-21bb99734106",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0c7ee9-a188-4342-a047-18c54806e930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb000a8-ab3b-4b4d-9df9-961ba5353451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606ba279-40e4-44c0-93e9-ddfcbac07119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5830a999-0dc1-4404-9291-57dc3ee31a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1c2739-63b1-40f6-b443-c0f3f31e0209",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1776e315-c805-4d9d-a857-9ef0e5db99a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d6053c-fba4-4874-a129-0f321b0b9723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee107eea-b742-4cff-822f-f8a611d4e187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1816c0ef-c43a-42d4-aef6-93d574bed01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8887344f-5d96-4e94-b2d2-a57a1e09ec1f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfa4e6b-a185-48ce-840d-affc416b40b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd680ddc-86c5-455e-ae54-f8be2c37e81d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa0cbb4-8604-4dd3-8a76-0e4ed5463a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebb9be6-95f0-4e21-991c-4b5fc8cc9847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf1972a-452e-462b-8956-9afc6d91b8af",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431d42c1-a8bb-41c3-8a9d-cc127ce3c8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb9c4d5-46bd-414f-8559-66fa2e0bd10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa262fb5-42fe-4dde-9169-2b6b4286f7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29680c1-58de-4dfa-bee1-5c9a47a9e033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baee3120-0164-4359-8261-06668dcae299",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e560b6f-7017-432d-ab72-8c8de9b1d7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8a0fb1-a69d-4eb0-9b75-41d3a9793b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9210bd3e-de66-4d88-8abd-5c13e16fc7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c9ae33-0bf3-413c-8f91-398ed4c2f05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a016e99e-823a-472a-865e-6967fb1ef93b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5813bc49-7333-40f4-a74e-98e04e3622e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9c5033-f6ec-4005-b030-6911d5b3065f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e9b5e9-79c5-45d3-b574-9d4eb626ffa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4882c72-ec4a-4d71-8c34-9a45ab72bac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ad435d-e7aa-4c36-b4fb-24d092d60f76",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcf904c-6bbb-4edb-affe-41f4efe361fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3ba5b1-dd0a-4abd-9279-234936ef2398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e36094-2b3c-4939-9524-3ad329dc79ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de8faa4-ae93-4930-8e81-77ef91f63566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98a626f-aa30-44fd-9314-924ea6c5f276",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97caa17-5b6c-4448-96fa-0c02deefdd8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220db4e4-64a0-440a-9957-d48267a0f30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca38c692-e532-4073-8dc1-eff39667a1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b20a61-0528-489d-9322-db11e2816ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1ad0c3-c6c5-46cc-bdab-29c0ccaef3c7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43132154-17d5-47b8-932f-9ee616fe5936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57622344-6baf-4b79-844d-4b160acc0165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a14f3f-b055-4d12-8c8d-e6b5e97b083d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac159c04-d293-457f-a2ac-a7b1ee4bd217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e137c3-9484-4f01-88b8-7eb20c1063f6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d025a3cc-93bc-4cbc-8b8a-b9bcf0f1a65a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d86279e-0454-4bc3-8af7-8223d17c4d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc4675f-e36b-4846-a7a9-e4d3ff74c12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47100f6-8b8e-4025-bb77-29ca96b34da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9d7a3e-903a-46f6-b4ef-347b223d2fd3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d84be85-a415-4916-bb39-5eb643a2ed90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90747f4d-65d6-4885-9672-92b4e421760f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bec651-c219-4002-a7c9-0eebd47de7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc19fb4c-a959-46f4-9d36-f0352badb14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4611db1a-fa30-4a01-823e-7ef27e821eda",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32849ecb-2106-42f0-a5b6-fb1b73415911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab5eebb-ea6c-4fd5-81cd-f98fd195ad22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89bd361-e903-44e4-ae5f-0e6e19c9619f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea528e8-1941-4766-ac51-ceffc204de99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fc067a-e041-4a6f-8573-06f37f7c2357",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03129eb0-4030-426f-8074-2f22dc58b9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5431262d-e266-4bb1-85d5-e51dfffd5c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011b7a17-138c-4cd8-b633-de3add2e5598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1443e0f9-8e5e-415e-964e-8a921d36fbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341ef91c-c6fb-4a4c-bf74-12d38486822e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25837d73-9cc8-4f04-bfcd-e848bda2be2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db3cbb4-ae64-409f-adfd-a62dcc73fa55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d923f9b5-a941-4f60-9722-581c4b28f68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82dd518c-a474-4a7e-83b2-eb22ab5bd1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d3bf29-6c0c-46e2-9216-ead4e27ad545",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd51d30-d836-4ae2-aeca-b3c09c221344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01991959-ed03-406a-bc97-4ad3e320f2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c948c9-8879-4a05-ac4d-d8f62795730f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e5ccd8-7359-4159-9762-573fe437e243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4610d5-49d4-42df-b7c7-43d8ea1b52f2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e730da37-d61f-4bac-90dd-442f294e2856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "824894f1-7362-4bbe-a769-32fed77665b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa669888-fec9-48b4-9900-1e71d037ce40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595f8cb6-d71c-4171-87ee-69bdb5534bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3579f183-b3a1-41f3-b488-a69bdb30cc7a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdc4ebf-5678-42c2-aa26-496815a97cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6c1c5f-9ee7-43b6-af29-8a6911ac2e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affe84b0-5622-4337-b199-4d367aa283b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb70ab4d-c0ca-4904-8b89-380c161a8c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a204079c-cb11-4ee7-baae-2856638bbc75",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1905cd31-35ec-4b88-a33a-36f016edc4c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c399f4-789b-477a-b39f-3bd6aae9c725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9bde14-1cac-45d9-a728-b13b42411a2d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f82273-9dd2-4d01-970f-0f97e5f61a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4973c144-af11-459a-ab53-e06516c7bb66",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff4b49e-f824-459a-98a3-9cbdc751c39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1100f1bf-75a5-40f7-9c95-8be9bcfeda53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a4199c-a4f2-42bf-ade5-2b1b685f5a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342ad1f4-8880-4537-bfa0-05cc4d041054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062725a7-fc84-4e77-b92f-b2df8e06e3a3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d08705a-c7f8-413a-9e4c-614c2dd8dbba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c4344e-30b4-4fad-b755-1701bc43ce9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938eb17e-d841-473d-9a4a-630226b2d960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8117fb-c4aa-4439-8136-738e0c97f940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84984a1a-b63a-4205-9549-da7eb760d54d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bca0b61-46f1-4a85-aec8-a15e78b5f055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdda499b-3fdc-402d-b299-6cc299e85b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4f0eed-e8e5-4865-bb22-e3c75ed423de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defa416e-c41b-4a26-8fda-13c9401d9c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f150988c-c4b3-42e4-a04a-181536a30a24",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c7b213-31f2-4a5d-9fa6-519c2b9b4657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b569e98-a096-4440-b360-ada287f221a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f6dbba-f766-4d36-8740-9456446d13ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc921b9c-0ce5-4777-a2b1-1fa4824629c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f829d192-fb67-4fd4-a8b5-708e2b30439e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b815b00-c694-46d6-af29-a019f79d515d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460548c8-9ee7-4284-af57-a10039eaee80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb34e9c7-6601-45dd-8763-ff242e98f38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c88772e-aeb8-45a7-824e-2cb427e41f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94d8ab6-d6d3-4ef9-a5be-a437d2a0b999",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7261514b-bb36-4bd2-9d44-75c2708dac6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a519d2e-fbf7-4ec6-af49-acd1bee9b862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5903d71d-f2fe-4e1b-aa83-f041e02b3164",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135bfd6b-d3c6-4819-a285-7e3b780959a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62887e5-b537-4503-99d4-9b21465ffe7f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd97d7ff-37df-407b-a975-91f26de547a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d966492-0250-4c23-b50c-5c86057a7f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd00dc80-5e7b-4974-bbf7-30d9c0db0718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f085db0f-975f-4fae-90b7-a278b512cbe1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "057453e4-4e8e-407c-80e1-87158a703411",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "337797cc-f599-47c3-8eac-a00c8122ad8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2dd6b4d-f6e5-406f-9394-1941cf03c1a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a91ce385-4f92-47af-bf92-ae5d287ed150"
                    }
                  }
                ]
              },
              {
                "id": "e0022350-da92-4d93-bd57-d7c3504016e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27dbb7e0-eb0e-466b-a30f-bddb6dcce214",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912b6063-9ab7-447a-b654-fdc35a26905b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "542d2c1c-77a5-4806-a078-3933bf15a88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb9b94b-bf30-453a-b257-46ddd8cc6413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd07f68e-48ac-4219-ba25-c2cad6736131"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "139a4ce8-cbfe-465a-89ba-14248e90e72d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bc6539e-449c-4edd-991b-6add0868b145"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efcb0fd9-166e-49d2-9daa-d27543e0e58a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6443cb08-7553-4da7-9454-5928132f0e51"
                    }
                  }
                ]
              },
              {
                "id": "763c6f0e-0ee8-4f5e-b88b-702d439a750a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2122f0aa-f81b-466a-ab5a-307a97cb81a9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250efb18-54fa-4b92-8a21-081713abe52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a1b87e4c-14c1-444f-8700-8f49f809c0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f6f986-bb0f-45f8-8a30-72af93cb1332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7e731a-3618-46c8-a074-e8ca3bae5273"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1cca4d5e-aaa0-4e69-abbc-8cdab0698c51",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43ce870e-5c83-4500-99b5-8fd96b0be0e2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "115c43ee-d4d5-42fb-92af-3339e8de9cac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "646c1d30-1815-4295-8c14-18d8c45d59ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c78f3ab4-22c8-4fbd-b6b4-6e30edf41c07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aeb30903-34ea-4603-9051-77125ba597c8"
                    }
                  }
                ]
              },
              {
                "id": "0eb3cb7d-0840-4226-8774-8ca23db017b5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59b78372-d955-41c0-aae2-a39c57e0eb1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "57c73341-31e4-43d0-b6d3-99d0d6d6b038"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff979337-29c0-4ed8-94cd-a789c76dafdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c91e11bf-5b80-4997-afb2-235d59afd5ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d9ce77b-ab8f-4c74-80de-4c44620f4ee4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f5aebc51-7c08-4f68-b903-94ab29238992"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caedfe3c-4c17-41ca-b821-39f4b04cb9e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a75aa09-41cc-47d8-ae71-5515b8f25e16"
            }
          }
        ]
      },
      {
        "id": "042ecea1-fb60-4d70-9989-38fbd4da19c8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "662ec49d-133b-4e57-9636-69a757dc7871",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95b861b9-3546-49a3-a486-dba383ffd607",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b4bbe2c-0c9b-49fe-9d3e-074e8c9fc730",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7510f784-ef2d-4762-9564-aabeedc62b65",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3cfdb382-206c-48ea-9d78-b6a10359e80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da44f9e-101a-468b-9cd4-dd2b94a632fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddf9d4c0-dd7b-404c-9689-02ff9c4e008c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69ea4e7f-2006-4c85-9eb4-34300eb9317a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5222ce3d-866b-4ffc-9038-05acde72f9da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39845d57-ef66-4df3-b4a3-3cf3e30b17e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "459a82c8-87f4-4253-a0ff-1286f6ba562c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "042a8111-c321-43f1-9886-c9bd7323e00c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "291848de-aa26-4a92-b0ac-ad68d4e30ecf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be19ec14-e7f7-43f5-816f-76824e09aa23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c063269-e99e-421d-a392-e21bbfc28a62"
            }
          }
        ]
      },
      {
        "id": "84a02fad-b42d-45f8-96d7-d9132e5b4799",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7f4e1c34-93c1-41ef-8951-bbe33e368ae0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c4ee93d-1241-49a0-a177-3217a763d0a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11888da6-d010-4c6f-bb59-fd71a73a4aa9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808cc648-c164-4888-b877-ef77e5a8a4c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "303a3ceb-89aa-4bb2-8b5d-fd39c661dc40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47a4131-3f31-40be-9b8a-2c94b5fa3b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e3abbe0-d246-4796-9032-eb7ee87d4c99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2ff4076-984b-497d-9874-e512d9e66ccc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62cbc03b-8d79-4842-987b-f96d2be114e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8ec6434-f833-461c-b688-832995eba954",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0d4b99f-180a-458a-9e8f-5664a563e064"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c41b6528-e13e-4986-a383-b5ca49b06f62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14d6a195-3bb8-4d83-a272-7867bcc683d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8602381-34df-4a56-b366-af04e9c0d76b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9eb2d05a-b95e-4380-9a26-26fc732c27f6"
            }
          }
        ]
      },
      {
        "id": "0a566c85-013f-47ea-a7c6-a9e4cecbe599",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "41886b12-35a1-4cdf-b0de-97c91e36f1a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "423b9655-e21b-44ad-9d72-2015f404da71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "660f5984-de07-4c60-a33a-494b75de4946",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35802274-4fff-4cb0-99fc-38f41ee7ca2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a518e31-b5d6-42c2-b974-6cea405a436d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1d3933-2b22-4567-9a02-d74b508140d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b6bd710-9e82-4da8-bd67-d7661a4b894c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ed9c203-0715-4533-84a2-356a7ac5c169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b1bfd2c-8d0c-47de-a58f-73eeb22cb834"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e5c47c1-29c3-490e-b092-5fa47de8302e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbe78737-254d-4592-809e-8274808a143e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e816085c-be27-408e-821c-7a6e2f0e7874",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89ce1328-3536-4556-bb14-323a31e33834"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8922537-9695-4b70-96f8-2e2c8b65565c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e75d16ef-2610-4ca0-a4b5-9224e786d6a6"
            }
          }
        ]
      },
      {
        "id": "61652f90-e2a5-4a45-be9f-71132b1960e3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "818ab90f-f1ac-460b-8ef9-c10ecd2a35e3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "073d205e-7adf-4602-9ac4-b7ad8d74b2fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9c6e667b-4eec-428e-a942-ead18c92e7fb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fcd225e-ee09-4e0b-a61a-b0f1002cdad4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e50f1c8d-8cb4-4bf1-9a83-5a44cc559290",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.20701754385965,
      "responseMin": 19,
      "responseMax": 4727,
      "responseSd": 365.67210307637356,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703378281953,
      "completed": 1703378322912
    },
    "executions": [
      {
        "id": "add67082-60f5-426b-8f8f-1f12a7ea9583",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8784f709-757d-45a2-a427-b306d56779ed",
          "httpRequestId": "d70b67c6-c0c2-4d86-895c-21881ea3fd23"
        },
        "item": {
          "id": "add67082-60f5-426b-8f8f-1f12a7ea9583",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c1cd3453-6508-4b2a-a64a-1e48c9cf85e5",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "bd14bc4e-ced5-4865-8e5e-409d3b66da90",
        "cursor": {
          "ref": "397228e2-7627-436a-aa6a-93bed04ab283",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ce1c5f29-8528-4c6d-a98c-143023cef1b8"
        },
        "item": {
          "id": "bd14bc4e-ced5-4865-8e5e-409d3b66da90",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "839173da-3380-41df-bfe3-2a08a4ff7663",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "4a3207fe-519c-4231-9018-d99daf3a0e69",
        "cursor": {
          "ref": "8f4bbf9d-1c08-4618-93db-6f64dd439ca3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "482cd32a-543d-4cf5-843e-087510be71ad"
        },
        "item": {
          "id": "4a3207fe-519c-4231-9018-d99daf3a0e69",
          "name": "did_json"
        },
        "response": {
          "id": "0e392836-7dc7-416f-a5b5-ad5c8bbae2b6",
          "status": "OK",
          "code": 200,
          "responseTime": 505,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afd5a2c-f55e-4342-ad83-dd00696ff066",
        "cursor": {
          "ref": "1a972189-af63-494e-9595-0b152df4820d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2c752a35-ad7c-4eff-89c7-d63759be11f2"
        },
        "item": {
          "id": "2afd5a2c-f55e-4342-ad83-dd00696ff066",
          "name": "did:invalid"
        },
        "response": {
          "id": "98210c97-3326-4d90-b4ea-1de90ea10378",
          "status": "Not Found",
          "code": 404,
          "responseTime": 619,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afd5a2c-f55e-4342-ad83-dd00696ff066",
        "cursor": {
          "ref": "1a972189-af63-494e-9595-0b152df4820d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2c752a35-ad7c-4eff-89c7-d63759be11f2"
        },
        "item": {
          "id": "2afd5a2c-f55e-4342-ad83-dd00696ff066",
          "name": "did:invalid"
        },
        "response": {
          "id": "98210c97-3326-4d90-b4ea-1de90ea10378",
          "status": "Not Found",
          "code": 404,
          "responseTime": 619,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafad2ac-1bb3-4359-802f-c20da63362e8",
        "cursor": {
          "ref": "5fc05bc1-8bbd-4ebc-92c8-be4f36b51192",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3fdc677d-9355-42d4-908a-1eb45c047b62"
        },
        "item": {
          "id": "bafad2ac-1bb3-4359-802f-c20da63362e8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e40ed7cd-98aa-4ebe-9b7f-43f742fe1021",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea5558e-7490-4c24-862f-af5c45c4c40c",
        "cursor": {
          "ref": "09de8f4e-11ca-4392-9e0a-6cdea53086fd",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ab57baac-0e3c-482c-9ace-62073547a69b"
        },
        "item": {
          "id": "cea5558e-7490-4c24-862f-af5c45c4c40c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9fa90744-9d28-432c-bd1c-d908aa2ea2f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92e37af-96f7-4ec4-8dd5-a63504fc6494",
        "cursor": {
          "ref": "56331bbd-1f6d-4ef9-bb07-6b71b7be8688",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b8a0db0a-c7b8-43dc-907d-60f84acd666d"
        },
        "item": {
          "id": "c92e37af-96f7-4ec4-8dd5-a63504fc6494",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "30449696-6e64-41aa-8231-9d26373d743a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ff7f99-550c-4e33-8752-b95fc8a9ee00",
        "cursor": {
          "ref": "643fd770-426a-475e-8e2f-fcfc6cca830b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e2ef2fc2-64ba-4afe-ae02-413a6efeb6c4"
        },
        "item": {
          "id": "d7ff7f99-550c-4e33-8752-b95fc8a9ee00",
          "name": "identifiers"
        },
        "response": {
          "id": "cc36153d-dc30-48fd-b625-03719d5b29f5",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca457da-d5fa-4f03-a07c-d175f824ca6e",
        "cursor": {
          "ref": "4cc99823-9526-4266-955a-b0ecc9e4e9a5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "62d4f95c-6364-4540-afd3-7637c88799f2"
        },
        "item": {
          "id": "6ca457da-d5fa-4f03-a07c-d175f824ca6e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7f7b1dec-687d-460d-b504-fd6631a19f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d30bb72-9cfb-4c3a-9656-199dcc88de27",
        "cursor": {
          "ref": "5bc78adf-496a-4c9a-832d-4785533ed488",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eb16c1b3-32cc-4b60-bd26-81ea2aca5f87"
        },
        "item": {
          "id": "6d30bb72-9cfb-4c3a-9656-199dcc88de27",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dc03ea16-b3f6-48f1-948d-d69c3fe5c7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd15cd1-ae99-429c-a7b7-2bf1943af4cb",
        "cursor": {
          "ref": "7822b2d4-7197-4ef4-ad12-1d41626d7865",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "94065a8b-9ec5-4efc-b1d3-275a4af01a16"
        },
        "item": {
          "id": "cdd15cd1-ae99-429c-a7b7-2bf1943af4cb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "52e5e0f7-6929-4ce7-be6f-3d7b91bbb5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca6459e-bb44-40fe-bb2b-7455034a71da",
        "cursor": {
          "ref": "43608e40-08af-421a-9e15-7ced68f8aeb3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f609c866-2084-4138-a2b1-237e4dce3ce4"
        },
        "item": {
          "id": "1ca6459e-bb44-40fe-bb2b-7455034a71da",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b995bbe7-90d7-4b05-8f06-52430a07ab7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4d7a3b-3be2-461f-ad07-27d06a71ddfe",
        "cursor": {
          "ref": "92fbf4ac-89ce-499f-a851-0afae3939768",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c05bdfdf-701a-4daf-ad09-a599dd364474"
        },
        "item": {
          "id": "5f4d7a3b-3be2-461f-ad07-27d06a71ddfe",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "39efa7ea-2d3a-4a99-96ed-ab09050c29b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9e8d73-b214-4f9d-906a-86d887f0f1f6",
        "cursor": {
          "ref": "553a5e80-c5ce-4ba9-a0d0-00b27f922f3e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6930b6de-c367-4d72-80a0-a115be2d8dca"
        },
        "item": {
          "id": "be9e8d73-b214-4f9d-906a-86d887f0f1f6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0279274c-a338-47b6-9860-06b1b3edeab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c719eb-930f-49fe-99b3-6e98bdfd8630",
        "cursor": {
          "ref": "5c58063b-0104-406f-b5ef-dd792757f579",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "48be8903-6e69-4cda-99f5-3fd304d4afc4"
        },
        "item": {
          "id": "28c719eb-930f-49fe-99b3-6e98bdfd8630",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "443c0786-453f-4082-9fcb-2422df62fcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f353c206-8289-47c4-8f8c-f9f32c72e81f",
        "cursor": {
          "ref": "879a7eac-9915-48da-ab7d-5e75b9ac1c1e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f9d49841-4655-4a67-be61-d7c5e9ae152a"
        },
        "item": {
          "id": "f353c206-8289-47c4-8f8c-f9f32c72e81f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1e8c0b6e-acc5-4dd8-8c1b-7d32c207f278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6719f8df-99a5-453e-8be1-f33f9a231c61",
        "cursor": {
          "ref": "ae99cac4-d198-43e7-9097-5888c40c86e5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bf7cd0d3-ea60-4abb-8ffb-b3b641012505"
        },
        "item": {
          "id": "6719f8df-99a5-453e-8be1-f33f9a231c61",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2de4ed15-f4c1-4e5a-95fa-b04f5d719f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff615eb1-d2c1-4bfd-81aa-bdb70ee424c4",
        "cursor": {
          "ref": "13c1ee51-49c2-437d-8366-dd12b00ad8c3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1ef1943-95fe-4e28-ba13-00e9a6421fa6"
        },
        "item": {
          "id": "ff615eb1-d2c1-4bfd-81aa-bdb70ee424c4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d2c7457d-e80a-4f93-96d3-88fb33fffed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ec88b5-8fdf-4c04-a99c-a6164e03e4cd",
        "cursor": {
          "ref": "5de86ca4-2f21-47cd-8d37-ab4daf04cb2b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6df43e3c-c7ef-4fa1-a23c-e831f225220b"
        },
        "item": {
          "id": "21ec88b5-8fdf-4c04-a99c-a6164e03e4cd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "787fe75f-72ba-432b-8641-e9e1992bcde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7910e92-f0c1-4e91-82c7-80ed04d2e6ed",
        "cursor": {
          "ref": "555a4b18-bcaa-4cd1-99b2-c62b52e68865",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c1cf567c-01c6-4eae-a5de-18a997ecb752"
        },
        "item": {
          "id": "b7910e92-f0c1-4e91-82c7-80ed04d2e6ed",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7b3e84f0-2344-4d32-b062-c8689322e897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f81e46-ef48-4768-971e-233da18a1d91",
        "cursor": {
          "ref": "ea5acc60-5116-41e5-afd5-84545d29014b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "43fbcdb7-8728-4e19-aada-a0c20170be5e"
        },
        "item": {
          "id": "05f81e46-ef48-4768-971e-233da18a1d91",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8a286c61-706a-4c41-b0d3-b42dc245e092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8188ef2-69da-44e3-a661-f18171cf1eaf",
        "cursor": {
          "ref": "df42634e-d75b-41b6-87d4-443cc7db4d50",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4fee2703-4777-499f-a4ff-930884cb8136"
        },
        "item": {
          "id": "e8188ef2-69da-44e3-a661-f18171cf1eaf",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f1427538-13fa-4c9b-82ce-4acb68ee08a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789fef7a-5807-4c64-a2c1-a75ec1ba8fee",
        "cursor": {
          "ref": "89b6aa6f-c2ee-4419-8a0f-df3aeb696164",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e4c4626e-e952-42e1-b00c-63ac8d2976db"
        },
        "item": {
          "id": "789fef7a-5807-4c64-a2c1-a75ec1ba8fee",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8edd227d-acce-4663-81a5-b12f3ea54820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f961c817-0a4e-4b81-a992-88fdebf914e3",
        "cursor": {
          "ref": "259f1c1b-48b2-4923-838f-9c756c7fe945",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4c230d37-8dc0-44d2-aa8b-6002ef8df4f7"
        },
        "item": {
          "id": "f961c817-0a4e-4b81-a992-88fdebf914e3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2b7b0ab8-8125-4dad-a63d-962a7e0533a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74f9517-2695-4457-a35a-be34bbfcc5b5",
        "cursor": {
          "ref": "812cc236-305c-4cef-abad-6f1fb596055f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8200f58a-f60b-4610-9be4-70ed2c3914f0"
        },
        "item": {
          "id": "e74f9517-2695-4457-a35a-be34bbfcc5b5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2397c9ed-b12a-4b03-a2ac-abb56326b90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f12acf-4c64-4410-bc0c-35e38bb1afaf",
        "cursor": {
          "ref": "e18a66f6-021b-40f7-80c6-a99b8e1f2b48",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0e18490a-1185-404e-8127-c5bb92e27935"
        },
        "item": {
          "id": "b0f12acf-4c64-4410-bc0c-35e38bb1afaf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0a33ab03-34cb-4fae-aa51-87f7eff3532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6994657-0f62-4d91-a287-ce259d3397d0",
        "cursor": {
          "ref": "2631f07c-a552-45d3-83cc-d3e2097a3687",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "313c5b80-cd41-4896-8177-874f550b4aa0"
        },
        "item": {
          "id": "c6994657-0f62-4d91-a287-ce259d3397d0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0092af13-0724-4948-94e3-17e5308768b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ea08dd-515a-404e-9141-511da04511c4",
        "cursor": {
          "ref": "3b48f8ee-b6cf-48d3-bb0d-ff8dbe9b600f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1f6b5f7e-213e-4048-b655-3c91a12e5f57"
        },
        "item": {
          "id": "13ea08dd-515a-404e-9141-511da04511c4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "acce1b36-8ab1-4fc9-a4c4-d151b47cb138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c3882e-c2e4-4538-b3e2-3c387eca19e0",
        "cursor": {
          "ref": "c28d7702-094e-4c11-8b33-9e4c76ec8a56",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2ed037f2-7168-497b-a478-4fc8e20a9d2c"
        },
        "item": {
          "id": "e0c3882e-c2e4-4538-b3e2-3c387eca19e0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f4cb7c7f-f5b2-4adb-9cc4-26608959faef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312d5f89-1af6-4d5e-a8d6-d5e44ccbb61d",
        "cursor": {
          "ref": "5c6eeda9-63e8-41f8-9950-f4c48a693426",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3d0bcf29-0955-4ec5-ab9a-94ffdcdaf123"
        },
        "item": {
          "id": "312d5f89-1af6-4d5e-a8d6-d5e44ccbb61d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f78e7c0b-dd19-4069-ba45-7e24afa78a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033491b1-050a-4d4f-b712-65ef24169487",
        "cursor": {
          "ref": "4255f30f-ee46-421c-b323-f5f7fe9e3ad6",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "948e7d6c-b81a-4cec-bc09-ba640b714ea5"
        },
        "item": {
          "id": "033491b1-050a-4d4f-b712-65ef24169487",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "03df8811-da80-4849-830a-125f959aff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a283e295-cd47-4d69-93b1-526186f186a0",
        "cursor": {
          "ref": "79bc0df9-fb70-477c-996a-7a8b0839562b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2780ca96-3aa7-49d3-9b3d-2da609f2bae3"
        },
        "item": {
          "id": "a283e295-cd47-4d69-93b1-526186f186a0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ed7fd41e-b1da-4d29-a479-e47bd84cada1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38892c6-b81a-43c0-af32-3a8161f09910",
        "cursor": {
          "ref": "16f5b97f-dd78-4df1-ab71-2f11dbdce44a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a2f64f38-ffb2-4348-94bb-8b218ac43d3d"
        },
        "item": {
          "id": "d38892c6-b81a-43c0-af32-3a8161f09910",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c3813705-96e6-432e-b51f-15423caa3bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa00fa27-445b-483c-83b3-d34036a90917",
        "cursor": {
          "ref": "68476701-a925-4450-8f65-3c3147e078a1",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1ab48f07-d312-47c0-855b-8c18a48e1bf7"
        },
        "item": {
          "id": "fa00fa27-445b-483c-83b3-d34036a90917",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cc25a772-8917-44c5-984d-954ff5bbca76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a640454f-eefc-4e89-b00d-24308a8a429d",
        "cursor": {
          "ref": "d6e9c7e2-375a-4f5e-a28c-b139287f77d9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b6d37d99-918c-4334-af4a-7852d4a8d249"
        },
        "item": {
          "id": "a640454f-eefc-4e89-b00d-24308a8a429d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "271862a5-97cd-492b-b8a0-e1663df21f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1702fff-8998-4b4d-91e9-db68f4ee843e",
        "cursor": {
          "ref": "d5a89d64-ecf2-4080-a4d1-c9a8df331d2b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "76a68f9b-a33c-42bb-bdfd-a128415b5680"
        },
        "item": {
          "id": "f1702fff-8998-4b4d-91e9-db68f4ee843e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b6dd993c-3681-4068-bc8e-1028de3b5b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1736b8-5bbe-4785-86be-9336f20a794c",
        "cursor": {
          "ref": "30483254-8fc3-4dc5-918f-e8ca4544f7a0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "71822b2b-607b-4f86-bf77-8b1c88907016"
        },
        "item": {
          "id": "df1736b8-5bbe-4785-86be-9336f20a794c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2b3d2751-5b69-4720-b85f-20d3dfa48104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978bbe43-352a-48a6-9a49-84998dd59c80",
        "cursor": {
          "ref": "c4e5c365-a725-4a2d-942d-87ff4e5d8cc2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "47de6b54-4b63-4c05-ab58-0430cb4f48b1"
        },
        "item": {
          "id": "978bbe43-352a-48a6-9a49-84998dd59c80",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "881d4953-faa1-4a4f-aeef-66ddaf66e00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b245603-7c6f-4132-a58a-e706a529c65d",
        "cursor": {
          "ref": "4d514727-8fff-44d5-b203-f3098b0d6f00",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "238f3cd3-a794-4738-ac01-aec150338179"
        },
        "item": {
          "id": "2b245603-7c6f-4132-a58a-e706a529c65d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7f71f490-72a8-416f-b58d-352533275a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42428063-f3e8-4e5d-817f-785112934d64",
        "cursor": {
          "ref": "1a1e8748-d7fa-4170-b91d-a5e68a77efa3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0a32dc54-bfe8-4782-aab6-4827bc8f0112"
        },
        "item": {
          "id": "42428063-f3e8-4e5d-817f-785112934d64",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d4dde849-ddfa-405f-8249-31c6d4927378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c10720-f119-4b6d-ba81-2607baf9533f",
        "cursor": {
          "ref": "39079615-c08c-43e6-9422-5abd973314b6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8581a108-d48d-41d9-bad9-4553f32a5b08"
        },
        "item": {
          "id": "e5c10720-f119-4b6d-ba81-2607baf9533f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "439285f6-e90b-4c0d-944a-3a412a9f34b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542d4b68-ef8f-44e4-97ee-8795f790326d",
        "cursor": {
          "ref": "fa65dd9e-7de0-43e5-8c15-862b3636c9af",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4e50ba36-a219-470b-bc69-cb4110e618f6"
        },
        "item": {
          "id": "542d4b68-ef8f-44e4-97ee-8795f790326d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "165f6214-5b6f-4952-bd24-8c0637bf177f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435d7e8f-7e90-459d-a199-db910e8ef165",
        "cursor": {
          "ref": "ead28707-6734-4bf9-8212-4b521253dbf0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a1ffa8b0-9e30-4d67-865b-0a00545ff2c0"
        },
        "item": {
          "id": "435d7e8f-7e90-459d-a199-db910e8ef165",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8a068fda-e620-42fb-a0e3-918f68a96729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4592838-a950-4406-b5af-aca3b98d32dc",
        "cursor": {
          "ref": "27b96508-365f-4372-ad41-bbcae21f40aa",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "80c20809-80d9-4970-b406-fabafb4dacda"
        },
        "item": {
          "id": "f4592838-a950-4406-b5af-aca3b98d32dc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bbcc8075-0626-4704-8932-023c5060c7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e69420f-97ec-4324-8f03-b4e60edf0b81",
        "cursor": {
          "ref": "f0554826-c2b7-4645-8a3f-c73251d95765",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "428cfafc-8b68-45c8-8f0a-a35b4a9242f2"
        },
        "item": {
          "id": "5e69420f-97ec-4324-8f03-b4e60edf0b81",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "58ba9d72-b8be-445d-b92c-0124569bfa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba160f8-7961-4793-89d1-8b1ef6420cdf",
        "cursor": {
          "ref": "7c110323-f4ec-459a-b414-3d50b1ecb7ba",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dadbc3e8-6459-4b7e-9e31-4f02e34145d2"
        },
        "item": {
          "id": "5ba160f8-7961-4793-89d1-8b1ef6420cdf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7123938f-7116-404d-8dbf-e3f342294b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e704f6-514c-4edf-9dcc-072cfb6d16c3",
        "cursor": {
          "ref": "6c4cf605-81ad-4874-bdd5-1e7c04e0ef60",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb4b89fb-2ba2-42cf-bdde-5a6864483b5b"
        },
        "item": {
          "id": "c5e704f6-514c-4edf-9dcc-072cfb6d16c3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e41aec69-10a3-4ad9-9a92-e3908ac8497a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c4e967-e5ed-4db3-94fa-728f7b8fdd40",
        "cursor": {
          "ref": "cc2d00b4-854f-486a-9e34-ba2cee41f5fe",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "57b3e56a-862f-4ea1-9ed8-de5a9615f854"
        },
        "item": {
          "id": "43c4e967-e5ed-4db3-94fa-728f7b8fdd40",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4ba7f38c-696e-4d49-813d-77c003158c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707c0039-3930-4c39-9463-5efc0db2426c",
        "cursor": {
          "ref": "ab11a149-8b18-4e22-90b9-307099065867",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10c7aa28-ac85-4876-90ac-0eac88784bf0"
        },
        "item": {
          "id": "707c0039-3930-4c39-9463-5efc0db2426c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7841d0c0-bb5e-41a4-9756-6fc08b07ccb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1049b1-72ad-4736-a272-2151153322d6",
        "cursor": {
          "ref": "33ef4a45-4678-4426-9b75-44ff8979456e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f940457f-e2e3-46ad-a952-d59b86753c41"
        },
        "item": {
          "id": "4b1049b1-72ad-4736-a272-2151153322d6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "caae783f-b041-40e4-a085-aa105da35dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5708470-c265-4f9c-aa33-c60a97a0cc5e",
        "cursor": {
          "ref": "ab43289a-a723-4df7-a2e6-7be6ad5d68e7",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1957681c-fc78-42b0-9e74-e3d47680fa06"
        },
        "item": {
          "id": "c5708470-c265-4f9c-aa33-c60a97a0cc5e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "18b80967-40c3-4535-a432-eecb2409d4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aae17f3-2a2c-439f-8a0b-56c97217d287",
        "cursor": {
          "ref": "e693426b-e72e-4035-818f-4f56eb239ee2",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5cd90c5e-5e79-4849-b1d0-93fd1458a56f"
        },
        "item": {
          "id": "5aae17f3-2a2c-439f-8a0b-56c97217d287",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e5e55faa-2df6-41a5-9d93-811027d1f42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3fb64e-a23e-4414-84a9-bd5425561cb2",
        "cursor": {
          "ref": "0f9b7e1a-ec99-44a7-8373-62ec7631d293",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b80b29d0-1616-4c6b-976c-dd47d11bbd45"
        },
        "item": {
          "id": "4b3fb64e-a23e-4414-84a9-bd5425561cb2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7e4696e7-1381-4acc-a2fb-805fa6e3a488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2c042b-d0fa-452c-a249-0d572d8beb58",
        "cursor": {
          "ref": "dff7812a-b30e-47a3-8dd8-4ecaf78ab83d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "25757308-52ea-4e7a-9fee-e3789fcc8970"
        },
        "item": {
          "id": "8f2c042b-d0fa-452c-a249-0d572d8beb58",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "85dec549-1eac-4846-9440-17589f3e2560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6caa89c-fc43-4a09-9899-252e9e2d7158",
        "cursor": {
          "ref": "96509f8e-b795-474d-9fb3-015e0bd4f223",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "808a0226-11cc-4846-8536-a7744025d4dc"
        },
        "item": {
          "id": "f6caa89c-fc43-4a09-9899-252e9e2d7158",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5312d90a-d273-4d3c-b87e-85a1e2f31017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0fb0a4-b57e-483b-8124-c98a3c847313",
        "cursor": {
          "ref": "fe3efac0-3631-40e5-8393-52df192a850d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e8791cbc-250a-4578-8e93-54f81367e498"
        },
        "item": {
          "id": "2a0fb0a4-b57e-483b-8124-c98a3c847313",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aac35605-cc6d-4b65-85c0-59fed494896d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97863e56-f4c8-4f1d-8b02-c97b4f4538f6",
        "cursor": {
          "ref": "f71ca29d-8810-49a3-a209-44d623f0b508",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ac8596a5-5f73-460a-9de5-af21394880f4"
        },
        "item": {
          "id": "97863e56-f4c8-4f1d-8b02-c97b4f4538f6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1b7cc417-1308-4e35-9ae9-e7cac4bf29bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09335050-1015-44fc-86c4-543db50a3a7a",
        "cursor": {
          "ref": "5c7f4055-d2d5-4372-870e-93148cb3acf0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "13d7026e-5eaa-4d7b-bc0c-3417e6895927"
        },
        "item": {
          "id": "09335050-1015-44fc-86c4-543db50a3a7a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "800554a6-925d-4063-9dfb-a608209f1039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973f0357-51c1-4ab4-b769-693b7259d812",
        "cursor": {
          "ref": "d23e7b61-cae9-4040-a221-591c94fa4df4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7d6ffa02-57f3-4505-bab5-bd198f723935"
        },
        "item": {
          "id": "973f0357-51c1-4ab4-b769-693b7259d812",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9c489419-993b-41e8-9bee-17c331d7d620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0399e92f-2c85-4a9d-99f5-871333b98311",
        "cursor": {
          "ref": "d911fedb-7a77-43c6-8b6b-842f74e7129d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f8c7266a-9677-4a12-931a-7bac3ee65b37"
        },
        "item": {
          "id": "0399e92f-2c85-4a9d-99f5-871333b98311",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b1118f6f-fde2-4776-a950-302af633c4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2485e32-9dba-4cbe-bfe1-ed44776a7c9b",
        "cursor": {
          "ref": "f542606a-b618-4464-b9f1-05714b5e4f49",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "db5eb930-c00c-4ee8-bdbb-404ec0ecb85f"
        },
        "item": {
          "id": "f2485e32-9dba-4cbe-bfe1-ed44776a7c9b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3acf5dac-0271-4f49-acdd-9396caf52876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f60adb-03b5-407a-abbe-d89434b06dff",
        "cursor": {
          "ref": "5aad071d-3f93-49aa-a961-431c66744908",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "53993e45-84e1-491f-982d-fcbc01e47414"
        },
        "item": {
          "id": "07f60adb-03b5-407a-abbe-d89434b06dff",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "479b907f-c0d0-44e4-9abb-4d6c6f02c8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74eafffc-064a-434c-872c-b297bcae091a",
        "cursor": {
          "ref": "d06fef8b-ca8e-4f6c-a7f2-283af4bf75bf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "db3cd7dc-5a36-4e28-bc41-f5d1d5c5701e"
        },
        "item": {
          "id": "74eafffc-064a-434c-872c-b297bcae091a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6437a8f0-b157-4ff6-b3b8-e8cea75871db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c19ffab-8dc9-4c66-97e4-808243846bfc",
        "cursor": {
          "ref": "94f91f86-714f-4bfb-9c61-81ad22a46ff3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3533f330-a561-47de-81a5-2c0f53b68a5d"
        },
        "item": {
          "id": "5c19ffab-8dc9-4c66-97e4-808243846bfc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3bb787c4-6776-4e9f-a468-eded3596cc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f902803-9092-4f61-88c8-95ba7ba8daa9",
        "cursor": {
          "ref": "b5675527-7d5f-404f-9918-ebb027e29916",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c9baae42-2fcb-4e3f-9e4e-3d93b7a8aade"
        },
        "item": {
          "id": "9f902803-9092-4f61-88c8-95ba7ba8daa9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4630d55c-8306-4eee-a266-cef1e8974d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733b341e-77e1-4c4a-87ea-098c3c9027d3",
        "cursor": {
          "ref": "60ed6fb7-cd8c-4559-b346-0b746ea5def8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4e0e862d-fc8c-4aec-bbff-ab9addbc0f38"
        },
        "item": {
          "id": "733b341e-77e1-4c4a-87ea-098c3c9027d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "39aeaa7f-83e3-43c2-ab00-98cec9456883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4f7e43-3de2-43d1-a5ba-7e9b4dc28668",
        "cursor": {
          "ref": "f6e023ca-0836-4708-9a37-d19784a07d6b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "499c0ce8-ce49-4460-9ba4-90c758502f01"
        },
        "item": {
          "id": "2a4f7e43-3de2-43d1-a5ba-7e9b4dc28668",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7167a960-0510-4906-a008-4eb68282ff2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6f97f8-2e2b-499a-b421-60d79aaa95e5",
        "cursor": {
          "ref": "b165a2fd-8cb8-4d7b-890c-536a8fa4cc1e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "32429935-86da-4e7a-923c-4ed040ac41c6"
        },
        "item": {
          "id": "2a6f97f8-2e2b-499a-b421-60d79aaa95e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5c5a4ae2-bf35-4bed-baca-7aac534cdc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77630376-e121-42d5-9754-910d578944ce",
        "cursor": {
          "ref": "ba7377f8-6499-471f-b37e-3692b0136fb2",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "33f2f14f-1405-46a2-9acb-a6b456c352ab"
        },
        "item": {
          "id": "77630376-e121-42d5-9754-910d578944ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "23390bdf-2625-4fe1-8cce-b5ee1cb19caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ef297c-86a5-4c25-99bd-09949b908382",
        "cursor": {
          "ref": "77f86c57-e56d-4290-87b2-e2eb84ef2f75",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6c408190-08ed-46fc-ba79-bcd2bf71bd0f"
        },
        "item": {
          "id": "91ef297c-86a5-4c25-99bd-09949b908382",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "886b233a-c9ce-4f51-9af8-4c52266faa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbfa66e-e726-4fe5-9ecb-20accacb961d",
        "cursor": {
          "ref": "a26a3728-3b6f-4a5e-8b54-9f5bb524267f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6e34eb4f-f708-443c-90da-89d59d90f502"
        },
        "item": {
          "id": "ecbfa66e-e726-4fe5-9ecb-20accacb961d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "36290267-0433-44b8-b598-d9fc1c67d46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ac2650-7d7f-4d1c-af12-7262ef91de00",
        "cursor": {
          "ref": "2eee6386-4f00-41a9-b52b-eb4616efabec",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cfb32c57-a912-46b8-a3d7-63cc10a198e5"
        },
        "item": {
          "id": "49ac2650-7d7f-4d1c-af12-7262ef91de00",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "33f29607-07fa-4ddd-8752-dfee0d20c2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1677b9be-4236-429f-9b68-4dbd3dabbd6e",
        "cursor": {
          "ref": "e6a4e056-297e-4aaa-91fe-744da814d409",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "812087ba-0f05-435c-8f0a-53dc7804c643"
        },
        "item": {
          "id": "1677b9be-4236-429f-9b68-4dbd3dabbd6e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f6f89a36-acb7-4b85-b13c-ffcd0c72bc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdad985-0ce0-417e-9921-438341143bb5",
        "cursor": {
          "ref": "500e6d8d-7fa6-42ba-a02d-ba6f5154dc9c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f3d14c6e-3c92-4f75-80fd-dcf100cdd327"
        },
        "item": {
          "id": "bfdad985-0ce0-417e-9921-438341143bb5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "77f67890-ee77-41a4-ab9a-40ab5724f2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1aed17e-59ee-4388-998c-9dee3bd5dd0d",
        "cursor": {
          "ref": "54244405-f429-4d1e-aefc-51036c99275b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "00d7c257-2d31-4da1-bfe8-3f211dc8c5b5"
        },
        "item": {
          "id": "f1aed17e-59ee-4388-998c-9dee3bd5dd0d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ae97a7ee-1ce0-449b-81e1-10136240c7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17d36e5-2fb0-4d8b-ae96-8f2314452ec3",
        "cursor": {
          "ref": "e4f56d0a-6632-4b01-9782-2ea0dd5da448",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c70d7735-62db-48a2-87c5-30c867d318a5"
        },
        "item": {
          "id": "c17d36e5-2fb0-4d8b-ae96-8f2314452ec3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "922ac3f5-e715-41c9-9850-007551312509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec5cd3b-5f67-4b05-9269-4e64745cceef",
        "cursor": {
          "ref": "1bd5a590-e9c9-4d0b-87b2-30463ef7eff3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "02cac552-b5c9-46b7-8ff7-d87455ce5f07"
        },
        "item": {
          "id": "eec5cd3b-5f67-4b05-9269-4e64745cceef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b81cf83c-b2d0-4ee5-be8a-f649fac4921f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6102d1b-bfc6-4574-afbb-736a431fb531",
        "cursor": {
          "ref": "b63963ef-6a02-4cbc-a729-910626adf8e2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "047063df-8f4a-4732-b788-e30350ca570b"
        },
        "item": {
          "id": "c6102d1b-bfc6-4574-afbb-736a431fb531",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "997b4ef2-bca4-4010-bb05-199395ed80a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008afc8c-6892-4433-a87a-0e581d956d6d",
        "cursor": {
          "ref": "8b094c34-a973-4905-8317-01bb72f569e2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9270cc30-7b47-472d-8343-4014da652d80"
        },
        "item": {
          "id": "008afc8c-6892-4433-a87a-0e581d956d6d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fd6893dc-478f-41e2-889c-39d514d7c128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c1807e-5bdf-4ca5-9887-daccc7d53247",
        "cursor": {
          "ref": "59e3994b-7e68-42b8-8982-6d22ae2e780b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0cb35923-f0b3-4f1b-8463-27d4e642e908"
        },
        "item": {
          "id": "c8c1807e-5bdf-4ca5-9887-daccc7d53247",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fcecdb5b-0739-49ba-ad39-a9e2afe28378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478b5fbe-3af6-4d21-a31b-7508ecea1693",
        "cursor": {
          "ref": "8558e832-90c5-4d0f-be30-7f3c7e32bba5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8f040c6c-1024-4ff7-963b-a399be93d199"
        },
        "item": {
          "id": "478b5fbe-3af6-4d21-a31b-7508ecea1693",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bbb3766b-b98f-4bf9-9d38-4da2e0e65fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd522f8-0479-4942-85ad-15bdd3df7147",
        "cursor": {
          "ref": "05f6077c-57ea-4ba9-85de-b612d7e48aa3",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6d11bd34-111d-4c0a-a74f-72b7c58d8aac"
        },
        "item": {
          "id": "5bd522f8-0479-4942-85ad-15bdd3df7147",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "555c3eff-4ba0-46a4-beac-d8783983a540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37fbb39-816a-45b0-acb5-b61becdb40ad",
        "cursor": {
          "ref": "022ae413-6e78-456f-973f-f181d1d23a9e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "13ad52f9-c67f-49a3-8c07-1654591661a0"
        },
        "item": {
          "id": "c37fbb39-816a-45b0-acb5-b61becdb40ad",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a6b08e3b-7748-4751-a5a3-b04eeaeeec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5a84cb-c1fb-43d7-b65f-db249b1e2a92",
        "cursor": {
          "ref": "9193e8ac-16d3-4c92-abaa-4d23f39eb6b2",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "adb5ebe5-94c9-4d18-bbc4-24ff920222e3"
        },
        "item": {
          "id": "9b5a84cb-c1fb-43d7-b65f-db249b1e2a92",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fb7c749a-af4a-4447-b269-46354ce164cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a409e634-0b1c-4f79-88bd-eb5285b298d0",
        "cursor": {
          "ref": "744b086e-5a10-4a9f-bb85-883810d2e549",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9ba6eeeb-4a46-4aa3-89f7-470ef0c86d82"
        },
        "item": {
          "id": "a409e634-0b1c-4f79-88bd-eb5285b298d0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b9837458-3ff0-490b-9f14-aedbd6b19072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9efdff-bb17-4d5e-b9ea-24091b89d14d",
        "cursor": {
          "ref": "1f3e9272-734f-4eee-93cd-f175d7eadf42",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fa1d8098-165d-49af-b7bf-63894f9bc3b1"
        },
        "item": {
          "id": "ee9efdff-bb17-4d5e-b9ea-24091b89d14d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ae39c487-54eb-498e-93fc-25e211a45454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb53802f-492c-4b5e-812b-a27bbac962f9",
        "cursor": {
          "ref": "968f328d-be60-4124-a23b-2e0243a9a313",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b1337dec-7dd1-46f7-a265-1df345be32f8"
        },
        "item": {
          "id": "cb53802f-492c-4b5e-812b-a27bbac962f9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6bb9aafc-ab5e-4814-a33e-c6d5c11c660f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd50f0cf-e1e8-489e-a1e3-d30b558e4c11",
        "cursor": {
          "ref": "34b20b21-1302-4d3f-b541-de299804b22e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "97908e4b-8d61-47f7-97ca-2890699d02da"
        },
        "item": {
          "id": "fd50f0cf-e1e8-489e-a1e3-d30b558e4c11",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "90172798-2fe8-4dc5-911a-a6f6f1ed1434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89e2c11-bb46-409f-8831-97db61d47770",
        "cursor": {
          "ref": "d7749787-0cee-4c6b-8410-21d962a8d972",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f9ffcaa9-ec39-4cf0-87ab-31e9a7b88f6b"
        },
        "item": {
          "id": "c89e2c11-bb46-409f-8831-97db61d47770",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e866d9b0-a7ae-415d-bb3f-79f4b3da508a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8138747d-fe0f-4fea-b492-94368ee73983",
        "cursor": {
          "ref": "2d739178-54ef-4227-8776-33e2c587fb8f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ae0ba2e9-84ec-4926-ac14-ad0db0a0206a"
        },
        "item": {
          "id": "8138747d-fe0f-4fea-b492-94368ee73983",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1f7d4a96-6d5f-4276-9565-e3180978a947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd2aff5-3c63-414d-9083-977163213a15",
        "cursor": {
          "ref": "5d781b43-28d7-466d-a44b-4c391f077445",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b21223f3-b788-4288-ac0b-cfffae81f057"
        },
        "item": {
          "id": "8bd2aff5-3c63-414d-9083-977163213a15",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "812b20a9-5c7a-49e6-a104-cac4c1a8401e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec21a28-a471-4a8b-9d44-455838d5a4d3",
        "cursor": {
          "ref": "c726fe8b-784e-4b06-b9f6-705accd5e3ec",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "163d28b6-b66f-444d-935f-32c11a98bf76"
        },
        "item": {
          "id": "4ec21a28-a471-4a8b-9d44-455838d5a4d3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d2dc6421-0b11-4623-99c8-9e27d1392b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd76beb-040c-4e77-b90d-7cea92a1af41",
        "cursor": {
          "ref": "c9a7537d-c5ef-410b-870a-063f1459552c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dc190af3-d585-47df-b9ac-9cf945940df3"
        },
        "item": {
          "id": "1dd76beb-040c-4e77-b90d-7cea92a1af41",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ed80b923-3c45-410b-a488-6e4156d33671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde3a1a2-2a76-4e75-9aec-d7054a8a03d2",
        "cursor": {
          "ref": "23803b96-971f-4fa5-830e-885204e92043",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "02f30af3-5fea-46d4-b85d-337c855d1520"
        },
        "item": {
          "id": "cde3a1a2-2a76-4e75-9aec-d7054a8a03d2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "639f4d67-5128-4915-89d1-6932d0c8dd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99586589-3bd0-4ea7-99ed-0411f7e689ba",
        "cursor": {
          "ref": "a809d80b-a2f1-4cdf-9f67-1a21d9beca93",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5a57094f-4f2f-4a3b-8f4e-ba3b6a965601"
        },
        "item": {
          "id": "99586589-3bd0-4ea7-99ed-0411f7e689ba",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "014bf8e2-efc4-4fa9-8d7d-c8d80dbc8ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64378f80-9fe3-4524-9eb6-37cfe66c635e",
        "cursor": {
          "ref": "d1a4e65c-45ed-4643-b713-59fa68e94dd5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cf8eb6bb-11b1-4d66-9bd0-910fa91df8fb"
        },
        "item": {
          "id": "64378f80-9fe3-4524-9eb6-37cfe66c635e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c24492d2-233d-45c9-98c8-3a48adee55e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18268f9-7ca1-49b4-97bf-43ee9bfe34e5",
        "cursor": {
          "ref": "aba026aa-950f-416a-a1cb-156acb0ea1e2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "482dd115-7232-4a98-9baf-1aac5b0bacfb"
        },
        "item": {
          "id": "d18268f9-7ca1-49b4-97bf-43ee9bfe34e5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "56e39a9e-9ade-44da-bd0e-792bca168e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb6e9dd-112e-4aeb-9bb4-bedfbb9e098d",
        "cursor": {
          "ref": "93c099b1-26b3-4b70-9575-da90f8d7ce92",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cf3704fc-2faa-4ea9-ab7e-ec48f06b23a4"
        },
        "item": {
          "id": "bcb6e9dd-112e-4aeb-9bb4-bedfbb9e098d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "22bb8f60-caf7-4224-bfb0-e69b23b0ea08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efca07b-4835-4e3e-8a86-7e4bf522c580",
        "cursor": {
          "ref": "b357e3ba-40d3-4b35-9e03-5887f841c7f7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "801cf48b-7674-4a17-a600-0a2d171c78c1"
        },
        "item": {
          "id": "3efca07b-4835-4e3e-8a86-7e4bf522c580",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8c65eed5-f8ac-4289-a10f-e97386d3de09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4692f999-745c-49e1-bd71-97a13ea8952d",
        "cursor": {
          "ref": "9d2b0e7d-28d2-4ecc-b86c-980dc1cc9916",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2765bd4e-cecc-41d1-9dd4-8a50d1da5641"
        },
        "item": {
          "id": "4692f999-745c-49e1-bd71-97a13ea8952d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "25e68aeb-87f0-4492-b960-5961906b7b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dd37b2-c0b0-4d9f-a58a-cb4c7070ac22",
        "cursor": {
          "ref": "2cbe2206-1075-4b27-8d9b-38227a93fae2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "63db1c2f-2e0d-4864-a719-b155d8cfb82b"
        },
        "item": {
          "id": "36dd37b2-c0b0-4d9f-a58a-cb4c7070ac22",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d5896cb5-9da6-4046-b6f9-30be0adc4d3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ec79e8-3d43-4784-a645-70479463b92e",
        "cursor": {
          "ref": "2d4fbc07-9f8b-468f-8c8b-f4ff798ccee6",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4a77f511-a677-4cbf-86fb-82298d046e88"
        },
        "item": {
          "id": "15ec79e8-3d43-4784-a645-70479463b92e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d88a66ef-5921-47d8-897d-44b4bd1326a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "38a44879-4355-4946-aa9b-424714b0d804",
        "cursor": {
          "ref": "2a94ab6e-b723-4162-abca-65abea8ef767",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2d3beed4-13ac-4153-abd1-b3241dd2bb1c"
        },
        "item": {
          "id": "38a44879-4355-4946-aa9b-424714b0d804",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fb03995a-5bd1-4e2a-90ad-0f2633d8857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "56ddf815-5ae0-42c0-938f-a8bdcca4dc26",
        "cursor": {
          "ref": "21103585-b503-4821-b34d-08e2299cecd1",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9294806c-8c82-4593-9af9-03c4a72630c1"
        },
        "item": {
          "id": "56ddf815-5ae0-42c0-938f-a8bdcca4dc26",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eb721ef7-5031-4925-a422-bde12cfb20ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ec2474c3-cb5a-4bc6-91c8-1f84e36aadcb",
        "cursor": {
          "ref": "4047c573-fdad-44d1-bdf7-6858ebdbb0dd",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3d6e7f3-2cac-426b-ab65-c4bf789c8a6e"
        },
        "item": {
          "id": "ec2474c3-cb5a-4bc6-91c8-1f84e36aadcb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3acb8d38-869c-4773-a3c6-4c9834dbf840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "614a4988-f3db-4f5e-a3c5-961109e6a320",
        "cursor": {
          "ref": "b435e331-a30e-4eef-9647-efad3b79b3a9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "19b7c636-c211-48ad-b50e-4534ea39c3e2"
        },
        "item": {
          "id": "614a4988-f3db-4f5e-a3c5-961109e6a320",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "db268729-bbf5-4549-aae4-ca4f5d6da507",
          "status": "Created",
          "code": 201,
          "responseTime": 4727,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1218a57b-259a-4af2-9c26-4950e918fa08",
        "cursor": {
          "ref": "ffef9bb6-3451-415e-b42d-1f001169ad28",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "783a8b6d-d2ca-42ad-a5e0-3fe89f31e14a"
        },
        "item": {
          "id": "1218a57b-259a-4af2-9c26-4950e918fa08",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3d64f027-1ad2-4776-8b3d-deaee641de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d9669267-c58b-4943-af01-b0d7a5ff8b7a",
        "cursor": {
          "ref": "90362b22-86dc-4bef-8754-a1f87bb362f9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9b9d3da0-654a-4188-b9b2-c85bd692e91f"
        },
        "item": {
          "id": "d9669267-c58b-4943-af01-b0d7a5ff8b7a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5b2b6d23-1db9-4692-969b-60e59c4e9a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bd28e8aa-c1da-427c-b4fe-bc8ddc2c1236",
        "cursor": {
          "ref": "2ad54414-e8b1-4636-9eb5-254b160466bd",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1c8fd96e-27bd-4882-b7fa-9eb06d9379f4"
        },
        "item": {
          "id": "bd28e8aa-c1da-427c-b4fe-bc8ddc2c1236",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d74f6b22-89e7-4885-853c-956ef7710758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cb91e0-0571-47b9-9385-6bc3288e1ea4",
        "cursor": {
          "ref": "bc684ba4-9489-4046-b71d-4f93933251b5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ffae9860-b328-4f10-864f-a378ee0d5a97"
        },
        "item": {
          "id": "40cb91e0-0571-47b9-9385-6bc3288e1ea4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ae0996df-4ff7-4b1f-9bbe-0983390457c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fce1fbb-b89d-48eb-b0dc-4ea40b1f03a9",
        "cursor": {
          "ref": "c9361a44-9d94-45bd-a8c0-bf92694649e5",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "017c0419-5afa-4241-94e8-42fbbfd18ff9"
        },
        "item": {
          "id": "5fce1fbb-b89d-48eb-b0dc-4ea40b1f03a9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca9700f0-58c7-4552-bb37-8df2234b88a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc66462b-6e31-4a93-86ce-511564888c6e",
        "cursor": {
          "ref": "ddeb3da8-f39c-43f0-b571-c97146400fd2",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9e4b7332-5c74-423c-ba73-69916e857794"
        },
        "item": {
          "id": "fc66462b-6e31-4a93-86ce-511564888c6e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9ec1caa2-330f-4bad-a9ab-bb7dc29071d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cdf592-3fc9-4a68-99e6-7f503937185f",
        "cursor": {
          "ref": "01d7f7c9-ec75-4e44-931a-0bb8479e513e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d0df8449-e1d4-41bf-a34c-b08cabbf8540"
        },
        "item": {
          "id": "b3cdf592-3fc9-4a68-99e6-7f503937185f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "47f03d10-13ac-4470-b13a-9e9e5baed3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7524a784-4e47-48dd-8e43-9bfa2e39920a",
        "cursor": {
          "ref": "46bb5faf-2de2-4a38-9865-75066ed95458",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "778485d3-cfd2-46c0-adbf-9ed9503b3dab"
        },
        "item": {
          "id": "7524a784-4e47-48dd-8e43-9bfa2e39920a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "583edbc9-2e6e-4594-9be3-65618a850d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee85ad2-dcfe-4822-bc2b-c990f82e64dc",
        "cursor": {
          "ref": "8d675c59-0114-48e2-b17b-bd5c3ccfcebe",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b33a868b-4673-4eb2-8396-dc40fa999cff"
        },
        "item": {
          "id": "bee85ad2-dcfe-4822-bc2b-c990f82e64dc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9108ca1b-5ef8-40c7-ba46-288d6d6ddced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ab402e-4b42-44de-921d-e9d7bcb487f9",
        "cursor": {
          "ref": "d61776c6-88cf-42fa-8818-186a22bc1357",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "38a43490-95ac-444e-af18-85866f51c93d"
        },
        "item": {
          "id": "f5ab402e-4b42-44de-921d-e9d7bcb487f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a7ae0960-fbce-45c4-9553-1f90fa8de371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085b3599-b22c-41c6-9dee-150c5684a0ff",
        "cursor": {
          "ref": "1d2fce02-e4ff-4050-a28c-2ba9334f924e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "692563bd-67e1-464f-b08c-2d85bc92cbae"
        },
        "item": {
          "id": "085b3599-b22c-41c6-9dee-150c5684a0ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f37f2ef6-cac1-4434-94f6-3cad30f6fa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b663c6-fada-40f7-a121-8e9c721c5631",
        "cursor": {
          "ref": "de9a7203-8739-4cd7-9843-32974111f8d0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "634f6fa9-19cb-4948-a07d-c8416609e589"
        },
        "item": {
          "id": "17b663c6-fada-40f7-a121-8e9c721c5631",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a4663316-ca9c-42dd-9b45-b6749efc6f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce94eae-eac1-4a43-82d9-aa30cb68c8bf",
        "cursor": {
          "ref": "d97844ce-ae17-444c-a6a5-ce2235b14c76",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6d758900-7148-455e-a118-a0e0c74df2ea"
        },
        "item": {
          "id": "1ce94eae-eac1-4a43-82d9-aa30cb68c8bf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "11531b50-8180-423e-b00d-b2dd7fad6a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6d7d69-b1d2-483a-b11b-3a4b625df08e",
        "cursor": {
          "ref": "92d48d3b-bd39-4092-bb9f-aee102bfa605",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9a955147-7fad-4945-b17a-e5ea4b0fac0b"
        },
        "item": {
          "id": "bf6d7d69-b1d2-483a-b11b-3a4b625df08e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a6ecd7a8-9e1e-4271-a097-4b5b78a4b5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060f9556-95c4-4fb6-bd9d-6043c23c9908",
        "cursor": {
          "ref": "ce318bd9-06f4-45c0-bdc3-6dba133c1d68",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d5923011-458d-43f9-8408-8694e3577543"
        },
        "item": {
          "id": "060f9556-95c4-4fb6-bd9d-6043c23c9908",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3ecb3620-65b9-44be-a9da-d8c3fc1e1b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952f1b46-2673-45bf-a640-29f5750c270b",
        "cursor": {
          "ref": "442fc77c-726e-4674-9a54-ea63d97ffb28",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b7459139-de01-4d54-b07c-42ab0750c72a"
        },
        "item": {
          "id": "952f1b46-2673-45bf-a640-29f5750c270b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "12703000-f10d-42e4-888c-a7859a66f49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88707ba6-4678-4a3d-b01f-bfd54a86386b",
        "cursor": {
          "ref": "339999e5-aed4-4d08-8745-6c4ed373be68",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "254a2081-fb97-4c78-80ab-e6dbd561e516"
        },
        "item": {
          "id": "88707ba6-4678-4a3d-b01f-bfd54a86386b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8d85e264-321c-439a-a403-b4bedfaf87b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819813eb-8534-4f7b-9fda-18ac15d8442b",
        "cursor": {
          "ref": "818c92f0-ac7e-49c3-803c-6ecf61e20b10",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "403e1a0c-45d2-4808-9519-23920be2b3c9"
        },
        "item": {
          "id": "819813eb-8534-4f7b-9fda-18ac15d8442b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2cd78915-c7f3-4605-9192-a98fd6d6fb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31ace43-43f5-4c2f-81c5-397d25a2aacb",
        "cursor": {
          "ref": "a511823e-861a-4173-9ac8-826e9039b4b1",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b491dd0a-84c6-42b2-8095-b7cf0d67f656"
        },
        "item": {
          "id": "f31ace43-43f5-4c2f-81c5-397d25a2aacb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8be55c16-91f5-4f4a-a0b1-09990ec9b518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795e3aec-016f-437b-ae8e-9b02e9298744",
        "cursor": {
          "ref": "4addddf6-4e21-41d9-a7ee-012e942c8125",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "32502f8e-e4a5-4d92-af6c-ffa884f79de3"
        },
        "item": {
          "id": "795e3aec-016f-437b-ae8e-9b02e9298744",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9ec0be08-7143-490a-93e0-d060fea1d734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea603419-6512-46c8-a1bb-c8c1d589fae7",
        "cursor": {
          "ref": "18791409-03a7-4d3b-bfeb-b3ee5ccc8c60",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "47fb7368-35af-4f29-9904-7acab4424f7f"
        },
        "item": {
          "id": "ea603419-6512-46c8-a1bb-c8c1d589fae7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "960bf3e0-4c56-4571-b676-49090e5c0012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38354c07-c72b-4996-9dca-5e96871c04fd",
        "cursor": {
          "ref": "2d05ccb4-97a8-40b3-b31d-0e6d8b1f0ced",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a5c2b705-59b8-427a-a7b3-d3f96059ab98"
        },
        "item": {
          "id": "38354c07-c72b-4996-9dca-5e96871c04fd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5f4dced-c14e-4f5a-888c-f64d1fb25fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf319334-ed9c-485a-b813-1f80bea54238",
        "cursor": {
          "ref": "a206fdeb-5f36-4c73-89b3-a75f6371ac4b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "17d3804a-f6d9-4878-97a2-37aa0770eac4"
        },
        "item": {
          "id": "bf319334-ed9c-485a-b813-1f80bea54238",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8875673c-edec-4822-a071-88313ff661c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a964059-69c3-40be-acaa-5bbabc92ff3b",
        "cursor": {
          "ref": "db2a8e25-6d7b-46e1-86c5-3bf1cd90b53f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b30147ba-6ce5-40f9-b214-0c84c953e11d"
        },
        "item": {
          "id": "5a964059-69c3-40be-acaa-5bbabc92ff3b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6de27b30-5e4d-477c-991d-cb62bef93f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21069c16-250c-478a-b09d-71ac2121d044",
        "cursor": {
          "ref": "c6b900a1-05bf-4073-b311-37de700ebc80",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "50202d1c-bf88-44ee-98c9-53e5be07ef29"
        },
        "item": {
          "id": "21069c16-250c-478a-b09d-71ac2121d044",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "74829231-4ff4-4d26-b725-940736ee6e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa64bcc-2da1-42b4-80f9-58ae50245091",
        "cursor": {
          "ref": "3e12c45a-4639-4620-8d41-4776e209d115",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "07d21a19-aebf-4dfb-8b72-15ffb7e2eee7"
        },
        "item": {
          "id": "caa64bcc-2da1-42b4-80f9-58ae50245091",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "700a66f8-100c-4641-9582-82e2139a5022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0674de0-6e72-49d6-92ca-d278302cfbea",
        "cursor": {
          "ref": "2803d30f-06ca-4ea8-88da-4f1b7e55609f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9f6d9d50-a860-4f46-970d-d50cf471117a"
        },
        "item": {
          "id": "e0674de0-6e72-49d6-92ca-d278302cfbea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2fdab260-11f6-4fa0-aba7-a455baa24b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf76488b-3649-496c-a5bc-cda8ccdd5e3d",
        "cursor": {
          "ref": "fecb6042-9626-43fe-a74a-26637b59aa3d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "20cede05-a419-41d1-a443-dc9b0fb7c2ac"
        },
        "item": {
          "id": "cf76488b-3649-496c-a5bc-cda8ccdd5e3d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ca856b3e-b676-4378-9faa-e3e5a9af7e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce751be3-713e-45f1-b704-282b56b38a1b",
        "cursor": {
          "ref": "48ed4c3b-c41f-4a88-997f-79941644b5d1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "33cbd748-81b1-42cc-b529-de2225a862dd"
        },
        "item": {
          "id": "ce751be3-713e-45f1-b704-282b56b38a1b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "23ee2a88-2ef5-48bc-8110-da4594f17487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bdcda9-e46e-4413-ae51-617879297b66",
        "cursor": {
          "ref": "ef2484e2-3147-4fc6-a92b-4b9dde6a456d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "209d5a95-3dac-42b2-867a-5f653e6d4365"
        },
        "item": {
          "id": "29bdcda9-e46e-4413-ae51-617879297b66",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2887fe10-483c-4b68-9eb6-dd0783886db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939e9634-1d6a-4249-93f0-78ce712fddeb",
        "cursor": {
          "ref": "1e0ce001-9a33-41ef-b278-2d51e73e5fda",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "26d580cc-15b5-4559-bcf4-7f9c042465db"
        },
        "item": {
          "id": "939e9634-1d6a-4249-93f0-78ce712fddeb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "001a93ab-ec50-4e6a-941f-b88a0c838d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ee3d1b-ab65-4f09-b53a-1c9634e22084",
        "cursor": {
          "ref": "566e5dc3-e03c-481d-bd1d-7931bf3d8c1c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "85705890-ac01-4560-9f89-8f5e8bd850fc"
        },
        "item": {
          "id": "78ee3d1b-ab65-4f09-b53a-1c9634e22084",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5dbfef4b-44d6-4b67-b60e-ec7272060f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08517848-9ec6-499a-bb63-218053e43d3a",
        "cursor": {
          "ref": "084bb7d2-4906-421c-bf9f-49eb26a30fcf",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1396d390-6087-4130-848c-d30a553dc22b"
        },
        "item": {
          "id": "08517848-9ec6-499a-bb63-218053e43d3a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "577ba21c-271c-476e-af1a-b4f8a2a3720c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e36110-c792-44e3-a82f-0ded9c30950e",
        "cursor": {
          "ref": "1367e702-70d0-491d-b2ab-a69b581fdce9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1910ac1d-c79e-48c8-b01d-091faa25bbd8"
        },
        "item": {
          "id": "23e36110-c792-44e3-a82f-0ded9c30950e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f1eb33b7-d184-45ac-820f-8257903027cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e17d68-a13c-4043-ba13-4eaac5895eec",
        "cursor": {
          "ref": "d0397c41-78eb-44a0-9704-8525a25c7f8a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "24d0d080-e4aa-4af7-aa73-b3fa34a354ff"
        },
        "item": {
          "id": "05e17d68-a13c-4043-ba13-4eaac5895eec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98d6e37a-4c94-42bc-8e04-2627cab11955",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96bb422-a9db-40b8-8929-c041daedd4e4",
        "cursor": {
          "ref": "659f0405-d3ba-4c82-bbc2-db262651f5f8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a018b1bc-bb8e-4b94-adf8-1834db8f7009"
        },
        "item": {
          "id": "a96bb422-a9db-40b8-8929-c041daedd4e4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3a873358-89e7-4e21-a98f-2d0420631ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51417d30-a572-44bc-8d64-c101f343162f",
        "cursor": {
          "ref": "89e37f07-413e-4ca7-8a0c-646639eead93",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "417a2e97-37d6-46ed-973b-32df081fe1ea"
        },
        "item": {
          "id": "51417d30-a572-44bc-8d64-c101f343162f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f2e8a451-ff35-4761-bb7f-091dff7184ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f57bf57-f400-486f-a07b-814c3cf03331",
        "cursor": {
          "ref": "662be76b-5536-4203-b2d1-d1399a3351d6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "45bc74e7-74be-415d-9ad8-a3811c308821"
        },
        "item": {
          "id": "3f57bf57-f400-486f-a07b-814c3cf03331",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6f4295be-4a24-4160-be15-9439c3b3e0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038cf80c-383e-4520-9ceb-40cf86d6a9f4",
        "cursor": {
          "ref": "72697f9b-15fc-4160-a69f-ad80b971ce58",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3b425f2d-c78d-4157-a459-ba1472543611"
        },
        "item": {
          "id": "038cf80c-383e-4520-9ceb-40cf86d6a9f4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7298a243-75c4-4e1b-a36a-f0d6c67189d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f54b9c-4589-400e-b8d4-f6d9a6a8fd3b",
        "cursor": {
          "ref": "1a5b58db-0804-4275-aebd-b226fd02b7ca",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8b17242b-db35-4f27-b9da-de86f0058cb1"
        },
        "item": {
          "id": "48f54b9c-4589-400e-b8d4-f6d9a6a8fd3b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "52a10c3f-fd77-4fe8-b296-4c72ad424d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9757335-bda1-44fe-905d-0d03a53302d0",
        "cursor": {
          "ref": "eee30e0d-2975-4b1b-ad6a-9f4c5c4ceb1e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "61b70907-8bcc-4ebc-8083-02cf2a4b810d"
        },
        "item": {
          "id": "b9757335-bda1-44fe-905d-0d03a53302d0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "764af4b4-5276-4579-8fb4-372dcb495046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d9000c-f734-493c-9c2b-c02de1b52524",
        "cursor": {
          "ref": "c046b771-1abb-409a-9dcf-b49ace82b8e4",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e9be8f2c-6dea-45c1-b6cf-34b13eabf2b4"
        },
        "item": {
          "id": "a9d9000c-f734-493c-9c2b-c02de1b52524",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "401430e6-b205-4db0-a26b-7898cec80d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd29061-c0e4-4d05-a34f-fa500baacdce",
        "cursor": {
          "ref": "534af301-1869-4b40-9a9f-9943fe537aa4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5b9c279e-1b40-451b-9e09-d3dd9aeebe0c"
        },
        "item": {
          "id": "9bd29061-c0e4-4d05-a34f-fa500baacdce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a32b4233-0c8f-4d77-8b49-f4d13dbdc1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5811b24-ab3c-4328-a582-08021522435d",
        "cursor": {
          "ref": "f74792e8-9d15-4638-8382-dfcfb50baf9c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "511286f7-c633-474f-983a-786dfe18507c"
        },
        "item": {
          "id": "b5811b24-ab3c-4328-a582-08021522435d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dd083a57-4620-41a4-998c-b311208c9dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093d8e58-5015-46bc-b609-6d2a9dadca18",
        "cursor": {
          "ref": "cb6b9371-ec83-4a6a-8e7f-d68a248b4d19",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4a274c37-fe73-4d90-909e-7a531fb169e7"
        },
        "item": {
          "id": "093d8e58-5015-46bc-b609-6d2a9dadca18",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "994db721-1eb6-4279-98ba-cd11ff241bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0478ddb0-8ff8-4894-ad77-c14979c1332e",
        "cursor": {
          "ref": "c77a97a2-caf7-4a5d-8cbe-18ab1c25efab",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6f35269f-60fd-484b-8e87-328a0868628b"
        },
        "item": {
          "id": "0478ddb0-8ff8-4894-ad77-c14979c1332e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "98394bae-9b43-48bc-b974-035490efbc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d629436-862a-4de6-9201-555b54986691",
        "cursor": {
          "ref": "d7f3e0ac-936d-43cf-b84a-d1843b07b7e0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0da0b85b-60de-4680-9ade-5e450d721836"
        },
        "item": {
          "id": "6d629436-862a-4de6-9201-555b54986691",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "509b4338-1c18-4341-a309-5a137d3ffcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3c3f79-a2d9-41b7-95f7-9d20a50ac202",
        "cursor": {
          "ref": "3d569d6d-11d1-4f9c-be39-ed203bcb4194",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "23ff2b84-d462-494e-a089-c142d5a17680"
        },
        "item": {
          "id": "9d3c3f79-a2d9-41b7-95f7-9d20a50ac202",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cf6afef6-7438-4d35-9539-a7196cad8dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d25da9f-b121-4c68-b142-477b94a06b1d",
        "cursor": {
          "ref": "5c894f45-6ddf-414b-b327-e777669f18f9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4f0ce716-29ca-490b-8b73-742cb79f6e44"
        },
        "item": {
          "id": "2d25da9f-b121-4c68-b142-477b94a06b1d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e64c1e78-1de7-45c5-801c-b648450c90fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11bcdb6-11a8-48c4-9003-b3986a5f1230",
        "cursor": {
          "ref": "dd3a5de7-20a8-4949-81dc-9dd14ca828ec",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7e608ac6-fa49-4225-9341-21f4e320ce55"
        },
        "item": {
          "id": "a11bcdb6-11a8-48c4-9003-b3986a5f1230",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c8ae6037-bdcf-493b-9c18-5fa2b3b15545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2bf619-4993-4b6c-ac79-d68b51f850dd",
        "cursor": {
          "ref": "7daebd85-25ce-4c67-a6ed-52191dd8f1ef",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0b2ffaf5-d9fe-4713-b381-c3b46fe14d8e"
        },
        "item": {
          "id": "4e2bf619-4993-4b6c-ac79-d68b51f850dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "72f93a32-c5e7-4e33-a2ce-5b7f2c2f7ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b1e6b4-f6f4-4a6f-aa69-90cf2c80f4d7",
        "cursor": {
          "ref": "3f2ae5bf-6149-47e3-b649-af519bf7e929",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "58db7842-fe68-48ff-85e5-dd46eb34a111"
        },
        "item": {
          "id": "c8b1e6b4-f6f4-4a6f-aa69-90cf2c80f4d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9f8e3b0b-aa22-47e8-a1ba-f795578b8745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3347ed-e25d-41db-a0da-2f7d47725a1b",
        "cursor": {
          "ref": "90c93736-080f-4b3b-b6da-f5d23c3299bf",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cd0376c2-2656-4187-9672-d8599410c0fe"
        },
        "item": {
          "id": "bc3347ed-e25d-41db-a0da-2f7d47725a1b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc8205b3-c5a7-4ead-ad30-7bd7de878cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74aef90-7382-4cfe-88c2-45d06f42c237",
        "cursor": {
          "ref": "fd2bad93-ac21-4d96-8577-3a75e070f547",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fac94ee2-96d7-4577-ab14-2e6a651b56d5"
        },
        "item": {
          "id": "b74aef90-7382-4cfe-88c2-45d06f42c237",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c4df62d0-84a2-49f2-9fc9-9a367ffe330f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fb80ae-c896-47d2-a23d-3ff57c58f3f1",
        "cursor": {
          "ref": "7db1bc6a-15e5-4da0-9e24-81b6707f884e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "443f8c6d-4819-4c52-8d2b-8cbb06d36792"
        },
        "item": {
          "id": "d6fb80ae-c896-47d2-a23d-3ff57c58f3f1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "171630e1-e881-4590-bdd1-24716d5ac9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6851b48-9ca7-430a-a33d-f66be71d1c14",
        "cursor": {
          "ref": "1c79b597-ab93-45e2-b7a6-8bd4633583fb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0da7ee8b-5c87-419a-a6c9-28f0a1d948fb"
        },
        "item": {
          "id": "a6851b48-9ca7-430a-a33d-f66be71d1c14",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "469812f7-4b05-4ebe-a4d5-39ef79d57716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55582c70-6dab-463a-8adb-303d27349452",
        "cursor": {
          "ref": "8fc55c01-da34-4d2b-ba01-caf83fdf20e4",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eca815d7-4a77-4e4b-9984-bbe8142e0e8e"
        },
        "item": {
          "id": "55582c70-6dab-463a-8adb-303d27349452",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b9d7ad54-bd1e-40e5-b450-5e3a72694a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03482baa-ed88-4a38-8765-b63120283a52",
        "cursor": {
          "ref": "b7e33166-3390-4566-8e9b-5001afd89999",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d1257eed-ffa0-4828-bfa5-c9d3c5b02074"
        },
        "item": {
          "id": "03482baa-ed88-4a38-8765-b63120283a52",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ba906354-43ea-49e8-ada6-b15c75687b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66dae59-372a-4071-b3ea-83b14e72a6bb",
        "cursor": {
          "ref": "a21e6ddf-e089-42b2-9965-0c376601061c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "71947f3c-e498-48a7-bc04-e5fb77a9f810"
        },
        "item": {
          "id": "b66dae59-372a-4071-b3ea-83b14e72a6bb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "09eb042c-648e-47a5-a00e-702c32c5a63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f07cdb-073b-43ab-8012-e2bb1323041e",
        "cursor": {
          "ref": "d3b309dd-71ad-4f0e-b75f-f6bec7cb486a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "170ab64b-7a66-4912-bd9d-cba9f0806e09"
        },
        "item": {
          "id": "24f07cdb-073b-43ab-8012-e2bb1323041e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d08c6f1f-740f-4657-864f-9fbcc741ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce37df4-f5d9-4104-9cce-3ef976a6b69e",
        "cursor": {
          "ref": "98e6bff5-4405-4edd-9234-bc35d738d035",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ec4dfcc4-2f12-4258-8f75-2aaaec258a42"
        },
        "item": {
          "id": "0ce37df4-f5d9-4104-9cce-3ef976a6b69e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1e4a082f-77e1-4ce3-861d-c9364e8f7093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6785e1a-a754-400a-bb50-ef4a592dae13",
        "cursor": {
          "ref": "5a9da3ec-33ec-4378-a9b4-ed0d3fb121bc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "390fef1f-7c1f-470f-b897-adf8237599cd"
        },
        "item": {
          "id": "a6785e1a-a754-400a-bb50-ef4a592dae13",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d2b1fba6-ca4f-4080-955e-e5a8590f6701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8448fc-26d9-4321-981b-6bf7e2720989",
        "cursor": {
          "ref": "869bee31-6e73-405c-a48f-5064f6983fd7",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "be886409-4393-410a-b150-5a27a6f706cb"
        },
        "item": {
          "id": "2d8448fc-26d9-4321-981b-6bf7e2720989",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a9bf58e-5b91-4860-b326-d901abe1187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c629c91-ddc2-4fc0-a3c8-136a23f8c2a5",
        "cursor": {
          "ref": "6fbe6666-e139-4401-9cc9-64731aaf67b9",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "859f448e-3094-49ad-a92d-a13dcb41c111"
        },
        "item": {
          "id": "8c629c91-ddc2-4fc0-a3c8-136a23f8c2a5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e93e429-306f-487d-805e-0af8d206664c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e321a4-0e4e-403a-a2d7-d6b5847ad6ea",
        "cursor": {
          "ref": "13198a00-9f55-4599-9c04-05fd3b35649d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7e71062a-951c-4ecb-9fa3-212aee70b84a"
        },
        "item": {
          "id": "c3e321a4-0e4e-403a-a2d7-d6b5847ad6ea",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d11ae6fc-b7d8-48d3-9783-01d649aacf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e116a4-a0fa-489a-b4ae-21dcfa529e7b",
        "cursor": {
          "ref": "2bde0c0a-dbf5-4584-b53e-1275e4ec8749",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fa6376e1-0d7f-4a87-86a6-09d6da8f53d1"
        },
        "item": {
          "id": "85e116a4-a0fa-489a-b4ae-21dcfa529e7b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9a245968-e222-4fa7-8bd9-3f8fb21d6169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46676740-d675-4cd2-abf7-4601cd9c73cc",
        "cursor": {
          "ref": "265ecb84-5ffe-4852-a814-d43142ae0acb",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e8793fd6-9686-4fbc-b6b5-9cde72fd3e05"
        },
        "item": {
          "id": "46676740-d675-4cd2-abf7-4601cd9c73cc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b7c40a2b-bb3f-46d3-94c4-bdd50bb048e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2a4d75-2f15-41ba-9582-159acc4c8000",
        "cursor": {
          "ref": "a8d8523a-df65-4159-9a0b-40436472a824",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fb961aa8-b055-4271-a295-c6789cf87ca0"
        },
        "item": {
          "id": "bb2a4d75-2f15-41ba-9582-159acc4c8000",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "acec7c9d-ba5c-4312-9ba1-82bd5b1f2ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cec78a-a003-42b5-8835-f252263ad04a",
        "cursor": {
          "ref": "3719c78e-d99f-4add-8073-67467bb2b250",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a5615535-754d-4781-8449-e8ba06321cab"
        },
        "item": {
          "id": "91cec78a-a003-42b5-8835-f252263ad04a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "45a415f9-10b1-45ae-a9ee-a7d3ccbe86b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19561433-1179-4d50-8fda-7db67eee73e9",
        "cursor": {
          "ref": "9df25a40-576b-499c-b121-f4a62e20a9db",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "be8d0d2b-6b7a-44ff-b3bf-ba46bdf05a6a"
        },
        "item": {
          "id": "19561433-1179-4d50-8fda-7db67eee73e9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7fc47237-42b2-4a28-9c00-09f14724d69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0ecd40-618e-4ead-b5c9-33e93b3ec53e",
        "cursor": {
          "ref": "1d9ef2bb-e355-491d-b1e1-16840c604173",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "74bb47fd-6e4d-42cb-bbe4-ad7e8337afe3"
        },
        "item": {
          "id": "0c0ecd40-618e-4ead-b5c9-33e93b3ec53e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03ff5487-6e0d-4705-a6e1-f85cde3814e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad988bee-d0b0-4fc5-9813-c5e6ba27577a",
        "cursor": {
          "ref": "5d03a068-a34e-4ffd-be28-45e5c6b67c98",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cac5a257-fdc3-4f07-af39-0c01aa9e3d1c"
        },
        "item": {
          "id": "ad988bee-d0b0-4fc5-9813-c5e6ba27577a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6ee2c8b3-43c4-487f-b778-f6463df5f28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0f2dbb-b0b2-4eca-a5c1-23436f824b84",
        "cursor": {
          "ref": "f8f095ce-8ba8-454c-9eff-bd2bd07cdf52",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8ecdefcb-0975-4d92-8edf-831411bca3f1"
        },
        "item": {
          "id": "fd0f2dbb-b0b2-4eca-a5c1-23436f824b84",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ca0aac3a-9eb8-4141-a018-7662f941d518",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dcc4ff-4a01-4882-86cc-405950acee1e",
        "cursor": {
          "ref": "4a27a193-fdab-483c-9bd1-36a4431bff26",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "09dc22d0-78c9-45aa-96d9-5da8c1c250ec"
        },
        "item": {
          "id": "31dcc4ff-4a01-4882-86cc-405950acee1e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ee9e4fae-8c2f-4997-b3a5-724f9247262b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901524ae-f519-4ece-8f63-71b447f69f07",
        "cursor": {
          "ref": "b632c2f1-f3d3-4a8d-affa-4a06a6372aed",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3cd726b2-acf7-4ee3-ad66-d542b5a7a0bf"
        },
        "item": {
          "id": "901524ae-f519-4ece-8f63-71b447f69f07",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e7211895-e77f-4a01-b441-441b769a2abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e473d973-cef0-410d-88a5-b2cb095d1167",
        "cursor": {
          "ref": "526a8aa2-825f-4529-994c-80868fb2ddee",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1375750e-fa28-4672-a49e-6457b9edc7c8"
        },
        "item": {
          "id": "e473d973-cef0-410d-88a5-b2cb095d1167",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "90eb9367-726d-4587-ae47-e13d446f3378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32db1ebe-1ca4-4a25-9bb5-95958397b894",
        "cursor": {
          "ref": "0772cf05-3cda-43e1-a5bb-09dc0244ae55",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2fb48156-fa7a-4a30-b12e-df4391973e1f"
        },
        "item": {
          "id": "32db1ebe-1ca4-4a25-9bb5-95958397b894",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3c9550b6-7c29-4800-9d68-02c77b3890f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfbe06b-309e-498d-bb21-bfdba740f10f",
        "cursor": {
          "ref": "76e810b8-d5e2-4e54-8d23-0d45210ece7d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9f77b13e-10c8-4b92-8527-3f78d28fa7da"
        },
        "item": {
          "id": "bcfbe06b-309e-498d-bb21-bfdba740f10f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c5b1c578-acd0-48fa-afd9-b2d0d24f582f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424cd502-7d38-436b-a75c-064bf909c263",
        "cursor": {
          "ref": "6f69d10f-66a3-4b0e-9331-abdf3fa76098",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fbf8d9be-4bb3-4398-8d98-5221d22e5926"
        },
        "item": {
          "id": "424cd502-7d38-436b-a75c-064bf909c263",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "326829ee-29df-45e2-b2ff-f3e6a90c5e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0fab1b-62c1-491a-aa7a-f1b83eac7961",
        "cursor": {
          "ref": "420f2fc3-bf87-4d52-936c-c854bf5163f8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "65054402-c1db-4508-9c0c-563b9fb9a1af"
        },
        "item": {
          "id": "0a0fab1b-62c1-491a-aa7a-f1b83eac7961",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bd6d8335-8179-4c11-9a9d-e3eab9362cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b51560-4b1a-4d13-8ef9-7df357dbf6c0",
        "cursor": {
          "ref": "04ae09eb-3c4d-4f9a-9a7d-e8f751c7716a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ca70de19-e77f-4c6b-8c5d-f3b800f1fdca"
        },
        "item": {
          "id": "23b51560-4b1a-4d13-8ef9-7df357dbf6c0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "13177402-d889-47d3-97f4-7b7f930edb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77eef7d-7c78-412b-9ddf-e6e584473054",
        "cursor": {
          "ref": "14ae1402-d1c4-407a-8dbf-0014dc25feff",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "31ea3e06-a58f-4f21-a790-e072ec1a72af"
        },
        "item": {
          "id": "c77eef7d-7c78-412b-9ddf-e6e584473054",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "320af84e-cc82-46e1-950c-e9378653bc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ab402d-4912-4e6e-a1b4-ff5b3cbb9385",
        "cursor": {
          "ref": "a2336c55-1471-4187-a767-3730f65f818e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "addc5b1b-3b78-413f-8a01-259db49caf83"
        },
        "item": {
          "id": "15ab402d-4912-4e6e-a1b4-ff5b3cbb9385",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0ed433ea-eabe-4d33-b1a2-28b4027d4939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc46605-4812-406f-b038-cbc5ec2ab06c",
        "cursor": {
          "ref": "2562e447-9447-461d-807d-40b92e86c95f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c2f3ce8f-e208-408a-b64f-a60a99bd2a28"
        },
        "item": {
          "id": "dbc46605-4812-406f-b038-cbc5ec2ab06c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0598f781-9535-4518-ad1e-47f2f0c4d2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbab9735-0f7f-45fa-b41e-f1b0e7a90f1b",
        "cursor": {
          "ref": "a737a7f0-e0a7-499c-b48b-0d2207922311",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f75a55da-2fba-4604-be1f-9c347c76a632"
        },
        "item": {
          "id": "bbab9735-0f7f-45fa-b41e-f1b0e7a90f1b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8ae9dc6e-296e-4384-8dd1-880cb20051d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5199bbfa-b311-40e4-83f2-d1e413eecd23",
        "cursor": {
          "ref": "7cb3e114-61d1-43be-8fdd-735c9ab72326",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c9be8cc6-42de-4d0a-bee2-22ef8635054d"
        },
        "item": {
          "id": "5199bbfa-b311-40e4-83f2-d1e413eecd23",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "65105bb0-1b9c-4fca-ba23-f8caa44c0879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a419a7-ebac-47b4-bba2-610a12447e9b",
        "cursor": {
          "ref": "c55ae34b-f355-4676-873e-d95fc3dae576",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c55e6e82-3e66-4cbb-8b78-29fbdfb16b4d"
        },
        "item": {
          "id": "b6a419a7-ebac-47b4-bba2-610a12447e9b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "204a978c-7994-4c34-87b7-ca965e10cf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c9fa21-2985-459d-a823-8106214df8f2",
        "cursor": {
          "ref": "c4909956-d95c-4775-996a-6d878590b01b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9abf8b2c-0017-4ca3-b35a-5fbd999276de"
        },
        "item": {
          "id": "d2c9fa21-2985-459d-a823-8106214df8f2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0e17b3c2-b93a-4333-a2b8-dc72414020aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d292ae8-535d-47de-aa75-6aaadc563d9a",
        "cursor": {
          "ref": "d4597257-95e6-4702-b548-4618813791d5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e0ea6236-2218-4167-9192-e02e5fe79a19"
        },
        "item": {
          "id": "8d292ae8-535d-47de-aa75-6aaadc563d9a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1a6ebb57-9cb2-44e7-83fe-f0d4ff398839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4df981-3453-46a0-a18b-4a802ab37883",
        "cursor": {
          "ref": "f098d870-7438-4049-b5a7-807095a15b08",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b05d6c84-af60-4f33-a2fe-a530d0e6661b"
        },
        "item": {
          "id": "fa4df981-3453-46a0-a18b-4a802ab37883",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "03c8cfc1-db12-46d7-ba23-312d7fd66771",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "78b44d0c-ea12-40ce-a0fc-6745c019fa4b",
        "cursor": {
          "ref": "beb23b75-74e3-4cf6-a1d2-a7438c8eb0c3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2ff3217c-514f-4645-97b6-26be40924aa5"
        },
        "item": {
          "id": "78b44d0c-ea12-40ce-a0fc-6745c019fa4b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c7e9d669-be26-44ff-91c0-3612be16347f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5136314-ce06-4bbd-9b19-0f2b8639f972",
        "cursor": {
          "ref": "54fb7d68-f43d-4b9f-919f-8803e5270620",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a5f59fce-59b7-4522-ba45-178e7e032681"
        },
        "item": {
          "id": "e5136314-ce06-4bbd-9b19-0f2b8639f972",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d3fd61ae-f298-4515-aecc-baed806172b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e243ba02-0553-4e2e-ba8f-2be55817e4eb",
        "cursor": {
          "ref": "af6ab593-6518-43bb-b671-97a90a87f7ac",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dfecf115-c38f-49b9-a152-2120ccfd111e"
        },
        "item": {
          "id": "e243ba02-0553-4e2e-ba8f-2be55817e4eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ed7bf4d0-4f3f-4191-b76f-2d5737099834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33693cbb-577b-4b5d-8fdc-9c386b456d9c",
        "cursor": {
          "ref": "5ab422d6-c8d3-4c54-857b-036aabb64fa1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "61d4a62b-fea8-447d-94a0-9deb3eeb33a5"
        },
        "item": {
          "id": "33693cbb-577b-4b5d-8fdc-9c386b456d9c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "90860009-0db7-4de4-8807-dbc6acd0fceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ba22ed-cb6f-441b-817b-b0115bc6863e",
        "cursor": {
          "ref": "e57288e0-b03a-470b-a4c8-6df758dafd41",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5b90d3a9-6fd3-4c56-937d-5ab2ea116a5c"
        },
        "item": {
          "id": "85ba22ed-cb6f-441b-817b-b0115bc6863e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3bc6adbd-b220-4ce2-b0ad-84a2b81d7569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8df7af6-7ba8-47e9-a711-76c3e7926ae0",
        "cursor": {
          "ref": "b096ec96-372a-4dc1-9926-69aaa29b4742",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ab7b0451-aee7-4df6-bb71-8f3824567f52"
        },
        "item": {
          "id": "d8df7af6-7ba8-47e9-a711-76c3e7926ae0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a4d98bef-640d-4d94-b927-44e37cb696ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7434055-1a8c-4778-acbc-20764e4ee4aa",
        "cursor": {
          "ref": "e39f82c9-e88d-4efb-af91-2e12f2352c5a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "24d86216-f037-4f26-a075-14d5ea7359f4"
        },
        "item": {
          "id": "d7434055-1a8c-4778-acbc-20764e4ee4aa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2d39f141-0ae0-47fb-a8d5-1d66c5ca57f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b071c4-bc34-45a7-addc-7a6f4b6ffc4d",
        "cursor": {
          "ref": "606a534d-29cd-460b-a89a-bf76371ac6e8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bbf17ecc-9104-4330-9dd1-3c3b826703a7"
        },
        "item": {
          "id": "a0b071c4-bc34-45a7-addc-7a6f4b6ffc4d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "54f34ad5-b76d-4ea8-9f66-25c13acb9aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6022d1c9-9c4c-4914-88ea-87784a4c6beb",
        "cursor": {
          "ref": "e4639ae3-04a3-4d16-83c6-a811acaf2fb3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8fb3b997-9f3b-4651-b773-7476d2817135"
        },
        "item": {
          "id": "6022d1c9-9c4c-4914-88ea-87784a4c6beb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a29405be-7ae5-4f1b-9ea4-4a10d1cb3683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4717f063-a209-4f9d-a3d6-ff6ca09af897",
        "cursor": {
          "ref": "fe378fd9-0f5b-4d39-a070-14e27d0cb6ea",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "23e5b865-d84b-403a-9205-c36e21513863"
        },
        "item": {
          "id": "4717f063-a209-4f9d-a3d6-ff6ca09af897",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05312456-d0ad-401a-9ce3-f7403217756d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4d9b7d-b1b1-4514-8f01-940eea2b2d19",
        "cursor": {
          "ref": "eea35a78-d007-4869-b10f-4f5373086e8f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ad5875ca-428d-4a90-ae9d-aeb935488bbe"
        },
        "item": {
          "id": "1b4d9b7d-b1b1-4514-8f01-940eea2b2d19",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6bb83bcf-330a-49d3-8b4a-892302f53f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85adf11f-38b5-4b30-9cc0-49bbf37b7e3c",
        "cursor": {
          "ref": "b40922fe-cb59-430e-be9a-de1e942cf285",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "41cc8d22-1f70-4b68-9d0e-29b8907de10a"
        },
        "item": {
          "id": "85adf11f-38b5-4b30-9cc0-49bbf37b7e3c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "85edbc67-c18e-4376-ab2b-94f1c1b6eddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90da42bc-d73b-44c3-9ecb-8000503c97cd",
        "cursor": {
          "ref": "4fe7a012-a6e4-40b5-a284-8b0e12706423",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e2c90fe5-19fb-4e6d-a2d7-acd1a5750a5b"
        },
        "item": {
          "id": "90da42bc-d73b-44c3-9ecb-8000503c97cd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5ee7e18c-a5ae-4b0e-88f8-73b7fed0b626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9115268-99b1-4cb5-bb1d-47ff8dfee70d",
        "cursor": {
          "ref": "4eaa8dca-478e-4166-a30e-e87004f0f123",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "89cc18f8-1597-4412-9266-3de62d8f7d9a"
        },
        "item": {
          "id": "a9115268-99b1-4cb5-bb1d-47ff8dfee70d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "645c4c1d-0c31-4fb2-ae7a-810bd3811799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8014afe-65b6-4e46-b7f9-5186c918e6d8",
        "cursor": {
          "ref": "9d4f0c48-54a5-4c80-9450-d1e7bb3b1bac",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5fcfe31d-6634-4bb8-85a1-aef3c3ee3c56"
        },
        "item": {
          "id": "c8014afe-65b6-4e46-b7f9-5186c918e6d8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "24bb07e5-8179-4e66-aa7b-956b8d6eb2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bb91c9-929b-4d54-9ace-1a6f0e660d89",
        "cursor": {
          "ref": "e47457fd-eeb3-4a4e-bba7-6671afc08404",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d7fde16b-081d-4327-a5fd-ac215debb165"
        },
        "item": {
          "id": "d0bb91c9-929b-4d54-9ace-1a6f0e660d89",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "505159ff-f70d-4bf9-a0ce-9676c1c97c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caacb38-0459-401c-8b3d-b8fa2339fa56",
        "cursor": {
          "ref": "dfb2004c-4622-4130-8516-40e18acf0672",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bc66f604-7575-4445-ac85-05bc1873b455"
        },
        "item": {
          "id": "1caacb38-0459-401c-8b3d-b8fa2339fa56",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4fef3f45-644c-4ac4-88fc-8712ece5425f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1ecd45-026e-4afe-8519-93a71fcafc4a",
        "cursor": {
          "ref": "e76d5bbf-5bb1-4bce-913d-7cd4a58b6bd2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0a528642-7b37-4121-aca1-3b88298070d0"
        },
        "item": {
          "id": "aa1ecd45-026e-4afe-8519-93a71fcafc4a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4695bd06-6537-4ce0-b4f8-ea769d0af5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437ed11b-88ee-4135-a690-e09b5507e755",
        "cursor": {
          "ref": "937eda94-537c-434d-adb0-0993f41ab3ef",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6911bc49-efb6-4678-ada0-9c04bdf1e9f3"
        },
        "item": {
          "id": "437ed11b-88ee-4135-a690-e09b5507e755",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "72432a04-2821-4aea-b8b6-1451e5eda076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f5f5a1-dda7-4124-a884-2fbd20b07014",
        "cursor": {
          "ref": "caa0c25e-d0a3-4923-848a-1babcada7145",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b15aa9b3-77db-4a68-98ef-6d0b45008a3f"
        },
        "item": {
          "id": "63f5f5a1-dda7-4124-a884-2fbd20b07014",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f642b4f0-01af-4202-829c-e01dc88427e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2f6e71-9298-467e-8d72-4540f1e161c7",
        "cursor": {
          "ref": "f3092f02-0bb5-4065-9507-5e4a20598cc3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fc642b34-797d-4e45-ab9b-dd9413f83c08"
        },
        "item": {
          "id": "5f2f6e71-9298-467e-8d72-4540f1e161c7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b213cc0d-adcb-45f8-8947-a6eb384ef330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d46cf72-aa3a-467d-8ffb-124a85cfbb79",
        "cursor": {
          "ref": "c42703d9-288a-4801-8911-db8ecebf68a1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6e18cfad-6077-438c-945d-7d7c783355bb"
        },
        "item": {
          "id": "3d46cf72-aa3a-467d-8ffb-124a85cfbb79",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6d5c117c-a601-42b9-b8cf-6a77f1f4c389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bec997d-6045-4e0a-a552-d8b5a7a32cf3",
        "cursor": {
          "ref": "60e51e64-45fb-4646-bc52-5b709d646429",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e330ea46-f136-4594-8888-7022965c76fc"
        },
        "item": {
          "id": "5bec997d-6045-4e0a-a552-d8b5a7a32cf3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dc1f1003-3b4b-45a2-8ff3-60a057e84c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bc958a-dff2-474e-b980-b3ba6594b630",
        "cursor": {
          "ref": "783cb4cd-1c20-414d-a04e-3bd4f2c2d923",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "65070c1e-509e-4f5e-91f1-97ba5760bd1d"
        },
        "item": {
          "id": "b5bc958a-dff2-474e-b980-b3ba6594b630",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "755dd04a-9da9-4e15-901a-3714bae07e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6513f700-e481-4ae1-883d-bc37761038b1",
        "cursor": {
          "ref": "d9977b1e-0535-4d12-97b0-769d54c6d976",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "013d7aad-300b-4249-8dc0-0b792737a541"
        },
        "item": {
          "id": "6513f700-e481-4ae1-883d-bc37761038b1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a000376d-bb69-4d86-82ef-af3fa96f10be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5697a45-6d1e-4766-bd46-8434c97b2c8a",
        "cursor": {
          "ref": "19b75ce4-9beb-4608-b9c7-723143f80470",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c497b3b9-12ed-47c1-aedb-ee15d1f3e868"
        },
        "item": {
          "id": "c5697a45-6d1e-4766-bd46-8434c97b2c8a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c8c1d68a-a8a9-4290-abd5-a181c5e16e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059ce834-932e-4885-aa42-b93c7a3ef44a",
        "cursor": {
          "ref": "19007fcd-4f89-4d28-ae10-120b611a9112",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cc0d7e81-c3e1-4019-b4be-5e3087d3da24"
        },
        "item": {
          "id": "059ce834-932e-4885-aa42-b93c7a3ef44a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "abc6a09c-f1aa-42ba-b85e-de0fa34f1198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a71da5-eb48-4476-8e16-e2ee9a3ad24e",
        "cursor": {
          "ref": "95b99344-0058-4a3f-a11b-8a37b666d8d4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2584945d-bc5d-46b2-8a98-b7565a291436"
        },
        "item": {
          "id": "b5a71da5-eb48-4476-8e16-e2ee9a3ad24e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c9c44663-54e4-4e47-99b9-bc06ca926aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0dab74-3331-4880-98cf-28854570c8b0",
        "cursor": {
          "ref": "38eec379-9401-4549-88ba-7bcc37b529ff",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "693d73de-b4ef-40b6-90f5-1b7f76a3918d"
        },
        "item": {
          "id": "6c0dab74-3331-4880-98cf-28854570c8b0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9c9a5608-a20f-4170-8785-b019922b5669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953de712-e480-471b-a1f3-3b573ba6638d",
        "cursor": {
          "ref": "dc39e0c7-4f4e-4f11-b848-750c3fbcd705",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d9a1d016-098a-470a-b153-f48a4e72506d"
        },
        "item": {
          "id": "953de712-e480-471b-a1f3-3b573ba6638d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "44886a60-40d5-4bdb-8060-02f50c47b5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2994ec-a735-4730-9661-12205fae40ca",
        "cursor": {
          "ref": "31655255-7849-450c-b0b1-e61877b1a2ed",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0a7ce494-9f0c-4cb1-bd46-fe4c75a55a01"
        },
        "item": {
          "id": "7b2994ec-a735-4730-9661-12205fae40ca",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e0a9ef08-df66-4030-9f21-4c8933e3c99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6028d57-dd87-4c09-8a65-04b2e48ed28f",
        "cursor": {
          "ref": "ca6e2785-32ba-43ed-83c3-ea99df691fb6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2f85ac48-38f5-49b5-8422-5728995aff68"
        },
        "item": {
          "id": "f6028d57-dd87-4c09-8a65-04b2e48ed28f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "df004390-d7fa-4fa8-aa84-4b1dd1bebaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33457c7e-0e5c-48b5-b86c-b295d1becd79",
        "cursor": {
          "ref": "271d8dc8-f26b-41b5-bab8-d096af851713",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7412c601-df27-4e83-bf51-fbce3e362e6d"
        },
        "item": {
          "id": "33457c7e-0e5c-48b5-b86c-b295d1becd79",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "191942d7-a7aa-4258-b92f-50f8e7044886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b116063-622f-4e74-994c-33b588dbfa32",
        "cursor": {
          "ref": "292ec67e-0b0f-40a2-98c1-b2451ddfce88",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6884fab5-76a7-42c2-a796-7f0a6f085cf7"
        },
        "item": {
          "id": "8b116063-622f-4e74-994c-33b588dbfa32",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e56becf5-cba8-4490-9fb6-5474adbe89be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80498088-69d8-43bb-8c30-06cbbebf8e57",
        "cursor": {
          "ref": "6d0be1cb-e809-4677-ab7b-a3b271764777",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e28ad7f3-95ca-4e06-b543-43c1cdc7567e"
        },
        "item": {
          "id": "80498088-69d8-43bb-8c30-06cbbebf8e57",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9b3d9d2b-27c1-442a-a018-7ee6c5e0370d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55abdf9f-46bf-4e71-a058-e729375c1c56",
        "cursor": {
          "ref": "7a1b7a1d-7eac-4d92-9dd7-0ef42a4c02a0",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "098f79f1-ca41-499a-9007-5ed70111a768"
        },
        "item": {
          "id": "55abdf9f-46bf-4e71-a058-e729375c1c56",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "05e96c6f-674e-435b-968c-df8c90c221d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e59ea5f-0a76-473b-b7b2-22b300ba87c0",
        "cursor": {
          "ref": "2a9e8c0a-b8b2-479c-a465-23b94466d0b5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4737cf68-3138-4e2a-a963-226fbaf40bec"
        },
        "item": {
          "id": "2e59ea5f-0a76-473b-b7b2-22b300ba87c0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3f2a2553-6d55-48ee-990c-72e4d03c3ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ccdf5d-d413-4fb0-833e-0ff68f6ac2d0",
        "cursor": {
          "ref": "bb268b6f-45e0-4565-bb1b-1b8776be455e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8b460183-4670-42be-a0f9-cd8be1e15f6c"
        },
        "item": {
          "id": "50ccdf5d-d413-4fb0-833e-0ff68f6ac2d0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4b7e7422-9ab9-4861-a5d3-252da2c1fe3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4e07a7-53f2-48ee-8c02-290cd7abab81",
        "cursor": {
          "ref": "d5acdacf-4e24-4634-af57-a04608f5d2f2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d2ed1331-619c-4c42-847a-3cbc40be68e3"
        },
        "item": {
          "id": "0a4e07a7-53f2-48ee-8c02-290cd7abab81",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "530fecaf-b84c-4e8e-89a1-88fed1dd9aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab614369-0480-484b-b090-7deca6847d59",
        "cursor": {
          "ref": "29867ad6-c64c-4cd1-a574-15a2198027cd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ee58b8af-c8c8-43af-bb5e-7f4576287d47"
        },
        "item": {
          "id": "ab614369-0480-484b-b090-7deca6847d59",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "20ffdf4e-ca2e-43d2-abd0-6b33cb595a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea9c830-7863-43ce-8689-0017499d5715",
        "cursor": {
          "ref": "5f47f9a5-4b1a-4af0-9722-e412803104f8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2b524cce-fe10-421a-9c23-4c1e7e4c3129"
        },
        "item": {
          "id": "7ea9c830-7863-43ce-8689-0017499d5715",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5f7417a2-702a-4130-8faa-479687ddddd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19362605-1db4-48be-820d-46255c16287d",
        "cursor": {
          "ref": "e4b497c9-bb0e-45e2-abe1-3e22578f1c75",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "705fa96f-eb51-4c47-ae9c-ec1e6cc7ccfe"
        },
        "item": {
          "id": "19362605-1db4-48be-820d-46255c16287d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "40ab8d6b-604d-4dde-971c-ece5fbc9b7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d762401a-5fc2-400e-ab08-a5be789f6951",
        "cursor": {
          "ref": "db9cbe09-54e5-4496-9136-28e05cfbb9ab",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1781aa59-42c5-41ad-97a1-ba5a703a2c0f"
        },
        "item": {
          "id": "d762401a-5fc2-400e-ab08-a5be789f6951",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8cd37cd2-de14-4720-bed8-e1fb89193679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16436b10-ac81-454b-b6dc-5233a164b247",
        "cursor": {
          "ref": "714c7ee3-75b8-410b-acca-d30b7950cfd7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bd2dead5-5258-4f7d-a728-38f288ba3cfc"
        },
        "item": {
          "id": "16436b10-ac81-454b-b6dc-5233a164b247",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8b4bdad9-c5c7-42eb-936b-7a5f2c3191eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d115428-8b6e-4468-ada0-190f42d55835",
        "cursor": {
          "ref": "0af422f9-95e4-4e05-9f10-a9233ccef286",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dc8b8139-0de1-4923-83c2-d0f0bf1e71c3"
        },
        "item": {
          "id": "9d115428-8b6e-4468-ada0-190f42d55835",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1536921a-694c-4c47-870c-9e40bdbca1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829d9dee-f66e-4eb3-abb4-5e96b7f5ab88",
        "cursor": {
          "ref": "2f062ec2-3283-4df1-b50c-14edead4dfe9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0aaf8a4b-a3d6-4b70-9bc8-454d5c03c819"
        },
        "item": {
          "id": "829d9dee-f66e-4eb3-abb4-5e96b7f5ab88",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "486c27a6-4a65-475f-b7a8-b9441d1629f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e8b55d-0dea-4458-bf98-c4d96d98c876",
        "cursor": {
          "ref": "93f9cb42-ddd9-4ae1-857d-26a8b74c0d77",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "25df1d33-6907-4533-9ecf-3334553521db"
        },
        "item": {
          "id": "60e8b55d-0dea-4458-bf98-c4d96d98c876",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "40efc635-9f39-4041-be43-d95bb48b5b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff7359f-4ab5-4890-9c47-327c7095b5a0",
        "cursor": {
          "ref": "5aef2f83-e7d7-47d4-9d63-489635290fd6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9c14e6f7-fea4-4c5d-841a-f6d15d664a64"
        },
        "item": {
          "id": "0ff7359f-4ab5-4890-9c47-327c7095b5a0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8eb972e6-bf5e-4a1b-8efb-fb6af0a0a266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ab97b-33f3-485c-a40b-d202591d9579",
        "cursor": {
          "ref": "367e47b9-330f-4507-a40a-a4df698f6db6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1cf191d5-b391-4677-bc3d-5a0026482464"
        },
        "item": {
          "id": "8f4ab97b-33f3-485c-a40b-d202591d9579",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cf6492c3-efa0-4952-a607-bb8efbd89a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84564a3-ae88-42fe-8e57-48d2794100ed",
        "cursor": {
          "ref": "994008b4-fc19-4195-84f0-3f8d35bc8888",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "503c7559-be2f-4409-b135-38f4bb7d9a3c"
        },
        "item": {
          "id": "f84564a3-ae88-42fe-8e57-48d2794100ed",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e96a5100-db40-4a0c-b5d5-ef0f6d2df4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5cd198-6719-4b46-8e49-021c0a632130",
        "cursor": {
          "ref": "07a16ee9-8e4f-485d-a3c2-49cb4a0b64a9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6a9471c8-9f36-48cd-a42c-f07dfd6234ca"
        },
        "item": {
          "id": "4b5cd198-6719-4b46-8e49-021c0a632130",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a68b0735-ca35-4caa-9e44-c1617c7427ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36481267-cc1c-4fd0-bdb3-f86dbd127b84",
        "cursor": {
          "ref": "1ccd00d2-b179-4d82-998c-f40c818d82e4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fbaa0351-4679-46d7-ba93-912aeffe7d94"
        },
        "item": {
          "id": "36481267-cc1c-4fd0-bdb3-f86dbd127b84",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a91161dc-7c04-4452-9e0b-909d63a8f778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad4222-442b-41d2-9bc1-252df2fc16fb",
        "cursor": {
          "ref": "be332f02-38d6-4384-84ec-dff8a4a019f3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1f0031f7-6e8d-4078-931e-63eb69106184"
        },
        "item": {
          "id": "9aad4222-442b-41d2-9bc1-252df2fc16fb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9a8a4c02-bdb0-4a55-8904-d59eb160895d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d5f98a-f0da-4ee1-bf95-85fe581edac7",
        "cursor": {
          "ref": "074b5f39-62fb-4563-b5b4-7dce37c88b5b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "50d822a0-4f77-4ac8-bb5f-136ab3cc07e3"
        },
        "item": {
          "id": "26d5f98a-f0da-4ee1-bf95-85fe581edac7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6e1bcadc-4b35-493e-af71-9651992db6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe91d2e-b82f-4e41-9e22-a0ff4cae2401",
        "cursor": {
          "ref": "1680452a-0d89-4735-a9f2-dbcbab6d7766",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4ac54eb3-ee4d-42ce-a43d-0a9259103832"
        },
        "item": {
          "id": "0fe91d2e-b82f-4e41-9e22-a0ff4cae2401",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2e0653a8-a1ad-4019-88d0-3cd0772d1baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e9db7c-eeeb-424b-b45f-21bb99734106",
        "cursor": {
          "ref": "d069597b-ddee-428d-abb6-5fbb84230a3f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3773fc8a-88ce-4467-aa2b-9c048ec3764e"
        },
        "item": {
          "id": "d2e9db7c-eeeb-424b-b45f-21bb99734106",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b34eccfa-9d7d-4ca1-8292-b21a199c37ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1c2739-63b1-40f6-b443-c0f3f31e0209",
        "cursor": {
          "ref": "69d53000-e944-41fe-8826-1e73337d6cab",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2e487102-ca97-4321-9584-50800b7b85e4"
        },
        "item": {
          "id": "ca1c2739-63b1-40f6-b443-c0f3f31e0209",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1fcfa461-8b4c-4d7f-81aa-eab980f2e56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8887344f-5d96-4e94-b2d2-a57a1e09ec1f",
        "cursor": {
          "ref": "2fc18ba6-b5b4-40ac-9bb2-e5fe30976ec7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8eab8644-4d85-44ad-b59b-2d3fb6b681b9"
        },
        "item": {
          "id": "8887344f-5d96-4e94-b2d2-a57a1e09ec1f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0f1a9b9c-8b0e-4f8b-8d81-c2a58b827e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf1972a-452e-462b-8956-9afc6d91b8af",
        "cursor": {
          "ref": "35f6f129-2c15-4141-b4cf-80ba4d4e8966",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "654c06a5-d62b-4a4b-9cbe-634c0eb2b003"
        },
        "item": {
          "id": "3cf1972a-452e-462b-8956-9afc6d91b8af",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ccd5c56a-1be4-4819-b479-879679f44ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baee3120-0164-4359-8261-06668dcae299",
        "cursor": {
          "ref": "0a3287c3-09ca-4c75-ac8b-896947d00cdd",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5be7d1ef-3bb5-4e92-9e51-742569f10bce"
        },
        "item": {
          "id": "baee3120-0164-4359-8261-06668dcae299",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d0212119-3b08-4983-a060-776c7a8232c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a016e99e-823a-472a-865e-6967fb1ef93b",
        "cursor": {
          "ref": "c53227e0-4ddb-4720-9a63-1abd4a38b89b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "76a21e05-a8df-465a-a83e-2f6e2485dc9d"
        },
        "item": {
          "id": "a016e99e-823a-472a-865e-6967fb1ef93b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a8baf5f7-67e3-4967-bc31-5708cf57aeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ad435d-e7aa-4c36-b4fb-24d092d60f76",
        "cursor": {
          "ref": "0df6b3cb-d30b-424f-a190-6eadc17d795d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "05df30b6-e0eb-4d9d-bca8-869f6df7d0d6"
        },
        "item": {
          "id": "07ad435d-e7aa-4c36-b4fb-24d092d60f76",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "502e34c4-7ef2-45ec-b894-6fc851afa262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98a626f-aa30-44fd-9314-924ea6c5f276",
        "cursor": {
          "ref": "9c0ed873-e57e-4b77-871c-739c6e031975",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3db80b12-dec4-4f7c-a7e1-e7e041b6a5e8"
        },
        "item": {
          "id": "a98a626f-aa30-44fd-9314-924ea6c5f276",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1073e86a-3ae1-45a3-9ecd-1304ca77c16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1ad0c3-c6c5-46cc-bdab-29c0ccaef3c7",
        "cursor": {
          "ref": "7cbea955-893b-4b73-8b81-2d6218ef5fb7",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d9516ca1-d0ae-4d9f-966a-73bd6fe07134"
        },
        "item": {
          "id": "da1ad0c3-c6c5-46cc-bdab-29c0ccaef3c7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f1b92d88-8bd7-45e4-9531-8335c5cd67b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e137c3-9484-4f01-88b8-7eb20c1063f6",
        "cursor": {
          "ref": "727135fe-79b6-4aec-b4f1-d79c0fb3b95a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e90bcc77-5864-44ae-a2d5-3e037d296ade"
        },
        "item": {
          "id": "a1e137c3-9484-4f01-88b8-7eb20c1063f6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "677632b0-587f-4d30-bfa0-d0eab2566396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9d7a3e-903a-46f6-b4ef-347b223d2fd3",
        "cursor": {
          "ref": "49ee5020-d1c8-4b8d-a3de-58e5111c20a5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e652e9e8-662c-4a12-9d47-11d209954bcf"
        },
        "item": {
          "id": "3b9d7a3e-903a-46f6-b4ef-347b223d2fd3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a8a95336-9c12-4460-9ac4-25502ae7514d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4611db1a-fa30-4a01-823e-7ef27e821eda",
        "cursor": {
          "ref": "dccd7f27-e06e-457b-ba26-1a801334b8ea",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d2cfd2a7-1648-4ee8-ad84-4af9bc447b45"
        },
        "item": {
          "id": "4611db1a-fa30-4a01-823e-7ef27e821eda",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ff378766-7bfa-4329-b76d-0f8477a43271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fc067a-e041-4a6f-8573-06f37f7c2357",
        "cursor": {
          "ref": "11ecb8d5-5fff-49f1-a2c9-00b3b93d1864",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "295b1153-901b-4f8a-9212-1bb07ff5ff3e"
        },
        "item": {
          "id": "02fc067a-e041-4a6f-8573-06f37f7c2357",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "99736587-6928-491d-bd04-003ac0471f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341ef91c-c6fb-4a4c-bf74-12d38486822e",
        "cursor": {
          "ref": "c169e9f8-4123-4c97-b9b8-acb0bffa34fc",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "26701411-25fd-47e9-bdb1-90446fe83c3a"
        },
        "item": {
          "id": "341ef91c-c6fb-4a4c-bf74-12d38486822e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b0abc9f5-ff45-4722-a28e-8f00b5867da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d3bf29-6c0c-46e2-9216-ead4e27ad545",
        "cursor": {
          "ref": "b38d8423-3b92-4563-a525-7f7affa45e9b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "93f5eb29-7ce2-4dab-8072-ab9a1eae869b"
        },
        "item": {
          "id": "95d3bf29-6c0c-46e2-9216-ead4e27ad545",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "95601f52-791e-441c-aade-9812d428b492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4610d5-49d4-42df-b7c7-43d8ea1b52f2",
        "cursor": {
          "ref": "a77f984a-8fc5-4942-b90d-3a6d57ce2273",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3e592409-e5e2-4242-aca4-d8b7bdd447b2"
        },
        "item": {
          "id": "9c4610d5-49d4-42df-b7c7-43d8ea1b52f2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "91798a6b-4c76-4f47-a0a3-fdbfed5ec869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3579f183-b3a1-41f3-b488-a69bdb30cc7a",
        "cursor": {
          "ref": "aeef5691-5d0a-405e-9000-29aa31cf2907",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1853f5c4-b6b5-45bb-a8bb-e9c019e4fa61"
        },
        "item": {
          "id": "3579f183-b3a1-41f3-b488-a69bdb30cc7a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "eed1a2a1-68ed-4fd2-9635-255fb6b8de5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a204079c-cb11-4ee7-baae-2856638bbc75",
        "cursor": {
          "ref": "8ca2d6f0-0fdd-411a-be94-87226a9a7b48",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8f8a788e-8b22-4483-bd90-f9f4bb60e3aa"
        },
        "item": {
          "id": "a204079c-cb11-4ee7-baae-2856638bbc75",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f2bbfcdf-be99-4418-b9d5-69cfb68cad16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4973c144-af11-459a-ab53-e06516c7bb66",
        "cursor": {
          "ref": "f99cab06-ca7d-4b81-8a43-e0ec1ac61687",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a0290be7-9447-4b76-b2b6-8c4234c38c22"
        },
        "item": {
          "id": "4973c144-af11-459a-ab53-e06516c7bb66",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6c8a09c9-feb6-4b9f-a5f3-d3adfb866219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062725a7-fc84-4e77-b92f-b2df8e06e3a3",
        "cursor": {
          "ref": "050f7d64-cee2-4a46-87d0-ae83afa58c5d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ae7c9695-7d58-4f58-b66d-9c9cd7f9958b"
        },
        "item": {
          "id": "062725a7-fc84-4e77-b92f-b2df8e06e3a3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "81c39b37-f992-4f66-9e33-42a5d3bad75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84984a1a-b63a-4205-9549-da7eb760d54d",
        "cursor": {
          "ref": "c0a8cd9c-8f9b-4fcb-9df8-4ab66d5efd04",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d7475e72-f606-4745-87c6-bf1a357cd29f"
        },
        "item": {
          "id": "84984a1a-b63a-4205-9549-da7eb760d54d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5a38ceb6-17dd-4ee0-87c6-4e5d89246f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f150988c-c4b3-42e4-a04a-181536a30a24",
        "cursor": {
          "ref": "495fdb7c-72a7-47ea-b9c8-797d6da22a42",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "365dcc13-0aa1-405a-b469-211d8ca9ca59"
        },
        "item": {
          "id": "f150988c-c4b3-42e4-a04a-181536a30a24",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fca80eab-0aaa-4979-9e42-8a70d7c558f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f829d192-fb67-4fd4-a8b5-708e2b30439e",
        "cursor": {
          "ref": "f9d83fc8-8eb5-499e-bbf4-2be923eb09bb",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "578f5e6a-bf91-4bff-a6a4-5266c576a86b"
        },
        "item": {
          "id": "f829d192-fb67-4fd4-a8b5-708e2b30439e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5bc5fc09-6436-474a-b606-c27134616591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94d8ab6-d6d3-4ef9-a5be-a437d2a0b999",
        "cursor": {
          "ref": "6f948945-3000-4bd0-a330-10080721091d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7922171e-1b7a-4a9d-bcab-af5c8c539d11"
        },
        "item": {
          "id": "b94d8ab6-d6d3-4ef9-a5be-a437d2a0b999",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4bf2ca22-8087-4b23-88c7-227a41967ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62887e5-b537-4503-99d4-9b21465ffe7f",
        "cursor": {
          "ref": "aa404b51-af96-4b43-be08-63925954306a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8e49a70c-9987-4c46-ae08-f483a3671dac"
        },
        "item": {
          "id": "e62887e5-b537-4503-99d4-9b21465ffe7f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7e24dd73-e986-40eb-9ddf-3b8ea664fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dbb7e0-eb0e-466b-a30f-bddb6dcce214",
        "cursor": {
          "ref": "db8738ca-67bb-49df-8a29-fb6101cdfdb9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ce60afb2-c47d-45b9-9be9-3ec943d8d090"
        },
        "item": {
          "id": "27dbb7e0-eb0e-466b-a30f-bddb6dcce214",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9dc9c293-0307-4a12-82af-0a62c5525f77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2122f0aa-f81b-466a-ab5a-307a97cb81a9",
        "cursor": {
          "ref": "c8c90e92-31ea-4e81-9f97-ca9fc725fa51",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e9daea9f-8dea-46f0-b217-97051fab22df"
        },
        "item": {
          "id": "2122f0aa-f81b-466a-ab5a-307a97cb81a9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8a3f4d87-3bb8-4c5f-8f89-a6357b04f121",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ce870e-5c83-4500-99b5-8fd96b0be0e2",
        "cursor": {
          "ref": "ce323fe8-e1dc-4626-b5bb-32fd6686dadb",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b5930c6a-f4ad-4e9d-b600-cf2b4107131a"
        },
        "item": {
          "id": "43ce870e-5c83-4500-99b5-8fd96b0be0e2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9c622cb1-8a31-4c7b-a7b5-8228246e4ac7",
          "status": "OK",
          "code": 200,
          "responseTime": 3507,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb3cb7d-0840-4226-8774-8ca23db017b5",
        "cursor": {
          "ref": "e0b77ac3-7985-4604-90dc-1df1120ce76a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5e01c7ed-cd56-49ce-8ef9-a261c431a348"
        },
        "item": {
          "id": "0eb3cb7d-0840-4226-8774-8ca23db017b5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c0567a24-2116-43a7-8cc5-b62ab0111fab",
          "status": "OK",
          "code": 200,
          "responseTime": 1985,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4bbe2c-0c9b-49fe-9d3e-074e8c9fc730",
        "cursor": {
          "ref": "8345c043-60af-4389-8841-e345f514cbca",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2be07788-b541-47e8-9493-da18252cccf7"
        },
        "item": {
          "id": "2b4bbe2c-0c9b-49fe-9d3e-074e8c9fc730",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d4a1550a-dda5-42ae-bd41-ed5b90283173",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4bbe2c-0c9b-49fe-9d3e-074e8c9fc730",
        "cursor": {
          "ref": "8345c043-60af-4389-8841-e345f514cbca",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2be07788-b541-47e8-9493-da18252cccf7"
        },
        "item": {
          "id": "2b4bbe2c-0c9b-49fe-9d3e-074e8c9fc730",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d4a1550a-dda5-42ae-bd41-ed5b90283173",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11888da6-d010-4c6f-bb59-fd71a73a4aa9",
        "cursor": {
          "ref": "92e4419c-2c97-454a-93e6-97fa4ef5471f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d835f739-cfdb-4723-97a4-b177bd54a68c"
        },
        "item": {
          "id": "11888da6-d010-4c6f-bb59-fd71a73a4aa9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1e6221fe-8bec-4383-be0a-3574d54aef5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660f5984-de07-4c60-a33a-494b75de4946",
        "cursor": {
          "ref": "3bbb5022-3c3a-4066-be2b-56a8304acf58",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "03788f55-e942-4cd6-a8f0-617224f50ef1"
        },
        "item": {
          "id": "660f5984-de07-4c60-a33a-494b75de4946",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5d760269-7e35-40e2-8ad1-471115690c3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}