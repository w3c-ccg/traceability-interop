{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0adaa11d-4256-4392-b2fd-a11957f95143",
        "name": "Clear Cache",
        "item": [
          {
            "id": "26bb1c2e-121d-42c9-95b3-0a05120e1d22",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a44103b3-ceb0-4b7c-902c-0905dfee8d0d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a6eb1924-1388-4bff-b99c-855806ac8214"
                }
              }
            ]
          },
          {
            "id": "aedefa37-2552-49f6-8706-67197944bd16",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e0fa981-a319-4de3-af10-e22a28d4370a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "432199d2-304f-4864-8881-5ac2da0e90e9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5fbebd0d-3966-4322-a9f2-a28c23f7c3aa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "59d6cae4-bc3b-4f0d-a015-2137f769f2f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a245d92-4616-4542-9c52-ceae1610fb9d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9493ea37-ad1c-4902-ae63-97934117e66e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa9c53df-e865-458e-8aea-e141f7c62cee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b46beab-4396-4040-a519-8cf7776ece47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c3b1ff9-dd21-47a6-ab4b-4398fceb47dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79660374-bbee-4d5f-9d4c-bfd737db39e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fb76614-2d59-4690-8696-c8c23622cc2a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c65eba90-88f5-4ac1-bb0f-002cfb377a8e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5c0d74df-5a4b-41da-be60-8ca12270b844"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "776af5c1-363e-4cfd-ba4c-9819a9752494",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b94413d3-ff61-4635-90ae-c988536f5be8"
            }
          }
        ]
      },
      {
        "id": "21a1860f-0f5b-4f59-a8f5-5d9daef13d5c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8708d978-47fb-437d-8712-eb8ee2ac2da1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2ee6656-a4ef-4bf5-9697-266ab8c68d8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4770f353-e647-414d-a428-101c7b575936",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276dfe6f-3aa8-4aed-9d40-10ff25f49013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32ffadad-dad6-4462-b9f8-1808cfeaa0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfa2075-9572-4e16-934f-05ffcab7fa68",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726891ba-bde8-473b-8275-4f6502cd8cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "241b3882-1de3-4cc6-8aeb-dcede6f4e8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e516d3-6b91-4142-90ae-bbb5977aa999",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3046ed-a0a9-4354-b53f-f2880f0381d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11352d17-7e25-4a03-a6d0-4a3161e9bf67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "128321f4-554d-4b80-b1f9-f2dc7b52c4d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd1af6c0-3fa1-40a2-bde4-41fa31155303",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91b72bf-2ac6-48c1-bc61-daa895e1f01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04885d1d-c054-4225-8c3d-34e4932db8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf8146a-c76a-4a15-87b7-5e4a2abbe93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1abf7c-8ba8-4917-9a18-fd84429fd33f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7ed13c76-ffe6-4445-9d4f-2ba1420d1371",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0fd49196-de0c-420b-85a6-ea2f0e8ebdc5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcf4bb26-c079-4319-80b5-df406e19a96e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2f206f0a-7fa9-4fba-b89c-4d364efc4f17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e06463a-bd7c-4f3c-8544-9ff8aec069cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "03b167ac-b365-430d-9c58-5fcc198c6398"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d7ae288-af4f-4884-955a-210189cd76c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f7d0b6e-262a-4b2a-9083-5c332ed54989"
            }
          }
        ]
      },
      {
        "id": "c6fdd51e-027e-4456-b754-cd89f091a096",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "04d3f235-ee86-4f2e-8d95-a88af05354f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5e92002-0d26-42a9-a279-96059257fa89",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "26f175e1-ebbf-4bc9-9398-1ecd8115c42b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1058bb7c-cf9f-4acb-928f-c3773a31ed43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954ef4ad-2efd-4b21-b28d-71f30bb9a6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c843e5-f11e-42fa-bad8-8767b5f979d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f59a74eb-477a-4252-82df-1d1e3ba80350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bd14ef-f9b0-488b-895e-edd34b19b32e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee347a4-964c-4116-b914-13cfe3fcdaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597ea478-8ed1-44bf-8d3a-9947440bdfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c5471f-3b82-4161-a30b-6b5a93424ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee04eee8-a33f-483a-85da-6c959c28c479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b01e316-2b7d-4f14-aa40-30cae7cd7469",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb22b6c-d5ca-4858-9285-6fff8e9f9f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05fe299-2db9-470c-a1c5-114683492b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a218d68-95ab-41bd-b7a6-85155cfbdda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae2343ad-1bd8-4bd7-b87c-ff4600a0b8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3266339-4801-499c-8c7c-af65008f788d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab787c32-8b0d-4c99-a82f-0c94ace61b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8820ff-bd01-4866-b836-2de36fb1013c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71356cbc-8bdd-4aab-add9-fc6e28857a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86d8e355-f5ec-45ea-abb4-1c971d470a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3eff70-50b3-47e6-b22c-6771ef9cf808",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e0f3b6-6f68-448f-bc74-eb2da0f482a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e7e237-cffa-4a39-b02e-5fc2e92181f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b59998-208b-4aa5-b487-994b1d6bc443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca0ca92c-7a06-45c4-8e6a-9cfb6242c51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb042c5e-4d69-441e-b9a5-872e9e6d60af",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a7c325-684e-4526-9aba-a7d67d1cee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c97f7ad-01e8-42a5-a4ad-23c8c8654530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6584a47-e52d-41cc-9d58-c22fc98632be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbe2139c-e4a6-4bb9-b4b8-a3caaca9d65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fc18a5-2404-49d1-a236-a15de8dc5512",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714f0ccc-f272-4334-b9b2-3da65e645fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e7d26e-3b62-4f62-90fc-817814eefc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5852350-c23d-485b-9a24-3862c3de97b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02772377-0387-4318-9912-d4d862e2c69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44464758-6aca-45c7-aa5d-b8437012e76f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80d1c00-e873-4b29-9569-a758c9e1c60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf7939d-4be8-439a-af1b-1fd08c74eeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cdf60e-0e52-4057-8925-16ee2b29dc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "807c0ed6-113e-41aa-8193-cb9c966150c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43666128-df31-43eb-ac22-52fe46e4978a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8668fd0-639e-4c2e-a519-bc8b70b22d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5735681-3224-4559-89cd-995f54141e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8b7503-7d22-492a-99b4-500795ace6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d790a7a9-f843-443e-a8c9-67c4d5331e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702be81a-405f-4ea1-b5c8-bab576a366b9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac2d31c-2288-43d0-99f7-0069d07ee3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ba4904-21de-480a-bb16-f311fc02be1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabfd56e-464d-4cfa-a665-2fbf8939efbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b5e18b7-ebe2-42d2-8f90-5fba0c9af905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637b7b59-5fcd-487c-a69a-b80d08642dcb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0ec0d1-804e-4f72-aaea-27d1d6128bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232009b0-e8dc-4624-a8f0-c223fbe738b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82124b3-1160-4e6c-a79e-1dfeed9288cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e70a19ec-b439-46cd-bb17-214d83215ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7ec653-888e-4490-baad-1d0de66ca976",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2d95dc-4c32-4ef4-bd0d-fd8171bc0ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f97d9e3-114e-4d8d-8317-ddf508ce8b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d24c84-cdd7-4bcb-900d-c3358589dd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff4576e-51c2-4ba3-b785-958d5eadb213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b0fc33-1027-47e8-8eef-477be49ad575",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289b6c39-0d66-4c9e-bd09-7a42cc6d5ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d911ea-503b-41c2-a65d-6b0cd25b4e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65e72cb-e878-437c-87d0-93d9550e4eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e5a10b9-dc75-45b1-af59-daccc46f7a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e3592-81dc-47fa-bd59-75756b13624e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33534ec3-ddcd-4e88-a6fa-ac7125ad7842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0790421-3ebf-403f-8941-66b669ab505e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76e4122-d0cf-4fc4-9e94-f786042d64dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc9ed56f-178d-4fef-bb76-54f29353d18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd02c17-e82a-4107-a128-c2c14b43eae4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53973a26-892e-439d-a554-0bbe223b977d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77422fb6-0e99-489b-861e-76ebaab5e6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de485e7-865b-49ae-a87b-6cd842368b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e519f8e9-9e35-45c0-9b8e-54e4cffcc6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94265384-92bf-4f50-8c76-d1ff3c754def",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1bd0f6-b900-4471-873e-5a43783f16f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78a1d19-8c62-43cb-9f6c-735e5a3f03bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63c1878-e169-4432-8c27-bc61110681c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cca97dcf-b3f7-4431-b3de-e04871e8bb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636a6191-4bcd-489e-b364-6b68f7706b20",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffe0931-09fc-4a73-a8fe-45c7f6aec560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54680082-0cee-4024-86e1-6ba4a928aef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a023af67-2b11-4028-9f71-373d1e210f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a44db3f-dc90-4a0d-b910-07b016b2dda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc30259-5f08-4088-ba9c-3dba3b8cc054",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7e0758-932a-4b73-a1fd-34ea4e09a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270d1123-1563-40fe-b381-90e8c87bb935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321c180f-eb03-4ecf-ae19-4e0a60b8037f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a2f79a-0137-4a83-9608-c01994d05567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbe4970-a00c-4fe8-9460-daf485cce8bb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e0a20a-eaea-4ea8-97e1-70aa48225520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f343e75-1a41-426d-b5e7-c9c9bbc02938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c905c9-6667-43fb-a458-ab66a3c8b1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8ef56c-2571-4ba9-ac62-2585fda31af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760047cb-6000-4bcc-ad83-7c549a0aeff7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f1d806-1744-49ae-9f98-36eb77ddcb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806d7e58-fb28-4a1f-b2a4-e09db03ad66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44477dc2-1030-4fd1-8ea1-1225ceb73a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5344f2-45d7-469f-b5c3-a5b380ca5c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b13531-e35d-415c-9427-28df4375f3a8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa565bfe-c85b-4e0e-95e0-84998561e63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1779e738-5d3d-4d4d-b284-3bc96bdcb906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271550de-ee4a-444c-b325-5b28c0a74a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "086b9cba-c6a6-43cb-a896-cc2dac927abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df9894f-35c8-4794-bcc4-3987109b63e2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cab058-0076-4d66-b703-607d1c66bda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62c6c82-0ce8-44e0-bdbd-9140526353ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabdd417-da1e-4e36-92d7-3142a74fb7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41d87a46-d89e-4858-97c1-792e57442eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012aeaa4-1004-4c98-b71e-b3ddbb38ae2c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2bb4f9-ef0b-414c-a4f9-374ab882f9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427519cd-0356-4341-89f0-d89148934c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3008c173-da1e-43ec-a1d2-1f670e5088a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16a92edc-3aca-4b43-bc06-86f1c95ea783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f315ef-6c48-49fc-b428-50f58799c078",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab8d434-6905-4293-be46-ef7646305f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5243249e-37f7-477b-b8f9-2c2201e4bac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6d0b60-4a31-4497-90a9-9c97fa463bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "772ffb14-e0af-4eff-918f-a1cc747706cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e41a5b1-36d2-40fb-9095-af4eda5b25f0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5f5fb6-adda-45c3-b4f2-0d5213e56bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786c0c8e-019a-4d52-bd2d-01b4c9ec48e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3918c64c-3385-44f0-a83e-74a0df4e376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2f3d99-1c77-4dfa-a7c5-771e746fcb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3831a96-b4f1-4b9d-a5f8-01beb4d48ec0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd01dd0-2928-4d2f-9ce5-278a6c52210e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8022e229-980b-405a-9a33-04930511bc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a43623-4131-4ab7-aeeb-fec76577053d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6324294f-880b-459a-9a2a-e305bc546b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a15ae9-5ca2-48e5-b80b-3240f132a57d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8832ec9f-9530-42b7-94f6-8be8d9671716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89156f4-ccc8-4bd9-80d6-94957738e54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d0068d-1a51-4023-b45f-79e52ef892f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "117cf5ca-4000-481b-a428-b35e8b2bd04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267ffca0-a4f2-4cc2-89a9-d1d0c1e4ad4d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb20504e-8bea-4574-9512-1e165af40e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8a0fc0-2f1c-477a-8f2a-3b5e5172e895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd95bd0c-09cc-46cc-b256-554b1f5f7350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c23457-b975-44cf-908f-e92629719150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacbf4c0-f97a-4790-9c98-c5cf073524ac",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4748ae9a-6bd6-4419-933b-9a321bd024c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7ed960-ac87-48da-b99a-3b295ed8dccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb87d044-be2f-45a1-af76-fdeedc782ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0061b7f4-d5ce-41ea-abf1-cf75e0ba287a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56450ba-d57c-45f7-ba1d-7258423a7917",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db729fc-9953-434b-bdf0-cc5ce46aaf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f2c31e-b588-49d9-a263-1986f59d1f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cfa61d-0905-4e1e-91e2-536fe2135a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "68a31cda-0c49-474d-ada7-ae9ab887af46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d615d4-8c6e-4151-8e3f-41cbd5eb9c61",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d743240-3f43-4a9a-9b63-13320234f76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c096f3-e010-476b-a5ca-e58c93ae320d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee925ef5-06ab-478e-b00e-cc1568b64f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba81c111-4cd8-4f4a-886a-53e581393625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab421ee1-8f61-472f-9fb5-c3b5da51b694",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30957612-9177-41cb-a99b-6d5e8b56faf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac9a37d-bb11-4cae-a312-bd152085a598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0657ec65-1da7-43ce-bd6d-4cbca2f8bf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1b1fc4-5791-437a-b57a-dee269bf31d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56453959-a3e6-4b81-93d3-f0a95bad7368",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea558313-3c38-4f88-a4a9-9ddb02c0105b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7bc310-917d-4509-81f6-947f78f3b66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d353d4-b3f0-40ac-9d29-ec23849a799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a61ee9e9-8d2e-4140-992b-2683096a6759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d1358e-e73e-45ed-b991-6f211b244b76",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6114441b-cb3d-4e9f-a8b0-dcea6f7f52b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b13510-a57a-4286-bccd-c653a0d2acc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbd31e9-6768-4155-b7bf-04351b3f1133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c168a836-b04d-4c25-911c-a6c1ea897b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55469127-ec5b-4ec3-9a08-ac0493890bd0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4273af00-e009-426d-909b-a7a17c96cfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47830dc9-b333-4581-b210-34ccca1d7c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03df125-db0d-4397-b768-35138c1b8224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "968179eb-a6e8-498d-b8e3-88a44c13d9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08f2927-9bcc-4d10-88f0-55a92222d414",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bcd1da-6509-4435-9a83-90599fa798f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2225643-b79a-4b29-8325-0cea43a1678d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7a4d3f-7a05-4160-ae0e-26875bc9b92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea8ae42-ace2-47c1-abd2-b836c508b06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feccd986-7638-49b4-bcef-0bab6a5ac50b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c1b3b4-2f19-4a9a-8a72-04f0aaf2bb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6aca6b-d836-485e-bd8c-4f785f2d22bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfbac9c-8fce-4b34-bbff-8652b56a14d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d130328-8984-4054-b554-ac7a532c44ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1596c683-5a82-4d9b-8e0e-dc9c3532792a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95459141-61c9-4280-9c78-cb7449d167f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfd441c-de55-4136-af91-08d501977a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c932b7a-94ee-4bf6-a6b5-f315f94cc8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f934f8b2-8278-4249-a44e-569b6d44d613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c61b2ec-68f2-4630-9897-6a94a85c3bff",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52621b38-f96a-4b42-bfc8-7edbda65b058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84df0856-469a-4eed-9303-e8992efd8675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6674cf-0a4a-46f6-8107-f55f4608b14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf19660-293d-424a-89e3-28509547dd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac846f6-0be7-4334-b47b-e5f1a2d09bd3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5385d532-89ef-42ed-97d9-b0e5df64f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87aa176c-9622-4d1f-9dc9-0a9a094014c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a170d7d6-669e-44ac-8d20-1e703f86cbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9639f752-9eb3-4b3e-8b62-14f1803cb499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6fd735-d54b-4700-bad5-364c64a1c317",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee0ded0-6821-4968-b4a9-65e73a8147b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c57e69-63df-419e-9b28-b5cd801623a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb637fd-39b1-41c0-946b-9e48c18fff78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "397f5af7-0b91-4dd7-8a41-7f6ae466f5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f83d52-475e-4eec-a52f-3c02effdeb65",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c504013a-cb1e-4980-a5a0-c3189181032b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a9e155-b350-4b79-9555-991f74e39d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dca5e32-6b49-48d4-9a4b-5de81bad24b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6cce88-c817-4ac8-bab8-ec7fe4d8a802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4afe01-8dbb-4ea9-854a-9cafffc8e275",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8152ca8-34bc-4cdd-8a50-6a94b8c9d7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f76b75-7075-46a5-8c97-cd6807fa243a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1399a643-dc85-4321-8b59-60df42f7b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "657e4d78-580a-4b4a-8244-479a37ab8551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8bbfc2-b535-4809-8caa-974cb4b9c4c7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc10b91-9a6f-4d97-8c2d-a2d4b30da8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec5edda-0d05-48c2-b577-413c29e13678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9575c11d-1245-43a8-9c78-33325d270b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "571ed057-fefa-46e0-b67a-27385a2c3421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04578dfd-8ea8-427a-98eb-35ac916afe0a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07b0ffc-7046-4607-8a0e-0e975610e0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f5930f-e935-40a5-9d2d-9e72b3900dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3d16f6-e218-4d0c-bf65-6150a169517d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bacc5df7-1262-48bb-af8f-d1c921a6f16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ab682f-822f-4bb9-8907-950a4a16c91f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c176dcf-b665-4291-b6e5-1ce211878f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcd40cd-559a-4645-93ec-5a18e46036bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f639cd-f43d-4e9c-ba61-dc8df91e8dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6a7ec1-00ad-4a90-9659-9f297d889309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22d97ca-9525-4497-9393-c26c4e4ff440",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64600379-5696-4dfc-9bb7-e7dbddbfcfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063bd4de-4589-418b-9540-96708c33a525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a9cbe3-38f2-48f7-bd39-874c69c0332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a35332a-6d8a-4b36-8b4b-f0f6aea075c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf3df86-b98d-4fa2-8494-7f6bde306e8f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a66a5b-7d5d-4a7a-8daa-809f42d6ac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b05f317-400f-4d76-88b9-953128560276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41da7bd5-883e-488d-9681-e24cd8476899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7499767-3261-438a-b6b6-1399ecbf3116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126b418a-9166-4b17-9de4-c0eefbff12ab",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba946cc4-ce88-47dd-88e7-bc88400f1643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c2fe65-2285-429a-94ad-17c4f678938c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444014ec-ad9a-436b-81cd-e43160aa25c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfa3d08-055a-422a-a619-79e6054d0678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f66d9b-7fc4-49ce-9d37-aca39dcf351e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01310053-1686-48e4-af30-965a9b08ace3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1903e0-209d-423f-bcd5-030017ca4746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0554bf1-6fa0-4b07-be90-962153783f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43caa779-32b8-4a5b-bce8-6dcfe745af97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f05819-b81d-4bae-81ce-0ec9cd339957",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcaccc5-c880-4fe4-ac9d-2b9f1481c3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12663a1-24d3-4571-83b8-1d0622c3f702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63cf194-8b8a-459c-8371-6b41d85234fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ef4d43-6304-4d47-95d5-62e99b79dc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b558654-03f8-46c1-a0ea-5c0633653342",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf82d73c-c761-4bfd-86d0-1033109379ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc61bd1e-bc8e-431d-8c07-181feb9c35d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec24458a-737d-40ba-879c-da200c10e25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9f9de0-639a-4f05-b950-240a95ef607f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3446d09-82c8-4253-8a72-57d058041093",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbd6e3d-1ee9-4d77-a44b-febb4fe8d491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555eeab1-5292-47a6-b3dd-d69878267fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83063e9-9c5f-4925-bb0c-baa83f7f5625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dac60de-0aec-4291-8a13-2a01c1954cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff01cf6c-0986-4a9a-b8bf-fb071237f6ae",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033e110e-1ce2-4745-b418-cea6a2c8701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6abb168-fc8b-4689-b5eb-731bb117651b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5576cf4-0faf-411a-bbb6-53b15849858d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b530bab-87ed-40b0-a9bf-989d3a0a148a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc8e304-5398-4e74-a13b-8e820f94eafa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c872f53-35c4-4431-b920-00dbb170d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b9ab46-b2f0-4d99-8fec-67de7d256932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fca139-8ce1-4f06-b870-4eb26e565763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7685bb-a81c-4b78-9f6e-1e66ebb778a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69152575-f4e0-40a4-b694-bc3f6980c073",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a29d6e-948e-4726-ae70-0b3495f9f476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21158eb-b94e-4aaf-a07b-12d636984ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44d5350-2b73-4db2-96d3-63c017feaa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dded5a08-ae84-4657-8a90-6b01ecb5c1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a46f74-d006-47a0-bfba-e0a3c3f4c031",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0407a8-05e5-4ae1-90a7-e53fc59d4f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ec46c3-cd4c-4b5f-848b-08b6ebde1864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7858bc56-583e-4bd5-9880-6bcadafb83fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed06b48e-4c67-4deb-ae20-e231ac2b5941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32c80bc-2367-4e3b-a11c-ee0b0c6a1827",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8817fb95-7b78-40eb-9b12-71cfa78955bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616cc91c-20a6-4982-bed5-632979ba5e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1b219c-750b-4d9e-b122-33553cc736b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bc18b8-ba03-498a-a7fd-4c66cc56e657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f37b60f-dc73-4e38-b0a2-e79312661566",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e517636c-c054-4e31-8fd4-ff01b1503c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2b9d89-4143-4fc0-bf81-a1d6e718de79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e939f69b-f6ec-4e21-b2f7-23af740867e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29d35e77-6605-4fec-82c0-ad3932ed23cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974baec6-3607-495f-9e45-61099b5e6060",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb667c99-be33-4ff2-b186-a30d94c16efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a40c3e9-c94a-4efc-b5d5-c1b376b5b2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dcf52b-474d-4646-abe8-b1c0834ca382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87469194-950e-471f-9ff4-6e4dc7b7f6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8bbb37-ef0f-4e75-8e01-2235fe7cd98e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576329d0-43db-4ad0-b3a3-2b82cc48dec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a4207b-9ff4-4ea2-9b8e-dbd1c0864315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b3ff81-84a4-4994-a919-691ec01a505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a59c23fe-73cd-498b-a2ee-ce5df916f38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd0f260-7b35-4770-905b-2c52d923352d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95a456b-ca6d-43ed-a3ea-f8b77030e017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d6f21f-4299-4e07-b93a-d688215c565a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a215f98-342a-4ffa-bbde-967aeb1a77dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "de532bce-8a35-4c25-8761-c371432b6529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54832efa-61f6-4bc6-8aa8-caca5c82348d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4aadef-521d-4e08-bfb6-9733546f8930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d2ac19-c891-42a3-84ea-1eed5905ae69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d78fc5-2043-4d36-8a62-310ed8eb43ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "718a2b32-a01a-4eac-975f-4efd196f2c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f631175d-2ac2-4c1b-9973-4b867e43dfa7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c646abd4-4a04-4216-992e-6f094bebeef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea687475-8af3-48cd-a061-d0e7a4760d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6830fb-9215-4360-8427-6c64d05b7a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a89c13-d5a6-4e98-b6cf-be295a22d556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c01b13-207e-4ee1-9409-d173d4918643",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1901f146-92a7-4487-82ee-f9695279f5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b93c4f-682d-4f34-aff0-28d3e8004553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d410276-226e-4338-a8b3-f64d1b5171b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af1cf6b6-84d0-4005-a243-0ac37d325595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67abf650-d9f6-403d-aa1f-92c2b7ef95bf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99306dc-f64c-445d-8398-9ad9f8796be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1cce2c-f050-4a50-984f-ac8b33b049e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab750d-e581-4869-ad23-63e769ee5eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbbca02-79c4-43c4-92df-1527594c21a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20223179-25a3-46a1-b6d6-58cc9f47aaf3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f92edd-80ab-4101-8309-b0d98e8047ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fee08e3-a594-402c-850c-b1e6a53581b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f8e1f2-14b6-48df-b7b6-358d0172cf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4bcbf9-c23e-4e7f-a882-a49214fb4ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4391b36e-c54f-424a-951e-2580e5202465",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936ccb63-d93a-459a-be9d-afd2a6604a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d842e9-29bf-4429-8196-a5c2700dfb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b4ede2-f9d4-459e-8ed1-dc6db957f5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb96692-92f4-4aa1-be81-2939a95cdc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e2acd8-3ca4-4199-b4cc-19b8b39743e8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628a8391-1114-4e40-9374-d8f175b87c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ba2d30-c0cb-4016-b31c-4890813beada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262454e9-4e76-4204-b339-68865dbd448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c038f2-e865-40a5-a371-aa0a574eed75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb27c14d-0340-44ba-8669-959eb4d16c0d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7968388-da65-4574-8fbd-3ac1fdc4840a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae6c891-ced0-4c41-a364-69767c9f96a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5f4769-677e-49c8-89fc-e54667643bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8d48a4-a2df-42c5-b9a7-e1c4b624c143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee78902-6aa7-463b-933c-4479b467e749",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3751c8-6ba0-43b1-ae68-038dfda1d908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1565b97-6078-41a1-91b5-b244b7a50f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37858e67-2ffa-49d4-9c06-5ff5dc856a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "572db6f8-6f82-41a6-b529-a11b77087071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1f8096-6532-4495-8f01-211c79baac6b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3944f5a1-49fe-4401-9d89-437db4190ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4ff91f-97ca-4d41-81ec-ae04fbe0a411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9ab4b6-96c6-40bd-ae39-b8c480fd0452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "397f6071-d654-43ee-ad7c-f1733c49a65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47423d0b-e6bb-4c03-819a-a2305a3cf48b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98590576-d2b8-46fb-821d-f50526c7b6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4caea7c-01e7-4fb1-b23f-aa700f20b190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c54354-f7cd-40e8-9e01-cba27a51ef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "167e902e-313c-44d3-8846-85113120e5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca7f34f-e2b0-4a2e-9b9f-d497d8cebe78",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a122136-bed4-4747-8f40-153bb3810abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830d3982-544a-431e-af21-b06e9319bf83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51c71ae-6167-4a8e-b047-f26221248e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7081bf-1623-4140-b3d3-9d8db7125c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00263ee0-93da-4793-914b-f863e475ade7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132971e7-c57b-4d63-9491-542511215236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4b4e81-dec3-4197-97c6-8547e3e0a6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5533f2a-e8ca-4de7-b4fd-e8f5574b1229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "240ca7cf-49b9-448c-a984-b798ddcf8975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cd683a-deb3-4aa8-bc8e-b2d3d605810f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ce5302-8612-4fec-8126-1888185b1006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0089f2-ed98-4933-822c-1f7a49a30fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d52b41a-2fa4-41cf-aa24-2a0d11123e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "475ea623-20e5-4b9f-931b-8a77fb7b0cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8437c12d-0705-40e7-b8ec-334cb4229899",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb1d158-9084-4b47-bdde-9612f63de613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1551c1-3aff-415e-b174-564f94f537aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fa8e19-8bcb-4f9d-8d58-aafb29a184a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89910b30-d112-49e4-aa50-9aef55a8c0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba5e10a-4fd6-478d-bd54-a049b35d0f76",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac28116-3bc2-4771-a5b5-c5262366c097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a836ae-4521-40e4-9120-89087c895287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93671815-f745-4053-b383-df508a183f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "613569fb-7ae6-4ed8-8860-6e502f52496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93437f89-cad2-4039-b796-554f65fc4e70",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ebd99d-9a60-4f4a-8d8b-8ba7c3588b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378fc841-6e5e-4bb7-8418-4d09f72b61a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d134d515-a435-4f37-961b-321044de7fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37f1ad67-35d3-4a28-89a0-736b221306c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad0210f-d259-4c30-9007-e24a0a287903",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644b04a7-b2d6-4cdf-bb2f-1da36ed3f5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93409927-eb19-432d-aa3d-f33f185534ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40af138-5997-4013-ace4-a6e7cc4ffd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57dc61bc-b9d8-40bd-9c75-b8b1949218d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4579d5a-6114-4dec-86c0-23a3002ff0eb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24561d35-7755-4026-b7f1-84985aab03c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adce1b75-e481-41f6-b52d-640935b93499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb460b3b-da8c-49c6-9eaf-038f531e82dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20348eb0-c062-4fcb-b525-f09b76c1cc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2deab3b-92d1-4ba3-8029-d356067b366d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3674d9-a27f-4bea-914c-4be22ad7042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fae791-ec97-44b8-bc0d-85f6be7ddb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05466c2e-9466-4aa2-8497-857c2963ddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9774ff16-ca23-47db-9513-e82af1e5bf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75e03de-2ea6-4d8b-bb0a-baca23d86e2b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69524fe8-242c-44da-8997-d512eb60b0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2afa862-19f5-4d5f-b85b-e272a48bd879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0bda07-2d46-4b0d-b289-8dca0494554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee24d32-c779-4d93-add4-c1e66b503757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412324f0-6d17-46fc-b61d-ad72519e174e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6541b5c7-90a8-4d6d-a60f-f0ba17b8085d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c8a929-21d4-4003-bcaf-5b2774a7a3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4eae20-7660-470a-9123-c6426a9e25ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15072aa5-6bc4-4c5c-9bf5-e60b4a2cce12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6b5540-515e-4bc1-ab44-53b25290ba91",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57728534-8e03-44f1-9388-deec9f436354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97db0633-8b03-4161-bcf8-adcd7c64d37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f05b6c-9238-4dfa-a7d2-2dbe9ee19675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73d2d0d7-bb92-4dc9-9872-86bb2286ec89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5997fd7c-e168-4e18-9798-2dd71224667e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c5a07b-cf5c-4943-9d21-0cdcfe599e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d2933a-06b7-4caa-a608-504c1c7bce70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c375e84-a458-48c5-8f04-a65ecb71e51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f27e092-6103-4205-a96e-30f5de3a1726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb82c86-2968-4cac-8077-e582f4d8de8a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6a68a5-2b74-4215-9711-0c182f7bcfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936da1f7-7e76-400f-844d-3c2705412058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e75401-f621-4915-afdc-f852a1d0a278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c275ca98-611e-4015-9b3c-86542e1846e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07645d40-d05d-46e4-a66d-d24aea78d9d8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24f8f84-4229-4798-a15f-e0c79de85c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ddbd0b-a31f-45d4-9285-ca979660629f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128ee8ea-03ec-409c-a319-e7f8d937322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "307287c4-3aef-4941-bddc-d45568654d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4c959b-34ec-4022-b9c6-a30c94dcddcd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ecc872-783a-46f1-a4d0-72f58ea9f51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602d7b67-213b-49f8-a72a-a36ad947638f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfde7c63-bace-45eb-9151-e66abe7a136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c462a94-6c72-4887-ada4-12b52bad224f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c4b58b-62af-4419-970d-c5d2e8d52ff2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f27162-9c40-4b95-a57e-3d1f6915a803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a7928d-1c84-4f1c-b029-5154f654f3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81ad47d-953f-4a99-95e5-46c6bdaa1bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf775ae3-396d-40e8-b476-8da9bf33fc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b71c59c-fbcb-4ae2-9ff2-a6b1af9f4fdb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec67eb8-ba63-482a-9cb6-89d4495a3bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f0eb84-2616-4821-b6c0-9731778a10ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b4deb8-6a18-4bdc-b2ed-75de126a918a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d71e0b77-dd66-4b81-bebc-858fcfdadd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654c3b9d-f05d-4a1a-9019-e04a6df99da7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964978df-28f5-44e7-bf89-fa985c3d99ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "770b1743-bb59-4417-8798-996314f2035e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df373d08-1e8b-408e-8d61-82f09e55bbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf74c36-5bcf-4246-9020-ec70a088c8f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "164f72c5-4504-41f5-a11e-e598ab9aed52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1514157-1e64-4ef9-837f-81777300dbdb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fadf19e-9734-4353-9fee-636a14ce90e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48a66408-6d0c-45d3-80b6-bbda5607ef5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5270c95a-33e5-40f7-a0aa-0d88d87e201a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59f930cb-5994-47fb-8c87-bc68782f2482"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a3a3c98-3040-4b8b-8299-d38d6d9baa01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d7888de-3263-4206-b382-2887510c89d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62cbc49a-5041-4943-9a20-17cd44f8d637",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f8885c0-53c2-4942-947b-f80e1785a7a1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2eb4def0-2cc3-43aa-aa8e-888a01231796",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29a27607-4b00-4f2e-8959-fa20e8a7ed2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "165e5679-91d4-4bf2-a9f3-8a16bdb5f4aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "894020b2-59d9-4eff-b626-ca089d125304"
                }
              }
            ]
          },
          {
            "id": "cae44d8c-3ba3-4fcb-aa29-db952be31cc5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d79eac85-a060-4d0b-b8f0-15c2d02a1ba4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d2b8e94f-6b44-4a17-91c9-e2dc7e67801c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d9a67e-716d-4498-8cb5-662cbf07e322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "17b914da-ddde-4e07-b102-109175bd6da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ba2f9b-d3ef-431b-b061-ad7623c78a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4c84ec-574e-48c4-beb0-926b4b7d7501"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac86a217-6eaf-41b9-adad-3ad96ae3ea0e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b797a8fe-c526-4511-b519-0584ea61521b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dea427c5-9f73-497f-8916-6f76f420d7e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3a9e74b-2aa9-469d-be5d-76941d4cb364",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bff2360e-a14c-424e-91a0-dea49b1c8274"
                    }
                  }
                ]
              },
              {
                "id": "a12ba84e-36d6-47bb-a504-41cccecf3788",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1291996-83df-49f1-b590-79ced2e5e721",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8b1fa62-374b-4a05-a28d-9022880a4f31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8962a05b-a505-4f74-acbd-b4264c661e0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "39b641a0-c6f1-4fcf-b7f5-41ff8d4f13b2"
                    }
                  }
                ]
              },
              {
                "id": "ef501ab7-b010-40cd-931b-c0e091646867",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b5717b4-1116-42d4-ba87-04826de4527b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d20710a-a307-4ed3-b198-39cf50cab44a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd447b9c-0578-49c9-afa2-c8e275452886",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a88586c8-bb4b-45b0-8df2-3ec821877819"
                    }
                  }
                ]
              },
              {
                "id": "b935d534-179a-4f7b-80fa-c96682fa358b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1309495e-0a95-4cad-a69c-40df316bed8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00013646-fbbb-4ac5-ad92-b577769c8ec1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2235318-f709-45a4-96c8-b24d93afd1d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cb8b9dfc-926b-48b3-b445-3d34199dbf6e"
                    }
                  }
                ]
              },
              {
                "id": "6f58c4d6-5901-4527-8937-0a4ce53c064d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f095d51-757b-404d-9520-2ba987fb18e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fedd6663-62e5-493d-bb0f-b43841d0f875"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6292f9c-0d2c-43e0-933f-dda662636875",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4cb9f6e3-0e2e-4ed5-98dd-e2a2b13c0cc5"
                    }
                  }
                ]
              },
              {
                "id": "8583e83f-8589-4237-b2d1-7f326dca3a6b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80c77ec0-bf64-441a-90bf-6784d46be3da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f174591-697e-4201-96dc-fde6aa4fc842"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "913d34ee-99c9-4df6-80d1-c2cb4c547af9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42595935-a552-464d-8b59-894eef443927"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55ba5783-db82-412a-b565-7c7a5c3c8b86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ccb33a9-9919-4986-984b-b37ef32b1c51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69a6738a-23b9-47b6-93f6-8dae13542c9c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13b75d43-31f1-43e0-a00b-1c216cd664b8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25a6d29c-a450-443f-9e35-a34cd7128724",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c7ae9a0f-81fd-41ba-b7e0-70153621caae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "305fcac9-78bf-4187-b428-fc02376c1d1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71892ea6-8dec-4fe6-a8f3-0e080f83e395"
            }
          }
        ]
      },
      {
        "id": "38018a93-63b2-4154-b91b-d703535e1a58",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "82a4a3ad-da15-4603-8dd8-6ec9ae21cd3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13af03b2-dbae-405f-a495-0549314c922a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e31585d-c0f2-4d63-b3ca-c37733a4ffe5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b135141f-3e91-4ece-b0a3-1452496db4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b71261-a6d7-4291-834b-c631b6f82145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5440f631-b823-43a9-8d74-53e6fe7a53bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5cedf3e-81f8-4a95-a556-a0fada54b232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff5a183-4360-4e74-a227-1b33972333f1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c523f605-f3ad-4227-a613-01ec4c04ecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c560f84-fe7b-40ac-b000-a929e578a3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738a7455-2279-4466-8423-5f09a0701fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94429444-e001-46da-8bfa-9bbf49593a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657b115c-2e5c-4224-87ac-6d8ee632e04e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e641e77-6695-4562-afa0-8e1a9b522868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100f7980-d282-443c-93fe-20c49b92dacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d67583-07b8-4439-bc60-158995db8acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bff2576f-fa68-4509-9baa-731197e216cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454cac15-a734-46b7-91de-4ad69b720942",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758483d8-9d88-4d5d-86c9-4eb6640aaf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c967c40a-0b69-469e-8521-c829ec626677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e073413a-b0ad-410e-8be5-058f0c75f8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7044d2-442f-4309-9546-2ab162caee52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a6c25b-c88b-4696-bff8-80a48249a74f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9027c8c-d6b1-4510-8911-b46a71fdffb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d7a321-6a8d-4319-859f-96c575ee87ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b9cfa1-e8e2-4c45-b4fa-84710d419b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4defe60-9326-4da3-902b-25661b2f4742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdaebd8-3d96-4de5-b13e-561e6550b847",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6fe3bd-a869-4db8-9f81-f41160323ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75314ac1-fda2-403f-be51-3b6a70541aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a023729-da24-446d-a33f-d1a81cc9f0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b416503-b4b5-4c29-8f2d-2adb4e1fbc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006de099-81c0-4b4b-a4f7-cb775e8c7f74",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bffb7d4-9602-4d51-8d88-ccff98e9522f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4ad14d-a31f-403b-ad56-f0a1bd0d0587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b42c2e-5044-4145-91ac-335ff7d1d660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "084802b3-8439-4239-905c-929bbf8e0208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc0b026-bb9c-45bd-8e63-278461775006",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694fc08c-6566-44dd-ac2d-907a72507149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdd09b7-d73e-4e4b-998d-e9961675438d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d8108d-82cd-4e54-8a06-0e5d990a3572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60125826-96d9-4d22-a6e1-256e42be7194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae60c78-2665-458e-875b-b96383f676ce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2078bfdc-eaeb-4a34-a3d8-1da111757f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec98b66-0525-4e87-a411-fc680c4093dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a1ecdd-5db3-4624-b540-6f7d60e033f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5a4a19-5349-471d-8cf0-6d1f2167d4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bee3794-a9af-42ed-a502-6005e15d1365",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22ace72-a3ef-4ff7-b7ec-706108527151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5bbe5a-f5b4-4ed7-9db5-18c8f73e3084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9b0aab-3da3-4a2a-87ad-f1bd00dc749b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c948142d-2a34-4cc9-bb2e-3a364f85f8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74232f1a-8fd1-47f7-8c4f-25ae446de10d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37ea3f3-5bce-4ac8-9fc5-4e8d1ba72df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989c0522-f942-44dc-b991-c03f4ce535db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e70e4f9-7c9a-4431-a746-48a1d71a1ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "716df26a-399b-4ff7-8e31-9fd64daa4aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4332fbe2-ab35-4d44-9852-17aaa5a37671",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fb6dc0-57eb-4265-ac4c-a162741928d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5116132-f991-44eb-a041-cef7ce0bb11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3756c0e-da23-4747-be42-e37408d65d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66b7f506-d229-47a5-8ca2-c9603d4efc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed17eba1-913f-49d9-8066-26e54e6408f5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd152e7-5d16-4c2a-9f6b-4c2f31c7aa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1594f06-53cd-4e7b-9d59-ee427e446e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd3bf0d-cec9-4fde-9bea-c56c64b218b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9d0e8b-58e6-461f-980c-2af8df1b7b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f70a9cd-fef2-4ce2-b7ea-46bacd93e3ad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ab86e2-03f5-4628-9943-5d76e55f9f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42aa73d2-0614-4759-8325-8afd75c6650e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f717ee9e-015b-4797-9308-94c41fc706d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc63a2e1-9f74-423e-9ab5-47a4d1f2e8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54614545-ae64-460a-b72d-8e2f153a9db2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb22579a-021d-4e60-ad67-36c1e22482b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95c9949-8c23-4a85-ab22-dea8ec9a81b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8109127b-999c-4115-a4fd-d973b6b350ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "659a88c2-a4fd-4b63-8749-6c22cd655457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76f12ae-e93c-4556-b4a3-836426e7c178",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef1afe6-36cb-4dff-a03c-e20075e6c42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8ee22b-42f4-4733-9676-484b2acbd71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cebff4-d883-474d-8b4a-ce00e9bd291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8d710e-96cc-4180-881d-6994cacf8854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af62d6c7-5b04-4ce6-80d1-67cdb69e15b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0be44d-dbc5-4844-9688-6c5ad9db3279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47148ea4-5230-4dab-91c5-a819b241e663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62345f6f-996a-45e5-acf4-7a2c9f680d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4041c5f9-f7f5-48c5-bd68-d3bf1af929a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483ffbb4-132c-4e85-aa76-7cf94ab8eaf8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64463e85-059e-4c42-a910-f583a85eea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8e8b32-d973-4385-b653-eaef0be769db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9263ce-92b2-431a-8808-0adbe0809045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6a2c9c-a4b7-4966-a232-15b1227af664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad88d41f-7556-40f9-abe6-b79819eac1f7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e79c428-0bb0-4f16-8014-7a917c17e84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8a1226-be06-45a9-ba2e-4188ffafb823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947c103a-1db4-4e7e-9f09-c00f1efe74b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e84f0c09-39b1-4062-926b-0aa140190cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1256528e-41ee-4c6c-be2e-e5f28bfcc2c0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d57957-70ff-42de-8ced-a1138764e5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ba0dd8-8919-4ecf-9bbd-33774ba1e0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035965e3-e3c5-473e-a9bc-d11975aefe5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34aa366f-7762-45d8-a0b3-edb922a2632c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105edc4e-0a7c-42bd-b429-ad5e01d83b52",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50780a8e-d4cb-442f-b687-1552c0788e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2528b6-aa26-49ed-a091-8910a83b0e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181e1f0b-89e8-4752-82e5-804907a8affb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e4961b-b10b-49d8-8aa3-b8279f8fa3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5d4fa0-a0b9-4a15-a67a-ce6080a0da84",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d382ff5-a365-4bf4-8df3-40678b14442f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f306ac-852d-4997-8a28-921deafb068d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28609e2a-a2e4-49f8-b12b-631e25353e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afb2677-7abb-40fc-ad7b-de36bce63189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6fe2da-6ffb-4206-87d1-01db1e3d8341",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a50617d-6e1c-46e0-81b9-2297efc87bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad7e289-6f67-494e-9c43-911131ad48db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66535fea-ea6b-4f83-a9ef-5fe3ec4c2f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bcdcdb-3118-4af0-b436-93c577d33154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af9b9b4-cfb3-4b93-b3b1-775692c13adb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cde4cc6-3af9-45e7-8a0f-770d474f5f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2d5225-ba87-400d-9256-7052e4595053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ac8f7a-568a-497e-9be1-8e22195f0025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c636300a-cbc5-49b2-aec1-c9a1cb36602a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff26a6c7-6023-42fc-8230-54ffb7612f59",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1065ba3-aa70-4766-90e9-f1ea68ec8ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b397cd48-a98a-4fb8-a8ca-0e5eefe1f612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae586a3-c061-40bd-9397-7415ba28621c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b789759-4e0b-4388-aaa6-02a364e12715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24b277f-1cee-461e-886f-be90ed74c7a1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32db2ce-6aa8-48ff-96ed-c88d252be45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f51f45b-08e1-461d-a24b-59d43073864a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f97474-019a-4881-b55e-e35483dca58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "517f12c9-c404-4341-8157-5959f0ec98e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0469ea-c19b-461d-835c-99b24ae0429c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183494de-e3b8-450a-a8ae-7ec800eca33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3762d1ac-9fb2-449d-ae11-7f9745f0aedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e5cfa6-3bc7-4ddf-b1b2-05e4ea8f6f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd68bfb-7988-4a61-99c0-6bf7c2102d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd6d3ab-ac8b-4ae0-9c52-b1adffdfe42f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d578b950-5ee7-4289-9a67-9dff4a5215b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b74c8d-5270-487c-9ff0-6735602f0db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f61f85a-2c5e-42f4-a121-bbc55f58ec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a2856c-b5e9-4e70-a7fc-fd8c263a1f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e29687-cc17-41ea-9521-16fcfac80c72",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e8d7f6-f39a-409d-a791-3550aeb1505a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746acef5-2a08-4117-bbfa-ce47fe265e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba5d76a-7175-47b8-94e1-bfc4855f83f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c29f3113-3572-4d49-b2cb-bfc8361067ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55b1c38-4611-405a-84ba-54f6b5af06ad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec24d8e2-e246-4cf7-8e6f-15d66bbf799f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f554b76a-06f7-4b2f-98b0-606503e427b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0304c2-3320-478f-a065-278b6bfbe856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87090df-c9d9-4588-89b5-5618c1684058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033d3669-e0ff-434d-806e-e0062e4c7b76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6265fbcf-8f13-426f-8b1c-e7e11ed34d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574bbacc-4fca-4e42-ac63-da9fdc27d857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44630658-4ec8-4932-9050-0e30b328072c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "760f0e94-7ee1-408b-867d-7c729b005470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff03853-c046-44e2-a63f-9411d3fc569f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af875536-bf5f-460f-a3cf-f38f9b4c1b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7009e9b1-1950-4c33-852e-7e6f4d61d63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b62e39d-14eb-43de-bd3c-215d50c79aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c256b6-c253-4b6e-bf44-629e15f0f1d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09396e44-9454-4ea3-b2e3-223fd3d7799c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48e6d092-0d11-4f91-9e9d-cac2bc4d9775",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2d2215-a633-4476-b0bd-2a00360869f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "840c788d-3719-46b1-9176-33a34547fd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657729c8-ca57-4c65-b04a-ac7a82d742f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51921041-a5b6-443f-9237-2952f8a9d437"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dd91a16-52a2-4677-bbea-c5d36f2225b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee9d80f7-44b4-4453-b8ad-5bc9a4c52a0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39597c8b-01f4-4647-a102-d599b44f6261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8c56682-b125-42b3-9564-691847488658"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0459f11b-ddaa-46c5-8f72-e7ed6cc55493",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee9b1daa-9ea4-4e8f-ab56-cf934acd1217"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09a9a915-0855-4cac-a738-4240876c67f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2388873-8df5-4081-a065-986f51ff02e2"
            }
          }
        ]
      },
      {
        "id": "d813600d-a6c9-44b0-bb9d-83cfae1e261f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8a6d9864-6b39-4a6e-864b-7ff35e43cd07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a309263-ab95-42b5-9340-7b67ebc867ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7abb2532-494a-4d87-a929-4f8e24428c5a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1966b8-c433-4aba-bd4a-10787564ddcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811acda2-8d52-4ab3-aead-18d44c6ab9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3129e0e-e168-4758-b904-acc0efaeba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd40b2a6-bcd8-4b87-ba60-8816bdfb02cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3133788b-a78e-4407-841e-ae6a29f64094",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4029c8-a9f7-43d6-bd7c-79b4a90618a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6885ce67-b754-46b2-bb40-8144beab6753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20d813f-f732-4451-bc9a-f98fff1b147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "549dc019-244f-4662-bd03-0fa362ca3365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51a182f-4255-4dca-a60e-8500794665b9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9203efb6-2242-4d0b-b9af-30d2eb08c573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb09d38a-6377-4d35-ab76-14d387d5deb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb65c313-3664-4bb1-b53e-c10c96adcd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b53cd14-2fc0-4a33-8dbe-9a77968bd1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de34141-3cea-4ed7-a90e-df66a1acfe12",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eccf639-2e36-4fd3-b56f-39d25d3089f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3528c2-232f-40ac-b5ba-7963faccff2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f066bc25-3ede-41b3-a1f5-35dca9e9df24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49dcc7b5-ddc4-4d95-aa10-106dc1a1e73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fc83da-3531-4862-a6f3-f77b5d496eaa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f637636-fc4d-4419-b4f2-e295b84b44c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040843b6-3d7b-47dc-b3b9-644111bf3122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6b76f9-01c6-46a6-b124-c6fae27bc1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffda2e91-77ae-469a-bda7-75173468bc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe036b-c9f1-41e5-ad7e-55826981577e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e16b70-e1d6-4d04-97f3-a993a69765ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7caf7ca-82f3-42eb-9f18-848d783209df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c123c912-be00-4e59-90a7-5d93f81730b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96e31432-ef1f-400c-bc69-10ee6cd31993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fb82a0-3af4-4186-adf9-1d301e103012",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5177a3be-19f7-4ad4-85bb-1cd8e8c356c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c54aa0d-95d7-4627-bdd7-e7e3fca46a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3738c00-8224-4d50-bba9-18c6d8d3f166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb57f3f-2ee9-468a-9754-622dede84a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65e90ce-7b7f-4a0e-8536-eb11c6d863ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d617da0-78a0-4da8-8e19-77ad865828cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4296790b-5a2c-4d47-bfbf-eccf132934fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5f4028-a553-47fa-9330-7fd9105e60e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc8b867-5412-46e1-a3aa-d2a04cee65ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f821014-c04a-4fac-85e4-48dec0b80a2c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35693b39-6a3d-4abe-a827-83d8c8fb1cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf20c708-591f-41b3-a7ef-adb180829837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76f6597-a437-4404-87ce-5bfe966f03b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a5103c-cd8f-419d-b04c-69609c554042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca394ba-ebc5-43e5-af48-6210c08354a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a267f736-5e86-4671-b069-9f0ad6453c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9c60c8-97f1-46cb-9316-05550bc745bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d681f0-78fb-4b04-a037-a4780a19d4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3878bd0e-735c-4bb2-b7c5-c666bf0ba8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd17b24-f950-45fb-92c1-d74eb43a8724",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6dec98-f301-4ae4-b61d-0bfd653a626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d685c0e0-8e80-4f85-84bd-c6e9f80c1200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affce846-aabb-42cd-90f8-9a44940fdee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ba207028-a0bc-42c1-a2e6-fb835e43b880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b307edd9-6fae-4aea-8b8a-e2123ddabb99",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b9ffa-9485-47ac-b013-fe6e4111fe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b086cc4-e953-4ffa-81b8-fd0eee397e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339904ba-797b-4c2b-87dc-1c676cfb6d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "145f2424-bafe-4f8e-8e74-fa46ef55ebd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53dc380-ea2e-482d-8f22-3afde01d60f2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44d0f89-7068-431c-93c6-82c460f4815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da52e69b-0025-4dc0-bb19-87a8fcf8a2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a6e4bf-d312-4902-a0bb-8ff3e413b1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56e3d86-f6db-467c-a451-0429c4587f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88cb8ba-0db6-40d1-90a4-9a2c618a001d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320475a7-f4e8-49bd-9495-c1673d36c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ab6c68-5198-419b-a1ad-741d705c1ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11458e19-aff2-4439-98ad-425c37932c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6254f56-f2b3-4f4a-9c02-121234df825c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32067ef-c23e-4e35-861f-5b3003f7816b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1038c32a-60c4-40c8-985c-cb529542e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8ccb5f-2c0b-4b5a-a797-7a9845213386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096c415e-2979-4c0f-aa88-76f5b65db9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "234c6217-0d1a-4651-9303-37659255ca79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8848972-dcd7-466a-a3f6-933f15dfce54",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1fa529-9518-42c9-8bac-b7dd5abef709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddab834-7ff1-489c-9dad-8fabf1b3d339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f43dd96-1f4d-4503-b62f-eee14fc1eb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae960cd-f4ac-4c79-a55b-70a529da5620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8190b3e-1492-4f4b-83c6-c18ebd780898",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a613b8f-6f45-4e08-a631-8075e057d7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad16fb0-acef-4fd4-83e8-d944c6ecee11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49360bae-7191-4bcf-a019-a1dcc01919bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10ceaaa-d0cf-4b8e-a387-075b593c9adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642fd274-2464-4496-9836-c403ba3b1eb1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6588a536-cc23-4042-9242-a773afce9a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad274a74-5c81-4726-940f-24df51a01983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f29e083-ca6f-4529-be1f-4a573160f031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d0fe63-7207-49a2-b39c-e1140e735ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c078a6aa-1266-45c9-83a9-074117782c79",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14e577e-b15e-4123-83f7-66724753e7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6672ba-c589-46b3-abed-ad90627fbc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7662b99-1c9a-495e-aa61-8d030365dd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5edc58-6e28-4292-abe1-554b4cc7fd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4eb105-e40d-4b7a-9ec6-f8f19b44fca1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21074454-75f5-488b-a3dc-61d7dc4031ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62f9112-1575-45f3-bb87-dd206350d8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3e12d3-d606-4230-899f-2e46cbab0b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90f073f1-6dd0-4d97-96ef-0459c2890422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff26388-247c-4e5e-9f64-eeba867769be",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33708e75-c4ac-4dcb-ac9c-4a6c681f1925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f41bdff-2c5b-4d6f-b92d-6a64803c9133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511eef78-daf8-4a84-9024-84ef097f7bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fafce8c-bf22-4d84-af4f-97f25773cc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10236872-72f6-4b5f-b8d7-b44b756ae8f4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216c36e9-2eb7-4ac3-8049-29a8f3a20cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b18cf7-e55c-4acf-8d57-e74ccf977590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a01ab9-2f78-47bd-87aa-a399fc347981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bace4cf-2a61-4f77-a7db-23a9a92c5445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ef01e6-55d7-4321-b459-464b69e499d5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321921b4-de58-48ed-879e-14a516b48e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503ac32b-5812-45dd-a969-520ff5f8140b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d04cf40-9062-4682-a600-1f352440e333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b788032f-6274-476a-962d-821ed0643060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed46a7a-c571-4a69-b10f-5579750c13e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc172b-61c9-4653-a15f-83f6fafc37bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abb3ad1-e72f-4715-aea8-4284859d8e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaf6f7e-6112-4140-9311-2ce3ed8ff2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e91ece-314e-4633-bb2f-83f47f625b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cb1038-7f48-4624-bd89-528918707654",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fe4806-43c0-4098-8920-c9c61add701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f309b780-ebe4-4eb7-98bf-474aae77e98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93d1ad0-208c-4325-b2cd-cd3905320e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e276223d-26c8-4a6a-aad8-795f65328511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dac549b-1a6a-4bdb-aadb-8eb6d8336dde",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0006a3ab-561b-4de7-b7e1-a27f1c008daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8812e07e-55f7-43e5-9936-2486dba965a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f997c0-4795-4367-bbb7-e211dd347449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e21834-5ca9-49b0-bc64-1152b32c35ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401e0651-3e97-479d-b94d-2f1bc07ae8a2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8f695a-acf5-4b40-9ff7-d074129a53cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2d99f2-91d7-4c54-8f85-f4999eb17685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310b2169-c400-4cef-b35d-154bea78ff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec99d58-48ad-4414-815a-f687f3168ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477e18c5-752f-4693-927c-f5899562ab84",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407e2f56-dd03-4d9d-9b2d-e8ee7b491b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e815fb6f-13e2-452d-b73a-78ceef8025ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abda151e-8ce4-403a-964c-c96a539f01ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1836f32c-6837-4b9a-85d9-a4e99378d4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2091ee-9ed9-4caf-bc72-c0bbbb58a93d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb3c23a-f954-4de9-8822-5b2252e9900b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1da6f56-6fad-4c9e-af14-3c9fb3ab50f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82330050-f80c-4387-a251-d51862c2e8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d39641-4ad2-4fa9-ae45-6fdfb73d8c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14347ba-d11d-4e19-b88d-149f0f9577f9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eb48c9-4659-45e1-b444-8200bec85280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7631e061-b4a0-4183-9653-0d5098495685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc889096-1207-4f0b-96c4-b035ec311ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "683cb9a5-150c-400b-8d3f-e9759fe93c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0224ad8-0919-45ac-a55d-808975f7b9a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088b85b9-8536-4d63-983b-ee977f6d1262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a5cbfe-bd64-4e18-809f-746a40aac430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e79fda8-06b9-424c-bd75-54d1a713ca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84541f3b-5d04-4e31-abe9-e77525fe2b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e013ace1-1bfc-434f-8044-4edfa5869f8f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a45121-fe64-4cc8-8d93-8d5d99b64924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34197a74-fba8-4a06-81f5-18e430f380c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187d006f-43dd-4ef3-89df-5ac84a83b1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fac4d54-f86e-4d18-9731-b72029966557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29ddcde-8e13-4c37-869f-3b9e42a67078",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e64019-d5c9-4130-abcf-2a0f9653aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8475d310-a0d9-417f-8a09-0f3a2dec3f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f418ac2-9a28-4197-a32d-f168609fdd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3ac960-157b-4d3f-beb5-e0ebad1ca18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095782e0-8a89-4956-a3b2-35bcbc89f340",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98053ad-9daf-45c6-8e49-7afd128db99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345cd871-faf4-4849-8935-dbbedf180066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7660fb51-43d6-4fbc-b32a-9e20a2069528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb08c2b-9e11-45df-81d5-19f9b6c63bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027e60e7-3438-44e9-ab9a-2d053a0c7974",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac84d84-5c97-487b-97b4-0a339a39004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018b9765-b7d8-4e0b-986f-12ca951d0f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4285cf1-1b9f-44f2-bebc-a51e7040c457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b34f31e-df65-4e3b-9efd-962d0ff60daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a467f276-9554-4bd5-8df9-6d428197ed25",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9a39d4-4bb7-4e46-86c4-20c9308a7618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8913ddf4-bfe1-4009-a1f8-3c0bf71cb1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6611cdc-56a5-4626-b1f9-566aa9eb26e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1895e14a-c957-43f6-9e2d-80ca22217b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6942276b-ff6d-4ba3-9d98-9a41df5a34de",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dc5227-138c-4ec4-8c16-51363fba0982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f1fa14-5aeb-465b-9ea1-44022a01bb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e20df2-b85f-4c75-9cba-539a6b20317f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c260a97-168b-4a21-8d93-f567431bc87e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29d092f2-e71c-480e-8df7-13b018523a55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db16077a-2ef3-4ee3-98b4-46cf92d60d77",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f93dd5-ee55-4eac-9c82-72a7c0117017",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7493fec2-c375-4a05-b700-a16568bd5358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663ed573-83e6-4c79-9829-c40ed3921fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae5d4ed9-6ce5-4ad7-bca2-f38ff79476a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bb702c1-d1fc-4e3f-a64b-61a4e608a573",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f56e28f2-5942-4e8f-a874-d7714f4c01d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32bb4b35-59c9-4302-a548-a37bb1631190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a00360af-a5ac-457c-b01a-ba754cfc3ea1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f009761c-e9ac-42a2-ba38-f37baccfc781",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "95a80cec-8c93-4458-acc4-c7cf1a043636"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da327f5d-3648-4daa-a8e5-57d184253864",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d4dc5ff-0155-4e86-9b64-cb511f994a2d"
            }
          }
        ]
      },
      {
        "id": "ffe2e59d-440a-49ca-bccd-2eefefa52a41",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "16c8ed67-daba-4c5c-95ff-45d6e253b1ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26cacb3a-7aa1-4826-bb31-2bd06b79e17c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5b9ae4d-1af2-41eb-8d0e-a08e03787fa6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd00e4b-cd2e-4852-92f8-c02a98281ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f068648-871e-4efc-b0c7-1e44355108e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed04b20-3520-48a3-a321-1550d79bba40",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2893f393-4ceb-4551-baf6-36f7fcd316a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21ab72b-f0b5-4c33-9e2c-22739ab5df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9818d581-8040-44e8-9d57-78a5df7d7045",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7b1985-7160-4c89-b70c-f52515b57e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c80caad-c165-4529-b5dc-f15b34b5ebb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443b68af-4d87-4442-833b-2c493756e2cd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff776d76-8ae6-4d49-bac5-cb0a683d5aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa55576-52cf-4629-8daa-1868ce36064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491a565d-66c1-4741-971f-e3c97f9544cb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e424215f-3f2d-49ca-91b7-5c2e3372beb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce43b02-30fa-4402-8af7-672cd3b39d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb3613c-07ef-4b66-8c0e-3bbdebdc9d5e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7022dc-7d06-42d7-bef4-f0224833594c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36f105b-83a0-4f8a-96ba-28b65ff6bc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50504d26-fec9-43d4-ab6d-18e5488679c5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089f3d35-3f4f-419c-a3c6-f19c17d919e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5d37f8-4aaa-4cad-a89b-ed689f42e267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a20e14c-b8fe-40e6-ad12-1fad7a85bb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2b20de-6c30-46e2-91f8-54e7958a5a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce2b2f6-a058-48c7-a13e-2c789f305339",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc06204f-5ad1-4089-ab79-4dff6925b17e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1424aaa-62b0-47e2-97a3-aa2bd0425ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ca8b0c-6f71-4747-9f7e-064acb366ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cb15f2-f945-4664-93e9-7b47c13a631a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32c2a70-c08f-4dc9-a09d-e1f0d1feebde",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64347397-3808-4632-95b7-fd07b9588407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4681ec1-fc8e-454c-859c-6c0c6713d82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf123902-dd29-47c7-a9ab-5f37cb939608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f0726d-7245-45cf-9b2a-4604faaff373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8053c992-94d5-4ac6-9ee4-296c0d1516e5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d2a95d-6fbf-4d27-a976-c99f7b3cd32e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1353a004-c6cf-401f-9aa7-040c3d63041f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2684dd-6bc5-4166-b0f0-b594bc643585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76900dd-15a1-49bf-8366-ca8636e504ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd84539-50bd-4b90-8866-a782e7073ae5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fbefbd-a0c0-4663-9f77-ff03e1686560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9879bcf-7062-4233-8bbf-90116e6eb590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8277392-3d36-4a92-9372-0a63354c1686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2c3c9b-6cf6-4554-976e-bfe57563adac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc896554-8b5f-4403-b598-911d476a7422",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edca2d0b-4614-48ec-9868-0cebe34208cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617fad09-1010-46dc-9ac6-86269bf99ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f863bc3-8410-4443-9470-1bd4a24679ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8655725a-6f14-4130-b601-75cab0f6743b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a7d0a9-1a2d-4d5f-8d9e-e9d5d1940b56",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc173b2-72f6-4201-b23c-1df041cfae1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5b7832-458c-46cc-9f39-fe8a346b4917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a82138f-f408-4043-aa6d-20e4b92bd4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d287a5-6458-4883-b2e8-0f105be35973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67220a6-efc5-401b-b4e3-2a612a908721",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637b741c-0478-4618-a4e7-7f62a29ddd0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e9a8525-ad53-4198-a786-de1ce2fa6d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fe4275-3fe2-4066-8569-9f6904385b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37860dc4-f4ac-48c5-acb3-edfb71ff50bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fc4952-abe6-40fe-932f-16984a3a9e3c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba22749-cff3-4594-9b53-b377e3a936dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "515b4175-88b3-4c7c-9d46-39087ac1d317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97cd0cc-325d-4938-8dbd-970c423fe218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b060955-3243-4793-861b-1747245f4237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad38b2a-e660-4a69-a6ce-9f1967086aa0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2085d5-bb44-47c2-b848-27ccf10c1cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3cf614-f080-4189-af45-dda538b8f1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c22fd5d-7d13-48fa-8ffb-e6fa92f9c552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b42304-6d5f-410f-86cd-5208117a779a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29544fc3-4d64-4404-a1b9-d55d483f8d62",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15756fd9-9c07-40dd-a283-48e4b711a9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0676a7a4-c336-48e2-8b3d-78c412eb6fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11647ed-a8e1-4a7a-ac65-d364acbbe270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10f286d-576b-4ff2-8002-a9e6661e8874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8dcab5-bf26-49b4-9690-074917fc163e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ff1c63-5c65-43a5-996a-b0264d3fc324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeabcb79-0c19-4586-b77f-92faa736b434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd89cbf-dd66-40b2-8a65-f4dfefc4a485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a4698f-307e-45fd-8aca-c89435f7f5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dd4e9a-b1c1-4ad7-a8eb-c8e0ae324ee7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0137488a-ac79-4b2c-bc0d-4a57ec9a6caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266ee296-b473-42fa-8b82-b93b55136c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f0e263-04ee-4922-84ac-1ba8aeb29711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c0c31b-7b99-4c26-9ebe-c5ea46f5699a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86caaec-8434-41c5-8cca-d48dca6f0920",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22644752-5fb4-4688-bd99-34a87000344e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ea3acf-0bbb-409f-adb0-4ccf4313da2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a48f5b-2c7b-4c59-a1fc-cc3cbd04e3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e88a80-d4d9-46be-85a4-98e581441ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca57450b-051b-4804-9999-c1218cd410fe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823a9424-db5d-4527-bf8a-bf3616c39dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fd18ba-942a-46b0-afd3-11090da291b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a77fd1a-8a3b-451f-b272-75255dbab08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c9e9c4-df11-45e4-89da-53042d708a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8b993e-bb41-4063-9b45-c485739a5985",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423af856-8156-41dd-816c-e8ac4673d67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f977e57-62ac-431d-98d3-4d6b2e0aba8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d884d9-b6f5-4622-adb8-2c3e79cc7b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a3fdc6-f0b9-42a6-a67a-9aafebee680c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b91627-9ee6-4359-bfad-9f5d94582e73",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d4085e-4bdd-49da-a11d-0721e987d919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc9287d-d662-42dd-86ae-0a941cbefe5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b9f167-6f0c-49cc-b71a-c41b57ba34a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b415ebbc-d1b5-4e18-964b-6f034dd6362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c91bd2c-4ff8-464c-8538-a92d6bee5db5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f88756b-6f08-4ced-afca-34d66c29bb1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209543fa-d23b-4ff4-80e7-b5cd96774b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e83ed6b-745d-4244-9d55-794a9e368338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f3866a-5608-46ac-9b21-44259a8e6c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22c43fd-3da6-4489-b93e-4c27990fc040",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d10be8-2232-48a0-b788-21ef5a1b86f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "003c90eb-327b-49b9-bbf5-98c37c74657c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dcb4e5-3e7c-4ba1-92e7-2f83557d19e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6f965b-e6f8-434d-b017-40d49b4114df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dcc229-edd7-42f5-a5eb-ba210239199f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e395cc-1a7e-40ee-8792-d01a27b6724d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fb0d858-7297-4045-87d8-303b8fd2ce95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73487f6-3d81-414e-994a-3efc93d491b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805e10cc-1b9b-4d34-9775-f5b3d74a6ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db5d26-b1da-41ea-8c5a-c53774a79d4e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e193a6-0655-4aa0-a87b-75b86b4b8a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6656be-a632-41d9-b1f9-a8fdf900f5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327cb78e-7601-49cb-8b10-ba4b72b9ab1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123d3732-eb24-49d0-bfa3-fd56b1b95a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3498ba-0d3f-4938-8483-f337ac0ab8cf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29f629a-4e97-405a-80c1-5ce143779383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c4cbc0-1672-4c7a-a553-86921c2b503b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaf2217-5edb-4cbc-9ea9-8c16c52043f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aec4345-ace7-4b34-aafe-104fb1005156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e900a2-ee1f-473d-92de-cc2e4d317577",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa37d10-3fac-47fb-8875-6adfdca79be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eaf6468-6045-45f1-a8af-b5fff1dd8391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f6ee0f-34b2-409d-8bbb-8e7021ef4611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb14f9a-dbd2-4ef3-8831-34702f137a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb031889-90e5-44e7-b376-8354290cf3b0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3c7692-ae46-432c-b01c-c1cdedd3970a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8abc4192-9f6e-449e-800c-9ae4b1281627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29c4917-0ed5-4ee4-95cf-e10ae2d3ca8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1e8f3b-4c3e-4d72-9e5d-705b89d4547a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7333da-19d6-4e82-a33d-4eb254c65cf3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe24aa7-ac0f-40d9-8f8d-4520df6cfb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d389c1d0-b9f7-43a4-9f98-fa2107065ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e06e7b3-21cf-4ef6-97bc-f250b569984b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423455f3-fc0d-4e3c-a6be-17a8b9cca923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a84b31e-780a-4afd-8514-53b8ce9cecda",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41eed9f-28a1-4de8-84b3-bfd593b3dd0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b84519a-fcd4-4f40-b847-1a2de8767abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a75fb1-a686-4b60-9850-ea6d4796b5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d3a6b3-8915-42e7-8650-ee39600e2016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65145363-6236-4303-8518-64747f4fd7af",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff8bde0-0671-40d6-bc5e-36a9a1c2838a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bdbb8b1-ae70-48f6-bc6f-edafd4ae37bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f590ee7-91d3-4180-b1f1-75148673c381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eed525e-feef-44bf-a250-c766e0e31126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7f5322-f7d1-476c-baa3-c5498294f090",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3aa99a-07bf-44d2-9dea-9ab73441cde6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3fcde9-13c1-4c1e-a8a6-c675f295b25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d4612e-c037-435e-9e2c-97b1ca74405e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732be3f9-4b8c-467f-8ef7-1beaf25ba680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c2a195-36fd-4777-88b9-85b0e1edd3e7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d2aba9-ef55-46a5-bc39-436dd8d68e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded5fe26-afab-48ce-bd0e-85513200b9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f214ce8-c80a-40e3-be44-4a77f1d623aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076c18df-fb77-400f-a18d-d20296c3c8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c667d4-4bf7-4d94-a31d-545f039df766",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c772ea3-c415-4b0f-a559-1ea7b1c0056c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522197fe-be32-497d-a788-7bc4b127697c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366fabed-39eb-4fd1-8be4-5e58dcee0df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ca14af-7222-4f45-8a9b-2b1ab0977430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373df153-d5dd-4dbf-ba25-4a618e5113a1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81eae1c-db0d-4c18-adee-073c6400037a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e07727b-b523-49b1-b208-e546283d37c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe6c1ea-e8e7-41b2-8d2c-3c7c56238aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b7d301-dcc5-49ed-b51c-fef1e43be937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a124fc44-687a-4040-b66b-3fa536baea23",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02139ca-b978-440d-8e81-0732b57f40e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb461f68-dda6-4922-9792-e92be4050306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823577c4-0f25-46ba-b619-9264e920997e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a88f633-c306-4d0f-8c3a-82e4eaf890fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7945317-c08e-4237-8bd7-05855e2cb12d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f4ed6a-6219-4e03-bb80-5a8cebddbda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d67ecf5-408c-418a-80e1-2373558552c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a106ba82-2de2-4331-ac6f-1be63d1e3e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bcc9e5-b6af-4ed3-a2df-3db7fd67bc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13051669-8ce6-4fc8-bcb2-6131af8219d3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9985a263-e477-4424-a192-43a0f1241f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5c110d-2ebb-4c19-8f11-f039d46e0cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943eaac7-4d9c-4a63-914b-55c4171417f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668d48ce-2400-4225-8239-a80a15766f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b449692b-c50d-408b-becd-2b3978464c15",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c81058f-1c80-433a-8031-0ef787b0eadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47bfc1b-7ced-4262-bc5a-ded0d35a7a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7373671c-7f0f-4890-9bb6-5bd8cafd77b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ee6881-dc36-4835-a12b-35833b12d21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5d3746-c86f-4c05-b010-e5251f2fa198",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8f22b1-3514-4ebc-bc08-600231b73120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef63c7b2-9269-42f8-a0d9-ae4dbcc34000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe95ead-0d28-41c0-9a09-d87db5c92420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a603ad6-faf7-4ead-bcf6-235a25e42e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9ed13d-74e9-4726-bb0c-9f4da56baad3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7daa02-9c5c-4ef3-ad9b-5eaf23fe80d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc89f0c-a71c-4586-9215-9cdfb8f05b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99e1020-a98a-40d1-bac9-3fe88f61c13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc4539f-dfbe-4637-a528-7d8a13d66662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e66ae29-68e2-4da4-b0d8-5c70ebd67e98",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006f2b4d-e616-44c9-92b8-af8c185eeffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8bd212-3075-42bd-a457-a31bd034f63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca3130f-aca3-46b3-be7b-a7f3e35f8f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ac5d60-c3d2-4c9e-b126-eac1b47e69bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e463844-5a56-41d6-80e0-208620c682cf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ff8f05-c132-4f9c-9e78-281aec249cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c774c8b3-77a2-44f4-99e2-316cd7a3543d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7854afe-bee6-4aac-b2e4-de65dbccce08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28059761-7df5-48fe-b3e9-31e36f02aa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9572fb-4a91-4e58-ae36-fc28b8156657",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab91d7a6-4544-4bac-8f0f-10228c10848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc5916c-96bf-4ed8-81c8-d6da0c7b8a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ea4635-c44e-45c6-8eb2-f583180b77d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5676542-577a-4de8-92f9-bdb9481502cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8cad41-0eeb-4f3c-8fe5-d87415fc147a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477ccd49-8f9f-4389-a15e-2fba04257e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436f0c2c-1f4b-4def-a386-084bc542be3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d521de-62eb-4801-b983-17d8cdd5647e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33010208-5265-4486-946d-45557b6fc279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e151da-4045-45da-9064-08fa6bdda0ec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f708db-0658-42d3-811f-74c7a8a74da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb80661-04b2-4e74-a03a-405838441ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511e914a-2e01-4218-a02d-2f31c02706fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4142ff8-c117-4ddf-be5f-c5076254bd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72b1812-54b7-41b4-974f-b227ba181b68",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63743e40-2527-4898-9a99-bb563c078edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b05569-949f-498d-b454-14d9245b7d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9c17f3-a440-4767-92c4-f0a7c080d358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5de4125-de6c-434b-9e1c-ce86436e4bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdcc945-374b-49d3-bbf6-e71a2ee772ff",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf5a246-2dda-4dbd-81de-24952ef2b196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9ebad1-fb3b-4d81-ad90-3410dc169f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6084243-aa7d-4ba6-8bdb-44f9f2d3dd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49fa321-7057-45a4-a741-8d5dc0c5351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab869030-ad2c-4606-a469-ed731cb1cca0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fc545d-d772-49bd-b33b-0bbd2a35f8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d61fdc-9122-4e49-978e-80a334d49b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a977228-2845-4866-a824-d3149ab7c494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ec7240-32d5-477e-9b7f-a3525fa26a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c8f7f9-4cd1-4e0d-8d8f-47e62b189eab",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84138054-5a9e-4f40-a3ba-882d10fbe628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e11fbe-bc5c-4cd2-bc40-e8ec0d2d6910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab6fe06-aa7a-4615-9479-0f7a817e378e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3754b612-4606-40d2-9d44-2b32cb488444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e6027c-fc37-4a10-b764-fa3083a1747e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9a4972-e455-49c6-9318-882a99b6bded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d96811-566b-4f00-9ac9-e8a7059bf4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9549f78d-c1d1-4737-a183-03be7350ad35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e43691-18f5-417b-82a1-43c5c05cd91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3233004e-2d9b-4f1c-92a9-9b9c95d0e962",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aef7b35-6ed0-4ea1-8f0d-f38297829c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84314921-f90a-4d63-94c1-30411c68bf05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c6b169-a757-4c17-b9e9-459a98ed9c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1022db-c325-4238-8baf-cda052158ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec81ca3-ff99-4296-97d0-6f2fdae67df2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db24db54-f41c-4969-9af0-51b23bde6e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a6ba39-50b0-40e9-8e45-684d7c3f64e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d1333e-d5b9-49a2-aaf8-8e2b1c9db8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9b8bb7-87fd-487b-9e5a-27d655dc0909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d49b80-9d55-41a8-9d30-d73d916033a5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493f421f-ea83-4a4f-bb7f-817865afeb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3e2bec-d6ae-4f04-8ac2-db7c703c3a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615ddd50-b82f-483b-b89c-d2c95ed2cc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d33811-d567-47c7-9b22-a8d8e93995c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1c1996-d31f-4983-8273-7b33d7ec31a2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0aed3a-3373-4ac0-94b1-04f0b4059373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8382f1-c978-4881-9268-cd777f3dc7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a12f80d-6dec-4aa2-8d33-0f83d63c2ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c32015-6a72-4206-a3df-3ab39539a1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876965b8-63d4-4bcf-b716-fd12a15a16ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd851a7-16b4-4251-9103-1af00b93c897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8ceb3f-70d6-48e5-85bc-c5a661e121f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2ca7a6-7351-4a5c-a8e7-ec46005d0ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f81f235-574d-4af7-8898-88df7940d190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dafceb-2324-4a1d-a5d6-e3a1cb18dd5d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66beec58-2c2b-408a-831c-3c99b380e6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eda3e33-0bc0-402d-aad3-733e4b09a526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7496d84c-f3a5-418f-aaf1-e8f2d28ba1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b20152c-f206-4274-b775-0a862c2a7bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eedef91-d44b-4928-8913-83d9d073871f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88affb4-9452-4534-92f8-68cfbbc55950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6a1bc6-983c-4d1c-8016-0eff4f85aef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54a2810-7a39-4902-82d9-f585d89a2afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a6fc05-ff85-4e82-9cfd-864fdb4cfd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8f66ce-dacf-41f3-972c-b88ce125d00f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b425eeb9-0b06-4f28-9112-6c005f36a6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395e33a7-1119-4eb4-b446-43fb524bdeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a189795-ba94-4997-bdef-ca49c21a0bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b6bc95-b902-4f8f-8017-a8a0362ca99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e804ec8-6b16-41fb-acb4-6c66bcb07e1e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf18e772-6427-4d32-bbec-6d3fe7aed125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bb9987-32ce-4f00-ba14-9ce64a3d332a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf9fb8a-f5fb-4e5c-bc5b-21e95c436c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e348cb-2d20-48ec-b6a9-45c3753cd006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc751b9c-32cd-43e2-b05f-36bb40871da1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c187f9c-01d4-4882-badd-065953b696a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936c688f-5b32-48ce-8e7b-05703b2886ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6390b3-cef2-4430-9b4e-4850869107ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51747992-1177-48c9-882b-7a09fa68ed6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a441077-c4ff-4a32-9a94-63b47ee95601",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a7a3af-feb6-4f71-a097-0ea808b0492f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f98e587-4c1d-46cd-8b92-2e0a3f802008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db6845d-ec2d-458b-84f3-3c89b0ca962b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3f23e5-5576-4111-b081-af4a6dd6b917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a03a9e1-e7ba-422e-9b44-cbba9469c5a8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1181c79-58bb-419d-be59-f64a28dd7c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fefa4339-8e63-46bc-b5a4-3569b86445ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befc07d0-f774-4cd3-ae02-2765e294b5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459c6168-9a39-478f-8acc-9512197ad1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c509d96-6ff3-49c2-8eb0-fb5a54b5425c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c468b65b-bb09-4b1f-b5d5-95ae6eff3212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f499868-b2c6-47af-892d-c0a8e5242df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e924c9ec-f200-4e20-b05c-f0836e08a5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76289c78-7656-45ff-8d01-640cc3aa174f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc75ac05-5b45-412f-a1a4-91e99410c93c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d2acf3-cc4e-43d4-a6f9-4459c4ac4f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ebf04b-945d-437b-826e-1dd6567763de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cbc929-5186-4c37-b828-e80602600ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01a126e-e7b3-4ac1-85c8-747cfab8758e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a5ec5c-062f-4507-a3f8-74d44b4cb0e4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a5fd9a-e429-4184-96b6-c45f9893fe6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4871dac6-95d6-456c-a720-2a9fa8ceef70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed3d9cf-47f1-4143-bfdc-f8c698f2cf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1b752a-9a16-4504-9d9f-3bce46c58659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89bcbc1-37b3-4917-9f2a-e66f8fdcb5a8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9d98ae-b5d5-43a6-bc2f-20bee811ef24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8548e4-c40c-4b6a-82bf-db54d9e7387c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca93ed4-2ab5-4a84-9e9d-e171392893f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8d37c3-de89-4a2e-bdd4-0d384d7e31dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09694b98-39c5-4516-8412-620436aa36d7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152649f5-db38-4fa2-9616-1a6f77fa0f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d967761d-0629-43f0-9417-0fc829136058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aad381a-f1a4-4b39-965d-834cc03792b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14dfb6f-5cc0-4917-adb5-9001f7a7238f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd256d5-5cb5-493d-841b-ff56308b9fd1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36471e8-9f45-462d-88e3-dcec4f6ac293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a18d11-8d8b-4fe0-987d-6fe9000d640b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf14f620-693b-42e5-9c0c-6ba7fa4375be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3183850b-ad1e-49ed-bcaa-5aa45418287c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4c9e05-9c81-447d-a4bc-e78b3d7d9042",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a7231d-2a54-4556-90d7-198409b41e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973a7eb4-050d-456d-8f7d-b59a0bdf0f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eee4f6-4c75-413e-a98b-8f6284ce04e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4830d21f-e9c2-4437-b71e-637b3045ba67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d003ddf3-7c39-4c8d-8764-da535b534542",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbc3580-b372-4c7a-9c7d-144cd95a9246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e41c96b-f5a4-4d32-8cec-d81ad1dde76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54cd211-adcd-46f4-9107-c943b1d69026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3068c73d-a5c2-411d-aee0-92b3bc698dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1996b9-2261-4289-8d63-5c612a88af53",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223443b0-43bf-474d-bb95-d0c081094551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc97555-f3b9-413f-a64c-11f3e0157e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ba9574-289e-4978-87a0-022c42ae7888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f6714a-ee05-4cbb-943f-e16ee44fb286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a7fe9d-a30f-49cc-b9c8-6fb792bccd1f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883f9ce7-9854-4532-84a3-cd29d37ac334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70d3a32-e582-4941-ac93-2d017200e30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee634efa-6204-4845-9dcb-9e21e4ec1e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef52aaa-19a3-4dfe-944b-25a6e9e47cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2032ed71-156a-47ae-9054-880410bfd45a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691987ab-29fb-4dde-9299-d11117fd3cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "badb46e1-c3e8-42f8-b701-e9c266e54171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d89254-132f-47fc-bfae-59b4e13214a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fc0b6a-a91d-4d9f-aaef-ffadea131c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91518e7-c85b-4603-977b-62c6f84c068d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8235364b-6aa0-4f6e-b414-5452035bc03c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93cb84f8-8d7b-455a-970a-94a7decbeabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e999ed67-2316-4e41-8e36-cdea76c2d66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba691fa-1a69-4f67-b1eb-4b441859ae8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5c058d-3e43-430c-8674-65d64f371bbf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5581295-acf6-40aa-9bec-44045c5be967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e06ac56-a1c7-42d9-8761-aa0f7c3cb0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4101bdec-d644-4401-8130-3d7899f037b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a0a13b-8e57-43ad-a64d-b1051d0ab047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f664e9-0175-42d5-aaf4-94448667725c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263b1b0a-6d4e-4630-8c88-099ea33d25ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7822f36-bc87-470c-8e48-8143a13afc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafb3ed5-caaa-4674-9055-7389d48bb1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7457c810-5a56-4960-9bf7-fa342e16a75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b94a78-f5fb-4140-9b49-0c9ba391cd77",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91330781-b017-440d-a728-51cf956695b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea800f7-3a19-4283-b64a-53eb7d2d0cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4400396-07a4-4927-8567-4cf88b45d63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c5e063-0372-4c2c-8c38-302fb7c2d45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6b9668-2753-4e7d-abbb-52bafdfb5fc9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a4c5f8-a551-4923-9926-78d52520f913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a73d8a-820a-481f-8782-9f250181ba5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2255179d-975b-41f0-bcff-73f97e71cbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4d5716-b59e-4448-85f6-c1e2a0eb2621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464edec3-afd2-4343-ad74-9ebf561c892c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f56ac9-2223-434c-b3c0-d714d93c1b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07201379-2c2e-49c9-9de7-55e88b90aecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21e8659-f9cd-492f-9da6-173d30556478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ab9bdc-dd90-4787-9bc5-c9a6763e2bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2216c130-3637-4f54-b063-5aae4fee6255",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8de2435-b4bd-4983-b1b6-4123ee3559b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9fc32c-8680-460b-bfd5-e7d41e15f5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d865ceb-f080-475f-aabe-d781c65979de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712837ed-07ee-4097-ac35-0d758ef3a1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed983a2-e4ab-464a-8e0d-9c4d343cf198",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54c9a83-fba6-4e9a-8468-4b29dbd15aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f5ff1b5-9e28-4731-8f0f-bf60d0fd673c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88e8679-893b-45e0-879f-6d134dfc1269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba3d9ad-3a85-4535-864f-22aeff81751e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84cbd64-7f1d-499c-95f9-8272c1341866",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce5c324-d689-4038-bcec-4b62e3577d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd99495-6a83-4f7b-b1d9-3af0ddc65cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c391c1aa-7522-4b44-bb0c-3f0310c9c7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b57a4df-8163-4a56-8f1d-0b908b39ce5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c524a2-ccde-4009-9737-e1bc0c596fed",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e351263-f61e-4f4e-8f75-83415979e434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615fd7f9-7340-4877-91ff-6bba18ad27c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee318bd3-63cd-496f-9246-3103b05eebeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722e2605-4a2b-435b-afaa-ebdba2c44957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49765e59-9442-43dd-9987-6dac7725435e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dce1be-221b-478b-ae6e-e284ac066bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518de737-b290-4ad0-9659-abda65d51462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab955142-24c2-4b1a-986e-193677d04819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af76d5fe-30e4-4c9f-a738-a6ad9452f839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4521854-313a-4c00-8221-0d6036e0a508",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567f04b4-8636-439d-b8ec-29a9b125efb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "446fd9a4-028c-4c0b-8f59-bb993cc6dc52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0249f336-db73-4af4-b4ef-f820c56e32f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a19b0b-2440-4a9c-a42c-6e86bc4dd72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49460e3e-1fbb-4e28-9218-d65f5d15fcf5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b395521-e427-4f44-aaf9-02abe110e864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a28a4f92-8852-4a85-bf3b-0916ee31f96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a6c6c1-4b98-449e-9739-6185c410023c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dccb5c-1433-4c7d-952c-ca31b58f11e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1702e3-8938-4b68-971b-78b080c7781c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d7a076-f340-4e83-8b35-a2934377f61b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab33fba8-ba45-4192-88a3-d14db9c924ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f76412c-b1aa-491e-b617-d16ccaa996f1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ff1a35-eee3-47e1-a9e4-005714406069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514777a9-1a9c-4332-a1ee-e3ce1045c50d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4ce1c6-7bdc-4b9b-bcb3-661dad7513a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a26a73-dcd7-45d4-aacc-16a8c86f5834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f300bf4e-bdc7-4870-a0df-09d16a376d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18419591-7b16-4be4-968e-b30ea0e17353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281adeaa-ee0d-40e8-aea6-fa4d95f4ca14",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e460593-8cac-4ff6-95af-5fde24303575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5fc340-31d5-492d-be8c-6c1b66adf227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5fcd7b-7517-44f6-854c-ec9828c25e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe363c2-5e08-4d3c-9c46-1ca08589cee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee38069-b10d-48e3-8c18-46e324c04e15",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cf6d70-0013-41cd-8dd4-1ad55fc42c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7398c8f-7c6f-4bd8-9406-c5c5d58610ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dabc266-e474-4447-96d7-8a625b0d8369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67aa2d8-ca0b-4a11-9661-b702a5610740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcfb8b7-79ba-4954-9536-b632e72b64be",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbecab6-44a0-4e25-8982-f650e196e6f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb696ef-1342-4bf7-96f3-cc1d262ce7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08e5187-2f7a-4525-8aee-9f13e9499884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad38722-ae83-49ba-bc8a-0948f1ce68cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42565fbc-22a2-475e-9145-6a3d424c7555",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dafdbf-7444-4987-afb4-31eb8480dbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37dee98-d9b5-4bf9-bb7a-74e4d5112153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304a1076-3575-4400-83dc-501c4d6d6512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2c2cdc-3d76-4a40-a432-50e6fb93ab55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788e8cd8-4185-466b-9cbc-a9ba11a96dc6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3272db44-3c66-4989-9140-d6501cb9f990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86bcfa2a-770d-447e-ad2b-d92d5918128e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573358de-43ab-4b26-8f6e-95ad8fc832f0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9421dff1-a377-4a05-9559-8ed124600294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cef36d-630a-4014-a6a3-026fca4248f8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fb96a1-4d52-4762-ba29-df0539932148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599df079-d313-4202-8497-cac850797a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725909dd-56cc-4ec5-b2c0-a41e7cd04de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5668b495-1780-47a2-b19c-41dc74752272"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "634b59db-a969-4fed-9618-cfdca1b41b38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dc9f371-f348-4d29-b221-590ce30c0dfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a901f7c-24a4-4f86-94bf-8619442f305a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fb33269-934c-417c-af9a-84f3f53b0d3f"
                    }
                  }
                ]
              },
              {
                "id": "e7d491d0-5cbb-4e80-89af-225c13483502",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62e08b72-f409-41f1-afbf-7280654d689f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353ab231-2cb9-409f-8c0b-4732778c6209",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cfaf1766-b8f0-454f-9066-5d8674c507a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c948a03-c43b-424b-acd5-a10494d2e7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53d0a9a3-4fa6-4795-a40b-b728f50c8f32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e840d35-b6ad-42aa-b309-c12448b89b1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52bbd1c5-9229-4cd8-9858-5207cef8376c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7ad6763-ef3b-44d7-a798-8ace55ad6272",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcc9b719-bbf8-4c80-8277-218a54738855"
                    }
                  }
                ]
              },
              {
                "id": "c690f08d-1b25-4da9-8902-37edcec43e4f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0e5e96f5-73b1-4df6-876b-9a7bf148db3b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71edc86-3485-4811-838f-627b184864b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "475152d0-c756-4eb4-9fd8-ff9fb5fd9b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630e1438-4bff-4c2d-8d81-0d35ae810c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae766c0-9671-43a6-a713-9677604bae2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "264c7272-a280-4974-afa4-6d18729937a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ea395e6-d113-4dc2-a4c2-25767f2e5271",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "593faee6-6d59-4e81-ac11-1b375dc98eb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bff939f5-9470-464d-b846-86d3a90065d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1a96641-f27b-4280-922a-6ee6bfd81008",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4203187-0266-4cb5-a5dd-0850a9ac30a8"
                    }
                  }
                ]
              },
              {
                "id": "76739e02-ae7e-497a-a7a0-946ce99bf556",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c260396-2bfb-454c-b485-b1e8475bf712",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6b71b52d-e5c2-466d-b3cb-a939ee4ff447"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79902de3-c19e-4a18-93fc-f8b6bc201fa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1cbf134-8de3-4d67-a5fc-ee465275d1d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f0cb716-7905-424d-b47c-9acd1ab685ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c4265339-fa93-45cd-9b8e-bd26b39ac2ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b5e05f0-f81a-4df8-bdce-6230cdc39849",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5df9cc4f-6c63-4cef-a7fd-fb928a78871c"
            }
          }
        ]
      },
      {
        "id": "19793f2e-d63a-4505-bf3d-6b46ae406702",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "81b98fa5-7d48-468c-8ec4-152f7b391b5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53ca50d2-2d0c-48bd-b19d-56da775f9d04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18127033-80c1-4aa9-8727-6bd06933fef5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4325cb25-9ffe-4e4a-93ca-b261b9852950",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "93344dc2-c534-4b98-b22a-d12696d485bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395f3166-337b-42ad-b2c5-7d58fc6cba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15b117dd-3508-4b25-a219-10ef42cdaa4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56e3715e-c229-4f7c-a816-f3a5ec610e3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7902850-ebb8-44f0-8ca6-dae7e3830e8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9d6325c-8998-4789-a864-47fad869cc09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd900b59-6801-48dc-9a20-fdd2374f0858"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8dc869e-7890-459a-9e5f-4d9bd183ab3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "41567808-71c0-409a-8cb3-ad821c80673e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4668eb13-3290-4727-9191-456d43ca6cda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d08c8c14-e49f-46c9-950f-9c97d88ca345"
            }
          }
        ]
      },
      {
        "id": "61eb72a8-9967-420c-9d27-83ab039fbae1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1d2b8d01-42b1-4b3b-94e3-f6450687045e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5a6f4af-323c-4da7-bda2-882d9b98dd82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aebbc48c-7381-47ef-b627-b9cb2f8d89fb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e80eb3-10c2-45c9-8e0c-d2bd386271cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81e5a139-f491-4d63-92cc-36ab6b01d447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2a5a0c-2561-434b-b7c2-8bf6c6660b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb39a4ca-33c3-4eb1-8f53-f950636b9471"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d1839bd-db6c-4dcb-9129-2921a69eead7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a8eb764-7b50-4233-b50f-539abcdb8fca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1c384ee-82c2-45c3-a680-ecdf2b0ff9f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9450d2f5-4484-41a4-a416-05f8dd732be3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b999fdd8-26d8-4f3b-aac6-1a453846e88e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0dfcc4a3-c9ed-4e8d-8a61-9dbe7df44824"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d4c5e59-ef5c-482b-8c7f-36aaa96f862c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "560d2199-0b26-449b-85e2-dbcb7e4cf1e7"
            }
          }
        ]
      },
      {
        "id": "c278a5ab-47f3-4240-b7a7-ccee2acae24f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3a475953-6d97-49e9-8a9a-bb88ba1dd388",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abb2b04a-0318-40d4-a655-e63eb7aeb958",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6520c7c-4745-44fd-ad6c-5fcf639f65a8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d622aacd-fa49-47dd-871e-e9dbcccde88e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8fc0939-3baa-42a4-a77b-5029a6045d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28b24a0-85e8-49fc-83dc-c44288b7f4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad16004b-a6b2-42e1-a705-3207c1adcf47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "075daeba-3b70-473f-88a2-737aca522a52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3b6ff7b-60b8-44e2-9004-474e303621b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d2cc3e-9dda-4981-a839-34e314b18787",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59cb5c36-bda9-4e08-8b22-3492165a8b13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6158cc33-0499-4417-9372-205f3fbf8adb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7a528e1f-cd30-4ef5-a7f0-185644c11463"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "215c65c7-6a24-4b34-ac1a-bd944c523863",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c50a30b2-c26a-4704-b683-600ac02fb02d"
            }
          }
        ]
      },
      {
        "id": "4cde43c3-499f-4bed-8e1b-692488299d17",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eea69057-6ccd-4ae8-8816-d0801652af37",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "207fa62e-8f1d-4eeb-923b-a4f2205f556a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7d859619-c2ae-4433-8956-95e923af0bd8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "522f8686-28f4-4e49-beb8-bd390349f6dd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86ad5cd0-2b0b-43d0-90cb-bc02158d3cdc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.259649122807017,
      "responseMin": 5,
      "responseMax": 246,
      "responseSd": 17.43909561924687,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703378276956,
      "completed": 1703378289097
    },
    "executions": [
      {
        "id": "26bb1c2e-121d-42c9-95b3-0a05120e1d22",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "63136fc7-33ce-4ab1-9781-41e13d8f5d5d",
          "httpRequestId": "73c39a49-7ec2-4d58-a3f0-edad996e1fdf"
        },
        "item": {
          "id": "26bb1c2e-121d-42c9-95b3-0a05120e1d22",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b980f730-872b-430a-9e2d-c3b4d624d04b",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "aedefa37-2552-49f6-8706-67197944bd16",
        "cursor": {
          "ref": "6ebf8450-bddf-4255-bbc2-3c67f456e2e5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0116ffef-46f3-4cc3-a755-124495507107"
        },
        "item": {
          "id": "aedefa37-2552-49f6-8706-67197944bd16",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1a061763-3ec1-4c92-b8fe-728ab93ffb21",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "3a245d92-4616-4542-9c52-ceae1610fb9d",
        "cursor": {
          "ref": "d4520890-494b-4c89-8406-2566241086ed",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "808059ca-4a66-4f34-915e-f031b76be53a"
        },
        "item": {
          "id": "3a245d92-4616-4542-9c52-ceae1610fb9d",
          "name": "did_json"
        },
        "response": {
          "id": "3c1f3d80-0c17-49cb-8498-5a4d5d2db8cb",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4770f353-e647-414d-a428-101c7b575936",
        "cursor": {
          "ref": "06c90e7a-0878-47a7-8589-dedc3c838a66",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3364246d-1139-44cb-9915-a994b7037083"
        },
        "item": {
          "id": "4770f353-e647-414d-a428-101c7b575936",
          "name": "did:invalid"
        },
        "response": {
          "id": "6dd10585-9814-4375-a90b-0e8a957d6e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4770f353-e647-414d-a428-101c7b575936",
        "cursor": {
          "ref": "06c90e7a-0878-47a7-8589-dedc3c838a66",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3364246d-1139-44cb-9915-a994b7037083"
        },
        "item": {
          "id": "4770f353-e647-414d-a428-101c7b575936",
          "name": "did:invalid"
        },
        "response": {
          "id": "6dd10585-9814-4375-a90b-0e8a957d6e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfa2075-9572-4e16-934f-05ffcab7fa68",
        "cursor": {
          "ref": "f014fb4f-4590-47b6-9c7a-20ad1625f2c1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7f7746a4-d770-4be2-856b-dbcb4d8340f2"
        },
        "item": {
          "id": "abfa2075-9572-4e16-934f-05ffcab7fa68",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cdbede59-e91f-4bd1-b683-d4d08b5ee916",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e516d3-6b91-4142-90ae-bbb5977aa999",
        "cursor": {
          "ref": "e2d34b3b-70db-40fa-a89b-e1b8f2e7db24",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "32305084-d237-4767-bdcf-75efb8784608"
        },
        "item": {
          "id": "e3e516d3-6b91-4142-90ae-bbb5977aa999",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "66edd9a1-f8e1-4226-9076-9d21b1638751",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1af6c0-3fa1-40a2-bde4-41fa31155303",
        "cursor": {
          "ref": "f353e4c0-6cea-428f-9905-937da65ade4b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a8eefd99-011b-46ab-95d0-e9c1d60340b7"
        },
        "item": {
          "id": "cd1af6c0-3fa1-40a2-bde4-41fa31155303",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c1b897a2-350f-4469-85f0-17c22b0164fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd49196-de0c-420b-85a6-ea2f0e8ebdc5",
        "cursor": {
          "ref": "9b1f14c8-64e2-4005-b912-0adf98b53287",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "086263f7-5507-4642-8719-6ef53f1a96c6"
        },
        "item": {
          "id": "0fd49196-de0c-420b-85a6-ea2f0e8ebdc5",
          "name": "identifiers"
        },
        "response": {
          "id": "b2ac2364-ad81-49f0-b802-b876e7ab35cb",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f175e1-ebbf-4bc9-9398-1ecd8115c42b",
        "cursor": {
          "ref": "9f7d602a-0f67-4ff9-91b7-19915091dd39",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f3554c91-3ff4-40c1-abf7-a021a2c9f048"
        },
        "item": {
          "id": "26f175e1-ebbf-4bc9-9398-1ecd8115c42b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ec30a38f-163e-467f-8a0c-5bb4173c8ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bd14ef-f9b0-488b-895e-edd34b19b32e",
        "cursor": {
          "ref": "d17c62af-d2d6-4033-9829-a1bedf428962",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d0ac23c4-1c97-4f38-ad21-a0ec186ed924"
        },
        "item": {
          "id": "e3bd14ef-f9b0-488b-895e-edd34b19b32e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c9ea0e9d-a768-4a2b-b6a1-547cb097c971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b01e316-2b7d-4f14-aa40-30cae7cd7469",
        "cursor": {
          "ref": "81887595-bebf-4010-8b2f-c124f356d6e5",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5d98cb6d-e3de-4134-b74f-ab866bc65a49"
        },
        "item": {
          "id": "3b01e316-2b7d-4f14-aa40-30cae7cd7469",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "58137ecb-6059-4ea2-ab03-1ac85459e4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3266339-4801-499c-8c7c-af65008f788d",
        "cursor": {
          "ref": "22f5882f-8a1c-4805-98b3-7b8c5d9d52d7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8efcfc23-742a-4011-a06f-0d6b1aff8005"
        },
        "item": {
          "id": "b3266339-4801-499c-8c7c-af65008f788d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "02359100-5210-47b8-b056-33c76308f403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3eff70-50b3-47e6-b22c-6771ef9cf808",
        "cursor": {
          "ref": "8f6b75ba-a996-4ace-ac02-f1b0eefa425f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0ee71b43-4fb4-4c1c-8dac-2384307d984c"
        },
        "item": {
          "id": "2c3eff70-50b3-47e6-b22c-6771ef9cf808",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "357b60e8-01a0-4b85-8fb3-edded0e60494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb042c5e-4d69-441e-b9a5-872e9e6d60af",
        "cursor": {
          "ref": "34d58f11-6e23-4203-a698-b7c2c1f5262f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c63952fe-f86e-4861-af2c-0e48cd5291dc"
        },
        "item": {
          "id": "cb042c5e-4d69-441e-b9a5-872e9e6d60af",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "002a8b5a-1d82-4ef8-9c1f-4c706b525f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fc18a5-2404-49d1-a236-a15de8dc5512",
        "cursor": {
          "ref": "478e8b97-4d17-421f-adf3-aa61fec32cd4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f435ae6e-11bb-4694-8907-4a7cb9aa9809"
        },
        "item": {
          "id": "68fc18a5-2404-49d1-a236-a15de8dc5512",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9c28dfa8-533e-43c5-8988-930dce45db61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44464758-6aca-45c7-aa5d-b8437012e76f",
        "cursor": {
          "ref": "03bd7131-0c1c-4eca-865b-c064d3b8f39b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "adc8b58d-48a4-4bf3-82ea-beeed380fbdf"
        },
        "item": {
          "id": "44464758-6aca-45c7-aa5d-b8437012e76f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "09884cfd-8bac-45ab-af84-ac97698fe02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43666128-df31-43eb-ac22-52fe46e4978a",
        "cursor": {
          "ref": "4fa9a989-ce0e-498b-90d5-2ae0714f749c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f36e5413-3f69-4573-8861-a954e7e72468"
        },
        "item": {
          "id": "43666128-df31-43eb-ac22-52fe46e4978a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "70a1f67e-54c3-4898-ad6d-7386336b02ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702be81a-405f-4ea1-b5c8-bab576a366b9",
        "cursor": {
          "ref": "9fa45ca1-9ab9-4095-8d4d-84ffd3e8dfae",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "921eab76-4d5f-4df1-ab89-08e29a3651ee"
        },
        "item": {
          "id": "702be81a-405f-4ea1-b5c8-bab576a366b9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "13991d7e-18de-4778-ae9b-ad954082e661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637b7b59-5fcd-487c-a69a-b80d08642dcb",
        "cursor": {
          "ref": "38123dbe-7041-4ff1-859f-34a9e892c97e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dc525088-9023-46b4-a0c9-e1c964a7bd67"
        },
        "item": {
          "id": "637b7b59-5fcd-487c-a69a-b80d08642dcb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3af35e2a-903c-40da-ba9a-7cec4044fc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7ec653-888e-4490-baad-1d0de66ca976",
        "cursor": {
          "ref": "cd3a1047-73ff-4770-a1c8-b3756865cf3b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8e660557-56bc-43ec-a282-8b12029b4d28"
        },
        "item": {
          "id": "2f7ec653-888e-4490-baad-1d0de66ca976",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "720cac55-49e6-4234-94eb-a0d2202d61d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b0fc33-1027-47e8-8eef-477be49ad575",
        "cursor": {
          "ref": "1d36d9b8-f953-4d85-b785-17a39052e39c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b0fc5bfa-adb1-47a9-b483-733aeee4b9ad"
        },
        "item": {
          "id": "d2b0fc33-1027-47e8-8eef-477be49ad575",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ca0daefe-56e2-42ec-8e06-464c5f21c35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e3592-81dc-47fa-bd59-75756b13624e",
        "cursor": {
          "ref": "21cf6d69-6ace-48fb-93b8-21d20088271d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3ca09bb2-67a6-4c77-b348-ad56286537e3"
        },
        "item": {
          "id": "740e3592-81dc-47fa-bd59-75756b13624e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "21904518-d787-449a-a383-00d11ac33807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd02c17-e82a-4107-a128-c2c14b43eae4",
        "cursor": {
          "ref": "71092f63-55ec-4482-a677-6580c56bf3dc",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0a57c162-34a8-4f31-8e38-0ce2e46c6a0f"
        },
        "item": {
          "id": "cfd02c17-e82a-4107-a128-c2c14b43eae4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cd0e31ec-516a-45b9-986d-839a2776ec37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94265384-92bf-4f50-8c76-d1ff3c754def",
        "cursor": {
          "ref": "02f7b91f-5c12-4f15-a8ae-cea3505c9932",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "08cdbd25-f330-4e74-88b4-cf4d995ae2f8"
        },
        "item": {
          "id": "94265384-92bf-4f50-8c76-d1ff3c754def",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "432bd898-4ada-4aa5-82be-12ceac93e849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636a6191-4bcd-489e-b364-6b68f7706b20",
        "cursor": {
          "ref": "b37e78d9-b28b-432a-a83d-e11a9dc287e3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8e7dafbe-4700-4871-a3f1-ed3a6bc579d7"
        },
        "item": {
          "id": "636a6191-4bcd-489e-b364-6b68f7706b20",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "16adaa41-2d14-4ff6-9fc0-6f13f25c6991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc30259-5f08-4088-ba9c-3dba3b8cc054",
        "cursor": {
          "ref": "0a96dad1-db84-43ba-bb7d-58fb61434ee9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1525c907-b4dd-445b-b709-b0b526d22b84"
        },
        "item": {
          "id": "8dc30259-5f08-4088-ba9c-3dba3b8cc054",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b9e051f1-4d07-4b47-8b67-9ee06e662b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbe4970-a00c-4fe8-9460-daf485cce8bb",
        "cursor": {
          "ref": "91ad77e9-f3d8-448f-a5cd-f987ce998417",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1e68438e-d96c-4e74-a022-3a9463726af3"
        },
        "item": {
          "id": "2cbe4970-a00c-4fe8-9460-daf485cce8bb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "27bcc535-151d-40d7-bb2a-b5af84c68dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760047cb-6000-4bcc-ad83-7c549a0aeff7",
        "cursor": {
          "ref": "9d45cb66-4b8c-4600-bff6-c820bdc5c1ae",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "41bbf1e9-c909-484e-a329-b8cfd6a46c35"
        },
        "item": {
          "id": "760047cb-6000-4bcc-ad83-7c549a0aeff7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a2b837e-147d-4898-a32a-901fd5f63f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b13531-e35d-415c-9427-28df4375f3a8",
        "cursor": {
          "ref": "2e80ed98-3843-4a8f-ab6f-e6b9190383f8",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5fb41de1-0b5c-4f2e-a043-d9196e155f3f"
        },
        "item": {
          "id": "86b13531-e35d-415c-9427-28df4375f3a8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b3a8f5e8-6775-4a87-b2bd-75d4dc19aec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df9894f-35c8-4794-bcc4-3987109b63e2",
        "cursor": {
          "ref": "092c5225-e58c-46dd-a73b-d4e643dc4bfb",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "442c983c-072d-4f18-ab3f-1ffb5c43b1c1"
        },
        "item": {
          "id": "5df9894f-35c8-4794-bcc4-3987109b63e2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "14c17293-6794-403d-971c-5f84fc7ed2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012aeaa4-1004-4c98-b71e-b3ddbb38ae2c",
        "cursor": {
          "ref": "dc0e6b57-1ccb-4a17-966d-cfaf2049d929",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "da353163-3ba0-4931-a228-01a4a8617517"
        },
        "item": {
          "id": "012aeaa4-1004-4c98-b71e-b3ddbb38ae2c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "015a7be5-9cf7-45db-9587-a479879a387e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f315ef-6c48-49fc-b428-50f58799c078",
        "cursor": {
          "ref": "9ea28fe2-798a-4d20-bb9a-439cefc9bf75",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4f11d1ff-e49a-4db4-86cb-f2eba2178c0b"
        },
        "item": {
          "id": "a9f315ef-6c48-49fc-b428-50f58799c078",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "06aef11d-3e4a-427a-a9df-82c90441a3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e41a5b1-36d2-40fb-9095-af4eda5b25f0",
        "cursor": {
          "ref": "29eb0c33-ba04-471f-bba3-88ed0543eed8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "773b1fb4-48fa-46d6-a20e-d8e854b8038e"
        },
        "item": {
          "id": "8e41a5b1-36d2-40fb-9095-af4eda5b25f0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "177a9bb1-370a-4039-b542-80a9ded05fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3831a96-b4f1-4b9d-a5f8-01beb4d48ec0",
        "cursor": {
          "ref": "7708b6b2-efa0-4513-89ba-a6826024e8ac",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4a7371f9-cf94-44c8-a92d-400d2ec0d91e"
        },
        "item": {
          "id": "d3831a96-b4f1-4b9d-a5f8-01beb4d48ec0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3adcf4d8-24e8-4311-be69-370ab21343ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a15ae9-5ca2-48e5-b80b-3240f132a57d",
        "cursor": {
          "ref": "2cfe0cf6-1a2a-4c4c-9b51-cad558fe0b4b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7dfcfb10-2b77-4cbc-bc15-4478f9127485"
        },
        "item": {
          "id": "08a15ae9-5ca2-48e5-b80b-3240f132a57d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "aa243865-820c-4993-8ca5-48a419e23308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267ffca0-a4f2-4cc2-89a9-d1d0c1e4ad4d",
        "cursor": {
          "ref": "75373875-8552-49ba-a5b8-54109c094f2b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d9259d9e-7135-45e1-9bdf-e822f9be7866"
        },
        "item": {
          "id": "267ffca0-a4f2-4cc2-89a9-d1d0c1e4ad4d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "027c7429-e01d-4794-91b1-f8b913047b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacbf4c0-f97a-4790-9c98-c5cf073524ac",
        "cursor": {
          "ref": "bceccb57-7ede-4893-8ab2-182f0c9ab0a6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eecabd14-f792-4c78-bb86-3ba8469919b5"
        },
        "item": {
          "id": "dacbf4c0-f97a-4790-9c98-c5cf073524ac",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a9ca05e1-e452-4f3a-8bf4-fef80a31b0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56450ba-d57c-45f7-ba1d-7258423a7917",
        "cursor": {
          "ref": "a81413d0-33ca-42f5-9126-934a09eff561",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4dbc2033-8afe-41b8-a86c-bd1b443ac632"
        },
        "item": {
          "id": "b56450ba-d57c-45f7-ba1d-7258423a7917",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6d939e97-d289-43a6-b324-72d2c154b7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d615d4-8c6e-4151-8e3f-41cbd5eb9c61",
        "cursor": {
          "ref": "51bd61f3-7f83-4ad2-94a4-56f0607e1619",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f63349e3-7693-46bb-810c-3173bc4a0be4"
        },
        "item": {
          "id": "25d615d4-8c6e-4151-8e3f-41cbd5eb9c61",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4e2b112b-6367-4ae2-95e1-15293db4ff28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab421ee1-8f61-472f-9fb5-c3b5da51b694",
        "cursor": {
          "ref": "d5197093-bc1e-4f00-a860-8e0b530fe708",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fbba9863-42a1-42dd-91e4-5e4cb22d40fa"
        },
        "item": {
          "id": "ab421ee1-8f61-472f-9fb5-c3b5da51b694",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "405e55ed-4862-4bf1-bc20-e98c0bd3fa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56453959-a3e6-4b81-93d3-f0a95bad7368",
        "cursor": {
          "ref": "352abf6c-1395-4148-b804-4b5a9051f0bb",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9d655499-65c6-43a2-b43b-9cdd4adbbec3"
        },
        "item": {
          "id": "56453959-a3e6-4b81-93d3-f0a95bad7368",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f45600b8-fec7-4e0d-ba0b-24feb7e69abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d1358e-e73e-45ed-b991-6f211b244b76",
        "cursor": {
          "ref": "8a4d86bd-81ca-4e21-913c-8735833e6686",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "86c73340-600a-4a03-938f-a7bc9dea2df8"
        },
        "item": {
          "id": "02d1358e-e73e-45ed-b991-6f211b244b76",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a368665a-2725-4d1d-b18a-9af9b96f298a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55469127-ec5b-4ec3-9a08-ac0493890bd0",
        "cursor": {
          "ref": "a8440d92-432a-40fb-94bf-ddc291021218",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fac1a96a-3b2e-47cf-ae89-2c5f4e093323"
        },
        "item": {
          "id": "55469127-ec5b-4ec3-9a08-ac0493890bd0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "19b2ae59-12ff-4849-bf31-c8d7af71014b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08f2927-9bcc-4d10-88f0-55a92222d414",
        "cursor": {
          "ref": "c7515809-a1aa-4d31-b164-4f66ad879d04",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fa911f04-783b-41ee-887d-731899c13ed1"
        },
        "item": {
          "id": "b08f2927-9bcc-4d10-88f0-55a92222d414",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb555b61-aa00-49b8-b096-fda758b3c8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feccd986-7638-49b4-bcef-0bab6a5ac50b",
        "cursor": {
          "ref": "3f4f9a4c-77ba-43a9-8822-cf793520e0db",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "25eb9d66-280f-4af0-9edc-672a03cca4b1"
        },
        "item": {
          "id": "feccd986-7638-49b4-bcef-0bab6a5ac50b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ec03d397-757c-4d8a-9a1c-d53438af0cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1596c683-5a82-4d9b-8e0e-dc9c3532792a",
        "cursor": {
          "ref": "d2303842-a832-4d32-95ff-a9f11010b817",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f22db99f-ab8d-4976-87a7-dc3a7afe9d9e"
        },
        "item": {
          "id": "1596c683-5a82-4d9b-8e0e-dc9c3532792a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0f72658c-6edd-4308-9686-e3df37aa72d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c61b2ec-68f2-4630-9897-6a94a85c3bff",
        "cursor": {
          "ref": "6803ea4c-79c7-4a99-899a-c651e9b5ac6c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e10ff1d5-62fd-47a9-ab73-afcdc01bdbd4"
        },
        "item": {
          "id": "1c61b2ec-68f2-4630-9897-6a94a85c3bff",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f375eb58-4ba2-461f-aa88-40c4a5da9f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac846f6-0be7-4334-b47b-e5f1a2d09bd3",
        "cursor": {
          "ref": "d7ab57f8-01db-40eb-9620-e27344609042",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e8db414f-9fdb-4cc7-b7b0-3e496b86e21e"
        },
        "item": {
          "id": "eac846f6-0be7-4334-b47b-e5f1a2d09bd3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "174593f1-8a9e-42f3-b9d9-02acbc8f2f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6fd735-d54b-4700-bad5-364c64a1c317",
        "cursor": {
          "ref": "b2052e7a-e5f3-41bc-bfd2-16a09ec8d5bb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3dfe49ce-876c-4ff7-a91e-173a51e34390"
        },
        "item": {
          "id": "4b6fd735-d54b-4700-bad5-364c64a1c317",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5e13ca31-0158-452a-9aa9-1fa0a5b22fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f83d52-475e-4eec-a52f-3c02effdeb65",
        "cursor": {
          "ref": "abad1399-d434-4bfc-b8b0-30bb147394ce",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1838a60d-d70a-43e6-b170-6f820d49a851"
        },
        "item": {
          "id": "93f83d52-475e-4eec-a52f-3c02effdeb65",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6bd1d12d-0e50-420d-a40f-ff8cc638e9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4afe01-8dbb-4ea9-854a-9cafffc8e275",
        "cursor": {
          "ref": "402f26b1-a69f-4ac8-a736-224a75f42a3e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "00ef62bc-893a-462d-8de7-bb69f159fc52"
        },
        "item": {
          "id": "9e4afe01-8dbb-4ea9-854a-9cafffc8e275",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3c4f834d-03e0-4c14-ae1d-248df03c48a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8bbfc2-b535-4809-8caa-974cb4b9c4c7",
        "cursor": {
          "ref": "b4fbc556-ac1a-42e2-87ad-d969bbcbb678",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cbb2f337-ca2b-4772-b48b-237c242fc019"
        },
        "item": {
          "id": "6e8bbfc2-b535-4809-8caa-974cb4b9c4c7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "244994e0-6764-4ae9-aeec-be73aed63291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04578dfd-8ea8-427a-98eb-35ac916afe0a",
        "cursor": {
          "ref": "c5087f07-6706-4393-b20a-d78e384e055d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c3e9434f-3ba8-49f4-a064-3cace6ef78de"
        },
        "item": {
          "id": "04578dfd-8ea8-427a-98eb-35ac916afe0a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7b1c7f92-2a0c-454e-ab33-ac9b984e0fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ab682f-822f-4bb9-8907-950a4a16c91f",
        "cursor": {
          "ref": "10250ea1-57bd-4331-a3b9-fad867e293bb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "06c269c2-dfd3-47a4-a064-e11a1d6f77f0"
        },
        "item": {
          "id": "20ab682f-822f-4bb9-8907-950a4a16c91f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3c56847c-b6e0-4003-b16e-3a1e116f7f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22d97ca-9525-4497-9393-c26c4e4ff440",
        "cursor": {
          "ref": "41592cc8-05f2-48a7-9ffb-27ec703e3e28",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2b675b78-3670-4dfc-8b29-0a5cb4d96218"
        },
        "item": {
          "id": "d22d97ca-9525-4497-9393-c26c4e4ff440",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "16a1e7d7-130e-43fe-9559-a6ce2ce26c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf3df86-b98d-4fa2-8494-7f6bde306e8f",
        "cursor": {
          "ref": "b9af7f3c-0297-463e-8358-4f39818fe558",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d656b877-d54b-4b0e-ad33-ae6e1a32b3d0"
        },
        "item": {
          "id": "8cf3df86-b98d-4fa2-8494-7f6bde306e8f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e9826fbb-310e-4697-a294-e29c01e111a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126b418a-9166-4b17-9de4-c0eefbff12ab",
        "cursor": {
          "ref": "89c7958b-9815-44a7-9074-6c5f4ce59cad",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7a7fd340-87c5-4a9f-91cc-15423f37b868"
        },
        "item": {
          "id": "126b418a-9166-4b17-9de4-c0eefbff12ab",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dce8f253-d51a-41a6-b4f8-4cd4db35c520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f66d9b-7fc4-49ce-9d37-aca39dcf351e",
        "cursor": {
          "ref": "cf6cc39f-1e3b-4ff8-84fa-b0676ef54a70",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "78ce1564-e690-40a6-b776-7c3e1ee0c021"
        },
        "item": {
          "id": "f3f66d9b-7fc4-49ce-9d37-aca39dcf351e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "84225c2e-0ef7-4d96-b36a-0377798dc367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f05819-b81d-4bae-81ce-0ec9cd339957",
        "cursor": {
          "ref": "4c57e568-5f0b-4210-98df-78d91917cfff",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e60ce783-c99a-46b8-a920-7d6d99c6171a"
        },
        "item": {
          "id": "76f05819-b81d-4bae-81ce-0ec9cd339957",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "427193e4-0f16-4cfd-8d7b-0be11f053afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b558654-03f8-46c1-a0ea-5c0633653342",
        "cursor": {
          "ref": "17d29e52-954d-4e6d-8d86-ff3fbf9ed3cb",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8edd2a00-15c2-456e-b759-3c780dd9158f"
        },
        "item": {
          "id": "1b558654-03f8-46c1-a0ea-5c0633653342",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "57bfeb0e-d773-49d9-b873-7b99c0d04687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3446d09-82c8-4253-8a72-57d058041093",
        "cursor": {
          "ref": "44c130f5-4123-477d-8e4a-369467f1a7d9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "97ef94b3-aba9-4dec-b5b0-091127f66ed2"
        },
        "item": {
          "id": "b3446d09-82c8-4253-8a72-57d058041093",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "78496f0e-dff0-4a5b-b3f0-29a1867fa20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff01cf6c-0986-4a9a-b8bf-fb071237f6ae",
        "cursor": {
          "ref": "f9b0aead-91d1-4e2a-abe8-431f19eb61c2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0033e7a0-d340-4376-b24d-c77986b34d6c"
        },
        "item": {
          "id": "ff01cf6c-0986-4a9a-b8bf-fb071237f6ae",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b2e2df1e-dbca-4b24-b5ba-3fbc32f77491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc8e304-5398-4e74-a13b-8e820f94eafa",
        "cursor": {
          "ref": "9d10dc53-4060-4dc3-9d63-9140998943f0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d571d6c1-2a1c-4bf8-9bfa-fad5abdc77b4"
        },
        "item": {
          "id": "2cc8e304-5398-4e74-a13b-8e820f94eafa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2381de93-bc84-4355-a09c-e73fb918e95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69152575-f4e0-40a4-b694-bc3f6980c073",
        "cursor": {
          "ref": "19764720-5b5f-461c-aa33-2ea48e3c1642",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9d4e4e28-0385-4a63-89cd-777bdb7e552c"
        },
        "item": {
          "id": "69152575-f4e0-40a4-b694-bc3f6980c073",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "02d56515-2191-466a-92f0-b6efc8aeda99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a46f74-d006-47a0-bfba-e0a3c3f4c031",
        "cursor": {
          "ref": "20216275-7a54-431a-8865-db9fde176aec",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5cadd953-5f99-47f7-b8c6-2392d8918628"
        },
        "item": {
          "id": "f1a46f74-d006-47a0-bfba-e0a3c3f4c031",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a88b5057-1559-450b-90e7-0d1e6710eeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32c80bc-2367-4e3b-a11c-ee0b0c6a1827",
        "cursor": {
          "ref": "e2cb4bb3-404a-400e-ace7-5cbb6703a4c4",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b44220cd-b5d0-4dff-b4c8-b33060872149"
        },
        "item": {
          "id": "e32c80bc-2367-4e3b-a11c-ee0b0c6a1827",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f079e0b6-c347-4541-8380-55ed5d843903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f37b60f-dc73-4e38-b0a2-e79312661566",
        "cursor": {
          "ref": "458b6fed-03e8-485c-9910-2e240d363b85",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9005eee2-af19-4d24-8614-f35edcba6ed8"
        },
        "item": {
          "id": "0f37b60f-dc73-4e38-b0a2-e79312661566",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "22b9ff22-5418-464a-b95b-a51a3e874c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974baec6-3607-495f-9e45-61099b5e6060",
        "cursor": {
          "ref": "3ae6a660-1851-4b1c-ad3f-de8ef4126b88",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e679e8b-bad5-4189-bc63-f80ee2f73a91"
        },
        "item": {
          "id": "974baec6-3607-495f-9e45-61099b5e6060",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7dcb2e51-345f-4b04-ad2f-41311770dc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8bbb37-ef0f-4e75-8e01-2235fe7cd98e",
        "cursor": {
          "ref": "b54aab5c-4886-411c-8f6d-14191323bbd7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eb5a5438-48a5-43b8-a0ae-5d32b6f60551"
        },
        "item": {
          "id": "ae8bbb37-ef0f-4e75-8e01-2235fe7cd98e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aefa89eb-054f-4d9e-9922-64a6c7313047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd0f260-7b35-4770-905b-2c52d923352d",
        "cursor": {
          "ref": "78521dfc-7cf4-4eb5-8d6e-11a8027fa92e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4a991f89-5785-44bb-8eaa-f3eb2b88e638"
        },
        "item": {
          "id": "7fd0f260-7b35-4770-905b-2c52d923352d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a08e3644-3c78-411a-9a79-5639b7ff58a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54832efa-61f6-4bc6-8aa8-caca5c82348d",
        "cursor": {
          "ref": "518a030f-7f68-42c5-8bb1-af9229528e8d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "effce1bd-f331-4237-92da-c1ed650a63b0"
        },
        "item": {
          "id": "54832efa-61f6-4bc6-8aa8-caca5c82348d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "294efb9e-af29-4800-a640-f7acb73d3ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f631175d-2ac2-4c1b-9973-4b867e43dfa7",
        "cursor": {
          "ref": "0476edbb-2bbb-405b-8dc6-73896b833823",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "18dfa7cf-ada6-46c6-8cff-e293e79f4ce8"
        },
        "item": {
          "id": "f631175d-2ac2-4c1b-9973-4b867e43dfa7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "431202a9-7606-4644-a99f-0cb0a2c998ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c01b13-207e-4ee1-9409-d173d4918643",
        "cursor": {
          "ref": "b58e731a-eb10-4cd3-85c6-ae34eaeb7cd1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c98ae9b5-02e6-4530-ad88-c7ae8d56e1c9"
        },
        "item": {
          "id": "c0c01b13-207e-4ee1-9409-d173d4918643",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a08d3743-cc09-4ec0-bfce-37eeb35a3b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67abf650-d9f6-403d-aa1f-92c2b7ef95bf",
        "cursor": {
          "ref": "4ec7ec20-25b5-459e-bf6b-dd157a5f2827",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7fa35f16-3471-48dc-a30c-34df72a4ca4f"
        },
        "item": {
          "id": "67abf650-d9f6-403d-aa1f-92c2b7ef95bf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c7c29357-a54c-4420-8527-2f8773993586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20223179-25a3-46a1-b6d6-58cc9f47aaf3",
        "cursor": {
          "ref": "6351221b-c35d-4a05-ab1a-6196dc489c04",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "461b8d29-e8be-48af-8fc6-fc80a394c6ed"
        },
        "item": {
          "id": "20223179-25a3-46a1-b6d6-58cc9f47aaf3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6a6f0966-26b2-4819-a4ec-3c454431d8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4391b36e-c54f-424a-951e-2580e5202465",
        "cursor": {
          "ref": "0ea48158-7853-4d88-a691-8e9fedcf1046",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3d251713-e601-4173-baff-d385982b8a0c"
        },
        "item": {
          "id": "4391b36e-c54f-424a-951e-2580e5202465",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f5842405-012f-4832-b5b9-f753fe1563eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e2acd8-3ca4-4199-b4cc-19b8b39743e8",
        "cursor": {
          "ref": "cdac2179-8e74-4add-ac29-fa7b4ab1a1aa",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0700116b-df93-4c90-ad78-c0ec60529795"
        },
        "item": {
          "id": "a3e2acd8-3ca4-4199-b4cc-19b8b39743e8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "02db5dec-0ed7-4988-ba30-3e8c649fd57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb27c14d-0340-44ba-8669-959eb4d16c0d",
        "cursor": {
          "ref": "00d0f462-7965-429e-abfd-e335a06b19b7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3cf743d7-bcf6-495a-bbce-082be29c63d1"
        },
        "item": {
          "id": "bb27c14d-0340-44ba-8669-959eb4d16c0d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "709dce10-4fcb-42f6-b33a-d59932d1c8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee78902-6aa7-463b-933c-4479b467e749",
        "cursor": {
          "ref": "8a18af6c-9121-43b5-a530-22e3440f93f9",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "39a08124-6f0e-4a4a-b194-0a61dbdcba41"
        },
        "item": {
          "id": "2ee78902-6aa7-463b-933c-4479b467e749",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "82b0b265-d13f-4c3d-b958-2e50906446cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1f8096-6532-4495-8f01-211c79baac6b",
        "cursor": {
          "ref": "a91e1fc6-2223-4a32-a09f-18a4db36be5b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6adc1c59-791b-435c-964b-cc7ff9d1d074"
        },
        "item": {
          "id": "4f1f8096-6532-4495-8f01-211c79baac6b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "64e147c0-f2aa-4548-bbc6-61a4fe2495cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47423d0b-e6bb-4c03-819a-a2305a3cf48b",
        "cursor": {
          "ref": "37e30551-8ee2-464f-83fb-b19866712a5c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "55be4b56-bae5-4b7d-b271-ce5b59cff95b"
        },
        "item": {
          "id": "47423d0b-e6bb-4c03-819a-a2305a3cf48b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d65917eb-8439-44f2-ae92-3426cbc9135f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca7f34f-e2b0-4a2e-9b9f-d497d8cebe78",
        "cursor": {
          "ref": "efefa566-c383-4a73-bdf0-90f95560d92a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "84c3fc6b-0a22-423a-9dd1-cdb8f184dc81"
        },
        "item": {
          "id": "3ca7f34f-e2b0-4a2e-9b9f-d497d8cebe78",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ed6f0675-ac29-4837-b022-b65dd12f1d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00263ee0-93da-4793-914b-f863e475ade7",
        "cursor": {
          "ref": "7c2997f1-070b-4d86-9b0f-85c314735de7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "95fd505c-9eff-4864-8fe3-5032cbe3a82b"
        },
        "item": {
          "id": "00263ee0-93da-4793-914b-f863e475ade7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c739f7b3-7a6c-4aec-9a63-b828c534a07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cd683a-deb3-4aa8-bc8e-b2d3d605810f",
        "cursor": {
          "ref": "1f61f537-d7ed-44d1-ae77-eae3fbc41567",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4156873a-671a-4429-8de1-1a5f5fd101fd"
        },
        "item": {
          "id": "21cd683a-deb3-4aa8-bc8e-b2d3d605810f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "79a3fd1f-2dba-4fd8-90b0-8e3edc280998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8437c12d-0705-40e7-b8ec-334cb4229899",
        "cursor": {
          "ref": "34b753cf-a07a-4faf-b8e0-f48359d06513",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "713062ec-0fb2-448c-801f-bc0d5210cbfb"
        },
        "item": {
          "id": "8437c12d-0705-40e7-b8ec-334cb4229899",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4c902ee8-2cfb-4ee6-ab92-318a340f6e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba5e10a-4fd6-478d-bd54-a049b35d0f76",
        "cursor": {
          "ref": "f159f082-7602-4f56-90c3-b0ce14991b80",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fd144d10-e71b-45b2-a68c-883059a40df1"
        },
        "item": {
          "id": "cba5e10a-4fd6-478d-bd54-a049b35d0f76",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "42c9c7d1-4f0c-44ff-98b3-eb54ac7d81d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93437f89-cad2-4039-b796-554f65fc4e70",
        "cursor": {
          "ref": "a7f952a4-cea4-49dd-891c-f0b79234fa60",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3dbe4c64-809e-450e-bdd5-4d588d4eadd0"
        },
        "item": {
          "id": "93437f89-cad2-4039-b796-554f65fc4e70",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b8a692fd-252c-4d17-af1d-b1fa2a0dcc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad0210f-d259-4c30-9007-e24a0a287903",
        "cursor": {
          "ref": "e30be63e-6b77-469b-8bf3-8a00f6954aaf",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6a2b083c-d9e2-4b6f-ad99-b2f345a1d99e"
        },
        "item": {
          "id": "8ad0210f-d259-4c30-9007-e24a0a287903",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c8f75f59-7ec6-45f2-be3d-211e8c2db1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4579d5a-6114-4dec-86c0-23a3002ff0eb",
        "cursor": {
          "ref": "85d9cef9-f199-40b7-ab4f-21efd1b0eec2",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a28d6dba-2ec0-4070-8cec-021c74c631a4"
        },
        "item": {
          "id": "f4579d5a-6114-4dec-86c0-23a3002ff0eb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b5affa41-8595-4a98-9068-1ecbb11b3c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2deab3b-92d1-4ba3-8029-d356067b366d",
        "cursor": {
          "ref": "1fd17702-5452-4031-a584-494c30a22d53",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e7586e11-87cf-4688-a570-87fef0c67f0d"
        },
        "item": {
          "id": "f2deab3b-92d1-4ba3-8029-d356067b366d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a0f1e8b9-b45e-4795-b4ae-1f5be546aed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75e03de-2ea6-4d8b-bb0a-baca23d86e2b",
        "cursor": {
          "ref": "10f588cd-5074-4578-ab0e-b8345509d4fe",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "14c8005b-27fc-41f4-8e40-74763240322a"
        },
        "item": {
          "id": "d75e03de-2ea6-4d8b-bb0a-baca23d86e2b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "89d5fe52-aac3-4b82-a876-815b93379501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412324f0-6d17-46fc-b61d-ad72519e174e",
        "cursor": {
          "ref": "6cedfe5e-cfdc-474e-bdaf-0fa7bf4e8755",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "747482db-85de-4e7a-803b-f10db075e93e"
        },
        "item": {
          "id": "412324f0-6d17-46fc-b61d-ad72519e174e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2ab4ecb5-d7c4-4fbe-8e08-1e0371bfe60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6b5540-515e-4bc1-ab44-53b25290ba91",
        "cursor": {
          "ref": "0d797efc-d19b-475e-8b18-b0033b1eaf14",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4e0389db-a347-4739-9ac4-2b1c9a0487f3"
        },
        "item": {
          "id": "bb6b5540-515e-4bc1-ab44-53b25290ba91",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b886efe8-3e32-4d9c-8f95-f602844d4503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5997fd7c-e168-4e18-9798-2dd71224667e",
        "cursor": {
          "ref": "9817d4de-17f6-450e-8981-58c5523aedb2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1d0da7e8-cd04-4b46-9b14-5dbccec0d228"
        },
        "item": {
          "id": "5997fd7c-e168-4e18-9798-2dd71224667e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "51696656-2eae-4901-bded-b58ef0fdd265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb82c86-2968-4cac-8077-e582f4d8de8a",
        "cursor": {
          "ref": "904eba58-16c3-49f6-a712-fcc3cd2e2ddb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a5acb58f-de0b-4e2f-8772-fe840d94b676"
        },
        "item": {
          "id": "9cb82c86-2968-4cac-8077-e582f4d8de8a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f0fa2624-32d9-46f7-a269-757ac91ebe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07645d40-d05d-46e4-a66d-d24aea78d9d8",
        "cursor": {
          "ref": "b628dad9-2ed7-45bb-8f31-7e6fb2c2e2a9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2e415013-59ac-4af4-aacd-a112a4334867"
        },
        "item": {
          "id": "07645d40-d05d-46e4-a66d-d24aea78d9d8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "546d5021-6477-4c37-91dc-8d63e8eb18b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4c959b-34ec-4022-b9c6-a30c94dcddcd",
        "cursor": {
          "ref": "0d16e49a-06a4-4181-9895-cb6ae80dd826",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "014fd6f9-97f0-43f0-991b-c1e0bf332064"
        },
        "item": {
          "id": "3b4c959b-34ec-4022-b9c6-a30c94dcddcd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "56038052-1462-47d8-9217-9328ff8a8b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c4b58b-62af-4419-970d-c5d2e8d52ff2",
        "cursor": {
          "ref": "a7a791be-e43e-448a-98a7-191da3a46d26",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "35a4a806-995f-41e7-872e-40da8dce314e"
        },
        "item": {
          "id": "81c4b58b-62af-4419-970d-c5d2e8d52ff2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e6308f1a-9d0c-4dc1-81a4-59175fa55cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b71c59c-fbcb-4ae2-9ff2-a6b1af9f4fdb",
        "cursor": {
          "ref": "9a92d3c7-c26d-4389-b295-a93b0a87bf03",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2ea16c42-bf89-4ed2-82e6-e97ad61c9fc3"
        },
        "item": {
          "id": "7b71c59c-fbcb-4ae2-9ff2-a6b1af9f4fdb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eec2960d-bcf5-4835-b37a-fcf30d2343ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654c3b9d-f05d-4a1a-9019-e04a6df99da7",
        "cursor": {
          "ref": "06e90078-5be8-4964-b0a6-d0252db3c88c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "df66d9fe-e08e-4983-9ad6-14dc81c3cf14"
        },
        "item": {
          "id": "654c3b9d-f05d-4a1a-9019-e04a6df99da7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0b6c4e77-ed8c-48b6-9d22-302991b49bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1514157-1e64-4ef9-837f-81777300dbdb",
        "cursor": {
          "ref": "dd233bbb-840b-4fe9-85e6-976a1d0cc338",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6aec9ef1-d544-4c69-98aa-1f8c02d04b1d"
        },
        "item": {
          "id": "c1514157-1e64-4ef9-837f-81777300dbdb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3b7897a7-7bdb-4f09-8834-6edce33a954c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b8e94f-6b44-4a17-91c9-e2dc7e67801c",
        "cursor": {
          "ref": "b74600f9-1ac1-46d8-ad0e-a2e4705aed1c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bbfb4502-2069-45cf-aec5-0b96367c5d40"
        },
        "item": {
          "id": "d2b8e94f-6b44-4a17-91c9-e2dc7e67801c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8583023a-77a7-4b2e-b590-0f7c6df21b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ac86a217-6eaf-41b9-adad-3ad96ae3ea0e",
        "cursor": {
          "ref": "ae8e6cb1-ce41-464a-a53c-705adb058df3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "46c3ae64-e894-4cf7-8b00-8687c945046e"
        },
        "item": {
          "id": "ac86a217-6eaf-41b9-adad-3ad96ae3ea0e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d1a82937-c76e-4948-b023-58d3112d9287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a12ba84e-36d6-47bb-a504-41cccecf3788",
        "cursor": {
          "ref": "77080b2d-38c5-436b-8efa-50677b7e63b2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ea055fe6-b2bd-4598-84b0-74bdfbb3b313"
        },
        "item": {
          "id": "a12ba84e-36d6-47bb-a504-41cccecf3788",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "39b03c28-b7ac-4e09-9262-2f46e4b9bc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ef501ab7-b010-40cd-931b-c0e091646867",
        "cursor": {
          "ref": "0c9539a0-5a66-405b-ad00-48177b5339e1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "554662d1-d0ce-4f23-b9e3-91b0990038e6"
        },
        "item": {
          "id": "ef501ab7-b010-40cd-931b-c0e091646867",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "03ddacb9-e643-43ea-8d46-8116bf4e807a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b935d534-179a-4f7b-80fa-c96682fa358b",
        "cursor": {
          "ref": "32fd16e7-5d67-42c3-81c6-7cc020696a81",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5cabc1e2-18af-4ede-8ce5-3d80ff6d72cb"
        },
        "item": {
          "id": "b935d534-179a-4f7b-80fa-c96682fa358b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5fcea356-0225-41fc-b2fd-ecbc21e0f7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6f58c4d6-5901-4527-8937-0a4ce53c064d",
        "cursor": {
          "ref": "4cd32280-f47e-44cb-922c-cfc076f879c2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "19ff15b3-e3b2-4ef1-b3ad-3a377a44d429"
        },
        "item": {
          "id": "6f58c4d6-5901-4527-8937-0a4ce53c064d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "95524377-751f-42b5-809b-d36de65bd924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8583e83f-8589-4237-b2d1-7f326dca3a6b",
        "cursor": {
          "ref": "e9629459-5590-4588-b3ac-85126f45dd5b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d510c7a3-e84a-42c4-8b6e-efab798119f6"
        },
        "item": {
          "id": "8583e83f-8589-4237-b2d1-7f326dca3a6b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8e79bb3d-2c05-49be-8538-7b7f80fba6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4e31585d-c0f2-4d63-b3ca-c37733a4ffe5",
        "cursor": {
          "ref": "c1b27b22-b31b-44ea-9ca9-6fdc3f929407",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0d62134c-6e83-4895-b2e5-0fee5c7a3b09"
        },
        "item": {
          "id": "4e31585d-c0f2-4d63-b3ca-c37733a4ffe5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af696f8f-e086-447e-a8bf-3f8c221a26df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff5a183-4360-4e74-a227-1b33972333f1",
        "cursor": {
          "ref": "3aca9226-b9b6-4939-b64f-91f538779fe8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f8683927-805b-482e-837b-5f7f5ed1f341"
        },
        "item": {
          "id": "8ff5a183-4360-4e74-a227-1b33972333f1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "51dbfd7e-273c-48f1-86a5-00328c5584e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657b115c-2e5c-4224-87ac-6d8ee632e04e",
        "cursor": {
          "ref": "e4f5c79d-fbd3-4fd9-a5c6-ebb30bc7b353",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2a4aa439-b8c8-4f10-940f-4acdd7fff087"
        },
        "item": {
          "id": "657b115c-2e5c-4224-87ac-6d8ee632e04e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0eac38c5-8fc7-4ee6-b4e2-59fd27f24011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454cac15-a734-46b7-91de-4ad69b720942",
        "cursor": {
          "ref": "e21ad52a-6576-4a8c-95ac-1c006a1f02e0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d3b93230-cb95-403b-92be-f8221f182617"
        },
        "item": {
          "id": "454cac15-a734-46b7-91de-4ad69b720942",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d70b1979-43b7-4fc1-be55-7a00d46615bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a6c25b-c88b-4696-bff8-80a48249a74f",
        "cursor": {
          "ref": "71ace8a5-7f2e-4ae7-b666-5f4f17746046",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "242b7944-76b7-40fd-becd-8d1822f90e92"
        },
        "item": {
          "id": "87a6c25b-c88b-4696-bff8-80a48249a74f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66699d68-3b1a-4345-b0bb-8c8a36bc9232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdaebd8-3d96-4de5-b13e-561e6550b847",
        "cursor": {
          "ref": "99610689-11e0-4638-84c9-a3d13ebf8b53",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "db802cf8-e6a7-415d-b67c-e8016aaf8504"
        },
        "item": {
          "id": "8fdaebd8-3d96-4de5-b13e-561e6550b847",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8ba3bde-47e9-4415-8bb0-6785a82fdf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006de099-81c0-4b4b-a4f7-cb775e8c7f74",
        "cursor": {
          "ref": "4f7764c2-7fdc-4e44-bc55-76a084e02a2b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4b0cc78a-8b18-4f69-802e-acac3b3baf0c"
        },
        "item": {
          "id": "006de099-81c0-4b4b-a4f7-cb775e8c7f74",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da0e0434-f584-4708-a53c-71117412cded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc0b026-bb9c-45bd-8e63-278461775006",
        "cursor": {
          "ref": "320b4514-ab26-42bb-8f73-45218562b947",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "552826de-f8c5-4c43-8073-dfd497b987b3"
        },
        "item": {
          "id": "4cc0b026-bb9c-45bd-8e63-278461775006",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a936745b-ece2-4584-80aa-70c21a936f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae60c78-2665-458e-875b-b96383f676ce",
        "cursor": {
          "ref": "a113260d-d6a9-472a-a704-f34cceadccb0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "96211fe2-8f84-450e-a06c-59da3c532a33"
        },
        "item": {
          "id": "bae60c78-2665-458e-875b-b96383f676ce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1c2391fd-0420-4d85-a0d8-f11f95c18431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bee3794-a9af-42ed-a502-6005e15d1365",
        "cursor": {
          "ref": "50f638f5-0fc7-45de-b6f0-dbff0914cc79",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "194503dd-d987-41c8-beee-bd245778de76"
        },
        "item": {
          "id": "8bee3794-a9af-42ed-a502-6005e15d1365",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3ca2d7a4-80f0-4f34-8adf-d207f836da2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74232f1a-8fd1-47f7-8c4f-25ae446de10d",
        "cursor": {
          "ref": "10ab1c23-e256-4e57-855d-f77f8bd2a8a9",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "96800fea-13b8-4cce-8889-9b5813ed4f83"
        },
        "item": {
          "id": "74232f1a-8fd1-47f7-8c4f-25ae446de10d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "10226011-c23c-48de-912e-0be1f95e89d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4332fbe2-ab35-4d44-9852-17aaa5a37671",
        "cursor": {
          "ref": "341d427b-0864-4d28-8348-daf6b5fb0c94",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3b19b097-76b0-43de-a425-7a207ab149ca"
        },
        "item": {
          "id": "4332fbe2-ab35-4d44-9852-17aaa5a37671",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9abcb3fe-207a-4185-a78d-1ad50b07a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed17eba1-913f-49d9-8066-26e54e6408f5",
        "cursor": {
          "ref": "8ce845bf-36d5-4146-ae1b-9e63ddfd2133",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ead1dfc-584e-4653-a9e3-47d2d4c006a1"
        },
        "item": {
          "id": "ed17eba1-913f-49d9-8066-26e54e6408f5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1a1e0728-49d0-427f-a48e-5fe03e15f3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f70a9cd-fef2-4ce2-b7ea-46bacd93e3ad",
        "cursor": {
          "ref": "b86141d0-ef8b-4fc2-bb7e-7f8b42d9a1e8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5fa80342-020c-4d2d-a729-4fc7d3071e48"
        },
        "item": {
          "id": "2f70a9cd-fef2-4ce2-b7ea-46bacd93e3ad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3a026af7-76c3-468f-a3db-5d1293f65ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54614545-ae64-460a-b72d-8e2f153a9db2",
        "cursor": {
          "ref": "db9839c6-bbb4-4c85-a8fd-5e74febfe27a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3eccb6e6-9f83-4d66-94d9-de0a0157b029"
        },
        "item": {
          "id": "54614545-ae64-460a-b72d-8e2f153a9db2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e2eb2289-1f6a-466c-9fa6-34fbf48d53dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76f12ae-e93c-4556-b4a3-836426e7c178",
        "cursor": {
          "ref": "cabfa178-16c5-4b67-9acb-417a9c807a1b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f7452cf3-687a-497f-a143-7da69dbef702"
        },
        "item": {
          "id": "c76f12ae-e93c-4556-b4a3-836426e7c178",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "229a9ac7-6fbc-49dc-9175-be6f8e64cbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af62d6c7-5b04-4ce6-80d1-67cdb69e15b8",
        "cursor": {
          "ref": "373437a2-8e88-4e2c-8046-d69b75aaef85",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3815cb5e-4234-4e60-8c93-64cc758dc74c"
        },
        "item": {
          "id": "af62d6c7-5b04-4ce6-80d1-67cdb69e15b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4582acfa-8a5f-4170-ae4e-3c8511e2265a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483ffbb4-132c-4e85-aa76-7cf94ab8eaf8",
        "cursor": {
          "ref": "84e496f8-a8c4-4024-ae08-9435e2185054",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6c83ff73-2a2c-42b9-b3bd-588d00acbe79"
        },
        "item": {
          "id": "483ffbb4-132c-4e85-aa76-7cf94ab8eaf8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d810439d-8303-4088-9a22-7802bf5667e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad88d41f-7556-40f9-abe6-b79819eac1f7",
        "cursor": {
          "ref": "35017cb6-6d21-4467-bf60-14d81c2b560b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "65784bfd-2183-40b6-9db1-4600ed6a9cc0"
        },
        "item": {
          "id": "ad88d41f-7556-40f9-abe6-b79819eac1f7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "af50da1c-f965-42db-acf4-505a51859a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1256528e-41ee-4c6c-be2e-e5f28bfcc2c0",
        "cursor": {
          "ref": "42c7b341-59f8-4926-ac92-4de6a17f2cd2",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7abe3ccc-16a7-4f25-9bda-b3369a59470f"
        },
        "item": {
          "id": "1256528e-41ee-4c6c-be2e-e5f28bfcc2c0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d249f909-4700-4643-92e5-d8695521df49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105edc4e-0a7c-42bd-b429-ad5e01d83b52",
        "cursor": {
          "ref": "918fac19-4680-471b-b2ea-337ae731da51",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cbc4fa6d-069d-4aff-a5b3-fd8b21d3784e"
        },
        "item": {
          "id": "105edc4e-0a7c-42bd-b429-ad5e01d83b52",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f5e3ddb6-51d6-46e7-b40d-aa66e9f19144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5d4fa0-a0b9-4a15-a67a-ce6080a0da84",
        "cursor": {
          "ref": "9f8ea234-0943-416b-bc43-5f5b49425a55",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fe96c087-ba70-4d42-b787-c136bdb52cb0"
        },
        "item": {
          "id": "cf5d4fa0-a0b9-4a15-a67a-ce6080a0da84",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df8eed05-18b1-4a95-ac1a-0308b149b89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6fe2da-6ffb-4206-87d1-01db1e3d8341",
        "cursor": {
          "ref": "9f9a5e58-12dc-4b37-a560-35e832c275ec",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ebb2bb6a-7934-48d8-9f70-0621627b05bf"
        },
        "item": {
          "id": "5c6fe2da-6ffb-4206-87d1-01db1e3d8341",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cc4cd5f5-1f9c-41dc-b2b1-f29dd2b5a1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af9b9b4-cfb3-4b93-b3b1-775692c13adb",
        "cursor": {
          "ref": "88b4c3c7-821c-4b9d-b19c-4bb62199956d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cd7030a2-59bd-4c22-931f-59c6aff74155"
        },
        "item": {
          "id": "8af9b9b4-cfb3-4b93-b3b1-775692c13adb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4c77ca56-f057-44d9-ba10-967fff98e516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff26a6c7-6023-42fc-8230-54ffb7612f59",
        "cursor": {
          "ref": "c4d9e2f5-68f1-4a22-8792-f171159db910",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9681514d-8a7a-48c8-b170-751aa2c5c767"
        },
        "item": {
          "id": "ff26a6c7-6023-42fc-8230-54ffb7612f59",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bbd2d6e4-8db4-411e-aded-686da97ac226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24b277f-1cee-461e-886f-be90ed74c7a1",
        "cursor": {
          "ref": "a3f07bd7-67e1-4c0b-9c08-020a83638632",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "94ca45c9-8d30-484a-abb7-80ab10263fd1"
        },
        "item": {
          "id": "a24b277f-1cee-461e-886f-be90ed74c7a1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c575e4d3-277b-4590-a15b-bce463520c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0469ea-c19b-461d-835c-99b24ae0429c",
        "cursor": {
          "ref": "e4c47d98-e24f-4254-8fc3-6b63d6a9c37f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "298ab479-f861-4a5d-b00d-a758ecffbcf7"
        },
        "item": {
          "id": "df0469ea-c19b-461d-835c-99b24ae0429c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "daf94924-4f8d-4b17-9fdf-5cc101d237cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd6d3ab-ac8b-4ae0-9c52-b1adffdfe42f",
        "cursor": {
          "ref": "3253da54-7d8b-41f8-b587-5de3197466ea",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "77c55644-0e8f-4847-bf65-fc9459b371b2"
        },
        "item": {
          "id": "8bd6d3ab-ac8b-4ae0-9c52-b1adffdfe42f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d99a6708-53e7-4961-a6e3-3daeda779de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e29687-cc17-41ea-9521-16fcfac80c72",
        "cursor": {
          "ref": "25b6670d-bae8-4f50-aee0-d0c637b399dc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "97cc6fd2-656c-4360-be7e-298de53ea2c9"
        },
        "item": {
          "id": "78e29687-cc17-41ea-9521-16fcfac80c72",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1007fdbc-84a4-43fa-8374-f921678cf62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55b1c38-4611-405a-84ba-54f6b5af06ad",
        "cursor": {
          "ref": "91ba55d3-fd2b-45d4-8651-ad025019490d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "57e0dbf1-7357-40ee-8e7e-2d1a0338e996"
        },
        "item": {
          "id": "b55b1c38-4611-405a-84ba-54f6b5af06ad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "91af3ef8-147b-498a-afb3-3fd9114e51ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033d3669-e0ff-434d-806e-e0062e4c7b76",
        "cursor": {
          "ref": "c9f4d1f1-0cfc-4816-bc97-fb97cad4e5d2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "28f109aa-121a-405f-8562-640c97586ca6"
        },
        "item": {
          "id": "033d3669-e0ff-434d-806e-e0062e4c7b76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fbdb4780-3ae1-4ae2-bc81-abc1e630dd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff03853-c046-44e2-a63f-9411d3fc569f",
        "cursor": {
          "ref": "af37d9e7-7412-47ec-8f12-628ba012e133",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "948e5cc7-e2d4-4f69-87a7-780d9e6c1ad1"
        },
        "item": {
          "id": "dff03853-c046-44e2-a63f-9411d3fc569f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "67dffd95-3977-4a09-a54c-7b2a735e5514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e6d092-0d11-4f91-9e9d-cac2bc4d9775",
        "cursor": {
          "ref": "31901dab-70cc-4962-8d2e-06fc77c8684c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "10fdf6fa-a60d-4128-9508-b5d3aeff1cc6"
        },
        "item": {
          "id": "48e6d092-0d11-4f91-9e9d-cac2bc4d9775",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0050987f-6d01-45b7-a759-932edf5d7113",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abb2532-494a-4d87-a929-4f8e24428c5a",
        "cursor": {
          "ref": "3e365c7d-257a-490a-8def-bfdf03ce6b75",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "90cb9ba6-713e-4baf-9e38-99070a7a1b8c"
        },
        "item": {
          "id": "7abb2532-494a-4d87-a929-4f8e24428c5a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c0aa15df-bc29-4924-930c-7cfb7fb73c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3133788b-a78e-4407-841e-ae6a29f64094",
        "cursor": {
          "ref": "4cfc6505-a7d8-49a8-a9bc-dc863b35d392",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e912369f-c0af-4e2e-8bab-727b5dac1240"
        },
        "item": {
          "id": "3133788b-a78e-4407-841e-ae6a29f64094",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83ab4bfc-fe0b-4fbb-9820-63bc2e1b2200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51a182f-4255-4dca-a60e-8500794665b9",
        "cursor": {
          "ref": "1564e679-fb1f-4128-bfed-891f0ff5b566",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4badcfc2-3e22-40a0-838f-c6874a2f619a"
        },
        "item": {
          "id": "b51a182f-4255-4dca-a60e-8500794665b9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6b5f6b6b-c6b4-4462-82ff-d18b80a9e49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de34141-3cea-4ed7-a90e-df66a1acfe12",
        "cursor": {
          "ref": "7a0a489b-b5f5-45d0-b596-7c50568916be",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "36ff0c25-e4bf-428e-a0f3-9779548ba715"
        },
        "item": {
          "id": "2de34141-3cea-4ed7-a90e-df66a1acfe12",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ed0595a2-2f3e-4085-b629-4d3340ddec20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fc83da-3531-4862-a6f3-f77b5d496eaa",
        "cursor": {
          "ref": "603fcad8-3acd-4848-91e4-38667e3718c9",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "67d0906a-8fb7-4d83-bdab-cbfee7cbba82"
        },
        "item": {
          "id": "82fc83da-3531-4862-a6f3-f77b5d496eaa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9927914e-ed23-41f7-a651-ab77764704b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe036b-c9f1-41e5-ad7e-55826981577e",
        "cursor": {
          "ref": "88d3cf1b-87d1-44de-9786-3d6aead192ef",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ca910616-deb4-471a-bfd7-6eefa7e0f766"
        },
        "item": {
          "id": "fafe036b-c9f1-41e5-ad7e-55826981577e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2fd7a687-b56e-4af1-93a0-8694dcf47176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fb82a0-3af4-4186-adf9-1d301e103012",
        "cursor": {
          "ref": "79096d1e-a21a-490b-976f-3e57fc3720e5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cf3916bf-4557-4ee4-945d-bd46c3cfe75a"
        },
        "item": {
          "id": "a1fb82a0-3af4-4186-adf9-1d301e103012",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "25a62524-6122-4153-9bda-78080d47ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65e90ce-7b7f-4a0e-8536-eb11c6d863ad",
        "cursor": {
          "ref": "653b0fb1-0c36-443a-bcec-6aab34155b29",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e1819c8a-3660-4e97-b4ea-6de438006ae9"
        },
        "item": {
          "id": "f65e90ce-7b7f-4a0e-8536-eb11c6d863ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "408607ae-70ee-400b-98a7-e57bfa5a349b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f821014-c04a-4fac-85e4-48dec0b80a2c",
        "cursor": {
          "ref": "bd8c67af-4b6a-459d-9d12-0f3f9a9fdc50",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "285561fa-4910-437b-b7ee-e19693d349d7"
        },
        "item": {
          "id": "6f821014-c04a-4fac-85e4-48dec0b80a2c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fa6b323d-ac2f-4024-8419-b0b18b1f4c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca394ba-ebc5-43e5-af48-6210c08354a1",
        "cursor": {
          "ref": "5af38df3-f856-40f4-9f5b-7ec748d61586",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "32d5d952-3f2e-46f8-9d5f-3c03356fc404"
        },
        "item": {
          "id": "bca394ba-ebc5-43e5-af48-6210c08354a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5399b5b2-ce28-4184-9794-6842c3394e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd17b24-f950-45fb-92c1-d74eb43a8724",
        "cursor": {
          "ref": "f8296c22-b8a9-452d-9382-fd9473015ab2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5939b598-239e-4178-b757-d25e90b1d9ea"
        },
        "item": {
          "id": "4bd17b24-f950-45fb-92c1-d74eb43a8724",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "40fab5e8-6a27-4a06-aacb-fb20c2e01e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b307edd9-6fae-4aea-8b8a-e2123ddabb99",
        "cursor": {
          "ref": "0fc67a0b-5c0d-4d4d-8603-ad7e06ee0731",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e471567d-a4a5-4c76-8358-afd5d0ce66f7"
        },
        "item": {
          "id": "b307edd9-6fae-4aea-8b8a-e2123ddabb99",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d7c109fd-3861-424f-903b-45b17d287d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53dc380-ea2e-482d-8f22-3afde01d60f2",
        "cursor": {
          "ref": "5d776b36-63be-4f9e-80b6-08ee43956ef6",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bec50935-f66f-44b4-8ff9-8cdb8462c787"
        },
        "item": {
          "id": "b53dc380-ea2e-482d-8f22-3afde01d60f2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d9ba5d30-449d-48a0-af1a-f6797be66428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88cb8ba-0db6-40d1-90a4-9a2c618a001d",
        "cursor": {
          "ref": "2fe0c177-5f21-40f9-a17c-baa5fe20faca",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4b6ee595-a851-41e0-b1c0-ec43d89c32f8"
        },
        "item": {
          "id": "b88cb8ba-0db6-40d1-90a4-9a2c618a001d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dfa6ba59-7e7f-444e-98ae-318bfb306c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32067ef-c23e-4e35-861f-5b3003f7816b",
        "cursor": {
          "ref": "ad8ab497-afb2-454a-90d7-55071d1e3c59",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a3f37fd2-63b7-412a-88ec-b2c81eff9669"
        },
        "item": {
          "id": "d32067ef-c23e-4e35-861f-5b3003f7816b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "df77cbb3-2d96-4d15-b46d-4c2b4bdb57cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8848972-dcd7-466a-a3f6-933f15dfce54",
        "cursor": {
          "ref": "c766389b-b5c1-4af4-88ab-7673a0a673dd",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "36814e76-b0da-4c40-8680-8889809f4ca7"
        },
        "item": {
          "id": "f8848972-dcd7-466a-a3f6-933f15dfce54",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "865ba19f-406d-4a6f-851b-ef9645d5d05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8190b3e-1492-4f4b-83c6-c18ebd780898",
        "cursor": {
          "ref": "74485064-b2a4-449c-bb1f-e3ff7c942c93",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "87601064-e8e4-432f-8141-e5f10f368101"
        },
        "item": {
          "id": "e8190b3e-1492-4f4b-83c6-c18ebd780898",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e75d13d5-3dea-403a-b521-a167dcd94445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642fd274-2464-4496-9836-c403ba3b1eb1",
        "cursor": {
          "ref": "46e74902-b68f-4061-bfbe-ab767a4f5958",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "471dde96-b6a3-4f78-b8ea-a6403a75f9e7"
        },
        "item": {
          "id": "642fd274-2464-4496-9836-c403ba3b1eb1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9c9046b0-bdd3-4bfd-a84b-175bbd2564e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c078a6aa-1266-45c9-83a9-074117782c79",
        "cursor": {
          "ref": "196013d5-d7a3-4472-bab2-6a26991db92c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "33aa0dbc-89f0-441a-a3c5-ef0c9a994352"
        },
        "item": {
          "id": "c078a6aa-1266-45c9-83a9-074117782c79",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "880aee4c-7ecf-45b4-a52a-51b02e780229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4eb105-e40d-4b7a-9ec6-f8f19b44fca1",
        "cursor": {
          "ref": "88c5d13f-c4a7-44dd-b875-517e6e95a068",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "91784cf3-4d08-4e38-99ce-89e2ea7a4786"
        },
        "item": {
          "id": "dc4eb105-e40d-4b7a-9ec6-f8f19b44fca1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "129a8a02-fa30-400f-ae4c-82b4d8f9bc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff26388-247c-4e5e-9f64-eeba867769be",
        "cursor": {
          "ref": "bb74dd31-47da-48a6-99e2-9fdb5f4c277f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "21665af9-776e-4ab8-b4b9-a6633ebad625"
        },
        "item": {
          "id": "9ff26388-247c-4e5e-9f64-eeba867769be",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "869ea261-6f83-4886-b6ac-cbd506e1df99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10236872-72f6-4b5f-b8d7-b44b756ae8f4",
        "cursor": {
          "ref": "f227d027-7ee4-4e4f-b5da-12c8e4d11756",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e2339291-ccea-4813-a3d8-20c093d93073"
        },
        "item": {
          "id": "10236872-72f6-4b5f-b8d7-b44b756ae8f4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8d9a9381-938b-4c32-9fa8-3816a7422636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ef01e6-55d7-4321-b459-464b69e499d5",
        "cursor": {
          "ref": "17cd7a28-04c8-4a09-8fe0-8a8bf9f4743e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "89b74ece-22ed-4a00-b149-4ca7db3b1d9f"
        },
        "item": {
          "id": "30ef01e6-55d7-4321-b459-464b69e499d5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "956a79b8-7962-449f-9176-235d8c7593ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed46a7a-c571-4a69-b10f-5579750c13e5",
        "cursor": {
          "ref": "27bffc96-743d-4c7f-a681-9495c5b89f82",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "751582bf-9752-421e-87a4-d16a9cd24f79"
        },
        "item": {
          "id": "8ed46a7a-c571-4a69-b10f-5579750c13e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "258bdbb6-8fc9-4383-8e89-0e4a376344c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cb1038-7f48-4624-bd89-528918707654",
        "cursor": {
          "ref": "95e69ebf-54b8-48ec-ae75-06ecd5300aa9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e155a6e5-ccba-40cc-b536-8eee4ac9628a"
        },
        "item": {
          "id": "a9cb1038-7f48-4624-bd89-528918707654",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "50cf2989-1905-419d-8384-c1cd990f3c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dac549b-1a6a-4bdb-aadb-8eb6d8336dde",
        "cursor": {
          "ref": "403b4bd6-12fc-4269-9427-8b395853d620",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "911228c3-ef47-486e-ad2f-07d7aa396fa0"
        },
        "item": {
          "id": "7dac549b-1a6a-4bdb-aadb-8eb6d8336dde",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "91744d0c-9ca6-4d77-8169-9b95cc1a4ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401e0651-3e97-479d-b94d-2f1bc07ae8a2",
        "cursor": {
          "ref": "768b22ed-8f86-4f08-9f1a-63ce89146882",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c889b691-8955-4d1a-9959-3c0fa9317f7d"
        },
        "item": {
          "id": "401e0651-3e97-479d-b94d-2f1bc07ae8a2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "761947ab-2f44-449c-8283-b082bc671f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477e18c5-752f-4693-927c-f5899562ab84",
        "cursor": {
          "ref": "9178b606-fc80-4036-b52b-a4d3fae70643",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "28445526-c60d-4854-b684-26c20b888b5e"
        },
        "item": {
          "id": "477e18c5-752f-4693-927c-f5899562ab84",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "49d22435-51ad-4599-836f-6162284ea1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2091ee-9ed9-4caf-bc72-c0bbbb58a93d",
        "cursor": {
          "ref": "73f5ecb9-5047-40b7-a207-3d34dba1c59a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "745a999d-8223-4ff7-b35b-311156367005"
        },
        "item": {
          "id": "bc2091ee-9ed9-4caf-bc72-c0bbbb58a93d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "da672833-84d3-4c2d-8c87-e47aa7a42b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14347ba-d11d-4e19-b88d-149f0f9577f9",
        "cursor": {
          "ref": "9f695953-3776-4273-9c9a-4cf9c1455d4e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5661888c-3f9a-4bdd-904a-629d30bf45b8"
        },
        "item": {
          "id": "a14347ba-d11d-4e19-b88d-149f0f9577f9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e21a7ff-ce17-4622-bf3b-c46d0015ec3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0224ad8-0919-45ac-a55d-808975f7b9a1",
        "cursor": {
          "ref": "2198d162-ec25-43eb-9ca8-cf93b2b382bf",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6150a8cf-2909-447f-9311-ce67aad29c66"
        },
        "item": {
          "id": "e0224ad8-0919-45ac-a55d-808975f7b9a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b81a6614-21d0-419d-966d-bd35bb8d9436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e013ace1-1bfc-434f-8044-4edfa5869f8f",
        "cursor": {
          "ref": "66684426-e134-4795-8e14-ed0f2844ab0c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a8c3728c-afd6-42c3-b671-dae3689e4a0d"
        },
        "item": {
          "id": "e013ace1-1bfc-434f-8044-4edfa5869f8f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1368051f-ee7f-4766-977f-80bc493a2560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29ddcde-8e13-4c37-869f-3b9e42a67078",
        "cursor": {
          "ref": "7f8a1a7b-a9fe-4fb7-a18c-aba7a99a4a10",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4457a477-0010-4903-917c-68f8ac36921c"
        },
        "item": {
          "id": "a29ddcde-8e13-4c37-869f-3b9e42a67078",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c795afee-a8d8-43cb-b3a6-0d0dfb15c1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095782e0-8a89-4956-a3b2-35bcbc89f340",
        "cursor": {
          "ref": "535d842f-0e97-4cdb-90ec-436d8a935b1a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2227c425-d38c-4077-9db7-571c3dd267d6"
        },
        "item": {
          "id": "095782e0-8a89-4956-a3b2-35bcbc89f340",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7e28dad9-1d65-4258-8f18-3b370603ba5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027e60e7-3438-44e9-ab9a-2d053a0c7974",
        "cursor": {
          "ref": "3f9fea1a-0d82-4975-9592-40e7048e10f9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "489ea4b7-72fc-4a07-9a75-f886b8418a76"
        },
        "item": {
          "id": "027e60e7-3438-44e9-ab9a-2d053a0c7974",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "49fca369-385d-4f53-add3-dcb520459dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a467f276-9554-4bd5-8df9-6d428197ed25",
        "cursor": {
          "ref": "2e85be01-2fe9-49ae-b227-68d2b2fff631",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "20819725-1e9c-4785-b2f3-21b1c306c16f"
        },
        "item": {
          "id": "a467f276-9554-4bd5-8df9-6d428197ed25",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a7f15bf2-3f58-4edd-b395-ef0d882a43f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6942276b-ff6d-4ba3-9d98-9a41df5a34de",
        "cursor": {
          "ref": "3ea7c90e-d869-41df-a570-739140ba33f2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "638946e4-605e-4ac5-ab26-e1becd6c55b9"
        },
        "item": {
          "id": "6942276b-ff6d-4ba3-9d98-9a41df5a34de",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b4ac85d4-cdc3-4e21-8003-1ab12ad47d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db16077a-2ef3-4ee3-98b4-46cf92d60d77",
        "cursor": {
          "ref": "12f03d2e-ca20-4351-b864-c058b18ac538",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "988168a4-c0e0-4b2c-a798-94369e0d5322"
        },
        "item": {
          "id": "db16077a-2ef3-4ee3-98b4-46cf92d60d77",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eff37d30-c9e0-4f80-853b-70a116cbdc35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b9ae4d-1af2-41eb-8d0e-a08e03787fa6",
        "cursor": {
          "ref": "71c3957e-1eae-43c6-843c-9f553ecf244d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2d84b50f-f67b-4a42-8ddc-df6ad874e79a"
        },
        "item": {
          "id": "d5b9ae4d-1af2-41eb-8d0e-a08e03787fa6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fa16be13-4dc9-4f4e-b2f9-11ff11ce97d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed04b20-3520-48a3-a321-1550d79bba40",
        "cursor": {
          "ref": "581411d2-7cdb-41ae-b30f-baba51df273c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9b76bbc2-965d-4851-b895-ef000a3093ed"
        },
        "item": {
          "id": "3ed04b20-3520-48a3-a321-1550d79bba40",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "34b92684-b864-47b5-aeea-7cedfb232deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9818d581-8040-44e8-9d57-78a5df7d7045",
        "cursor": {
          "ref": "10f99539-d06c-48de-8817-a8cd6659ad53",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6f2bb9de-014e-4e01-88b4-045d1c52f4bc"
        },
        "item": {
          "id": "9818d581-8040-44e8-9d57-78a5df7d7045",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "72d481e7-2761-4fee-9250-61353893a9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443b68af-4d87-4442-833b-2c493756e2cd",
        "cursor": {
          "ref": "25074042-d6d8-4236-88b5-269118c75b79",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "949bc97f-2eb8-4efe-924c-b45e3b38dc72"
        },
        "item": {
          "id": "443b68af-4d87-4442-833b-2c493756e2cd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3cc87e0e-46dc-4486-9ada-830a38388785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491a565d-66c1-4741-971f-e3c97f9544cb",
        "cursor": {
          "ref": "2917290f-1149-4880-b354-61da2868688a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "50085c46-7520-4016-aeed-9dc513a27fd2"
        },
        "item": {
          "id": "491a565d-66c1-4741-971f-e3c97f9544cb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9e2f0f0e-2da7-4101-a875-46744cd83ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb3613c-07ef-4b66-8c0e-3bbdebdc9d5e",
        "cursor": {
          "ref": "b2d75b9c-adc9-4319-b291-1249b10dd960",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4f74e97c-c920-47f9-b71b-7222c0b15e79"
        },
        "item": {
          "id": "8fb3613c-07ef-4b66-8c0e-3bbdebdc9d5e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cacc8131-d14d-4cca-94f8-88933cdf3537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50504d26-fec9-43d4-ab6d-18e5488679c5",
        "cursor": {
          "ref": "0523ae7d-9d0b-4693-b9d9-2735b38e7c0e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "26a0c7ea-297d-4342-adb9-c4ebda3233c8"
        },
        "item": {
          "id": "50504d26-fec9-43d4-ab6d-18e5488679c5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d470ed81-4d59-4425-822f-46b2835600e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce2b2f6-a058-48c7-a13e-2c789f305339",
        "cursor": {
          "ref": "3d48f1c1-bb26-40dd-9997-bb40b8e4bf51",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "52b1114f-ed3e-417d-ab0c-8b8966a50668"
        },
        "item": {
          "id": "3ce2b2f6-a058-48c7-a13e-2c789f305339",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5e7138fb-a9de-494d-b9a9-9495d586b417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32c2a70-c08f-4dc9-a09d-e1f0d1feebde",
        "cursor": {
          "ref": "1d3ffffa-d9e8-4770-a77b-f45809d9f359",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "491c6ca9-df17-43ac-b5a7-27ba40e67609"
        },
        "item": {
          "id": "a32c2a70-c08f-4dc9-a09d-e1f0d1feebde",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6c058702-b7a0-42c9-a8ea-55c8cb54ff3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8053c992-94d5-4ac6-9ee4-296c0d1516e5",
        "cursor": {
          "ref": "3c53a9a1-e721-442f-9e01-9916ddb1895a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fd9a273e-b4c8-4217-b6b6-54d4f8af25b2"
        },
        "item": {
          "id": "8053c992-94d5-4ac6-9ee4-296c0d1516e5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "44af201b-c4fa-41c6-a26b-22411de787a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd84539-50bd-4b90-8866-a782e7073ae5",
        "cursor": {
          "ref": "4b5c5dee-a593-486a-b34f-65d5db50e017",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0d80a40d-da2d-4f0e-b2d2-92e729bb28bc"
        },
        "item": {
          "id": "cfd84539-50bd-4b90-8866-a782e7073ae5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a0db8900-6958-43a6-be4f-02a07f260ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc896554-8b5f-4403-b598-911d476a7422",
        "cursor": {
          "ref": "2eb0132e-a3d3-47b8-98f3-9b64cbc0715d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fad9852d-9a70-42a0-a47c-7767e3f28302"
        },
        "item": {
          "id": "fc896554-8b5f-4403-b598-911d476a7422",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9e25f314-0aea-47a3-81fb-0309aa31a958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a7d0a9-1a2d-4d5f-8d9e-e9d5d1940b56",
        "cursor": {
          "ref": "baa6733c-1274-4da7-b132-a30204bbc54b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6505dc44-c850-418d-aef0-554af3137ba8"
        },
        "item": {
          "id": "63a7d0a9-1a2d-4d5f-8d9e-e9d5d1940b56",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "13faccbd-c050-4cd1-8847-e33e1f3a8467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67220a6-efc5-401b-b4e3-2a612a908721",
        "cursor": {
          "ref": "93598f3e-ca23-49df-bf73-891a0e682751",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4b9e07c4-19b7-4df6-9b58-ea582fee3db5"
        },
        "item": {
          "id": "d67220a6-efc5-401b-b4e3-2a612a908721",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ccadb0e9-0a83-4cb0-8b7c-d4918bca04bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fc4952-abe6-40fe-932f-16984a3a9e3c",
        "cursor": {
          "ref": "c32c0b84-b4fe-4ed4-ab96-5db24c22c54e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5f7ae8d5-a189-4903-9a4f-7a8ff4477a44"
        },
        "item": {
          "id": "91fc4952-abe6-40fe-932f-16984a3a9e3c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9be02edc-ac79-4ab2-9b89-75f6fe12aff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad38b2a-e660-4a69-a6ce-9f1967086aa0",
        "cursor": {
          "ref": "9abe04a4-c9aa-4796-a7f1-a73f128b1e0e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "01fb9ec5-6519-46f0-9eb5-3fd5dc3e0046"
        },
        "item": {
          "id": "3ad38b2a-e660-4a69-a6ce-9f1967086aa0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6b20ef6a-8000-4f7d-ac47-a67fd3b77343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29544fc3-4d64-4404-a1b9-d55d483f8d62",
        "cursor": {
          "ref": "cffb0a59-9054-4298-ab52-1c9fbbd40510",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "833cbc8e-a80a-4dec-805f-963a61e154e3"
        },
        "item": {
          "id": "29544fc3-4d64-4404-a1b9-d55d483f8d62",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6560b9b4-d128-4cc9-b136-0a0b74425544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8dcab5-bf26-49b4-9690-074917fc163e",
        "cursor": {
          "ref": "b383a056-8fb0-4634-bb24-c8a9d3fa1390",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "29a752af-6ceb-4880-9805-4bd9a2f897cc"
        },
        "item": {
          "id": "3d8dcab5-bf26-49b4-9690-074917fc163e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "899de480-0666-4704-8239-3423844eabe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dd4e9a-b1c1-4ad7-a8eb-c8e0ae324ee7",
        "cursor": {
          "ref": "a90e0ccf-324a-4937-8e04-43c6f2bbf3e6",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "39f7402a-722d-488c-a2af-b89f5e9b0a8c"
        },
        "item": {
          "id": "c7dd4e9a-b1c1-4ad7-a8eb-c8e0ae324ee7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c822c82a-d59c-40b2-91ee-b53b997dfb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86caaec-8434-41c5-8cca-d48dca6f0920",
        "cursor": {
          "ref": "0b46c933-c998-4644-a05d-ad2a65ed909d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "be38efd1-ecb4-445d-bfb8-c745fe151e9d"
        },
        "item": {
          "id": "e86caaec-8434-41c5-8cca-d48dca6f0920",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2147918c-5d42-4e40-a326-5a700f240cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca57450b-051b-4804-9999-c1218cd410fe",
        "cursor": {
          "ref": "1c10120d-6684-42cc-93ba-6a4fbdecc531",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f40e9429-20be-4c23-8f27-5cc0cc32a5d5"
        },
        "item": {
          "id": "ca57450b-051b-4804-9999-c1218cd410fe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "084c775b-d21e-4800-9e98-20cce9758562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8b993e-bb41-4063-9b45-c485739a5985",
        "cursor": {
          "ref": "e40edca8-7a13-43f8-a5c2-9bdfb249d909",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "658a0699-ea18-4d0f-978b-8681f0d4af08"
        },
        "item": {
          "id": "ba8b993e-bb41-4063-9b45-c485739a5985",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1c48f38f-93eb-4a9a-a0ae-398386e47008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b91627-9ee6-4359-bfad-9f5d94582e73",
        "cursor": {
          "ref": "f0a8dd90-6d29-4116-927c-a2d2933a0fee",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f06b9ba1-4b40-4206-8107-99458c019136"
        },
        "item": {
          "id": "21b91627-9ee6-4359-bfad-9f5d94582e73",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dcef3605-ba3e-4783-95ee-885261afd5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c91bd2c-4ff8-464c-8538-a92d6bee5db5",
        "cursor": {
          "ref": "fd5e0d6c-8ea9-429b-9293-a8c6e97ba67b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ea770968-4dc3-4a5d-8144-3709433b5016"
        },
        "item": {
          "id": "3c91bd2c-4ff8-464c-8538-a92d6bee5db5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "082125b0-8232-4d8d-bb7a-a79fcb1695ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22c43fd-3da6-4489-b93e-4c27990fc040",
        "cursor": {
          "ref": "795d6b45-2334-4705-8930-5f3cfc2d6730",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a72a6907-fa7c-4c4f-8945-6f29bb18ba7c"
        },
        "item": {
          "id": "c22c43fd-3da6-4489-b93e-4c27990fc040",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "416f5269-4f5f-4d19-91a7-9738411469dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dcc229-edd7-42f5-a5eb-ba210239199f",
        "cursor": {
          "ref": "a9ca4b11-a778-4a30-8d73-edaabdf4d571",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e532c937-8398-490b-817c-504dec7bf9c8"
        },
        "item": {
          "id": "11dcc229-edd7-42f5-a5eb-ba210239199f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "84ce1295-45d0-4aec-a49d-d42e587291d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db5d26-b1da-41ea-8c5a-c53774a79d4e",
        "cursor": {
          "ref": "173a2a68-4571-4801-88eb-ab4dde9f77cd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2e10f243-1bae-4aa7-9836-57468033fc0a"
        },
        "item": {
          "id": "c1db5d26-b1da-41ea-8c5a-c53774a79d4e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bd7b574d-e87f-432c-8edc-f0e18825a86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3498ba-0d3f-4938-8483-f337ac0ab8cf",
        "cursor": {
          "ref": "6599fde3-5819-4c27-92a6-cf96202b2a26",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e344782d-c61e-481e-9df9-08b05805a950"
        },
        "item": {
          "id": "8c3498ba-0d3f-4938-8483-f337ac0ab8cf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a2c2cd7e-9e6c-4666-9a5e-f1d046881be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e900a2-ee1f-473d-92de-cc2e4d317577",
        "cursor": {
          "ref": "8d04a9af-552a-4b69-a2c5-84ae5dc00d13",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "03fb8f67-7b93-4bff-a455-65489175b612"
        },
        "item": {
          "id": "26e900a2-ee1f-473d-92de-cc2e4d317577",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7cb7e869-28be-4dae-9b0f-4af0b1cea207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb031889-90e5-44e7-b376-8354290cf3b0",
        "cursor": {
          "ref": "a6c5c090-eb47-45e2-96ae-119a86c781e4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "74bd3bdc-e11f-4976-81ce-389a937508b5"
        },
        "item": {
          "id": "cb031889-90e5-44e7-b376-8354290cf3b0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "10ecd4d5-1ec7-4bfd-a54d-eaddf977af22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7333da-19d6-4e82-a33d-4eb254c65cf3",
        "cursor": {
          "ref": "36522e3b-8f91-469d-b310-8ac3fb38e961",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e2de1c24-7bd6-4c13-846b-72f41782c8b8"
        },
        "item": {
          "id": "5b7333da-19d6-4e82-a33d-4eb254c65cf3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d5f7973f-4c76-40c0-a5e6-232f8609ca25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a84b31e-780a-4afd-8514-53b8ce9cecda",
        "cursor": {
          "ref": "4f30cb56-d4ae-4638-ac7c-ef97ea268ca2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "494baeb4-884d-4a5d-a5e6-e85c0a98140b"
        },
        "item": {
          "id": "1a84b31e-780a-4afd-8514-53b8ce9cecda",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5d3ae64a-e49b-43d1-aa5a-10a5e301df55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65145363-6236-4303-8518-64747f4fd7af",
        "cursor": {
          "ref": "bf9fcaf7-ce8e-4950-ba95-d22810b4b34c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d9f7b701-76e7-4f19-9fea-08f24bcff43b"
        },
        "item": {
          "id": "65145363-6236-4303-8518-64747f4fd7af",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0ba25ee1-a04d-4ebb-8e94-3befaff3dea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7f5322-f7d1-476c-baa3-c5498294f090",
        "cursor": {
          "ref": "24ded7c1-b34d-429b-8dc7-39cced45f06d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f42969d8-031f-430d-a2f9-d14a4309f109"
        },
        "item": {
          "id": "ef7f5322-f7d1-476c-baa3-c5498294f090",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b3563472-9abd-4b97-a8e5-19daaf998e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c2a195-36fd-4777-88b9-85b0e1edd3e7",
        "cursor": {
          "ref": "68419f25-85c3-4f24-89ac-3c1db4fe7091",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "906d36b3-034b-4b67-a829-b2f5641ddfcc"
        },
        "item": {
          "id": "d2c2a195-36fd-4777-88b9-85b0e1edd3e7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b6a3a4f2-37b1-416c-a858-8daac9ecd93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c667d4-4bf7-4d94-a31d-545f039df766",
        "cursor": {
          "ref": "9246c497-acb9-4bf8-8927-56747c12a2b4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e593ab7b-cd4d-4e15-9d16-a5e0f597c425"
        },
        "item": {
          "id": "43c667d4-4bf7-4d94-a31d-545f039df766",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "be5b6071-cd56-4582-a296-46fd07381cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373df153-d5dd-4dbf-ba25-4a618e5113a1",
        "cursor": {
          "ref": "175dbcb4-e337-42bc-b084-55ce04bcd68d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d362c9ff-f6e6-4573-95cb-79f8c9043163"
        },
        "item": {
          "id": "373df153-d5dd-4dbf-ba25-4a618e5113a1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e0d22e0c-1ae7-43f8-aeaa-c200a3600989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a124fc44-687a-4040-b66b-3fa536baea23",
        "cursor": {
          "ref": "4ba6c754-f649-4217-a003-c323e1dca252",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "01475220-3316-471b-8a2e-61ff0746bfc3"
        },
        "item": {
          "id": "a124fc44-687a-4040-b66b-3fa536baea23",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a2af98e9-eb6d-4f0d-8903-b5d850a0fe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7945317-c08e-4237-8bd7-05855e2cb12d",
        "cursor": {
          "ref": "c1f02e20-9131-4463-9153-9d54fec734dd",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6b5d379b-391e-4ab1-9553-d5c5dae6bced"
        },
        "item": {
          "id": "e7945317-c08e-4237-8bd7-05855e2cb12d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e5a61b6b-d7fa-421e-9a87-8e4106570d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13051669-8ce6-4fc8-bcb2-6131af8219d3",
        "cursor": {
          "ref": "9524e97b-a747-428c-a82f-daa97e946926",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "63ea7cc8-a632-400e-b414-8fd9c97bd311"
        },
        "item": {
          "id": "13051669-8ce6-4fc8-bcb2-6131af8219d3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "53260461-1ba1-4c9e-903a-00decdd0d4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b449692b-c50d-408b-becd-2b3978464c15",
        "cursor": {
          "ref": "2ebb6f7c-8204-4e68-8f11-f539c64867ef",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bfb63269-3dbb-44f7-be67-a61a2901afba"
        },
        "item": {
          "id": "b449692b-c50d-408b-becd-2b3978464c15",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9a611318-4a30-4190-a23f-d629eb367858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5d3746-c86f-4c05-b010-e5251f2fa198",
        "cursor": {
          "ref": "391f26b3-8926-49e2-b5fd-82071dda6e21",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9012dee8-3856-433b-bff9-13d68d6189e3"
        },
        "item": {
          "id": "4d5d3746-c86f-4c05-b010-e5251f2fa198",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "83ce914d-fd6b-47d8-ac9b-259dc2ee2179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9ed13d-74e9-4726-bb0c-9f4da56baad3",
        "cursor": {
          "ref": "16743532-d2a0-46bd-b32c-0df2d42a54b1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fdaaa463-76ad-4e65-a883-cf2ae610cdb5"
        },
        "item": {
          "id": "be9ed13d-74e9-4726-bb0c-9f4da56baad3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "40449cdb-c595-401f-86be-012d489e1f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e66ae29-68e2-4da4-b0d8-5c70ebd67e98",
        "cursor": {
          "ref": "ef706b10-ed8c-4433-a3cd-2b8cb2f8ebce",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a621af27-f317-4562-b9e4-a7a4f15df00c"
        },
        "item": {
          "id": "1e66ae29-68e2-4da4-b0d8-5c70ebd67e98",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "974003f6-72f1-483d-a9f7-56c9684f0553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e463844-5a56-41d6-80e0-208620c682cf",
        "cursor": {
          "ref": "3545a512-075d-4a93-ad05-d484a6e8ff2a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2e0c44c5-021b-48c4-b0dd-e3fe7cf7bd42"
        },
        "item": {
          "id": "7e463844-5a56-41d6-80e0-208620c682cf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fa2ffbe6-0c38-4c5f-b58d-232236e7320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9572fb-4a91-4e58-ae36-fc28b8156657",
        "cursor": {
          "ref": "50ddf344-5591-4cad-8155-450fc5edafba",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4c1e936-9dc3-45ae-b4d9-3ab6a16cf021"
        },
        "item": {
          "id": "bd9572fb-4a91-4e58-ae36-fc28b8156657",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "25e00b23-28dd-4100-89e4-47e15caddd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8cad41-0eeb-4f3c-8fe5-d87415fc147a",
        "cursor": {
          "ref": "5472f6b7-693a-4180-8f97-bacdf8be2de8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "839fc821-c8b4-47ad-8b7b-c18244ff00a5"
        },
        "item": {
          "id": "2e8cad41-0eeb-4f3c-8fe5-d87415fc147a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f3f28ae-3cb8-4f1d-8889-ecca6b0b2f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e151da-4045-45da-9064-08fa6bdda0ec",
        "cursor": {
          "ref": "1a99cd8b-4976-4130-893c-dc86880eb669",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b8247882-b117-4f87-9d8c-402c7da9799c"
        },
        "item": {
          "id": "02e151da-4045-45da-9064-08fa6bdda0ec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fd32ca83-37c4-46fa-869a-b26177c8c555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72b1812-54b7-41b4-974f-b227ba181b68",
        "cursor": {
          "ref": "36d43a81-4a14-42bc-8e6e-b20083f79f9c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ba2aa369-f18a-4a9c-aac4-28aed49fbf2e"
        },
        "item": {
          "id": "a72b1812-54b7-41b4-974f-b227ba181b68",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2a2806e2-0921-4ba1-b297-1a9079bc4027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdcc945-374b-49d3-bbf6-e71a2ee772ff",
        "cursor": {
          "ref": "40927a05-4611-4a92-85a9-253c7f0aa8ea",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "277b4cf1-6edb-4923-acca-eb6852b21f06"
        },
        "item": {
          "id": "8cdcc945-374b-49d3-bbf6-e71a2ee772ff",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "620dc24b-c884-4fb6-b0c0-b7cbe483157f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab869030-ad2c-4606-a469-ed731cb1cca0",
        "cursor": {
          "ref": "fbb9abaa-3ea5-4ebe-b377-be56c4937118",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0f974913-a9d1-4c44-bcda-939b9f179609"
        },
        "item": {
          "id": "ab869030-ad2c-4606-a469-ed731cb1cca0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d173bf32-776d-4a6c-ae54-8965d9e084f4",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "93c8f7f9-4cd1-4e0d-8d8f-47e62b189eab",
        "cursor": {
          "ref": "8c184eae-5d29-4850-b55f-0ac0fa12092c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f0df3003-b8bf-4cd7-bb16-2a6780eabb65"
        },
        "item": {
          "id": "93c8f7f9-4cd1-4e0d-8d8f-47e62b189eab",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8a4c5a75-4b81-417d-bb59-125cbb393f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e6027c-fc37-4a10-b764-fa3083a1747e",
        "cursor": {
          "ref": "fa08b850-294e-44c5-9984-8b2310619017",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2b097d0e-a4b0-49fa-9847-2da7aec9493e"
        },
        "item": {
          "id": "05e6027c-fc37-4a10-b764-fa3083a1747e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dc1d08f5-864d-4f89-a90a-09f966b0ad49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3233004e-2d9b-4f1c-92a9-9b9c95d0e962",
        "cursor": {
          "ref": "10d675b5-822c-4aba-92b2-f84637333ba3",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f942ecc-4f42-43eb-a9fb-efe9cd20c5d5"
        },
        "item": {
          "id": "3233004e-2d9b-4f1c-92a9-9b9c95d0e962",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1721df59-6bd7-487b-aa86-709d8e2bbd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec81ca3-ff99-4296-97d0-6f2fdae67df2",
        "cursor": {
          "ref": "5bfdf5c0-aebf-4fc4-afc3-3c27bfc228a6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f0bc4f02-9e4b-4e28-a7bb-620a3e689008"
        },
        "item": {
          "id": "4ec81ca3-ff99-4296-97d0-6f2fdae67df2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c0876748-f0d4-4659-8d4c-9582773b6005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d49b80-9d55-41a8-9d30-d73d916033a5",
        "cursor": {
          "ref": "b2987746-f424-48df-a265-a830a6901aae",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e42024cb-eac6-4de2-9bb5-957ffcccdcb7"
        },
        "item": {
          "id": "87d49b80-9d55-41a8-9d30-d73d916033a5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "31c4f427-43a7-4eec-8bf3-73147cd911bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1c1996-d31f-4983-8273-7b33d7ec31a2",
        "cursor": {
          "ref": "f9c40437-ae4f-4f8b-853d-6a59dd45ad95",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "386fbab8-3b39-4be3-aae7-69949691e515"
        },
        "item": {
          "id": "5e1c1996-d31f-4983-8273-7b33d7ec31a2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "37a47930-2447-40ce-8cb8-ed8a1f805b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876965b8-63d4-4bcf-b716-fd12a15a16ec",
        "cursor": {
          "ref": "84dec2d9-86b2-412e-92c9-d97bf7bf339b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "644b3609-6831-4120-a269-8d8899ffd005"
        },
        "item": {
          "id": "876965b8-63d4-4bcf-b716-fd12a15a16ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6c2f45a3-dd44-4b44-82e9-f08053c23f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dafceb-2324-4a1d-a5d6-e3a1cb18dd5d",
        "cursor": {
          "ref": "12d76f64-6b8f-45bc-a310-c54191319e12",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "362d8ca0-c2ae-4d2c-8b40-10220e959e5c"
        },
        "item": {
          "id": "d3dafceb-2324-4a1d-a5d6-e3a1cb18dd5d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "afc2e094-deb2-428b-aef6-b891f739befa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eedef91-d44b-4928-8913-83d9d073871f",
        "cursor": {
          "ref": "47944058-65a3-4b79-bb33-423a5b925b16",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "89c00846-eb41-4d60-ad1a-53324b2ddd65"
        },
        "item": {
          "id": "0eedef91-d44b-4928-8913-83d9d073871f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "546e02d9-4586-4e3d-b94d-693ca4cd6bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8f66ce-dacf-41f3-972c-b88ce125d00f",
        "cursor": {
          "ref": "14760537-89de-4d4b-988d-ec69a3848ee2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b03f2198-95fc-4c0d-942a-acf61811c725"
        },
        "item": {
          "id": "ec8f66ce-dacf-41f3-972c-b88ce125d00f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aa696b75-027b-49de-b5ab-aa8e5668478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e804ec8-6b16-41fb-acb4-6c66bcb07e1e",
        "cursor": {
          "ref": "379a914a-6df9-44f3-9e64-10f7026884f7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ef1fa216-4732-41ac-a884-6cb13bf2c0ba"
        },
        "item": {
          "id": "8e804ec8-6b16-41fb-acb4-6c66bcb07e1e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "47b71ac8-1339-45c4-84a1-bad07dc3b874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc751b9c-32cd-43e2-b05f-36bb40871da1",
        "cursor": {
          "ref": "0f89cd14-37d3-449a-94e3-fa7aa5fc8dc4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d2e9aac9-75c3-4fe7-b17e-4bea5fb2da9c"
        },
        "item": {
          "id": "cc751b9c-32cd-43e2-b05f-36bb40871da1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c6e48aab-c10d-4acb-a356-2a4b2ca50709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a441077-c4ff-4a32-9a94-63b47ee95601",
        "cursor": {
          "ref": "2c4de9ce-5605-40c2-b2f0-1745816daab8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0a6266d5-faa9-468f-92f7-78568bb6d99e"
        },
        "item": {
          "id": "9a441077-c4ff-4a32-9a94-63b47ee95601",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8cfcf545-0d72-4699-bb2e-49db0dbac03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a03a9e1-e7ba-422e-9b44-cbba9469c5a8",
        "cursor": {
          "ref": "0cb72f19-91ab-45c5-8f3d-674a0979badc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1f235045-d215-452c-ab82-9df6b9362eba"
        },
        "item": {
          "id": "1a03a9e1-e7ba-422e-9b44-cbba9469c5a8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3e3f5176-8cd8-400c-97d3-98688c1d706e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c509d96-6ff3-49c2-8eb0-fb5a54b5425c",
        "cursor": {
          "ref": "bec5af70-191f-40e2-8fd5-51d70875e64f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "822da32f-d141-4276-a69a-cdf2e58c9cea"
        },
        "item": {
          "id": "4c509d96-6ff3-49c2-8eb0-fb5a54b5425c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "37be97f3-aad2-4c83-85e8-58e56828f330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc75ac05-5b45-412f-a1a4-91e99410c93c",
        "cursor": {
          "ref": "042233cf-f7d4-4fd8-a04a-29bf26399f3f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89470014-0510-4ec6-826a-3613a75dbfe5"
        },
        "item": {
          "id": "dc75ac05-5b45-412f-a1a4-91e99410c93c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "555522d3-2211-4abf-807f-11551172f417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a5ec5c-062f-4507-a3f8-74d44b4cb0e4",
        "cursor": {
          "ref": "96e5aed3-e0c5-40e1-b337-f58cedc0bdce",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2de28c55-983a-4033-a376-94577cb83216"
        },
        "item": {
          "id": "d7a5ec5c-062f-4507-a3f8-74d44b4cb0e4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1cb62dc7-e676-4b7e-b457-d2ae0777f346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89bcbc1-37b3-4917-9f2a-e66f8fdcb5a8",
        "cursor": {
          "ref": "f1e3e888-1e64-4dcf-8bcd-1ca740f760fe",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3417a7d9-86da-41df-ad60-9987817fc0d1"
        },
        "item": {
          "id": "f89bcbc1-37b3-4917-9f2a-e66f8fdcb5a8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6797fdac-8d46-4f28-b74b-a0b411942160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09694b98-39c5-4516-8412-620436aa36d7",
        "cursor": {
          "ref": "e2fd4cc3-e6e8-475e-80dc-bc8e3cd41fa1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0bca2b42-fe55-4cb3-b42e-095f40505677"
        },
        "item": {
          "id": "09694b98-39c5-4516-8412-620436aa36d7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d1fbcfc7-6990-4a5e-8b16-95b72e2787b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd256d5-5cb5-493d-841b-ff56308b9fd1",
        "cursor": {
          "ref": "4377b678-2a52-4986-9000-612dabd73a3a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "505b756c-b967-42ff-905c-50a0debf4c6d"
        },
        "item": {
          "id": "9fd256d5-5cb5-493d-841b-ff56308b9fd1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5077e0b9-b341-45be-8550-54859321fc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4c9e05-9c81-447d-a4bc-e78b3d7d9042",
        "cursor": {
          "ref": "4ab861be-d602-4662-aea3-1b098129622c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f78edab1-3d9c-4659-bcb8-0cd5ef8eb980"
        },
        "item": {
          "id": "4d4c9e05-9c81-447d-a4bc-e78b3d7d9042",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3cfa85ad-38ef-4c0a-8825-53a717e79a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d003ddf3-7c39-4c8d-8764-da535b534542",
        "cursor": {
          "ref": "004fd15b-5e82-47d9-8f1a-f17cfc7f83dd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "336ff4b0-67c9-4162-95e6-93d44e287566"
        },
        "item": {
          "id": "d003ddf3-7c39-4c8d-8764-da535b534542",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6f3eb6d0-d7b8-43d1-966f-4a97080045cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1996b9-2261-4289-8d63-5c612a88af53",
        "cursor": {
          "ref": "c1db2254-c98c-4e96-819d-623aab122971",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e79b086e-812b-41b1-a759-3133bfd845c3"
        },
        "item": {
          "id": "ae1996b9-2261-4289-8d63-5c612a88af53",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b1c459d1-2e34-49dc-a36f-11110ee61cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a7fe9d-a30f-49cc-b9c8-6fb792bccd1f",
        "cursor": {
          "ref": "50c99092-fc90-4064-a21e-ef2c6e6bb1d0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e5ffbaab-45c4-4993-983d-8b2d562eeaa6"
        },
        "item": {
          "id": "83a7fe9d-a30f-49cc-b9c8-6fb792bccd1f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "50c0a981-1162-4c62-8977-50b908642edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2032ed71-156a-47ae-9054-880410bfd45a",
        "cursor": {
          "ref": "087a458f-7b56-4adb-8760-9a4b532b853b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bb9de95f-8715-459b-8751-3f7aeb69404d"
        },
        "item": {
          "id": "2032ed71-156a-47ae-9054-880410bfd45a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a677e042-9f3f-444a-bd49-7e7157a402dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91518e7-c85b-4603-977b-62c6f84c068d",
        "cursor": {
          "ref": "47094ec2-277e-4f16-b0cd-4963659b76df",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9734fb43-bc04-4058-9201-9622509ac4e4"
        },
        "item": {
          "id": "d91518e7-c85b-4603-977b-62c6f84c068d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "034446e7-060e-45ac-9432-8221352178ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5c058d-3e43-430c-8674-65d64f371bbf",
        "cursor": {
          "ref": "33550d2a-5b59-4dcc-8726-3588ff184b7a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "be37ec31-a2fb-4c5b-8be2-694ea6396f1d"
        },
        "item": {
          "id": "cb5c058d-3e43-430c-8674-65d64f371bbf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9613620a-2357-44ab-bb07-c1d982a8bd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f664e9-0175-42d5-aaf4-94448667725c",
        "cursor": {
          "ref": "930eaa05-c994-42db-8ecd-b77033b452f8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e12eb8c4-2141-49b0-96d8-6b9dbb8ea284"
        },
        "item": {
          "id": "f2f664e9-0175-42d5-aaf4-94448667725c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ed7fc087-7c08-47d0-a384-ccc9298179f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b94a78-f5fb-4140-9b49-0c9ba391cd77",
        "cursor": {
          "ref": "ac4becb1-f9aa-4317-af79-7679dce8c572",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "97e462ec-a405-41d7-b6bf-930c66c820f9"
        },
        "item": {
          "id": "13b94a78-f5fb-4140-9b49-0c9ba391cd77",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fef6e1f3-55d3-4559-985b-e65fbe301164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6b9668-2753-4e7d-abbb-52bafdfb5fc9",
        "cursor": {
          "ref": "71ea8be9-0702-4034-905e-8895a7b0303d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "98ec7c15-1006-4bbb-8e24-fe37ebeb1ebe"
        },
        "item": {
          "id": "fc6b9668-2753-4e7d-abbb-52bafdfb5fc9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bbb334a3-0f0a-4990-b50e-c1b73dce3252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464edec3-afd2-4343-ad74-9ebf561c892c",
        "cursor": {
          "ref": "68bcccde-85c4-4a7b-8ff7-fa0f49146ffe",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7dec9d89-41b5-4988-8443-f11245de9bfc"
        },
        "item": {
          "id": "464edec3-afd2-4343-ad74-9ebf561c892c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f14bf374-e755-4361-80c3-1b082bddac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2216c130-3637-4f54-b063-5aae4fee6255",
        "cursor": {
          "ref": "48235051-dcac-4b1e-a820-9654037b9e2e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f505d1ae-e560-4e21-b887-bae6c0ad00b4"
        },
        "item": {
          "id": "2216c130-3637-4f54-b063-5aae4fee6255",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "15c47b64-94af-4a8f-9cfb-c216ab652af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed983a2-e4ab-464a-8e0d-9c4d343cf198",
        "cursor": {
          "ref": "921bcc1b-8169-47ca-8696-9c5ddc5d5c21",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9cd1b0e5-d2d1-4f39-89eb-f39112926b79"
        },
        "item": {
          "id": "7ed983a2-e4ab-464a-8e0d-9c4d343cf198",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "28e90cc4-b568-46e7-98ac-81d1ee70f8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84cbd64-7f1d-499c-95f9-8272c1341866",
        "cursor": {
          "ref": "7e013470-0bb7-42bb-909d-2c09b2e86d78",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "18281f69-daa5-4844-b7d1-a839af10c71f"
        },
        "item": {
          "id": "d84cbd64-7f1d-499c-95f9-8272c1341866",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ef600632-a818-4bb7-9333-9ef335854d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c524a2-ccde-4009-9737-e1bc0c596fed",
        "cursor": {
          "ref": "2788dd31-562d-4c65-a182-acf11d7a5eab",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "604ffa36-c799-4212-bee2-7161087be0fc"
        },
        "item": {
          "id": "48c524a2-ccde-4009-9737-e1bc0c596fed",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0df4573f-9dfb-4856-8a83-04d0376e6be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49765e59-9442-43dd-9987-6dac7725435e",
        "cursor": {
          "ref": "99ba2865-48ec-485c-9e9d-d540328bc746",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4dfa464e-8692-4908-bba9-249e4e43988e"
        },
        "item": {
          "id": "49765e59-9442-43dd-9987-6dac7725435e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8fc15be2-ce94-4745-a13e-2da436cabd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4521854-313a-4c00-8221-0d6036e0a508",
        "cursor": {
          "ref": "8ad97abd-5955-46c2-812f-652f6fd3a446",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3d73af82-ac74-4305-986a-c8378f95ccf9"
        },
        "item": {
          "id": "c4521854-313a-4c00-8221-0d6036e0a508",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cc7b5844-8d5a-4c05-b694-6e2710fc7285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49460e3e-1fbb-4e28-9218-d65f5d15fcf5",
        "cursor": {
          "ref": "1faf67ed-fdc8-4ca3-abe4-bc0514866669",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "aa804558-0eac-494e-a04c-6c19d5ece853"
        },
        "item": {
          "id": "49460e3e-1fbb-4e28-9218-d65f5d15fcf5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f22dea77-2f16-4725-b7aa-d4c8ee32d847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1702e3-8938-4b68-971b-78b080c7781c",
        "cursor": {
          "ref": "f0e65409-6cbc-4daa-b2f8-5b41749af6ad",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4cfce4a4-3f73-42ad-8bae-4af1d7c33713"
        },
        "item": {
          "id": "1b1702e3-8938-4b68-971b-78b080c7781c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c4842f31-7a61-44a4-97cf-03f97a769b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514777a9-1a9c-4332-a1ee-e3ce1045c50d",
        "cursor": {
          "ref": "c17b534c-a403-4fac-9097-2346457a1025",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0f50bb23-e578-4759-b1b3-5accb1709915"
        },
        "item": {
          "id": "514777a9-1a9c-4332-a1ee-e3ce1045c50d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "45499e4d-429a-4558-a3eb-786e926d40d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281adeaa-ee0d-40e8-aea6-fa4d95f4ca14",
        "cursor": {
          "ref": "1819ed8a-25d4-4cd9-a5d6-61b957cd3744",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "eece1aaa-454b-4a08-a5e8-10e0609df5bf"
        },
        "item": {
          "id": "281adeaa-ee0d-40e8-aea6-fa4d95f4ca14",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5dcda955-5587-4909-b24d-7b96d2d04820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee38069-b10d-48e3-8c18-46e324c04e15",
        "cursor": {
          "ref": "c6d3b429-9ca0-4f93-a50c-2c00120879e0",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "30565739-a696-4656-a785-6eff682d0791"
        },
        "item": {
          "id": "cee38069-b10d-48e3-8c18-46e324c04e15",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b53de552-3581-4d3c-b848-a411c7444e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcfb8b7-79ba-4954-9536-b632e72b64be",
        "cursor": {
          "ref": "081c827d-0bbb-4fef-a376-f96440ade22f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "35bbb410-5077-4e59-91f8-22fb283f3040"
        },
        "item": {
          "id": "3dcfb8b7-79ba-4954-9536-b632e72b64be",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3e28b87e-15bf-4859-9571-93caf59705ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42565fbc-22a2-475e-9145-6a3d424c7555",
        "cursor": {
          "ref": "67e310d8-985e-45b6-ac41-79e36395cb6c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "80701571-9041-47fe-ab6f-25d8cba9b8eb"
        },
        "item": {
          "id": "42565fbc-22a2-475e-9145-6a3d424c7555",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d53cb9b6-ce27-4daa-9bb9-163244194e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788e8cd8-4185-466b-9cbc-a9ba11a96dc6",
        "cursor": {
          "ref": "6630d66d-0fe8-41d6-a9ec-2324ac18c62a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a16abc6e-235a-4a01-b2e8-885c9c38331d"
        },
        "item": {
          "id": "788e8cd8-4185-466b-9cbc-a9ba11a96dc6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "48350e1d-59ae-4a60-aaea-8aa003184dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cef36d-630a-4014-a6a3-026fca4248f8",
        "cursor": {
          "ref": "b8f751d1-94d7-4979-beb3-9225058bc9e2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3015e592-44e7-4b3f-974f-156ef58a29dc"
        },
        "item": {
          "id": "70cef36d-630a-4014-a6a3-026fca4248f8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "13e42470-99ef-4cb3-a0a1-a6624dfa83d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e08b72-f409-41f1-afbf-7280654d689f",
        "cursor": {
          "ref": "1ef4cc9c-8a26-4e58-9fa3-0d5a3f3c6d33",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a6212424-792c-456c-b7db-8072e4e6e227"
        },
        "item": {
          "id": "62e08b72-f409-41f1-afbf-7280654d689f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bf59edfe-6936-4445-822c-b1e402274a60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e96f5-73b1-4df6-876b-9a7bf148db3b",
        "cursor": {
          "ref": "f837cea6-2752-47cd-a059-fd7dff2ee3f0",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5d6baf36-f994-456f-9c61-309d39366fb3"
        },
        "item": {
          "id": "0e5e96f5-73b1-4df6-876b-9a7bf148db3b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "568cef7e-85bd-46c8-a686-fb853a283df9",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea395e6-d113-4dc2-a4c2-25767f2e5271",
        "cursor": {
          "ref": "e785d216-35aa-44fe-9bd9-616f92516c9d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bc67345f-83cd-4801-b454-06c18a739651"
        },
        "item": {
          "id": "5ea395e6-d113-4dc2-a4c2-25767f2e5271",
          "name": "credentials_verify"
        },
        "response": {
          "id": "00717363-39c3-4931-9a03-337bd4fe3c2e",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "76739e02-ae7e-497a-a7a0-946ce99bf556",
        "cursor": {
          "ref": "161356c1-7f9c-4cd8-bc65-c851ba5054a2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3d142e4a-2e1d-49b2-9da7-fad7a2d5380d"
        },
        "item": {
          "id": "76739e02-ae7e-497a-a7a0-946ce99bf556",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a6e01233-39f7-4dbf-a7f1-8f3420c2df1b",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "18127033-80c1-4aa9-8727-6bd06933fef5",
        "cursor": {
          "ref": "7e9dde45-a66a-4b87-b1d8-7543f016119b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e5ccadb4-5da4-4837-8eeb-9e384432046b"
        },
        "item": {
          "id": "18127033-80c1-4aa9-8727-6bd06933fef5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b301490-7668-4b2d-9c5e-6896783f0ee7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18127033-80c1-4aa9-8727-6bd06933fef5",
        "cursor": {
          "ref": "7e9dde45-a66a-4b87-b1d8-7543f016119b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e5ccadb4-5da4-4837-8eeb-9e384432046b"
        },
        "item": {
          "id": "18127033-80c1-4aa9-8727-6bd06933fef5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b301490-7668-4b2d-9c5e-6896783f0ee7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebbc48c-7381-47ef-b627-b9cb2f8d89fb",
        "cursor": {
          "ref": "46639502-f6d3-4e5b-b13a-7b7668e28463",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bdc0c2f2-725c-4bce-bcd7-04a6dc70a339"
        },
        "item": {
          "id": "aebbc48c-7381-47ef-b627-b9cb2f8d89fb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b05ad893-42ba-4e04-8034-fe1b94fca581",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6520c7c-4745-44fd-ad6c-5fcf639f65a8",
        "cursor": {
          "ref": "6e02644b-4e3b-4a4b-8419-f929ed8492b6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3e289437-0559-4132-bfbc-04fee8722add"
        },
        "item": {
          "id": "b6520c7c-4745-44fd-ad6c-5fcf639f65a8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e4ad2e09-fcf6-47a3-b6ff-92b25f70f684",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}