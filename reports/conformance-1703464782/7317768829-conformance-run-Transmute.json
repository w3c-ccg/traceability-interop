{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "39c4bffb-42e6-41d1-ad62-5ccd8192b184",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d7457a63-23de-40b5-91a1-f968ef771ef3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67d84c7e-6246-4d67-bf06-22af05646eb3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8c45786f-7496-4bbb-af56-bbd7c2b46fc6"
                }
              }
            ]
          },
          {
            "id": "72d8aadc-8e50-43b8-9834-150b99eda98c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87f9c91d-c02d-4b55-a2f1-c4966f88dfb6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "15806a2d-09da-4991-b19a-1d6fcc928587"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b985a6bd-fec2-4deb-98a3-cac6f6fcbc51",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c5cb4973-6fef-4da7-873b-2401969f3209",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05f66745-5a2c-4cc7-a189-28aa194cba22",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "129dd5c1-e687-46d8-9224-98b2a05bbbb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1372421-b18b-4fb7-b6ef-d1ee8dd3abd0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf96ac3b-bd3d-4172-ada4-1136b5043b34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "085bfe22-06bb-4575-a5b5-526a19d7beaa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d77ce124-51ba-468d-a65b-b91f9c7f7365",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ff6af33-9d50-446c-b641-ab37af4ff0ca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c02b22d-4f8e-4baa-9f1f-9e572f662f5b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "191529cd-0a8d-4c26-aea6-c688f9379cf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4311c73-2534-4006-ace1-891439ab6895",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32aab574-1733-4734-b216-aa94e84ebe6b"
            }
          }
        ]
      },
      {
        "id": "14b56e74-1b45-456b-9d7a-3d07356068c1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f30ff653-7260-4051-b866-db97541549a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fc4bbcb-4f6f-4b1e-8603-8a3764dee080",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e579fe44-7c2b-4f4e-b6dd-8365e7b73214",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99b7d63-abe7-4f7e-b992-042be8d6742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b669f6e0-bca8-48af-9cc9-4dd2ac69ba13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06aff49-cbbd-4a3a-ae8e-9ed6aec6f4fc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc5d1bb-316e-4783-ab37-750a92e647f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dba763f-b382-44de-8525-947dcd872e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f815820-1231-4748-8f43-a69f236367b0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee03b3a-b6e9-4161-b60b-d1b1f3873045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9a652a8-1b3a-41a1-9af2-eaaae5eba8d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b01319ed-699e-4c22-a3e1-345ca12f80d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40bee04d-1840-407c-b696-f953cc95c8de",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b626a5f9-5c58-4f36-a318-b7968906b85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c557474b-41e3-44a6-bc6f-1427f7dab498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa7c87c-c9dc-4360-afa6-c9bb52b16a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844b2cce-5a58-432b-98ea-e71f996052c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6938db42-3e66-472e-b72f-946b66b8468b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6a77c65-dc7a-41de-b908-80096aa9f058",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89dd0cd9-2ae9-42d3-8821-4cd09b4c3e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a4cfc24b-e7ca-4b81-b9cf-e81f64e48d60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a936563-709d-4241-a588-a30133a6639b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "152859d6-e706-4bb5-b067-a2a50265647d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f241ceb9-ecf4-4338-8dd2-099c6ad70463",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37a8125c-b65a-4ae8-a2f7-d3621c58d822"
            }
          }
        ]
      },
      {
        "id": "ed3e5090-e8af-40d2-a9be-acf92d44e9fa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c716a300-8fbd-4981-aaaf-f178d4422724",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80932aed-a169-4c94-8f7d-93b31f31a989",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "525e76f8-3763-4448-aed1-72829bd9d3cf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce34494-1e04-4f47-9e89-c50727ce342a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5ab977-8be9-49fe-92c6-c3221c25f442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2d9214-2c33-455f-a2de-fcfdfdbe1181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af40f1da-8fe3-41d8-86c2-d6cab5e488d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df4be33-4f9e-4691-8d50-b32babbf1ba4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b48ce3-94ea-4cfb-8acc-0acce447316b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3ac396-f53f-478b-bae2-70984e6f4311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c739a1-5a24-406a-8e71-6006c0c9d589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f0e05a1-4c42-4fcf-943c-cb442a3d7e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1334a6-e9c0-4f58-841f-a13b45e044d4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ea4d52-e646-466b-9df8-c52051d83955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71546d50-8004-4823-b8f0-0670b7308cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a85d4b-475f-4447-9268-be40c9a28b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e68b586-6774-435c-8955-da42fa623e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e853a0-7d10-44f3-ada9-9e7cc0be27c3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fec94d6-ccaf-4286-be4a-a844c4aa828d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05895dd0-696d-42ef-8bd3-df56427ae5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5679c6-9071-4bad-9186-7f95ea39bb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "296bf184-c149-4846-bb9f-59d026cbb5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eacfd3-403c-4ec5-9e65-59b08f179d28",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d6163a-fc2c-48ef-8120-c797d250ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd77a13c-7e23-498a-9ae3-02a43d2c5db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecec3a40-33a8-4497-8958-55dedeb1c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77c6fb5f-4873-4f22-8ae2-dbf54fec8657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a981f33-ec18-4a7d-bee0-f36e5fc31f17",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b1bddd-507c-4ed7-a6ec-aa560c5c25fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66845ccf-2d2f-4802-b5fa-b83c87db96a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8526396-e344-471d-b111-745a69e7fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11d0327d-af22-4b90-a604-2dbaeef002b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469521a8-822a-4243-95f6-848ba67c9a2a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15dce2e-9f2f-4b23-901f-bcb1a8a64b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5147e866-8043-4d47-956e-7ec8dda4428c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0a9367-dc21-4ffa-a3eb-9682ce9c5686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7e8c1bf-a70e-42e5-a1ba-a633a942fce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284aef65-fac7-44c6-a2d0-06e1790a3fd4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b70c87-ce90-409d-8365-7d40f670f105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d7d978-0db8-479c-9eae-aea79c103574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb92a282-e20f-4dfb-83bf-558c4ce33f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c239ae4a-b02e-4f6e-9932-d4a4ebacd522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49889c08-4517-4a7f-8589-21d0a90213e3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3515bc60-1958-4536-aa0d-749252bd35be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc61bea-16fe-442b-9cf6-be4d45a42b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fbd85b-7910-4100-910e-e5a3fc18e388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27e94cd7-cc29-4b16-8fdb-07c184b8644c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b30f5c-5524-4a61-98a9-b228d6d3fc1a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a2be85-4a58-47ad-ae6a-caeaa03205c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c1d20b-e16d-401d-a64a-faf93ba09b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34908205-5007-4a17-a295-b4ffa1b65342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa3b7240-230e-4472-b033-9aca7b00eb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291cc565-dd0b-4f0a-b0e1-8f6ea9622277",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4659bc99-3a34-426a-994f-29b5ae5a8ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2902827-5af6-43e0-955f-920934912386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e4ca11-77ef-4865-a926-ed405c349c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16ecdc55-902e-4ac9-802d-c5acdebb33ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caafcecd-888f-443e-a948-7ec6bcff473b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f61a51-f51e-4a0a-b0b1-194defb25bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd1e928-cf94-4243-bc11-df1e240e6b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64765188-9e13-457f-a455-9d5ee5dab21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06e47a2c-0d58-4068-ab58-d23949184a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2c4bac-9ac4-4a22-bbfa-1dc075cf4886",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5c3de7-726c-4d9d-906e-e48a5ede525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffb1483-69ee-48f7-b0ac-8aa7efc8cce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7232b28-5a3e-43e6-b089-d80f19b67e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57273b9c-35d9-4ae0-9848-2ca7982dc564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4976daf2-3df1-41f2-9783-d38501e9a5d5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6361197f-2342-4798-90f4-18e4825254cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f92442-a1cb-49a4-a368-72ba08ea2b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacc63ec-c2eb-4ec5-831a-42f9f7fcaa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5843836-5fa5-4b65-a153-ce3df803c7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a2ce6f-4166-44e9-9028-17b9e0c2682b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bccd11d-fc39-49f1-a7c6-1448fc61f28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bdacff-bd53-453a-ab76-90e053b2d448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d4b6c8-b50e-4682-9e60-ce0e3c04794a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27d806a1-da6d-461b-8abf-f70d58279c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c2754f-38b5-405a-a266-b8a4b69d6e18",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa3e6ef-57d1-4435-9500-35f3fba8b34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78caa666-ba88-4bf5-9fec-51e0382502c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8880cce3-d311-4341-a01e-3406efd25a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e155c8a-874b-4f00-844b-58c916aef2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bd506f-b63a-4f22-a903-6d5a087c001d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1564277b-58b2-41cf-b4fe-6fa21dab0bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e5c2db-8beb-46b2-8fa2-7e2b0b27f59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18b67bf-879a-4649-bcce-7033e3f66287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62c4da3e-7cb1-41eb-b3fa-9db86ca0bf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dff581a-630b-4f8d-9d2e-7a7d6732008b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d25fe96-02d5-43d2-bc63-3f744adf71b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d851f339-b104-438f-8c41-e031ccf701f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0355a842-6a08-4b36-8886-af80a44d2050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f919cb48-fc1f-4d51-acd9-8e87d6d0354e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be389a60-94bc-40c9-970b-bd053316e907",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbefc493-8e2b-4337-955b-486944533163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5e3b9c-90f6-46fb-bbb8-a40bc33ce1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45cc11d-854f-4673-816b-a72a0ab3dff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa17126-4ce3-455b-8cc1-92dcb122bcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12290eb-14b3-47e8-a394-0ec8c174e0fb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84cbe97-3e29-486c-85aa-a4b006b7eb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6917c4aa-6887-4f19-ac79-90022dbc08b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a689c342-0ef2-432d-a206-7c8ee90509c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e51c8b-1a85-41fc-bc2a-a81cd1bc21e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1145c18e-7854-42aa-8ca3-3ce98e028450",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ff38b6-1cc6-49ff-9b38-c965928cf822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80f0d33-ed35-4b68-8fd2-b343247ed9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f05aa3-947d-4a02-9818-127ee4ee25cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "090823d2-a620-49ac-9d1a-0217b8ede186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98642b1d-9036-4fe6-9e20-882dbb51d912",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745ee562-447b-4609-a13c-c82940dc791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367aa8f7-1dd9-4ce2-83a4-42fb48cb70d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e595e66a-7cae-44e5-a6cd-8b96ac5731bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "920934dd-efc4-499e-9f63-2a619ad2c581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b542430-ddb6-499f-8992-1c3dbd1cedc7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb276296-fb01-4cde-8e4f-89220aac66c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4cc4db-8e8f-4501-baf3-fb416a161528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce456ebd-2bc7-4e5d-9f22-74046bb6837a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6ff317-c774-4f9a-926f-7a8278c3a380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16336c4c-a4ff-4681-ad86-033ef97c0286",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0f3ba4-6320-464e-9dfd-40e665262bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0017868f-27a9-4b89-bb9c-cfb15ee7afa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633361b8-5c28-43b2-ac8a-60e527ae2a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc7154b-c2fe-4abd-bd8a-48eed0b18c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b9d580-971a-4519-a225-c968b081dc02",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756b843c-9585-4a84-8e80-01b071f82bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644a5944-3d06-488d-8f3f-995eb00f9c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21bb23a-1aba-424b-b704-11f3cfdd7bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e5c5c8-a219-44ae-8799-a289cd3eb3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e6eb06-45e0-427e-826b-53cd73924b1b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dab4dba-45e5-46e0-950f-6170a8e6fbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9442fd4-8702-465b-8730-04e2231358e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f17f6f-67da-4b5c-9ebc-127069d62c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ebaee8-818c-4b23-a7f6-09bd423ce330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14678c68-a6d2-4b3d-85b6-4013ce379972",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10780b8f-e069-41fd-a4b9-3e8db8596f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5534f0-f1e7-4d31-bc3e-c637416183df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27464b15-12de-4874-a5e0-583858e0ec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2428d9-a041-456f-9201-cb6ea0751d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18c0863-b1d0-49b0-8b81-f9c9ad24e6b9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb79860-63ce-4c5e-aed8-e51ab25f1d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21368ad8-8a2e-42ab-8dda-3a6f10a70f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0450775-b122-4c42-a1a7-89568d19eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29678f82-0066-4bad-a099-1c6ada9d84e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0cf309-f651-4987-9b77-ba11a5fb46e7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2b5327-206f-49b4-8d3c-2b34bc959108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f346c36a-ff15-408c-bb54-c4d0cacdb4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1a00e7-e5fa-4a8a-8e9b-5c01c15fdddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d0c2c1-df75-488e-800d-e03ba6e56524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5471d6-4126-4918-9884-d96dd4a43914",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10676fcd-5348-472e-999b-51ab1ff748be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e824b3e3-2460-4961-bd2f-163927bcb7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aad01c-ba53-4ce5-a893-485626cf678b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "894509fc-b7df-40c8-88cd-6b8a6101abfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9082611e-efc9-48cc-8f6e-25325d9eea68",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab981cf3-32aa-4409-adbf-1c76de77be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4205883-5277-4723-98f3-cfdd277dcc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15906ca9-e78c-4c31-b757-c741a869e5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c74578-8277-47dc-b16e-79c4721dcba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ba9aea-eb25-4033-9558-afc635e01969",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbc8d17-1acd-4633-895a-b21e0c18d200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa898224-99fa-4231-a125-a91bb3def23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310c514e-98fc-4e58-a137-a3bb27a5ab5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d8b67b-2b75-441b-a481-63e6a7594060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d985d583-5c68-4e60-b31b-e26615ca2e6c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a92d123-b142-4098-8768-ea741e707f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940a1192-f82a-4c33-9d02-042388a07819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a532c2-c352-41a1-9b71-a12d5a70ea3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55cfd064-76ce-4359-9a44-725f4634d98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb65e3e2-6f7d-4697-83ed-7a7ce49a22ab",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f5a6ec-4ea6-475c-af7d-5533417f7a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e7db8d-104c-4b34-8300-c984cc965d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2d275a-adad-4e57-b41f-44350fe8ec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a4f061-7408-4b95-98d0-db5cb317a13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de8fabd-5701-4d0c-a856-cc794b00cb2d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18f712b-61b3-4284-b237-522e7d0b683c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b29408d-daaa-4082-993c-a05b31c0359d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d415e7a-088c-4405-9cb8-67d0e7c7b9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c28d18-e3ce-4b64-86c7-2e4a66f0926c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b916d951-f852-424e-9b81-1ac61630b721",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1067d1eb-fd7f-46f3-b186-428858149ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08eff10f-3352-4cf7-a6c9-74abb2c48e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476b7098-b536-4ef5-bf7f-453c939d3924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f304bd5e-6cbd-4ca2-8d0e-067e4de0be43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af66ea2-a987-49e0-a916-87cc5918a574",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41132979-1145-4419-ba94-7e2c1e4da2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70f9908-fdac-4b5e-9b61-dc23e2d5f727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbeea26-5ddb-43ef-a60e-399a01a98485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cb5333-cff6-443d-8923-eba26363ec64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e1057c-7925-4bcb-af8c-d657401b93fb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a0bac2-4d7b-4bf5-84a7-d6602426cbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a078dc-7da4-48f5-8e50-0d6b178048c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fe01b2-990f-4860-b5af-6bcbca33e80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d74eb13-4f7d-48bd-aaa7-74e0a7c5047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c1a3b7-ce93-4332-b654-a838f4442487",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2b74ba-2a4d-4d40-be2d-38b19d80aca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8066fe5-7894-40f4-ae08-21b6c8932f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcc7c99-0714-47ba-9b17-9a9bfdb1e9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab943972-a306-4101-9136-8f000450f5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d021be0e-e982-4210-8b21-e41cfeea79ea",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e12d86-b35d-4654-97a6-0e7496e0e60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99eaeed2-f4db-41c9-aea7-5f6d429a5e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01974d97-c72b-4850-840d-e5e104384109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f80dd4e3-2df6-4df2-b0fa-8c3df0fd7a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38caddac-d613-4d78-b862-30b982aa8b12",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55f5446-9261-4417-a3d5-eafc3a176f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b5e0db-989a-4c7d-af0d-3ffeaa5dc5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd73c82c-fbba-48b4-9125-12ad4729bb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de933fd3-9255-48ef-a09c-38c8436214c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497536bd-2de5-4c57-89e5-b89c52957b82",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aee3b7-1e62-422b-9de8-16b4890d7328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76db117c-c3d3-4a17-b272-be1c650762aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840fcf89-c182-4a50-86ff-5ab6878e786d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0443b06b-4c3a-4ef7-87a5-bb3b81c3eb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a27d3bd-0ed3-457f-bd43-2540526ef6da",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833d2fc0-9a94-482c-a651-99fba733376d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e04fa4a-e5a7-4f61-b774-aef33486dd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6818e6b6-baa9-40d5-a0ec-256d97dbd5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7edd0ba6-8016-4825-8912-70529327497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42ea152-a93a-4e96-954e-98f4cb6fba14",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ed29a4-b85f-4957-addf-bd6d77ca17bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9f896e-40ec-49da-ad5d-ea765307cf00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad2329b-3674-45f6-8c12-63fd345fd4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "01524269-49ea-4d71-8ba6-e2923b2a98e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb56c76-7700-418d-81b2-bd02764d8790",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8386d8fd-b0d3-492e-9af3-0604abe6cf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9239bf45-2052-4efd-baec-d571801e3e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e747b084-6bb9-471f-92e3-a3f50cde25c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e31fadd1-781b-4b3b-9a9e-6da9478def28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e7d1be-1092-4cc8-be1a-2e61bb49b16c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7553e3c-2ce0-4a00-8815-382cc8c6a613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbfebd5-e61c-44c1-90b2-e8f6af647d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7555922-4dc5-4532-ada1-88a87ebc8913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "746988b2-5bb6-40f1-a066-70c0060d811f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e6249e-b118-4f57-b3e0-286c0ad7eaa2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7be8bd8-2420-4dde-b639-2606894849f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0510d55-7472-485b-bbae-2d7b3e8451b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db176489-5ae2-4bb5-be6a-607905658174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bf0262-175d-49fb-9ba0-09fa5b7cbb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0f6c2f-17de-4635-a9dc-91b114a32de2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e99abc-8f8d-47cf-a18b-ca1b74ae7ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dcd36f-3a12-41cd-9b41-13a1d42f3823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ac7192-70e1-4cf3-ae8c-c15d6d549e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbaec2c-cce7-4a9f-8aea-8780fc019442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32056c3-1c0d-497a-a111-52f8caae7545",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a701295c-e8a0-48df-af3d-3b6ca987576f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433edd49-0d29-4b16-a5ef-bd25fa3f1fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e5e7d7-921f-4b77-a64f-519202b70aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "130ad8bd-0e3d-49d1-9add-893a3251202b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1046a82-6869-48be-87ce-682bf986508e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e26b5c8-1e14-4027-9bcc-70bce016f124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9cba03-91b5-4cb6-8f92-7dce589251da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a4557a-f935-423d-af7e-a0bf3cc69894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01aaa032-d4a0-42d6-95ed-9fbcdc67232e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a87c3c0-f0cf-4d24-bc51-a4cf0be071da",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d892f6-0465-4de6-97b0-dfda9bd33462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c7ac03-ee79-468b-8135-882a588775a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa732cf-9f0d-4cd5-ad0e-30a5663494f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a53c5d-85e1-4ce5-9b60-16bb9633c836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d1a5c8-a463-4664-83d1-faae7af5fa82",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c601de-ae46-40f8-b71f-7e4e69f8cfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f05704-9587-49ab-855c-6702a2911ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b37706-4287-44c1-9f8b-c298063c39dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c293af49-bfe0-409f-8b82-e3b7489c491d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440ac4e7-898d-45eb-ae13-53d191d3ecbd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d786dd84-a5c6-4786-80fb-e9390a79b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae51d71a-7111-4806-9b62-305a3ef7223b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440e76c8-b49b-4cc0-b0ba-51139790e380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eee075c-043c-49d2-b270-f3d9ca06fc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b0b260-6e6e-4f28-aa08-b1b43fa28595",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ffd74e-81db-4fc7-bc8f-af5d3d241851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc00460f-35e2-4bb9-a745-e1d09b43b1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a9b30b-6ab3-4590-940e-2a7aeb87dd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4b0b73-ab50-411e-83a8-91b482219b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8c4c61-fafa-4b97-9ab6-63bbe5dcfbc4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7161561a-03d1-430e-8f7b-6e3cc03d76ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f1f157-2f44-4202-910c-449db43ff58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e838dc3d-bcb9-4e35-8a39-e43a028df2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86e51a3-4b71-4a2b-8035-d1069aa80f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e174f4f6-24ff-4510-ac8a-1f6030d0c590",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fc9c26-44fc-4cc3-878a-afe34f1b3379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cd5a42-a974-42eb-9593-5bc932cd706e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60124428-abe0-47a2-ac99-7b80f5d6e293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8088fa46-913e-42f0-a930-42023ba6b26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c56d184-821c-4b11-b9ed-665a95e19fec",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dec23c2-0dba-4c4e-b200-a0b7b641e8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc992ecd-b61f-47c9-b217-7a16e3c563f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd8bc29-88e2-4fb1-963e-1d54755d7acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "541e14c6-047b-4055-b7eb-af203d306695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67e1a71-6399-4e20-b67d-8e09e3a9e535",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489860b1-94e0-4dbe-99b5-d6c6bc51fe36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72868bb3-d6c1-447b-b888-493c862f0c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b71ef4-e6bf-4dd5-91e6-da831dd97967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe830a93-1706-40bd-b8ac-9c48ecdbd340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3008b4c-a805-433b-b127-b51ddf77a8df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b01192-ac3c-4a76-9f3a-769efb91630c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4347c12-645c-4a24-ab3d-fad78b476d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45d3146-04dd-4991-8c71-0487c16e886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81ed51a0-69a9-483e-bb9d-60f97dc8e2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ee4347-2b2c-4782-b028-879f499b2fe6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e3f9d0-7697-4167-bfa4-4086a300b94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161e3737-7ef6-403e-b65c-1f5eb5076ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b645c28-58c1-4236-a586-4d20e142b1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d74ba9fd-fd51-456f-8ce0-d63d06ee976b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcdbdc4-6e6c-402c-b2e7-034f4dab785f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264a7e48-342d-4b93-a586-11f57f7ebf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ec3be8-a9a6-4c14-92ca-76dbc63fcd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7985ff7d-5318-4ee5-9435-2da9c57f9b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8469e51-0523-444d-adcd-8119e432cdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d240d92a-9d7c-443a-b8ab-78da21d9e1e4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a34f2a6-92c4-4edb-a025-06919dc4e7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3e6764-93a4-407f-ad5a-67ef469f0197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2d2f5f-836d-4f61-9898-cdf043e2b43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "51e028b9-d408-4544-b083-81dc5f3a1217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1ad3e9-bdd2-4e49-b276-5e8446cf9161",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be03094f-f7dd-4930-bc54-cf39f22c2f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3ebaeb-8c1f-4795-9cc8-dc101a73e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a18108-1ed5-4ad3-8d25-f34cb2509cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1905170f-a662-47d4-adb8-b08f1f0ff759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5ab39c-f259-480d-a033-8f91bd9751b2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749f0316-f88a-40af-ad01-8b2e251325dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09abf1b7-1b82-4a76-9671-e3591ae68697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82904d3-3af8-4d3d-b0e8-dfff22775001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f02b9fe4-d06d-4db5-b088-49bac0dff174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acadb8c5-ef2d-495d-ac3a-d0d9f5706f54",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1e1e08-0de1-443a-bfe8-706271b80414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7231de-f479-4356-a8e7-2c7b4e55ca0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2381a2-addf-415b-bd08-1c25d040deff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "572a52a4-3019-4b41-81f9-30785bfadbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717e8b76-1f07-4157-95e9-8d660f3ac476",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a314e4-d2aa-4c72-91e0-4f935ed54d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237c09de-7593-4cbe-b766-8681ed9645a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13aef5e-31a8-4348-87b3-8cd1a15d3537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2f8fd2-b56e-4c13-ac0e-2aec9ea19838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a285bdd-1f0f-41e9-b197-76b44b7da580",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cf1f55-fcb7-4a38-9049-66e2d77ecc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbd9534-08df-4c8a-b971-cd2e15c48415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9430af-bb6c-4f73-84f9-bbf9f263e4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "383b4fae-1e02-46cb-8fda-97bda473295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ad7e85-8d0d-4f75-b26e-ee85d64821c8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33216d6f-96ce-41f2-af8f-96bc115f734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499579e4-4989-4b7f-aa10-eb44579e93eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c1324-0a38-4c22-9346-117fab53a254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b6e04c-4d0c-4fed-b29f-936380dc325a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866b00b9-20f0-4285-ba9a-ae3c745fc47d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c996d44-5ceb-4f34-b5a1-80fd6234f35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2737c4ce-76fe-403b-afc1-c349d16a83f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf2d342-eb26-4413-93f6-2a2838e45bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a9bb28-d15e-4663-9508-a4ed84ffe862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611dfaf0-daa7-4006-b75c-5bd5a3d6964f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865499d1-45c7-4ecd-bda2-f092385fb4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7af0b6-21b7-41c7-b239-2dfe2a5ff430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7f2ad3-3889-49f6-a63b-ef7a957f5484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a622b13e-e25d-4168-89d1-f240b104d83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f23498-08cd-4323-b76a-e9706594ac3a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be60bcb2-48b9-46f6-8093-fc0c80112918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2691a09-1c65-4b65-930c-06f73a435c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ee334f-cc65-4cd5-b967-3bbaee816a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "761228c0-4f2c-48da-9eb4-640cbb45c935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7146bb8c-274c-4acb-9162-c75399f3f04d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be857d8-361e-4826-9389-a470cfb828cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24c7464-a8fd-4d3c-a2c4-985507631044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f35165f-11bc-490f-b10a-447dcfd60df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1f88c3-49f2-4e73-b0bb-d0fd7b0bb448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11702eec-0bae-4c94-ab53-15d645634e46",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498166d5-a6ca-46a1-bcde-add73fc91728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23886184-ec96-4e66-aa10-ae94b09c7c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3544d25-9fcc-4dff-b241-0724f4076f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e2346c-a76a-4222-a959-020d25e312cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d027ab-bd1d-4155-9085-e19d0fd2f0ab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad6ed36-99c3-40b1-8408-cbd2868da8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2b3d78-1ffe-4590-839c-0c5d3125d4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1324a4da-551c-4c85-abbc-b18069ab8e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8198c46-ef34-44ba-92cc-c8efbc12657e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6052d6a-14e4-4829-9daf-05374ed930ea",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba93cf2-8a6d-4bb6-bcd7-117ed9824446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16db9fdc-6491-4cc3-a6ad-2db53398f94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bcdbae-bc94-4be0-8d07-38df153ceed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ea844a-08b9-443c-bdab-0f2cd7301b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82deb5d8-5acb-41d6-9e08-7ec0eeba2457",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3595393b-b262-4411-9d1a-8964b24e8646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201a9c0b-09d5-46d4-a326-d4602d319702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2e0eab-7a15-4951-9470-7c841bececd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d8b3df-2cfa-412b-bf67-5f9f2cd74cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d744a0f3-52cd-4e72-a02e-f3798d66063d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64295df-e623-4a79-bbc6-430012f27a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca510d6-8d46-4c9d-a248-e73972bb33fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af26153e-532f-48ee-a263-db96a0e1643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "122cd200-c3cd-4359-ac23-b8cea9466d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641ec4bf-b9ab-4197-8daa-09b2465b9b88",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456db335-eb10-4e58-8cd5-daa271369e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c1f446-f1a9-4337-84a1-66c3a1d53e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bec2282-fcee-4350-8d81-4f13b04147b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9901cb-6298-4b99-bcb6-5f785b6430a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1549c2-7713-4a42-9746-ebb5c964864f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baed54c-a7ec-477f-80dd-99e9083f65a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694a1ff4-7653-4932-8e2c-b9df0a578120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d273d8ea-e0ec-4ff1-85bf-a6f4945404bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb95d06d-52b2-4c2e-b81f-a48d27761429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0bb030-f484-4269-81f1-ef32cdeb061f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21df7bf-b910-423f-a9df-6a846a9e0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183d44c7-261c-4cca-8e6f-020f1fcd2baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e2bb0-63fc-47dc-b9d2-fb6cdb4d245c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81c6bb33-7cef-42d4-9f32-24f2922bd4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9969bda2-82b2-4db1-99d5-ff29af70d255",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2991e551-2719-4a4e-8211-58c2d3554f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b7aec1-0d7e-431e-a352-e1dcee04e663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a42de4-2e97-4726-ac9e-57a0cc00f8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d57fad-09d3-46d4-9f77-12f00b9a7239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b72e30-a80d-4191-a28f-b5a294fe5062",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cb06a3-bff4-4650-a2c2-6a9d8c84bf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f98a13-09b1-4808-a349-053e4b932d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e994f12f-4ee1-44d2-bbb3-eb557b8637f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0045ac93-5cb4-4599-bdd4-739113e0b47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404447c4-fb70-456d-a60f-a466dd13b02b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3991e52c-ca65-4b05-8466-69106a2e4831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218df7ed-d6dd-4f98-ae30-4705460226fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbcda26-477c-462c-a9da-ee536538e2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e72830ea-8b24-4645-b0e5-13fcea02b2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c51a24-9381-4fee-9a32-46984561215c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21c3cdc-c5f7-442a-8365-9a47f23e880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e277279b-6dfe-4601-bdf3-ebc7e90bf293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5de2421-ae05-4725-ae94-55e77766ef2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14bfcba3-8e60-42f6-94c0-bc9b696b4615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5a2532-f3bb-48ea-bdee-c0ff2eda9e98",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e87ddb8-2681-4d51-9aba-6caf3d00bec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62a0648-af9d-47b0-a60a-1d03f09e63ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2502af-aa95-4139-af71-50ce3082b71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a85d6c69-0f3b-459a-b462-011239535035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6881629-17f3-47bf-9311-bca883c81020",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6618eb5e-1bf8-4108-a3bb-a08846f0c5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d45cc6-6cb8-4d32-af7d-857680b8a00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0dfef9-d43d-4401-964c-be88a7a387c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10cc3ba1-5db3-4b6f-a232-3559e1e1df95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c498889d-58f6-4902-b53a-39341e5cb28f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5909281d-f80c-420f-814d-c3f289c8174b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb00a28-e64c-4f53-bfc1-419131aed844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a8be59-cdb4-4be5-8d9c-e2b2aed20032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24b778fd-4a3f-4d9d-aa9a-6385b192b38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97c6c58-2c3d-4a13-ac44-f1f9c103f894",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436ce28b-ea34-4e6a-91f3-42f0a7a83b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c566b183-cade-46c2-87fc-e2d370371975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4173cd-fcd2-4c30-a1c3-4d235c95eb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "167fa437-56f3-4062-8fd8-f6ecb2e8686e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e3d8d8-2cb3-457b-a2a2-684548d8a60f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2192be0d-d8f6-4d86-a20b-28fea97eb63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c65563-85a6-47fa-a081-861c9b305e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be1a446-1e2f-44ad-bf36-6a6780e3b19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e11cc094-3547-49a9-b332-e47dfaa09387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5936aa1-7a82-4241-9287-14db82de3fd7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ae43fb-50aa-4d99-8443-024cf7af8ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f19615-df41-4139-9864-4a369504fe31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb26f35c-6f7f-43d8-a81a-70a6b17f1e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38799baf-3ceb-4b6b-916a-d80286655a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356b06c8-c86c-4df9-98f3-90b0df80c853",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ec1db0-2d9d-426c-8dcc-5e81208da848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b764c429-15ae-432e-81af-3cef5052ef43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a19287-e651-4c82-aab0-92a8c20fe67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44ad4025-ae14-423a-8f48-1216308f71e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196a49c1-a46a-41b4-8626-348dc7d12e30",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2528ef7d-d9df-4f07-80ed-a28b169d6d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bada06ae-e191-426f-85bc-4d0be193d307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07435840-c22d-4688-879c-4db5499f6f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0745e9d5-d613-46d1-acbb-67853735327f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "172c804d-f808-41b1-983d-2fc037d372f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f6f4cdd-3515-4246-a012-a489859e31bb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f153da-8697-4dcb-9df8-ae7086851773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfa654b8-1fed-4b22-b90f-4922dd8ea946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a12b6cd-31c8-4ce1-8376-e07615040a18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "083fa80a-0349-4482-b2d1-79132a37152b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7bb3abc-d26d-40e3-8d6b-03d6935dc474",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82f9fefe-9650-491d-a5f6-a222d8ddd5eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5b82bea-d5c9-4e30-9f08-d9e509a117e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc848986-1747-4839-b091-c1972dbc1728"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f40e5ee1-53aa-45ad-9651-30155bcf7407",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5e1bb58-d576-4267-9286-32e6bbc5d26b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "27d7474c-d86c-485f-a2d1-01a0cf0f552c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "163039f0-4dcb-4edc-be1b-bc381a2c3efd"
                }
              }
            ]
          },
          {
            "id": "c522c14f-43bb-48d0-b86f-1c31fbb39b88",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cead281-05e5-4133-8a40-e42140c97b92",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f41a4099-508c-4ebe-aebd-94865f33160f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c9e85b-d959-4283-a0da-3e50dc002cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "568e3059-e9bf-475f-937b-192a9f3cc737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d63872-cd96-4b4f-9249-37ba0a9c13e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f93c94-4f74-4e51-834f-4dd3f608451c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aca26119-a052-41cd-a294-90957e31f841",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ffd9fb0-de8e-4ffe-9347-0f444d17160c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0726571f-a1d1-48cc-b3b0-636f2b850246"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "896ff96e-9a33-4851-a073-cf9a59c28e62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19ad69b5-dcc8-4c07-8d29-c1e269254364"
                    }
                  }
                ]
              },
              {
                "id": "8087e109-8d3d-464e-afc7-ea15b79b54da",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db74d18e-b62b-4fab-b1a1-6357be0b0d80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c66f2451-9259-4906-8f01-2858eb3b3f98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55fd9f50-cc24-4dc2-bad5-be8187a2de6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76a402e5-9cd0-4a46-9cf3-fc5208604cb0"
                    }
                  }
                ]
              },
              {
                "id": "70600535-844c-4164-b277-d8245a5924d5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1700e587-f844-4e2e-ba61-2d01dd4fa907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97d2c26d-a126-46aa-a0bf-e85ac1e9c647"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52b3b06d-9a00-438d-92ce-67c140dcf9b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9984be04-c24a-489d-a316-3cde1dd63c67"
                    }
                  }
                ]
              },
              {
                "id": "9c723202-f178-4d96-b42f-ebabfe2b4509",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5169efc5-b5e6-4152-925c-e6b4e58d72a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb36c23a-9624-4bae-b278-0bc8075ddc2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6a61ee3-e280-41bd-ba28-cd8a8bb9683c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b9b23e26-0250-4709-9b9c-81f8c7ee1153"
                    }
                  }
                ]
              },
              {
                "id": "f2ea8102-c885-4759-aa58-467e74b8ff7a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30ed3f77-d306-4432-b7b7-19a4a26e9c90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5662f677-e3ea-4a90-bf9c-d6d35f3ca8fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d76af95e-6673-4abd-90c0-e8212eb265b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b19a4960-26ff-48a4-bad8-b17cadc0697c"
                    }
                  }
                ]
              },
              {
                "id": "5e09d3bb-c83a-4703-af46-56435d2554d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "370a0e63-a046-4486-b657-aae2219a55c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91073aef-fbf5-4e9f-aace-099898f5c9a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edfc15c2-d8c1-4301-964b-1b949f33e056",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3cdba86-aa52-4321-8631-67d7edbbd2d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41683ca6-20bb-4bb6-85f5-241d28138925",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b9e1a8b-433c-428e-9b91-6a576a4a9f78"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "896c72ff-eac2-4abb-9709-691b3ad52568",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca749b33-afd6-409d-beeb-2940fb663b3f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bccdd841-4208-4ddf-a79d-4819c31bc9f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "19c0b875-8270-401f-8c64-7b059bce0a18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4825ad98-8196-4a63-9c25-5fec12c97d7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a487e2ab-a4a7-4c89-b041-b212cdbee457"
            }
          }
        ]
      },
      {
        "id": "d483eb08-f09c-475e-910f-cea4567ee2bb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "623430b6-5291-40ca-81ed-97e73d1cfff9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8d88e19-c5a6-4285-9953-f6ecd3ee6ccc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "122de404-6336-460e-b874-22729fdc439c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b502c8ea-9747-42f0-8c30-7eb7886aed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd50f89f-cabe-4f29-a339-397320c0ca37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b244af6e-d254-4301-ae82-04ac28c48f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf516c33-5242-4531-a406-ae27344cb166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534378d9-df7d-4719-b094-db34bcf30537",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b6115d-89fd-4a95-bd60-0409aa394460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfba4a9c-0377-457d-b1ea-58ba0d2d3ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bee7ef9-42a2-4b32-aa41-d17a9081825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc983da-ded6-4dad-8710-331edc7e03d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc2b155-1e57-4ae4-90c2-b793db0b835d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8f7b39-d806-44a9-b158-e5382a9074ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ff957b-4997-4e99-a551-9f051b0fc6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba663dfe-8317-417b-a5d4-30f85a9ef20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ae03c0-c209-4f45-914e-307eefb9d19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fa091f-9ca3-46c7-81f7-7af675784675",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff03b9e-fd70-4ebf-a7ee-15d0a49671cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e643a7c1-6b8d-4f17-b70e-aaa2da0fe571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b93c1c-8df6-467e-8dd7-d242a35f4fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c876e072-9089-4496-b15f-1e32ec93c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da71f87-ce86-42a9-9f54-fe7393be344d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9822225-253f-4a4a-91d5-7a0fd673d0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c829fc8d-d4bd-4118-a4dc-28f117314068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9748165b-04e6-49ac-8643-0827db9513ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b58d7ad5-1390-4bbb-b045-90d90292672c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97f60d3-b7e9-4f8c-a016-1d30ab17a226",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf53a5d6-64b4-4075-b225-b6067b505299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff2de80-5081-488a-9b31-fc1b0a772135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ac611d-2abd-4656-b551-ad35910d027f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a51d029d-e595-4eac-a6d9-6b3ddacebe28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8736d2-6b5d-431f-8bc0-a3136238ea4e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33493e88-a43e-498d-8a61-bf49f994c841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b8edda-cfa6-42cd-b299-73533ac30ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ced7557-54f6-4428-b8b9-7bcd365232ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9faf70a6-9321-447b-a2b5-b6c6745d2b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fb76a8-6506-45c9-9cd8-4bf6fe6c1e74",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9eed73-0732-499e-a268-114ce4e4be3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da001b36-b2c6-402f-9537-00ecc60d453a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25300d3-9f06-4675-9a15-a655b753cce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02541961-a64c-4998-8320-29990042096a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66b9a6b-9f0e-4118-baf4-9323ed851c73",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef60de9-f987-4a99-be49-ba421b86c997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2de30e6-9a06-4f89-a655-9f2902c71b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7771ea5a-6094-4116-9802-db00ca9dc5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "702599e8-4091-4c44-a5b7-3cd0e5a29342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3e55f2-6cfe-434f-8dc9-bbd8588d0b3d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de960a00-c6d1-4bf1-8a41-ec7a5ec00e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61fc63d-5a26-4596-88dc-1086dc8e7058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1b7ed8-1706-490b-8a19-f2b9aeb029f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef2215a-64b5-4405-a56c-ac3f427cace1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c226a650-5117-4615-8ae7-6aa71f0e86e8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69e4dd8-dbc9-419d-8555-6c7e01834b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e47d25-1fb2-4ed9-8c7c-7a0c97ecb991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d162e3-9028-48bf-9cda-0340d0d63c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "048520dd-7925-4d20-b655-8833eb7f0d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967067ac-d75b-487a-bfe6-4b19d516d044",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d19350-3bee-425f-9fdf-17fd5820f899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff73725f-7e3b-4a52-83cc-34e14b9053b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b6d086-7915-4f9c-8855-7e7b19ef05da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b71e3c9-4c97-4109-afe6-563723f15abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3cbbc7-6926-4863-b360-0b9efc96b475",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e93ea9-e1a5-4ed2-9209-98073f8218b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a83f888-eff1-49d3-a4d5-b8d28d498d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c02ec9-5539-4f1d-8d4c-5b7cffdb4d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce2e6d0-e7c4-4bf4-aa77-4fa1a9023fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6f47e2-e108-40f4-a7fd-455f84ccad91",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b211473-b26c-4949-99c4-859700b292e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73136768-adc0-4825-94d4-1e73ed8688d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5132254c-6d07-45cf-a6eb-2011df44c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db4f53c-2744-47c0-9df9-bb1676f9f909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bdaf7f-009e-4f4d-83b1-98b1bc1bf0d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f402d-0544-40df-9950-e15b9b58c3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321f39c2-e054-4e7b-9c46-d4ba8441b7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407a7fd1-4452-4903-ba7f-dcb40f0c77d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "41924e26-2d99-4d58-8b3a-904e999537a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bd614b-e35b-4a5e-9153-f0d0a15f736b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e53f6f2-cb81-4ac8-b1bf-ea85e6929229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5666a0-2096-4924-8a15-490cc3b12f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddd2b7b-ec7f-4d22-bb75-9c531610612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20e206b-5085-40c6-9417-708b77d8889e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3add9b73-d007-4d13-a20b-26fb62431778",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75d5091-8014-4b57-9ec5-e26bb550a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d336ec6-304d-4216-b96f-4371e51f3964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b2fb60-da4d-4d7b-bf03-534a5edf0fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a532c3-f71a-407c-9765-d1c2a95f5d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249d5845-929a-4fbc-bfa8-ce065bf1e6aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1a42ac-dca7-4a6c-9345-f0aac9a2bae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9fa0c2-e72c-4af8-844a-b0190bfd52ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae9850f-c713-42db-a75f-c8d0d391a0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b76ae2-f12d-4307-81d5-6e6831766bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ad60a7-79e8-4c58-8ba3-008bc22033c2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc26c39f-9bdb-437e-9e97-046f57b7bad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea8b435-9550-44df-b526-9937cf1217de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06e2996-2cd5-4b2e-961b-254d94bb0867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe26664-2fe2-4f02-a559-2556806ae003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a552bf7c-da98-4878-881a-2e5c49192503",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef7a7e8-1378-4fa1-933c-ee52dcdf9193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a70d5e4-2016-4062-bb9e-62295f98d43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e3fea2-420d-4aa8-91e4-e5a6f9a109c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12489dd-5815-4aea-af33-3688b2a6757d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085fd345-a2d1-4e56-a9f9-c6b0a6ac7c5f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdcd9ef-11ad-4a54-8885-f531ade83967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d12f1e-3d21-4bc4-b9ca-df10fe601e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1f4324-258a-41ac-832f-08dc6f3d7456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d2e22a-c270-4976-8190-4c6773c0afc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b52250-62e6-435c-aebb-abebff56903d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f245c7ea-d2a3-4635-924b-bb3b89772256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073807ce-e975-4410-b67b-5435dc528839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11e9513-a2d7-4954-aec7-71f24d0041a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb352b21-a4d6-4732-9106-9749d58887d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceea553-3673-4c04-a23f-e11ef54668d6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41017247-902c-4949-8022-2f6c750c2ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4e7617-1d10-4a28-9a56-daddc3afee10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532a9681-9b96-49e3-a36d-12314089ecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4979d818-f85c-46df-93fb-9ea436c49a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b724ffb-fdd1-4b04-bc52-a047cd5ea8ac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c89e5-2a33-49ec-a968-a3a88e9e9621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41216b07-be36-469c-8131-18fc3a032cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6d7ce0-d551-48f7-93e9-c69b0d0555b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3bcd6a-64e4-4c1e-adbb-41ea6cbe7c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55022a76-e529-4fb2-b39f-e438ad2d16d2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cc20ff-1a70-4f84-b988-ee9a8a5f962e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d019b28-2ba4-43db-bc54-88d75ce447a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcca5fa-da42-4450-8c06-0bf9b6fefb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac349d6c-6f07-4827-ab52-def4e5eec13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32c32e9-faac-4580-9212-0251aff44e53",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc9829d-b7ee-4c1e-b2ea-22508ab543ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48eb806f-8346-4c28-8909-aa1f8cb122f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1fd036-bb38-4be7-9869-ee2f7194f09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8d8eba-bd8d-4195-8461-846727fd7bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3abded-9447-4d0b-a161-914aacfe2195",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94f4bc0-4338-43c1-a025-6775959f4afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a946f193-860f-4856-8b0f-015a56e5d117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9c8080-0d24-4472-bd28-7bf8ff8daf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cf0984-87cd-4461-b38d-86b38dbc4fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11444d8-ef12-499d-9e87-09ce9f9de4d2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b412f2d2-4510-4f66-83df-734c1afcf808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88c79cc-9f4a-4c44-b280-5ebb681dad22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f03705c-8a70-457e-9e5e-cb9f6a38e528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "177e0d17-59ad-4267-b181-c34d34e9bc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a516af-a5e6-4779-bf5d-58810c74546c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7860ee91-2068-45f1-9cee-e90815219d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa8663d-8c21-42a9-9f9f-fce73884494a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11bd9ab-fc64-4201-a1e0-38d3d5e8dc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f494e39-fc9d-4ba1-a69e-3ac7147da03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6dc59c-20c5-4f93-b84c-3cdf9ff05060",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c554bb9-ff82-42b5-8662-29219603c5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3893e69-4a24-43f1-aa13-b3faad30467c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890374da-6a23-4330-a93c-e0528ad983c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2a6e2f-f52a-4635-adf5-6673bd468aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ce9b4c-1f2b-43ee-918c-f3fd9f4f84ab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e52f7e-6234-42de-a443-14fe1fd410ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48ccc5c-48b6-4621-8beb-1889401e6600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c7f450-98a8-49b5-8794-8583ca745d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77909fdd-94c0-4131-9d69-7aac5cd871dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8e1bc7-b4b0-4c7d-8d8a-bee13778b257",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49fe6ec-0e7d-4e87-94e0-ba06c2fc5a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a0df1a-31c6-4fb2-b828-ddb27887e138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca17914-4c37-4608-9702-ee82822b74a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7207cb-4496-43e0-b805-dccda079bf38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d2050d6-27fd-461f-9d1b-e6de5150de87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38cb48de-42aa-42a7-b555-071bb777a632",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb2b652-1e2a-469f-b447-f0e0168789f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd010f0-aa69-44aa-9c0c-5ea38ec2096d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96608141-5c18-4da4-a183-e53ebf543919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bac23ba-1025-4eb9-90a7-5fa781bd0f23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4359359-7576-4350-88ba-4531d902fff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "784ef7e7-b4e3-4072-bcbc-55aa167b96a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12fa33a7-d3b7-4d8e-bc03-b37c4ef45326",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5032b6cf-9604-4c15-b386-1b276c1b8c1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdb7d0ae-dadb-476a-9082-399cea3f9e88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3847a85e-0e37-45ca-99ef-c2d89991629b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ff0c104-8508-4789-96a0-f7e68154363c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9aa7416-de6b-455f-8476-2a7b0fdeb4c4"
            }
          }
        ]
      },
      {
        "id": "1682b7b1-6a8a-44d6-b845-741c19762c94",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f19e9a4d-5a44-490e-8d9f-13ebdd0d2a51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d87cc90-dbc7-43e5-a31b-3c24bac3d4e9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17b74325-b289-495b-8603-b05d77880d73",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8909d8-8263-4fbe-8ba6-92e24de75758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25162b90-d0f4-4897-bb72-807417b8a52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab445429-ef34-44f7-8f54-114cfb34d6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed06536-b923-47cb-86e5-b889e26daa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b571814-78a9-42b6-b47a-b368eb3120d4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c74f3e-2a3f-4547-8163-0436c3b45067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1b2562-d986-45df-9379-a10f98e26f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9f88cb-305d-4e63-a28e-171a895ccdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64287718-bccd-4032-b42c-9d84a7e39361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f21b9-e00b-4c74-99a0-d6392ccc9c52",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7594afc-39af-4435-b0ca-3c46f691990d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a650cef-09df-4405-b269-92ad93a93e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb209b4-9a3d-49b3-af84-0df6095d7f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08519a5a-fcce-4b38-abb1-a4cbfdd536a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1f9130-1b31-45f7-b142-7951502bd21c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b74b06-efdc-4e87-8787-8a605de2d15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2e6176-ce79-4e81-90ad-2657e6ea6953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e33fd3-06fe-4c3c-8e23-2328cb6e66c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f62665-127e-4afb-8bf7-3ab174ff6e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ebef3d-506e-42e0-a3a0-a875d62b524b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94732e2f-1652-4f9c-8c11-b688f701a28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75eb69f8-bd23-46f2-b4fe-6b87cbda8104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f454842-96eb-4203-ab91-ff271b5dbb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9366efa-721b-4304-ab2f-516bf951cbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6878a4e6-d9ed-41f7-bd81-14d7ec91b365",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684ab9e3-0f9a-4c89-91a8-7b4329859cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aae0af0-8a01-4d45-bde6-369ee73715cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695c2aed-75f2-42de-b2d0-b6fae5f3b6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d86196b6-16dd-4679-9060-8dbf65d97baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1d64fa-aa21-4fce-9077-f6c3224eeb31",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d7edcd-8628-48a5-830b-cd3566fb48ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47502953-422a-4799-8d52-8fe921d0e1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419487c9-5511-4580-a7d3-042d0f979783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1e6b47-680a-42a9-98c5-612a11fce36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfc0a63-5125-4a94-ac28-60127aeae03d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ecf0f8-0c66-4555-9201-43ef4b623a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a67234-b3de-416c-928f-17cb267fab03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea17e290-0ed4-4736-98c1-40a7b953dcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3742d7ed-2338-4ace-9dbd-fd333e7b88a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d95403f-3be2-46cb-b859-e89964229e01",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644f09e8-88da-4c51-8716-574d1dae1b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb21c44-bad9-45d3-b620-da8b4e573aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8cbfde-73c5-46db-b587-db3c65f09bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "576d0162-7681-4409-9b49-b3f23ca988cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdf4411-626b-414a-bfd0-5ccea8a09142",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e11f56-3f60-40b3-99ef-78849718708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6f85c9-f830-432b-96d5-14b6a1cb5de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9853ef1c-c68f-4ad3-b832-9348bbaad8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8679e94-f881-4ef5-88a3-e9762a78e188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1f6098-ec8a-4a48-bad4-3a75c9d58568",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e41a623-3da3-4929-b3be-4e14f41281a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f17fc3-4f6b-4fa9-bafd-f63e774f823e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e186b400-8378-4695-8d8b-2d6d1a23c096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "14b5e673-867c-4649-97e2-2d3368386f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9d167c-aac0-4d89-8937-9be8597818a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b0e16e-25a2-4f68-9498-01c01764af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0673bea-de84-4de2-b21c-ff766b5bca92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a2c828-ee72-41d0-b800-f9901ebd6863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "471e7280-bd0e-45ef-bffb-59638fdcf8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e4d8dd-ae44-4117-9dd4-9523703608db",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f196e9-3614-4cad-a26c-265f50b37d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e441477-250c-45ef-8d54-488231fb4b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f6ad60-9f76-486f-a40b-5f8459c6be0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32838770-e074-4372-96be-de6f4bf174fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a013a0-9d52-45e5-b36a-0b7744139d3d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d60258-aa27-4ab4-8cc6-b44c6ea57409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a772168-6374-4e3e-bcf5-b9d4bc0e71b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3882da07-2284-445e-9dcf-15fe24293e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "29dcc88c-998a-460e-9233-38b8ce44adf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a10b22-d320-47c0-933c-794dce4d39e8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2dab3c-91c4-4d5f-832b-2066f9257872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb86004a-fdb1-41f0-8dc8-34901d5b5a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c50f20-da2b-42a3-a44f-0fa5567c7779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d63245-0fcd-49cd-8944-f536803841aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28badcd9-c4c6-4096-a656-fc2dd27e9d2d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c32c39-5056-4881-8c4c-ff3aa7da6562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22687901-1600-40dd-9efc-0d8d3a4ae86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7aad32a-b18d-4658-b77b-3b0c1ef65578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a293747-b3cb-4176-b3d3-00a5e98d1141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54553996-92e8-43a2-94cb-678e1e0d65b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b614253-250a-4fe7-803f-e39ed18f1b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb61f05-cdda-4124-8e37-c0074adccad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e09f35a-3cbc-4091-a617-a912c0c611d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "54022102-9ccd-4c02-acef-d10a8b9e1574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfe1d36-0db2-4a65-aa02-87ddfc5dcca0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b6c41f-6663-4384-ae9d-c745b548a2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceeef07d-eeb0-4a56-b19b-833ee4125c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b45846-8dad-467f-8415-4d878e07cc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da18a8a9-1758-4c7b-9408-ce5de1cbe8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9934d78a-4806-44cf-b29c-a48f7e5e8c3e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341988b7-3022-4b68-a048-74de2cac81f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3718cee8-e49e-412a-96b5-49b4009317bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047c26a5-f843-4d70-96dc-70e042711fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef8d5d4-5cba-4ec2-ba4f-a3bf40b9f61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d509973-c7c4-4b72-a144-733b1d789073",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c40fa07-64ec-44bd-81f2-b39be1f42d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2872979-b68b-4fa8-b9f2-be93a5de54dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb902271-8161-4d6d-b453-10bdc4dc4c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7986f9bb-2ce9-4947-b19a-89aa298543d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79114534-0f61-4039-846e-7028c592d4fb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb433be-fead-46b0-a8ff-725fcd89271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e2735f-040b-439a-b764-72340a3894f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46533792-9123-43e5-b936-cc90e4c5b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9dad96-64a4-4802-b389-96e2c99fcda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb534cc-2756-4d93-81c5-afb83197baa7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123a963e-6fab-4d28-9671-57b09b976e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b858fb-ff2b-4a4a-98b9-ce65916b698e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cff6e2e-e0f6-4719-a84c-efd6b75fef98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1477d48-e140-4047-a899-7b4ae4569bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474b7998-e0d2-45c8-afd8-45b5144ce78a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61eeb70-64c2-4add-a399-3152db01c5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d080c8-330a-449d-9887-326c81fa5695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0ec419-6ab1-45d2-b93d-8507f9bf97e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64170276-2c7f-40e0-9ec4-5884025f32aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da84688-4b08-4f5c-9a56-b513bc398bb9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d3745f-4edd-4a47-be3e-b6e0d8a91f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac57f274-0ce9-412c-bfed-9e3ff0e13a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57052bc4-387b-40cc-acfc-af088626ea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed39b0f-64d2-45df-928c-867def2a2fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b239e31-d185-4738-95e6-3ae3f1efaaca",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0325922-9143-4062-aa4e-5ae113619634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42923d90-37ff-4448-98a3-20d05b7e07db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e020433e-34f2-44b3-8d74-eedea3623217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4960437-cebe-4c2d-a8f3-27d40d407cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b17d7c-1349-42fc-abca-4694e5298783",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccd3661-affe-4cdb-9a7c-f690279fc278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0761c62-3525-4816-95ed-d357350113d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837f3f48-bda2-4787-8932-7fbeb8f49b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a30bda-0523-407f-b1eb-e27134bfa2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d29ac0-e7b4-4cd9-97dc-c75832b51ea3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e37439-77da-4e9f-a5db-d17c3962643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546bb38c-629f-4f76-8371-6b14f2e52c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8adfdee-cc93-4d62-9ce3-a640f60586c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e105f99-ccc1-4bdd-9d2f-f99648563c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5f9c07-89d4-4e5c-bf70-3c09a994fe98",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3aeac4-0ef1-412f-be68-4ac24d50400d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c73c87-2460-4e04-acd5-f4f6d906a17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b33ec2a-bfd9-47bf-b06f-867d8ba9485b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7149a440-d4e5-4c11-a69b-5172afd743d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b7b910-316a-4868-948b-4963065762a0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35197a8-0739-46b6-b6e2-3d5b845b498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09972db-b21e-4795-bf4b-f61e2369a79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce3cebe-ca10-4dfb-9750-21f75ebfd747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4140eb5-3b85-4604-ad67-0531411fad04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311656d2-6655-4972-afde-68bc8307276f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c331b53-f698-46a2-abc5-18d88d2e1611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e9636e-6c3d-4d4d-9165-277587f29779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bec8b99-c840-4b28-8e22-28a19971bba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2d691d-ee79-4c54-8568-cf56225699d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5e9670-2f7f-4f6f-8f96-7f0133d97b33",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936f6dff-15c4-448f-ae3e-818440a76aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20d8f42-f9f5-4ac9-b4b5-9d1c96a03dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86a0069-07cc-458e-bfca-2ad1c6440518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de85a1d1-fb73-4391-823a-55f3b78c41df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e75e34c-4a82-4382-af72-8e3511a9c2f9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cd151a-4f8c-43ae-9bae-c9cc8ee2a2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d0661b-2b96-41f5-a712-ee2c7796a825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26180bcc-45a9-4dc5-923d-984ff24d9d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3601afe9-bf01-4a8d-948c-8058f915d040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ade9a7f-cfde-42ca-9a33-656c1a3abec1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5105aa-7952-4bf6-9f3f-615f543a1027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daecad9-2e08-469e-969a-400b3b66b9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96a1873-8edb-45c5-ab0c-01ce8e580c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85358c2-4479-4ed6-86f0-d3f9cd1f1960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b4f793-e541-4d30-92f8-b6ebb8c4e65e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426cc40d-0540-4c93-9e3a-6de7f6c7376b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b60f717-896f-49be-82e2-02dc274e4aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82c236d-df62-4802-b78f-c0a97c19acfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0efa46-66a6-44ae-b0de-fd4b448a628c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa539cf-c5db-4151-9dbc-d2c76b916ca4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8749b83d-800e-4222-9206-67e6ab454227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fee05f-c2dc-498d-8cec-11fa2d74c62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4c3d12-4635-4d8c-989c-4b4bbf066f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7503af-c8fd-4441-8ced-90d4dc981464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7093b9ba-f9d6-4a67-90fc-86ebc01ab480",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a8b378-4f95-40a8-954c-595c9f02acd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11e2d39-f2db-4c0f-98a0-2bef0c412f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b312b3bd-6cf2-4f15-bd51-618b64f296d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba3f565-eeef-4e7d-86da-527603a3d4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6029fd0-fa3f-47c2-bfd5-4d25366f8ab1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e821326-564e-4f28-a0db-76ea13d82926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630b96c0-016c-4aca-8c75-ee1e55167f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5706140-e62f-448a-8f7d-9949ab099e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "434bafb5-c49f-4a0e-b2a1-b8b9a7466091"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66563d2a-8f37-4fe0-9b01-767cf21355a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "205f637a-880d-48c9-9319-028d90ebe3a9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59350009-69b8-4232-8887-abda63173b46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ede9629a-36a3-43ab-abaa-f594dde1553b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959ff973-17d0-4a3c-a0a2-f08dda286b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90c0c554-a739-4184-a62b-c50414dca0fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f5a367a-9c7c-43a6-a2ce-1bb65978825f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aa9a85a-5a69-44a9-b6a9-7b75cef67886"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c84b67d6-1c0b-4374-8d29-1698b13d57c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4379f863-1694-4724-9ec4-bfe2e3ad97d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a69b6fe0-b97e-4854-8a87-d00b2bd5a0c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7f3fee2-8c46-4a74-9ada-81e5d08df596"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50ecdbff-b166-4d06-aa14-87a8e6f261e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6e41018-e26d-4327-8f3e-b70d82c6ce1c"
            }
          }
        ]
      },
      {
        "id": "6eeb0265-bab3-41d3-9b72-2b2bfa43eb4c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7d43cca0-e914-4fa9-91f4-f3c3ee1ed345",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37681abc-6b54-43f9-89d5-ab90226e62bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8daea795-97ca-4233-9b1b-d04e44288a24",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376134a7-072b-4489-a91c-78c0c7f38c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b911c3-0234-4fc3-93c4-d71f9a42bb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0a0af2-1bd6-4ae8-b6c7-e2b4dd9f58a0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5518a69b-09ec-4f78-abe6-9586cc694194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41deb42f-fe72-4cf4-9bad-8ec2938b4bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c86e5af-c04c-43f3-9ae7-ca13ac2eedb2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c1bdd1-411f-4834-b8de-c32a73835822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a3c920-57c9-4448-93c2-3ff72dcc0fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108e9e4a-ac55-4eb8-a459-9e66cfe31721",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b781cf-d1ed-4303-87ce-406085de4de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91daeed-dc27-4744-b11d-025be81ac2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2166ecaf-4e9d-40a4-84a3-e0b37fff3063",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2762ed53-39c4-4c58-8ccd-58317efe6797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2bdcc9-8864-4cf5-b27c-f038f0f317a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cf8d34-5d63-4c3e-aa48-7b6fcb8e181d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b70971-483f-470d-8a54-8c3f2d9e21e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84776a1a-a00d-48df-8cf4-31513d41f7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccd32fd-71a4-4c2a-8944-6f18766bac56",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9faed3-8d0b-4a33-849e-9636a54265f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cdf4cd-2a3f-4bc8-b8b9-2460f95fa84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f663aa2-f1b6-4282-bd84-af8a90a89c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1312c1c6-d004-4057-90c6-b302c878ffb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c4de04-77e2-45f1-a8fd-b76e570a2457",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259eeb42-52fd-4a23-9183-fcd5dc36891e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884a17cf-6390-45c4-9fa7-49e02ade162e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b435691-6ef5-4262-ae9c-d6cd5e3934d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdca4086-ef98-4c31-a186-fe9eddb57c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67c37ee-fe0c-4393-88f1-bec07666cebb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b725bf0-c4e5-4c40-aa16-41d7cba1088b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd4867f-2106-4e7a-92bf-96afdd5cfff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07698ce5-f77b-4236-ae85-61ab615bf378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b39746-6d6b-418b-b8c0-25ecf7b28ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a9c9ac-82f3-4e35-8077-c151d59bfb32",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd7d2f0-ad47-4b85-b864-26dfd802180b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8a3fbea-9b6e-4fba-b15d-af0fd042a021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad66e12-ec6f-4df0-89d2-547e0ff7d33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c438ee-4831-48fd-9d15-ae6a35fc1158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752f335d-87f1-44c9-9b8e-98e25944e724",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46923053-6a8c-4948-9b09-ce3e65876f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18593aa6-cf0e-4337-b0a7-e6ad8aa55412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c8bc6-914f-40ae-aa63-552bb596e06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d961c1-c43e-4481-b20d-2bcf0280848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1d276f-6e16-4b29-b1b0-750b85319f59",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb57753a-65a6-47ee-ab78-50691deea17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2705960-55b8-45ab-bffa-cadf64cfc584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbe6574-05ca-4894-b1fc-f0ca5d4d2b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e2a216-f419-40c5-86f3-a101e80cee94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8030124b-38eb-444f-be92-56d5b890c5e0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519d48ed-f188-4c80-b40f-32aa1442e0b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55f4fa6-7138-47c0-b95c-00aa1cea7669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ff87f8-4f39-41a0-b834-b3b894a85142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17788efa-382c-4a1b-8e8f-801d63b0b295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d18be7-f922-4f9a-a316-c20d7f7354b9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5778e0a3-65ce-4d84-862a-e3eb950cc6d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3492a79a-ca85-4877-a563-e93cad4a6b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf938c98-6119-463f-a118-f5fa3a873524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de38a78f-b235-430d-b8d7-025a6b2543a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baa2894-a4a7-4036-b69b-00ce88f0dda7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316bd1c8-c7bb-4e55-bd72-c440bb95aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d8f3048-dc81-445c-accf-bccbbc24426d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d2230-29c5-4b8f-bb50-5700e28a4abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3205deb-6c1b-40c5-865f-42ee51ac659c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2710424-5742-4f84-a035-92d1413cebd3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4676e3e8-c028-42ec-af93-e7a8d0f9bf5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "342da7e8-d348-4581-b1af-d88b0ccea835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20131bf0-f140-42c5-834b-1a5adb590c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bbed8e-4884-47e9-934d-a2efecd28fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a6ae6d-caaf-43ae-ac24-42de7711b8c1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab86207-601a-4483-a9b0-24ec80f5cc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d735f05-10dc-4dd0-96bd-de0efbf2d813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc51d944-2dd5-471f-8f51-e0310fa3c5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c606bdbb-6fec-49c0-b847-3c1b35ec330e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51205584-a520-4866-9d72-5d4a2c2aebb1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690499ee-249b-4670-94c5-a9e3277b588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180c77f5-9a61-429c-afaf-0837c15530a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0887caa0-2e4c-4721-b810-fc6eb8ef7810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd82d5d-1387-4584-9140-a7f938a88463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959d7069-c4ae-4343-a07c-b749be04b892",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e5b77b-c72b-4c90-a685-bcf24468bcd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217f47ec-4a20-454c-8fab-843f1ea0f900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4279b9-4e59-49e0-b6d1-c12f5e2801e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60344906-005a-4f70-9717-758ed8d7f84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17748f5c-f8b4-4787-8cfe-286e2654ea22",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc2cc80-2ff6-4604-8bbf-e4e722114b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496591e1-c65e-454b-9f79-c7acfdf9c02b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a497f97d-98b7-414f-8f43-49ffea7e94c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a66170-933c-423e-ad55-5a249358d744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bada5140-46d6-48d1-849f-76c5110dfae0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f85b8fa-3b87-4abe-aacd-6dd3a26156c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85a2444-dd06-4318-8c9a-d24839565c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b5aba6-60c6-4c50-b17f-374bf3910c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29e794a-191f-406a-a783-e5f4029d98bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386a8b34-29bc-46fe-b569-7a86f4e4ac51",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91f7bb4-3009-4273-8a09-bbbdcc08ce1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9cad7f-d852-49f3-a09f-ef64f3693477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21066135-2261-4538-a368-9d36cdbab219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cec28b-f32d-463d-bc49-d0e330e1fab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628c15d6-91ce-4389-b570-668a21e55f91",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21953c6d-f6fa-48f8-8fd1-1a5aaf315793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0dc04f-71b7-4607-bf52-e7141c39e59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c3ac50-cf50-4a19-9c2e-ee9abb2fe337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c95362-6515-40fc-ba69-f4f2cd7a373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc85506-6a6b-4453-a02b-6769f0a6e8de",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4bf7bf-9f52-41c5-a5bb-dda7498d3ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f961249-b1f7-4708-abd5-bc9e75ef84ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3178264-4e75-4db8-a4dc-0e1a690cfc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001f8f6d-5c1d-40da-b1b5-f25c6abe4b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd49dadd-c102-4105-bec7-ce4cc3e9ea64",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da5ae0a-a6ab-4ceb-a62a-4c1441f6a828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893b6787-614f-4f1b-8932-fa1389d0d122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04bb85c-a6a1-42f1-aac3-5de45d94ea39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da624fe-4daa-4e3e-a868-e82ff0aa4681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4e8cb1-c649-4ede-abeb-48cfcc92c9bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ae50e0-4d41-4501-8f6a-a685f1f27bde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda0067c-269f-410b-bd98-2571b7ff9045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc082241-ed7a-4350-8cfd-cfbb803ac347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ddab75-508f-4dbf-805b-75f0a07e4b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed342c02-89d2-4ea0-928f-26a319d9836f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d180ca-8f29-4b47-ab40-f34ef4c64153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e51450f-85fa-4b85-9fcb-d39c92dd340a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179b974c-18a4-4a87-842c-00b8a8322035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3458a9-48ac-4031-8002-ba2935b346fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b21bee-c26c-47b3-b2fb-eded0ff5f5be",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef36539-a491-4a9e-9a5f-805c4dedfcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6986c314-13e1-4448-a6f3-59d372376c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3996e5c6-821e-4b51-96da-6dd1b9a4b3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e0b079-baae-49eb-94a9-afa789c2fffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d49e66-b519-4929-aa58-f6577c5446de",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d71d4c-1ad4-4f1e-a3c3-4458285e4d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54dbf57e-23f5-4323-af6e-62f3615eb9b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cea6b8-ee09-4baa-8f3d-351c2125a344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c449dbd-fd14-481a-a8a8-2e7c292f96f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755a95a2-de20-4b10-9c59-b9a78305f554",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159f976f-3e1b-4382-97e3-7e8b0c79963b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb24e45-f690-4662-b89f-22d74d1e72dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eec3b3-2d74-41a8-97f7-b665fb08529d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b29646a-4886-4209-85b4-11fbe10a0a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7e120d-0f8d-4a3b-baf1-78594f0d0b25",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0599526e-4d12-4455-8b85-c65ccf5432e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aae585b-ba6e-4961-8a49-01eb9214feee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390244ec-bf62-4448-89d9-58cc200ee8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1838500d-6ba2-4b58-b33e-679d72c952e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c42f04-235c-4da0-8fbe-3a9d5a2635fe",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b71b70f-7708-4b9d-920f-a44b5816f0b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a4bff4-2955-45b0-acb9-14f5e06630dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e282ff1-eecc-4835-866c-520442ddd073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc571f7-6388-47ec-9114-9a0a6de342bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84c01e2-f89f-4307-b30a-a8ef0d64d826",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba0e933-8130-4ba3-80b2-8b2d83cbebc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1521114-e9fc-47f8-8179-a360797ff7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5226a144-35fa-43ec-a397-2b8bf9004ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5439c0a8-22ef-4d6a-b63c-3942d2d1b762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289162c5-6092-4f49-b204-ed50ddc83ed3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f94ab1-0966-4a32-b55c-b38f5e19cb91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76fc1b1d-82fe-4d9b-9cc7-c361712fcbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e00584-ca23-4707-ac34-8466eb14b19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3781eea7-86a3-4f28-8a99-99fc65c1eaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ed4523-de86-4197-ac31-04b0ff87ec30",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1e964d-8c74-4392-a67c-987b63eb565d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ff1ddb-8be4-4ca0-b2e0-b7803dfdfd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41785c61-8537-492c-be0b-b91205e06695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9a210c-7eb5-49f5-a7d0-d39664a85bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67ad783-e82a-4e49-8b22-8f21dd16b6d7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b670ab-e1e1-4e94-971a-8b26143f3fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5974d069-9eea-4e83-9b16-6e6aca50be37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3132647-f476-4640-8c98-79f64461d689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92df7bfe-b8be-43db-b3fe-7dee24d8092a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09c23df-019b-4f4b-a0b6-946f6a83a535",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47830816-1fa9-4d6e-9a3d-79112fb01d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beef93fe-6545-4845-b168-f9ac5ad2eeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc74bc64-991a-437e-b557-f0a157783ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7d1276-634a-41a2-8d94-700e01c0b75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea920bd-79db-421e-885d-4d77e3e7ccff",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7204a2-6723-4518-9dd8-a91a9460f579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39e4bc7-6c19-4953-9db6-678440b80e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3abbd9-b3b0-4d78-aa58-a86c544823b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf767da-a5d7-4e49-ba97-36888bf4619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc7e874-dcc7-4bf5-bdd9-b0ee7b95bc7a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba7b491-91fd-4446-8c29-fe0c4e7619d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52412148-48b7-4dbc-98a1-7d8521ee0f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363f54e3-8647-4bc9-aaf0-7aad5ffa98c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d64bca-3892-472e-b7c0-94f3485748d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5488fad1-abee-4151-88b3-e0fe681f4aaa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37fb824-aff5-4dba-a1e5-2ea7d25c9ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dabb883-b15b-4d3d-8f79-d5dd9c5cf523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f17f926-00af-493d-b98a-2c2a347a439e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d656473-5119-4056-b49e-5c7811bce1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d05176-3cbb-4e1e-8391-d114e852ea93",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf83a0ed-6584-4a00-8189-5e37c9cb0298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2169027-be60-4137-8b8c-b50be77190b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df300c9-634f-428c-9c79-748d4c667c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67c7496-c0f7-45bc-8fa1-ce86ccdf53dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259c5196-81f9-4618-916b-a45d083f188b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae704d8-e4e8-4cef-8aa0-dec6f927b086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6342066d-b4fc-4fec-a7b5-015186bd4c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361d69bd-5703-4b82-9f75-1474c8b331b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e526df3a-c92a-44cb-ae7d-1d359163337f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e2b9ec-42de-4f3b-b188-10ac396a58cb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ef324f-bb97-4ccc-baea-85bac9f7583b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf230aa8-ffca-4bb4-a91f-2873b52491c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6f0bc2-6bc4-4edc-a46d-912caeb77ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0caeb40d-e906-44cc-bbcd-8ecb9a32c25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f995c5-95f6-4253-8572-5145f8146db5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76583753-f02b-404c-9594-2e7a90ed2c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ef9a67-74cc-479a-8898-7545ebee30e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff989819-e0ee-4b61-82ab-1ff87cd24c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf2ce56-2a69-4c5c-8c4a-a4d5461103a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cdc9cf-da60-48a6-8d0f-bf975e1f2681",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6cc4c9-33b3-409f-816f-675dfffac386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbfe840-5d4d-4b2f-ba7a-c422a12aaf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88eb84bb-27c4-48ec-b0a4-13f612bb5526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0b3d89-c7bb-4aea-bb84-0c07abb75160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b942c541-19dd-4c0b-875a-cc32eab679ec",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467efd33-c10f-4131-8773-621313f3722e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d223babd-abcb-4e76-be7f-359420a000da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f75c463-97bb-4900-8106-408d7c15af8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f550fb-cdc3-40f7-a5d6-b471a9f40ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c73d6b1-ce16-4e24-80b6-f58f4ac399f3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b86829-6967-4260-8984-b8776fc401fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb84cf8-5527-465f-acb5-8b3e441a29fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3995c6b6-7465-47f1-a788-c06c3c5bc0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be95951-54bd-4ff3-a9a0-e30909c54e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecb87f1-7546-4ff8-a95e-4051eac234d8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840866dc-d371-44f2-9faa-13fe43f6625d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd22657-72a9-4c0b-b920-d397aea78790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbf0200-083b-4085-ac1b-d48e64121d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3025a07d-3cf3-49b3-a219-a3f42a3b69a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb78195-4a2f-4bc6-88c8-a455d587f604",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f07b4a-12f0-4fe3-a1ae-e36cda3eb0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaff0a77-df1c-4152-811f-f6d2c37751a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68812a2b-ee63-4192-94bb-abadd3c72d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7c9b84-bdc0-48d3-aac0-1e77c2de9508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c07eda-7b94-45c1-b5d1-34a090e72bab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8495e26-8eb9-4646-864d-990229d53fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587cde9d-ce27-4931-a148-8d6628d6f303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46430c9-0557-40e6-a56c-cd98f26edb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f094fe0-6369-4f35-a820-a35c22d668b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac91d63e-9ab5-4607-a758-56e8ab1d95bb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df68598b-f8cb-4516-a721-f6d57535f60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1574cf02-77d4-4cd7-a018-8cd948a8ee6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9444ae13-4b7a-4420-ab1b-4fbb23e4f8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bc36c6-eb69-40f3-ad19-a79aa321be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f9a14b-1a94-46c7-8ba0-95fe54376586",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7b9cc2-4c9f-407b-81f2-f1e4ffba93ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f788f5b-19f2-49d5-a9e8-cb4ee9075059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c02467d-b5e1-43cd-becd-4597f792f5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00862432-51e6-4bfe-b2f0-717eb34948e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143f9165-0ace-40de-beaa-68e07d069048",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79926004-b751-4621-ad21-ea6811f6ce80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f2437a-e80a-481c-b048-46e84b10ae5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559764cc-e46a-4626-9c7b-345acc8aec85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898ac481-992e-423f-883f-fbdadf8c25dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd74ff54-4439-447d-a77f-58335cba3b19",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a8309b-e2ad-4ea0-93d7-bbdd5da00a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f71294-000c-4df8-ba6b-03e3d397bc7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3964eb1d-bccb-4145-98e7-7d6f769f94b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fb54a5-743d-4159-b1a5-eb52280ad84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a13dc9f-9f80-4f20-9512-a264bb8efc56",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cdd828-2a4d-497c-b098-0294a5387bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1f403e-6961-4953-bdad-4405f82467a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81287795-3cbb-4134-bfb5-639374b9fdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc684572-aa14-4640-8748-3b60c77ee0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08cc8ac-57ed-478f-891a-48c7416ed401",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e417fd3-bf81-410d-ba28-abea38f98a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d95e3e6-eaaf-42d5-82be-ac9e12eaade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597b9001-e61b-42ab-afbf-e0a4eefe7019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85973bb-966a-4e15-a4ea-0311eb257fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a8c7ca-94d9-40c7-8860-7c546f135491",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9aa821-7687-4408-8f63-afbbb55dfe4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db593bc8-646b-40ba-9266-77a6ccd7c374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa4c3de-6aab-4af1-b2dd-e384b5f91f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3cf70e-8f25-41e0-867d-e67db2fe6838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ff748c-80ae-4b65-91c0-7c5530baaa4f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751e314a-5fc7-4e91-982e-47073084123b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f01e6b-de80-4aa1-b349-460ae579c864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9ad673-0df0-462a-bfa9-a260464e4609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f704b7de-b9a8-476e-b292-162ef5b6a0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fd4648-2594-4c45-86c5-32bcefd497df",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0a26dd-e45b-4155-aaff-69f9a8c911cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b87d5bf-6bb0-4554-bc01-035bc552a0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86601d8-7b63-4d3f-a7c1-3ad2a7a94c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035f6a04-7b6f-4324-b34e-6878af6e8ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b483d138-632f-4b29-b174-6dfb2e6f2e1a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ce6a54-d6eb-4fdf-b104-ffe68b52278c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a262ec3-dd78-4853-a427-26f98951f9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3827b13e-4a9a-47fb-8f6e-1a620dee80c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3659141d-d823-4b7b-8433-9cb4d9bd3842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a96a66-77ba-47ae-8178-9b6bdcc032e5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b72e5a-f7a4-4c57-8cc2-34055db8a676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc02ddc-521b-4721-874b-c13f8fdae5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e8fd36-940c-465f-a470-bcb24ab5b65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34afe5b7-c649-43bb-b146-527c7ffa7c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d398c3b5-3a4f-498f-b1e5-0301f7f4578c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb7b296-baf8-437a-9bb6-1a851580749b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f3258d-deac-4129-921e-16e8371f8b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edceebb-56a9-4a4d-8848-e2e2e6514068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b9dce8-53a1-44e3-9c88-1501d0049993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7adaf14-5ead-4e97-9914-923ad9a99e63",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac04280-203f-43aa-87a7-cecfece60620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182b866e-6128-4448-9c26-9cbd7e4898b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f9c376-c002-490d-877f-bb9e870082fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e36d75a-70d4-47c3-bcc6-a7d905cd9eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad199a8-082b-4417-a5d4-eb708fb6c368",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212e1866-00d7-484d-9dbc-25554d89f102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6e32a2-36f7-41df-b990-2f71450cd217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b246f85a-78b0-46e8-9ff5-f55776728f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accabd0e-26ee-4f3a-97a2-caa6da66d24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43139a6-fa04-4822-a9f9-9ea109239836",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47d780a-8923-4c52-b98c-d88340943f19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b165847c-4185-46c3-afd7-cd056f986795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd0fe8e-0904-4b00-8010-5fe2c5894a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a5f93b-442e-4052-bc5b-83b98c37ee48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f665f1-3c56-405c-a0a5-8a48a51178c3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aa446b-25e4-4963-95f4-0c1556196647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc0baff-bb2c-468a-a590-d64defbeff48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7723ff0f-1da3-4120-9a9b-72ba9359d8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae415430-8d40-4d08-9e29-309b44ff8cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbffe5f9-2153-425f-a828-f700811cefbc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4cc71b-f037-4f91-9e7a-2fbfd9492a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5a6e70-c8cf-46ba-8903-3ac5c1d5219b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94491333-28ce-4b5c-85c1-f007412d9a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee45fa6-42fd-4c6d-aa90-9e0fa18d2aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176e56b8-1c5c-4b58-ac71-51433077b0c8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cb0152-7b51-4ebe-8396-c6d0dd12f8c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587bd1ab-7790-46de-9cf9-885e2a57e1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eb8a9c-3114-4845-a953-cf67f46828b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d545057e-2eb3-49c7-8aa0-40023132e07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e510ae2-d311-4361-a71a-2aefc8920893",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6effc9-4828-49aa-8ad4-58831d116293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64f79a3-7d1b-4b54-9dbf-7422fbeb9557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a62c172-ff9e-4e07-8817-ccc1159d71cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ac83dd-9954-4936-a074-42fcb8d3f873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bf93cf-752c-4385-b876-a4cb7b8122af",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146dc712-e3ce-4f5f-b78f-4bacd6c56ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a55cf2a0-3e03-4e39-935a-413c7cb0780f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df307879-b82f-418c-8a9b-d92b50c011d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc11dbd-f501-4386-9b5d-00fc2f137abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18895c9-8e6b-41b2-ad43-1916bd35f880",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed533e1-730e-4776-836e-b9bf2143f79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "443a4bfb-1926-4409-b995-68f2f1bc76c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9817143d-3211-43a1-93b2-fd2e587da12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be90d12-5413-4913-841d-5b1c3c0be045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c9b80d-b57f-4050-98c4-52af1d777b80",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cff8c8f-9df2-4504-a75a-7d14dbd11ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc813869-0e5f-4517-a149-8a400266b856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edd6308-efb8-4854-911e-ef8370ab5025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ce4086-4d26-4e3c-9f85-a3fd32e9130a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c679720a-3557-46fa-b7c4-b7c74725a1f4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6831d277-6e31-4c94-bafd-b6643e9fa3bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afdbff7-56c6-42db-88ab-80e4e4dd5eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a8017c-8c79-4039-a0c2-c4f1c19e3481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50de19a5-5bb0-45b9-9562-b59adeb7cb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcff1e89-c7c6-4eac-825b-49eafda82312",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33a82cf-895f-456b-9a65-326182b419c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73dd38ce-8d2b-47f6-8b79-8199242f8d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f271a7-9c81-4476-8ad7-eac5cba4190b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d31c08-f40c-4ca8-971a-c5bc02fdbfec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8114acf4-2fe8-474f-ab32-2b41362b0b90",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a977492-0e93-4014-ab5f-e6c6f182c86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3820ce-1a6d-4ffe-98e1-6a9684b7b7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f0df21-36c8-41c8-994d-7cdc3738c2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98020847-ec24-432e-8966-b275d8873c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e022474-e1b8-4a57-8b39-ffa558c05f7c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f126e0e4-6625-4f63-a2d2-07733d7873a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad22b2d7-f83c-49d7-a463-30aa6521d500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f195268-5a97-42e2-b308-e9895b20c194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04297238-d59e-43e4-8e26-98645f27f95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5ca080-dc0c-47e1-9764-8ce3c2dae40d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e20be5-9ed5-48b3-be1f-c6f48b81873e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a846c64-af5e-4aa6-954a-f2d7cacc61fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81f8c01-4b85-4807-a62a-5104296fb022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf0128a-7bc8-4540-b80d-6b856a61dc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e764a96b-6ca2-4e06-b97a-e590a5238b18",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2d0b7b-ee0d-43b2-96d5-ccffd038dab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bccda12-da95-4e88-8179-e8350ab40eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e183706-3d01-4984-ac90-91f07db08ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95187ee-b51d-4e65-bcb0-657949407efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a701f93-0910-42c9-9ba2-4ddfb0915543",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec9e3f7-5152-4c52-830f-1779e76eac9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f8e735-6489-4ae4-8c53-5c1ff3f95124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6440fb94-c016-4a74-a6e0-4c06c5071ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b1e3fd-903b-4dc5-ae42-6e6804014001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c716dc8e-ff93-415e-bdf2-8565037fd59b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe99fcc-66b9-48ce-97ab-7d26913b0014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf7198a-f2de-4e13-9a48-0f293a8b5fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a94eac-7391-4ad5-9990-386557f903c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7b0bcd-38e1-4074-81d6-c8146cbf856f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80efe61-c2a2-4b44-94de-b091be393877",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c984f848-df2a-469f-9e5f-d4a2091b51fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab23f622-d77b-4adc-a6f4-dd52a34fb8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbfd275-ef4f-4be6-8612-59fe0ab0d433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bdafdf-115e-407b-9bd6-d6675d4e78df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3e4b4c-859c-4bf6-8d75-bd8a4ac73175",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58077633-60f9-41f9-a073-28a13bac3845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b86193-05c0-49b6-a4eb-4e030bc216d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6623d2c7-161b-42a8-9b0f-0300044668e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcd6860-9e61-4909-99fa-dc4b3af962d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18711e0-54a9-4316-befd-9254b69aa570",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019ffa7d-f2a8-448a-850f-82c608a0382e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d538c949-5171-45b1-81f8-e1b45d875650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24456d47-d069-481c-8990-45703b8363f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21630724-2d73-4a3f-b152-d8c9c481c089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fe0dc6-74e9-4227-aa73-8e4161bdd0d3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f74881-0ad2-4d16-bf9c-bb329b13d353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c0d859-b860-4e05-8bfb-0ace23d3be7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee24e942-d65f-43a3-b2b1-ad2413b6d3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806eef28-ede7-4fc6-8e5d-4eef8e218495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3745377-4afa-414e-9da2-7a379b6df645",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e328914-255c-4404-b8df-0219ec430cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5835f05a-6234-4067-848e-f82ff5761667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7bcd24-3130-403a-a97e-107d4551f8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9631db04-20c3-4be7-a537-961ad3bf276e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39160d3a-48e5-4a70-8025-44f36cf3534d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce469771-d065-4928-8aae-49647d09bd1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1957022-85a2-46f2-a634-6f5292b577f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0b01d6-09ce-450e-8c7d-0a37b1bd367d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6198b5-9f9f-42f4-bed0-564b7c974cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e483f2-0a24-4b3d-bdc9-5c9a654e633f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aca684a-bdf6-4700-87f9-4898b4dc52c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb869ac-e3f7-4d67-b973-18dbf4254eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505c3d15-8ff2-47e2-82c5-f4267be3eec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f64a793-7d50-495a-9399-c2bdab0f0b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910e55bc-37a2-4a85-98da-3f3768f76a35",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f383379-7a20-4caa-b5be-9591200555c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa35a221-cfc5-4836-ab0e-a3b0e54bb798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573b0e69-70f3-418e-ba56-f52cfa46bb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7274f793-bd87-43dc-b6e5-0877a188f455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf302b9e-8371-48a0-a513-6e313ed0ebf2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7832e35-2795-42a2-b69a-44a504f3c126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "395c6c50-1067-4841-bdce-d10a9180bed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a2e719-5107-4255-8111-ab11030a3f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201564de-f22c-43aa-a958-c93a339b95e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17533768-bb3e-4121-9d10-16086e3566b7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0580cb06-0da7-4d7c-9dbd-e2e87adbb2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f396e0-e157-4524-bbbb-26cf06a27dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687e4368-a727-4598-9237-af9c9673bff7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5ea50d-3f53-461e-9d30-2d49129e76b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfc82e1-095e-47e1-9991-a157cdd3f535",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb35390-fe46-4e55-9353-15a27ee1cdb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ad9812-5a59-469e-a886-2aecef02c85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed281157-6660-4402-92f9-a1beb4954fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff645bd2-8848-4e66-adc8-ab1452257595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d7890b-6caa-44b4-9a16-21df3d8fcfd2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ddf7df-f9d9-49a0-89b7-babdcf17966d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88bb3aa-72d5-4fe1-b14d-cae44eb62ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db9cd83-7586-4f9f-95d4-f32d68868b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a2f056-1794-46e5-be04-dd5c1e37e44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2657443b-b56a-42c5-af09-f236b060a2c4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6805a8-4b76-4b64-944e-5fc383dfb542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0097dcda-84cf-4379-a7a0-bfc57aa7bb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c182848-a208-4627-aab6-248a6a3c58d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e0223e-91d2-4029-b1c7-1c901896bcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7bc609-a42f-4a73-a882-2e1727425e47",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a46d986-f526-4cad-8f53-04178889b149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534ae3b2-9071-44a2-952a-e88db90dc87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bce0194-4dcb-4e30-94c1-9cf9f41b56c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4527527-cd50-42ac-9815-6a73b279f60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0151fd7-df2a-4b7f-b344-8034f86ea8b9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f495962c-4dca-4339-8aa6-1ff145930ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86346425-005a-445a-bfda-114386ed37fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66c23f2-feba-4b25-9838-50e017c66fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f731c9c-490c-441b-b160-0cdc74fb1eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6682fe2e-6d7d-4a38-b769-2da13233b117",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff09f87-6274-4bb4-b39b-62b51e61ad62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94498c1e-933a-48a5-b163-34843bc2ac71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2243d90-6aba-47b6-94da-2a6ab88b1e25",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02da0419-f3eb-4ff8-975f-aebecbdcb384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ece80ce-80d6-42a2-8299-9e31c1aa0223",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dfee14-c27f-4d74-9825-bc9139a68472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfaad682-a092-4e49-9bd3-708cf6a86f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ec460-34c8-4d20-b0ef-e08d26d41056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93273f8-ace8-4d4f-a28a-e8365ad9770e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "783496ad-4c4e-4630-b896-632e209a7737",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "511e34ed-8852-464d-88f8-0d870c333ca9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0932618-5efd-4439-bbe6-6252e8c228d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f37057df-8e2b-4c07-bc55-5302988f7942"
                    }
                  }
                ]
              },
              {
                "id": "d3c58924-01f9-419b-a98e-18246528e082",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85b22dea-bbfb-490c-aabc-b06b43bad10f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707701fb-de2d-4744-9a67-b232c65781e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a50b8abe-f872-4ddc-bab8-cc508170a16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c37849-fdbe-45aa-8ea3-d3b10c15a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fa7699d-e253-4b0e-b5c0-7b8c320dd1c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbd44679-4b78-4dc8-875d-10d26558247a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8ee7c97-ac5a-4cde-83dd-abacc157abd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86f3cb29-6f9e-4b0d-85d5-f8a3b436221a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d2a6436-0b3f-4323-9ee3-8d7e538b9d6e"
                    }
                  }
                ]
              },
              {
                "id": "1284559b-1c2f-4b42-805c-c5dab0a572e4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c9e3a1f5-5753-4739-b6ff-6deefc711a5b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cca96e-37df-4979-afcf-0af99496576f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b3595485-d71e-4a7c-b3fe-349a1099d359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af02670-2f91-4231-adbd-22ed1401f985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25290ea2-3b7b-4249-92be-477fd5e85079"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1dd5dcb-0637-4682-b57a-7f6332698095",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aa78cf6-4d38-4c6e-8eeb-fb04874979b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f7a487b-cb58-4482-8aaf-d7f7ad8e3a9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2d105b24-3c5c-4635-8d8d-f08d50b0f26e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "120c8029-47ef-4d84-ad90-8ae99f6b9535",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2eac922f-8693-489c-95e2-c517fdce89c7"
                    }
                  }
                ]
              },
              {
                "id": "dd89328b-acf0-4b53-8122-f2f52280e26c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bbc03fe-ce0f-4087-8d9d-5e1488d18677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a00477aa-9682-4924-9353-ce03753a7353"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6eaaec0-8a8b-49c9-8d6a-108fb2d44105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "337e2ed6-1db8-4cd3-953e-2d6da33723c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a355d6f-e633-404a-b253-51e768833e8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "44ed1de8-9c50-45b1-b80b-3ec0d5dd3c91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58686193-0549-4511-9445-61bccb8835e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da655403-1037-419c-8c48-9d818b01853c"
            }
          }
        ]
      },
      {
        "id": "d20ec02f-d48b-434f-a5cc-216d01622d79",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "546bc5c3-650b-440f-9194-efc2a6f513b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a3aea4c-7e6a-4586-b4ee-a9368a5f4c01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfe240f0-97f8-4943-88b6-096f98103234",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda624cd-d789-4fef-a030-a0f90f709aa7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2205f50f-c91f-43c7-bae1-3a96a5d4383c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9faa6c-d765-481d-a72b-aa7fec483dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcbccbd9-5743-4e34-8857-6ef243bf2241"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c72ad55-ed78-4148-afc2-f0c461be6b6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "005b4a2b-005d-4781-8030-a9b438711be3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8ad4f5a-8a6d-48ba-8d5f-6b9b25c60ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7d873ef-e15c-4a9d-bdef-926a626f83d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d5aaa6a-8e6e-4d6e-920c-de7ffbf3198a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f3a37cfe-da42-4b10-9516-4747c1957049"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6726ac57-7e7c-406e-bb0e-3bc8c1c81537",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34192645-e0cf-4ca9-9c59-d0c0a17be828"
            }
          }
        ]
      },
      {
        "id": "a7a51a8e-ef9b-46b8-890e-f5b6b2c9f666",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c5650108-f58f-4351-a134-612fcaaebe0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7457b4f9-76a3-4925-8f27-233aabb31b02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a88ce51-a915-4a3a-a06e-a4432e946502",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f962a02-9567-4a54-9a91-82ac155e29db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7b3a938-ca37-4cc0-8b91-0ea24871cfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba87daa-797e-49e1-974c-8502a978f7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8388652-6acd-4b0e-99b1-5f6026f875a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d83eb08-633c-4f12-b727-30e94df68ba2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "623eb3f7-d434-48ba-b440-0c0fa906828b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f92baadf-11b2-4370-b8a4-ac4da66775a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8da18713-48b8-4cd9-bcbb-13d2a3931615"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "170bbe21-38fd-4604-9f23-0019ff202bc8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45586dfe-3775-4eb0-8b06-891984605d44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daf0cb0c-9446-4873-86ce-332ffb809933",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86951264-0317-4c9c-87b4-611ca5fbf25d"
            }
          }
        ]
      },
      {
        "id": "61cd7161-40b3-4112-8ffd-0a157c771b16",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1b873fd4-480f-4437-8c75-610dceac1281",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14f89a87-0fa4-4a83-9ca7-68b8b82c4441",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cafb61df-b931-44ee-be62-a66c4cc78f8f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b08d74e-d4ec-40c6-87af-c9a3e8bf0600",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "669dfd60-799b-43af-9271-d1a47ab31d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d2963b-4459-44ea-88f6-fb9e80f25eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03fc305d-458b-4604-886c-a1a5661af636"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c11b3a76-961e-4bca-8a56-b06616b2606c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd0c5ee1-f983-403d-938f-adf34c61d603"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74544306-4d56-4d67-b9d4-cbfbddb36aa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06af425d-cc15-4bd5-860c-08e8bd515125"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf16e20a-0832-4e67-8a96-2e23d8392fb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67ce6687-625f-4b35-9e41-c73405c82009"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6547cf4e-0fec-4572-a2be-0daaf455be5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1fa2a40-4239-4b9f-8487-5b45cb585e38"
            }
          }
        ]
      },
      {
        "id": "e0b20844-039a-461e-b22e-14c587c07359",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb726c80-1112-4883-a047-2e8151000ec7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb9c11ff-eb40-4b95-86cd-9e6d517ebb5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2e8b2764-bf16-4101-8c61-40a12522c9ec",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7057e7f-84c3-4ee6-b8eb-bfb08af87fea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4235de2c-44b6-4c77-b5f1-7b2eff585e2b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.12280701754389,
      "responseMin": 9,
      "responseMax": 2838,
      "responseSd": 324.77938910143774,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703464572686,
      "completed": 1703464614018
    },
    "executions": [
      {
        "id": "d7457a63-23de-40b5-91a1-f968ef771ef3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8f0c264c-9fcf-4510-9cca-a6c6c97d7665",
          "httpRequestId": "45c76bcc-c44c-40ad-9b8d-0a85aef66bde"
        },
        "item": {
          "id": "d7457a63-23de-40b5-91a1-f968ef771ef3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cafb33ca-4dd7-4e50-8dd5-5f28f8959b3b",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "72d8aadc-8e50-43b8-9834-150b99eda98c",
        "cursor": {
          "ref": "e4692b09-d181-4e78-b6d4-2ccffd712622",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b7e3fae0-aadc-4dc2-be7c-e172803ca6d1"
        },
        "item": {
          "id": "72d8aadc-8e50-43b8-9834-150b99eda98c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "57d02d4a-a973-49bc-9548-040445a3740e",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "05f66745-5a2c-4cc7-a189-28aa194cba22",
        "cursor": {
          "ref": "eb6f8e12-160e-4584-945d-1dc083be608e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "07583307-3ece-4913-8687-b51334aecabf"
        },
        "item": {
          "id": "05f66745-5a2c-4cc7-a189-28aa194cba22",
          "name": "did_json"
        },
        "response": {
          "id": "62d9b2d7-300d-4bdb-a845-e02facdd47ef",
          "status": "OK",
          "code": 200,
          "responseTime": 779,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e579fe44-7c2b-4f4e-b6dd-8365e7b73214",
        "cursor": {
          "ref": "a40f9e25-16cb-4777-8f6c-6204ba1e24a3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "477951b6-6383-4ad7-b02d-e2a64ac70bef"
        },
        "item": {
          "id": "e579fe44-7c2b-4f4e-b6dd-8365e7b73214",
          "name": "did:invalid"
        },
        "response": {
          "id": "5a38782b-5d18-400d-9303-28150752172f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e579fe44-7c2b-4f4e-b6dd-8365e7b73214",
        "cursor": {
          "ref": "a40f9e25-16cb-4777-8f6c-6204ba1e24a3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "477951b6-6383-4ad7-b02d-e2a64ac70bef"
        },
        "item": {
          "id": "e579fe44-7c2b-4f4e-b6dd-8365e7b73214",
          "name": "did:invalid"
        },
        "response": {
          "id": "5a38782b-5d18-400d-9303-28150752172f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06aff49-cbbd-4a3a-ae8e-9ed6aec6f4fc",
        "cursor": {
          "ref": "7a869ce7-49f8-478b-93a4-2c901ff9a65a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e327342d-4aa5-4b25-9045-7a42caad0db2"
        },
        "item": {
          "id": "d06aff49-cbbd-4a3a-ae8e-9ed6aec6f4fc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "55659f62-3a48-404b-a03c-245566a8526f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 159,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f815820-1231-4748-8f43-a69f236367b0",
        "cursor": {
          "ref": "6895870d-4741-47fd-ba93-25d4226fca89",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8de86da3-8faf-4004-b031-75933de93e71"
        },
        "item": {
          "id": "3f815820-1231-4748-8f43-a69f236367b0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "45be0cda-3891-4dd7-bf89-e659b75e9274",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bee04d-1840-407c-b696-f953cc95c8de",
        "cursor": {
          "ref": "e3cab1f7-f1f8-4f88-aff0-6392fea4e89a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f09cb1ec-ec29-4048-92a7-b00d50282695"
        },
        "item": {
          "id": "40bee04d-1840-407c-b696-f953cc95c8de",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "10a55e40-5d04-495a-aed4-36c00415a75e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a77c65-dc7a-41de-b908-80096aa9f058",
        "cursor": {
          "ref": "ff42545c-7dc0-4caf-989b-8b690f128f45",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4797fd54-0e87-4d80-9d32-99eecd843f40"
        },
        "item": {
          "id": "a6a77c65-dc7a-41de-b908-80096aa9f058",
          "name": "identifiers"
        },
        "response": {
          "id": "2a2fcc63-a51b-4fcf-a107-7df78eebf505",
          "status": "OK",
          "code": 200,
          "responseTime": 296,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525e76f8-3763-4448-aed1-72829bd9d3cf",
        "cursor": {
          "ref": "876e94b6-3e16-43a9-b2fb-5917272757f4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3292c386-630e-4a73-85a2-a454ed78c561"
        },
        "item": {
          "id": "525e76f8-3763-4448-aed1-72829bd9d3cf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c8487290-cf9d-4590-8214-91266f28fe7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df4be33-4f9e-4691-8d50-b32babbf1ba4",
        "cursor": {
          "ref": "5dd42672-7fbd-4626-a189-1c2f9cfb3437",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ad932855-59af-4d55-91ea-fef855a1add1"
        },
        "item": {
          "id": "0df4be33-4f9e-4691-8d50-b32babbf1ba4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "df3eb329-76e7-40d7-bded-7a88e81edf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1334a6-e9c0-4f58-841f-a13b45e044d4",
        "cursor": {
          "ref": "9bf83eb2-4093-480a-8700-989525ee3b96",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9ca33ada-9007-4965-973f-6faf3621e529"
        },
        "item": {
          "id": "3c1334a6-e9c0-4f58-841f-a13b45e044d4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6cbdac18-352d-49c8-b679-219563cc3fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e853a0-7d10-44f3-ada9-9e7cc0be27c3",
        "cursor": {
          "ref": "05139053-1f7f-4d5b-961e-3ecfabce9071",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7224cee1-b8cb-4aca-885b-9ef7c7ef122f"
        },
        "item": {
          "id": "71e853a0-7d10-44f3-ada9-9e7cc0be27c3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "748981b4-43ff-4c17-874a-b7c76dd4967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eacfd3-403c-4ec5-9e65-59b08f179d28",
        "cursor": {
          "ref": "49620ea4-806a-4343-abaa-42bb5a44679d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e499a612-e631-4e9c-8f7c-11873ec5a758"
        },
        "item": {
          "id": "83eacfd3-403c-4ec5-9e65-59b08f179d28",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "21176d4b-77e9-4b23-91ca-3851973d9a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a981f33-ec18-4a7d-bee0-f36e5fc31f17",
        "cursor": {
          "ref": "8e41f5f8-b6ec-465b-853a-8e3c0b7c1888",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "219096fc-a655-4337-bae4-ce12b8c49d2d"
        },
        "item": {
          "id": "8a981f33-ec18-4a7d-bee0-f36e5fc31f17",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f892ab83-95ec-4df8-af6b-2456a1c48db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469521a8-822a-4243-95f6-848ba67c9a2a",
        "cursor": {
          "ref": "86f2f11a-7ac3-4dae-a5ef-26464a03d018",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fa8754d6-a067-44ae-a998-5bce303026c3"
        },
        "item": {
          "id": "469521a8-822a-4243-95f6-848ba67c9a2a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1f031d70-cd55-420a-8bf8-856dd752ae81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284aef65-fac7-44c6-a2d0-06e1790a3fd4",
        "cursor": {
          "ref": "0709e08e-9547-46f7-ae4c-8f4c28233a4c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ebf7d186-13a7-401b-9276-29f40b449754"
        },
        "item": {
          "id": "284aef65-fac7-44c6-a2d0-06e1790a3fd4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "699520ea-3957-4cfa-a7f4-84312025de80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49889c08-4517-4a7f-8589-21d0a90213e3",
        "cursor": {
          "ref": "ca24c3c1-f4be-4ec2-82dc-d22f28c58fd5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "98f7fdd6-1e7e-4d3c-b1a7-f6687a708cac"
        },
        "item": {
          "id": "49889c08-4517-4a7f-8589-21d0a90213e3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "70499f73-9981-4bdd-bea2-4379aad8a814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b30f5c-5524-4a61-98a9-b228d6d3fc1a",
        "cursor": {
          "ref": "63cce903-e284-4029-8456-cce91338b26c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6361c656-4f5c-40af-888b-ce3c4cda846d"
        },
        "item": {
          "id": "68b30f5c-5524-4a61-98a9-b228d6d3fc1a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5016f365-2a5f-47a0-a7d2-c163285caad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291cc565-dd0b-4f0a-b0e1-8f6ea9622277",
        "cursor": {
          "ref": "7ad21207-f825-404f-9594-898dc214d5a6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ee068f38-5b5b-41bf-9e88-e84067459408"
        },
        "item": {
          "id": "291cc565-dd0b-4f0a-b0e1-8f6ea9622277",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ebc6902a-914a-42b7-97e8-72aace35cb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caafcecd-888f-443e-a948-7ec6bcff473b",
        "cursor": {
          "ref": "6c25566f-ecf8-44fe-a04e-43986b8875c6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fa59a11d-479a-4c2f-8e3d-a4640473d856"
        },
        "item": {
          "id": "caafcecd-888f-443e-a948-7ec6bcff473b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f8ffe729-d56e-4e4b-abdb-dc1f3e42c5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2c4bac-9ac4-4a22-bbfa-1dc075cf4886",
        "cursor": {
          "ref": "84546278-1a4a-4444-9bce-9500567f5fbc",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0bfb5cfa-d564-4de0-8f9c-3cb11a6cbde3"
        },
        "item": {
          "id": "8b2c4bac-9ac4-4a22-bbfa-1dc075cf4886",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cd541924-c1c3-4eae-af66-b5ee6e304ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4976daf2-3df1-41f2-9783-d38501e9a5d5",
        "cursor": {
          "ref": "89f2be11-8cc6-4ffb-997a-8e818c9ff3f9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5c2e0db7-fb16-4d0e-93e4-44cad22cb008"
        },
        "item": {
          "id": "4976daf2-3df1-41f2-9783-d38501e9a5d5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "64da49c2-8031-433d-a228-b2ef5bc0cb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a2ce6f-4166-44e9-9028-17b9e0c2682b",
        "cursor": {
          "ref": "5f0a95ed-c123-40a3-9729-6a27021463aa",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9ef0b65e-f6ff-4ad0-9e63-603a8e4d3b8b"
        },
        "item": {
          "id": "84a2ce6f-4166-44e9-9028-17b9e0c2682b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "571e8a78-1ae8-46d6-89ce-ef2aa01d7290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c2754f-38b5-405a-a266-b8a4b69d6e18",
        "cursor": {
          "ref": "f5f29fe6-5a6d-48cb-9825-6253b52fbb5e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "67a59a35-0274-4940-84c0-731f0c709806"
        },
        "item": {
          "id": "87c2754f-38b5-405a-a266-b8a4b69d6e18",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "248976b6-9316-4b69-a6f4-6e92f5084c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bd506f-b63a-4f22-a903-6d5a087c001d",
        "cursor": {
          "ref": "7426e1ce-fcdf-4904-9384-8866a5c10528",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "45012357-75ad-4a64-85d4-ca7c140f709e"
        },
        "item": {
          "id": "f7bd506f-b63a-4f22-a903-6d5a087c001d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9ba3ba4b-7715-42f1-8c9e-a589f81ae059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dff581a-630b-4f8d-9d2e-7a7d6732008b",
        "cursor": {
          "ref": "b8607d9a-3f9d-46d2-aa26-5a787477bd4b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8bf7d4ab-c37e-47f8-8399-49475d081f00"
        },
        "item": {
          "id": "2dff581a-630b-4f8d-9d2e-7a7d6732008b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fe7fca6b-3644-4be3-82b2-a00f51d37979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be389a60-94bc-40c9-970b-bd053316e907",
        "cursor": {
          "ref": "d449d57d-ec9c-4acc-8b2a-dc6eeb492bbb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dfdb34c8-f7d5-4c5c-9788-7f4dad72350d"
        },
        "item": {
          "id": "be389a60-94bc-40c9-970b-bd053316e907",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "074863e7-588f-44e9-b83b-8d1effe1e3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12290eb-14b3-47e8-a394-0ec8c174e0fb",
        "cursor": {
          "ref": "84490b62-e940-4975-85de-bc75cb281e38",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bd1b0c04-a551-46ed-8077-6a53dd8cbc72"
        },
        "item": {
          "id": "a12290eb-14b3-47e8-a394-0ec8c174e0fb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "43c13b27-5728-4689-99a4-cca66d5a4609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1145c18e-7854-42aa-8ca3-3ce98e028450",
        "cursor": {
          "ref": "d63b49e2-c55f-4d7a-b2b8-e8b7c69676ae",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f796d0a6-27ac-4bbe-b3d2-5157f4fcae40"
        },
        "item": {
          "id": "1145c18e-7854-42aa-8ca3-3ce98e028450",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "588dbc6e-c6ed-49aa-b71a-26ce478fdfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98642b1d-9036-4fe6-9e20-882dbb51d912",
        "cursor": {
          "ref": "9b26683a-01d3-437f-be57-1f488337ed80",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d5e80c0-72ad-40fe-bab1-8abcac5b4b84"
        },
        "item": {
          "id": "98642b1d-9036-4fe6-9e20-882dbb51d912",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "51fee851-18cd-4b48-be5d-809bef915d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b542430-ddb6-499f-8992-1c3dbd1cedc7",
        "cursor": {
          "ref": "c33eba3a-de58-4e71-a902-475fbed72e34",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8a50ddff-bcaf-4236-9d53-66e0b0fbcadd"
        },
        "item": {
          "id": "9b542430-ddb6-499f-8992-1c3dbd1cedc7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1f8773c8-d815-40c6-aa74-6b1bd65e44cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16336c4c-a4ff-4681-ad86-033ef97c0286",
        "cursor": {
          "ref": "c4542517-e66a-485e-8568-8b62e308dad9",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ae8ab720-be2b-4806-b7f1-044029d6aa77"
        },
        "item": {
          "id": "16336c4c-a4ff-4681-ad86-033ef97c0286",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cbb382ad-5306-4cd5-a295-a5ff25ad4017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b9d580-971a-4519-a225-c968b081dc02",
        "cursor": {
          "ref": "dbc15533-3f3f-48be-bb66-b6f1317a2bf8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d77f142-9b43-4760-8726-01fae3d827ce"
        },
        "item": {
          "id": "07b9d580-971a-4519-a225-c968b081dc02",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "054fb2ac-e1f8-4ca8-83d7-c55e5ee3cf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e6eb06-45e0-427e-826b-53cd73924b1b",
        "cursor": {
          "ref": "10b2f947-300e-4d87-8d19-d297718f51b0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "67c5d9c1-897c-4778-8aea-a02147540738"
        },
        "item": {
          "id": "15e6eb06-45e0-427e-826b-53cd73924b1b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f8c3ee82-f8dd-4afc-806e-07dfa675cea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14678c68-a6d2-4b3d-85b6-4013ce379972",
        "cursor": {
          "ref": "2fa38c8d-17fe-4191-87b4-c5ce0c079abb",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e62c9f6f-6ac2-4557-b4b2-ca1bc28692c9"
        },
        "item": {
          "id": "14678c68-a6d2-4b3d-85b6-4013ce379972",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6fa8fcc0-a1b8-4ef7-ad01-27741ff015dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18c0863-b1d0-49b0-8b81-f9c9ad24e6b9",
        "cursor": {
          "ref": "d086842a-fb1e-4c03-b001-3fd801e368af",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "76884e16-2653-4c1a-ade1-d245962c29e0"
        },
        "item": {
          "id": "a18c0863-b1d0-49b0-8b81-f9c9ad24e6b9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3326186c-5411-40fc-8be6-bb30abeec332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0cf309-f651-4987-9b77-ba11a5fb46e7",
        "cursor": {
          "ref": "8d240403-825b-4507-ba70-cd75dd36b20b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "82329ae2-fa70-47fa-bd38-60c5e57ec70e"
        },
        "item": {
          "id": "7a0cf309-f651-4987-9b77-ba11a5fb46e7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "209ca40e-f9fd-471c-b1b9-5d4b6ad3998e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5471d6-4126-4918-9884-d96dd4a43914",
        "cursor": {
          "ref": "7835c66d-4f2c-4ca8-806c-59448d81989f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "987a32cf-14fa-406f-8691-52efe5600562"
        },
        "item": {
          "id": "bb5471d6-4126-4918-9884-d96dd4a43914",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "550fa180-e763-4265-83c1-ff4ed9f06fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9082611e-efc9-48cc-8f6e-25325d9eea68",
        "cursor": {
          "ref": "dd7d5fe9-84db-48d9-92ad-2eca346c1ad9",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3ed756e0-7912-4d69-be73-2e8ebe939c1f"
        },
        "item": {
          "id": "9082611e-efc9-48cc-8f6e-25325d9eea68",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2a36ec27-0669-42cf-8f41-7105e123f297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ba9aea-eb25-4033-9558-afc635e01969",
        "cursor": {
          "ref": "1f0bf456-9716-49a1-8862-374480084987",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c8246337-064e-4849-a127-f95d5c6ed1a8"
        },
        "item": {
          "id": "53ba9aea-eb25-4033-9558-afc635e01969",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "de508c0d-be01-4ba5-9339-8c792a378181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d985d583-5c68-4e60-b31b-e26615ca2e6c",
        "cursor": {
          "ref": "69b82d87-15b1-409c-b855-705bad4d75f6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "73443da9-20c1-4d29-bf91-23c616a933a2"
        },
        "item": {
          "id": "d985d583-5c68-4e60-b31b-e26615ca2e6c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "29e69cb2-78ae-4bb7-a7f8-cc6e3a85e23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb65e3e2-6f7d-4697-83ed-7a7ce49a22ab",
        "cursor": {
          "ref": "1b8fe709-d9ed-4734-a511-68679d2c0750",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0c605dc0-d47d-4f5d-b6e0-640542892bfc"
        },
        "item": {
          "id": "cb65e3e2-6f7d-4697-83ed-7a7ce49a22ab",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c5f3a98d-f8d9-4c2f-8863-eda0c3266c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de8fabd-5701-4d0c-a856-cc794b00cb2d",
        "cursor": {
          "ref": "0156376c-b312-4a1b-aefe-1d50b0ad67b4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "880571b5-3381-47be-9ae8-0d092febad05"
        },
        "item": {
          "id": "6de8fabd-5701-4d0c-a856-cc794b00cb2d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "823abee2-7064-487a-9ef4-523922c25919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b916d951-f852-424e-9b81-1ac61630b721",
        "cursor": {
          "ref": "72d1c1d3-9a3e-42e2-97ee-af6b01b48016",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "71e4513d-c548-4123-9975-630d3510651c"
        },
        "item": {
          "id": "b916d951-f852-424e-9b81-1ac61630b721",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6c2571ba-a783-41f2-9464-421386b5d98e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 325,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af66ea2-a987-49e0-a916-87cc5918a574",
        "cursor": {
          "ref": "37ec459c-3129-4a56-b432-e7cc480133a4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e5541e78-8797-4d6e-b706-86f654836a24"
        },
        "item": {
          "id": "9af66ea2-a987-49e0-a916-87cc5918a574",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3dfb0e46-5272-4ffd-92d9-86b02e9d493f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e1057c-7925-4bcb-af8c-d657401b93fb",
        "cursor": {
          "ref": "02bdeff1-bd5d-4f53-9928-1d90f462e51c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b68c0b08-1c6a-4408-9312-a315af03ba5b"
        },
        "item": {
          "id": "02e1057c-7925-4bcb-af8c-d657401b93fb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "00ba7df8-0d34-4493-8547-6d61c1b5dbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c1a3b7-ce93-4332-b654-a838f4442487",
        "cursor": {
          "ref": "ed462e85-4a7c-4712-9bb5-91d7dfcf42fb",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8214c18e-5b92-4f48-9829-64d5c6dc7764"
        },
        "item": {
          "id": "32c1a3b7-ce93-4332-b654-a838f4442487",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a7393c35-1b31-444a-8a36-e733da78ec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d021be0e-e982-4210-8b21-e41cfeea79ea",
        "cursor": {
          "ref": "9dba8881-6b37-414c-a4b5-55880f20c6b3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9a85e239-5363-44aa-aee8-1bf536858cb4"
        },
        "item": {
          "id": "d021be0e-e982-4210-8b21-e41cfeea79ea",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a6f84fad-27d5-4560-8507-ad3b42b4d7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38caddac-d613-4d78-b862-30b982aa8b12",
        "cursor": {
          "ref": "b805f277-ec50-47a8-947a-3c27b2e87af1",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aefebdbb-56ea-4801-a15f-1fdd2ef980f6"
        },
        "item": {
          "id": "38caddac-d613-4d78-b862-30b982aa8b12",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5ad748e8-03f2-4555-bf38-d3e80647e814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497536bd-2de5-4c57-89e5-b89c52957b82",
        "cursor": {
          "ref": "1c59033d-58ca-4f8c-b0b9-1bfe25f9af27",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cfb0b4c7-f802-46a1-92da-25249efb07ca"
        },
        "item": {
          "id": "497536bd-2de5-4c57-89e5-b89c52957b82",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "603171d6-8601-46bf-8188-8cd860dcc83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a27d3bd-0ed3-457f-bd43-2540526ef6da",
        "cursor": {
          "ref": "5e508763-6048-49ae-aa22-2c4836e7d7a1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "51fbba89-14c2-4ce5-a2bf-4db0df84c594"
        },
        "item": {
          "id": "9a27d3bd-0ed3-457f-bd43-2540526ef6da",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3f799bad-f164-4a89-8761-7cabc509574c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42ea152-a93a-4e96-954e-98f4cb6fba14",
        "cursor": {
          "ref": "b1d3749e-40c6-4da2-b26a-cd25209a5beb",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "86fff638-08b3-4bfc-a327-29f05a95b48f"
        },
        "item": {
          "id": "e42ea152-a93a-4e96-954e-98f4cb6fba14",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dca12734-de74-4168-bece-14e9e9ca222a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb56c76-7700-418d-81b2-bd02764d8790",
        "cursor": {
          "ref": "33b11952-039b-4925-b2c3-18403f2df073",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3deb3dcd-0a1c-418a-9b63-8e6dfea1ed31"
        },
        "item": {
          "id": "ddb56c76-7700-418d-81b2-bd02764d8790",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e192463c-8b3e-4ccd-a7cd-27bb7302cc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e7d1be-1092-4cc8-be1a-2e61bb49b16c",
        "cursor": {
          "ref": "558a4a12-a05e-47b0-bfee-8d588e2fcb95",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cece078c-7707-4366-acc7-ce017008f9f6"
        },
        "item": {
          "id": "81e7d1be-1092-4cc8-be1a-2e61bb49b16c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "29c6ff67-0d9d-4986-99fb-ddbf8fb8d087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e6249e-b118-4f57-b3e0-286c0ad7eaa2",
        "cursor": {
          "ref": "49c86c20-b9dc-488a-8da1-270fdf236389",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2acc7375-9108-4ca0-9302-b3c33a62504e"
        },
        "item": {
          "id": "26e6249e-b118-4f57-b3e0-286c0ad7eaa2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0a2c4f95-cf34-48b7-8911-710f696783c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0f6c2f-17de-4635-a9dc-91b114a32de2",
        "cursor": {
          "ref": "0210e146-c01b-4b5f-bee2-51079a922356",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d5384caa-2aad-4cd4-9fb7-54ffc83759d7"
        },
        "item": {
          "id": "4d0f6c2f-17de-4635-a9dc-91b114a32de2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e08e3630-5b4c-45c1-ada5-1fafab5f30f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32056c3-1c0d-497a-a111-52f8caae7545",
        "cursor": {
          "ref": "ef128fc0-2a41-47b2-8f23-f1393a1d7f28",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4a0a1f5f-aa0e-4f90-88a7-33cec4b6cabb"
        },
        "item": {
          "id": "f32056c3-1c0d-497a-a111-52f8caae7545",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5163b7dd-9616-4ae6-be31-8ba347890168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1046a82-6869-48be-87ce-682bf986508e",
        "cursor": {
          "ref": "39c92c64-f793-450e-b325-be18aeecfeb8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4eb9c426-b00f-401c-8dc3-0750b26a7fd9"
        },
        "item": {
          "id": "e1046a82-6869-48be-87ce-682bf986508e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4ba03aeb-20e2-4229-9c20-f29cd2af46dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a87c3c0-f0cf-4d24-bc51-a4cf0be071da",
        "cursor": {
          "ref": "0be53487-52f2-4323-b994-0de94528d630",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "befa4013-4e6d-44a5-838b-f2e6e45d0e21"
        },
        "item": {
          "id": "8a87c3c0-f0cf-4d24-bc51-a4cf0be071da",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "65c286c7-7b46-47f6-be94-2cfe19e8ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d1a5c8-a463-4664-83d1-faae7af5fa82",
        "cursor": {
          "ref": "a10bc56a-b46e-4496-8eeb-8916ac12b4db",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fbda2579-1856-4587-a464-bcdf705ecbc3"
        },
        "item": {
          "id": "33d1a5c8-a463-4664-83d1-faae7af5fa82",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9dc53d3f-3021-4d78-9c1f-5d28b779483f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440ac4e7-898d-45eb-ae13-53d191d3ecbd",
        "cursor": {
          "ref": "f3f4ab76-ff1f-45f5-874a-97504d378f5d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1c962181-bece-42de-97a8-96e2fbf0edcf"
        },
        "item": {
          "id": "440ac4e7-898d-45eb-ae13-53d191d3ecbd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e7f86ef1-842b-46e7-93c8-db17e6906bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b0b260-6e6e-4f28-aa08-b1b43fa28595",
        "cursor": {
          "ref": "72103e8a-7a2d-4e61-bf96-403a9a05d2f5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "20e52ab4-95e7-4ee6-ab79-cc02ee72d6ea"
        },
        "item": {
          "id": "43b0b260-6e6e-4f28-aa08-b1b43fa28595",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "61d56288-e239-4884-9f8b-fa3cbda87270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8c4c61-fafa-4b97-9ab6-63bbe5dcfbc4",
        "cursor": {
          "ref": "ec0e6d08-44e8-43dd-a665-5472742af733",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b4a554aa-156a-4056-aeab-2591724ca318"
        },
        "item": {
          "id": "bd8c4c61-fafa-4b97-9ab6-63bbe5dcfbc4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dcecfc72-8078-4833-9ed9-35f4e819e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e174f4f6-24ff-4510-ac8a-1f6030d0c590",
        "cursor": {
          "ref": "3b7bda0f-5b81-41a2-8588-d45bbcc22db3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1dfe30af-89fc-4919-afc0-03743d53da6b"
        },
        "item": {
          "id": "e174f4f6-24ff-4510-ac8a-1f6030d0c590",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "06feccc5-0368-4da6-b1ba-816c0d3a0f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c56d184-821c-4b11-b9ed-665a95e19fec",
        "cursor": {
          "ref": "138b2805-9dcf-433e-94d7-54df580e6b4a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "acaa43e7-f939-4094-beab-520be75ffcce"
        },
        "item": {
          "id": "8c56d184-821c-4b11-b9ed-665a95e19fec",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "83d22226-2518-43af-a951-8e6233fd3d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67e1a71-6399-4e20-b67d-8e09e3a9e535",
        "cursor": {
          "ref": "a8263fd2-8daf-4226-90f4-2f60c37c3d3b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bfd7c93d-2d67-45fb-ba41-a3718318515e"
        },
        "item": {
          "id": "a67e1a71-6399-4e20-b67d-8e09e3a9e535",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e86ab33c-51fd-4a02-b17b-be29cf0f9309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3008b4c-a805-433b-b127-b51ddf77a8df",
        "cursor": {
          "ref": "7658262a-01b3-4aa6-978e-d57e3090d0d4",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c81d0c4b-3f8e-41b8-bd13-11c0d7a32393"
        },
        "item": {
          "id": "b3008b4c-a805-433b-b127-b51ddf77a8df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4671f98e-7463-4593-876a-ae34bafb9d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ee4347-2b2c-4782-b028-879f499b2fe6",
        "cursor": {
          "ref": "e11e3fbc-edcb-4332-805e-b1c7ed9b4f0b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9fb2a220-132e-4d0b-a40e-36441a2bf265"
        },
        "item": {
          "id": "34ee4347-2b2c-4782-b028-879f499b2fe6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0dd7445e-b8e1-4843-978d-767cb7a8f5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcdbdc4-6e6c-402c-b2e7-034f4dab785f",
        "cursor": {
          "ref": "b9814356-3e21-4360-aa97-66705bcea28a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e1b39462-cd3d-4354-abae-748be93386df"
        },
        "item": {
          "id": "6dcdbdc4-6e6c-402c-b2e7-034f4dab785f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "53310d80-c599-4006-846b-8887d73a44ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d240d92a-9d7c-443a-b8ab-78da21d9e1e4",
        "cursor": {
          "ref": "d126d693-f66e-4596-ab74-4a8c95881670",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d9839a95-8855-48b8-b9fe-d7db9d537fce"
        },
        "item": {
          "id": "d240d92a-9d7c-443a-b8ab-78da21d9e1e4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9ca5cc78-dc67-431a-9cd9-acd3660b59ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1ad3e9-bdd2-4e49-b276-5e8446cf9161",
        "cursor": {
          "ref": "5c62e866-613d-43d7-a292-dabf73bb0915",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "16f3dca5-663a-49ac-83a3-5d066de8fa86"
        },
        "item": {
          "id": "1c1ad3e9-bdd2-4e49-b276-5e8446cf9161",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "df3b14f9-75ab-491d-9269-ff784cd68f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5ab39c-f259-480d-a033-8f91bd9751b2",
        "cursor": {
          "ref": "fe31d81e-8b04-4bd1-86e6-7acda7148ff1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "86c71af4-16fb-40a8-a65a-0d2c4a1124fa"
        },
        "item": {
          "id": "dd5ab39c-f259-480d-a033-8f91bd9751b2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "509eb742-b678-4e54-b5b1-af2842940fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acadb8c5-ef2d-495d-ac3a-d0d9f5706f54",
        "cursor": {
          "ref": "670d0478-7f4d-44c9-a32b-69f49120b973",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7a6f9cde-0e33-4e8e-8a11-afc27a6e0100"
        },
        "item": {
          "id": "acadb8c5-ef2d-495d-ac3a-d0d9f5706f54",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9d225ae5-41d7-40ae-a530-5b4cd809e134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717e8b76-1f07-4157-95e9-8d660f3ac476",
        "cursor": {
          "ref": "1e75eac8-b029-4529-8364-29777c793296",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f6c1fb0c-1385-4a00-9324-f6c6688678bd"
        },
        "item": {
          "id": "717e8b76-1f07-4157-95e9-8d660f3ac476",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a551c4ea-cf03-4d77-9a59-beaa9a31bc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a285bdd-1f0f-41e9-b197-76b44b7da580",
        "cursor": {
          "ref": "63ac20a7-6b46-4db6-89b1-6260f6627cfc",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "38f0a7a3-0c9d-4eb8-8ddf-87f19ea5f384"
        },
        "item": {
          "id": "0a285bdd-1f0f-41e9-b197-76b44b7da580",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2ad9df9f-6685-4fe5-a728-a92eb13adcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ad7e85-8d0d-4f75-b26e-ee85d64821c8",
        "cursor": {
          "ref": "bea43082-0fa0-472a-ab9c-dc1b9736e107",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bf7f62c2-65f2-4d08-9bbd-c36fbf8287ac"
        },
        "item": {
          "id": "f7ad7e85-8d0d-4f75-b26e-ee85d64821c8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "431f9262-9fc5-406b-8c8c-c3a4063624f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866b00b9-20f0-4285-ba9a-ae3c745fc47d",
        "cursor": {
          "ref": "da2eae8d-d670-4f33-803e-8baf4ad91e37",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f2ac8dc9-6004-4259-b7aa-e97e4035c6e1"
        },
        "item": {
          "id": "866b00b9-20f0-4285-ba9a-ae3c745fc47d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e42d2f4e-a087-4121-a56f-7bc34e172e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611dfaf0-daa7-4006-b75c-5bd5a3d6964f",
        "cursor": {
          "ref": "c8da34e0-f9b1-4b07-8acb-70b787f2bbbc",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "78248015-9ded-4e53-8152-91143b26f8b0"
        },
        "item": {
          "id": "611dfaf0-daa7-4006-b75c-5bd5a3d6964f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "30c41424-509b-44df-8684-521242179213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f23498-08cd-4323-b76a-e9706594ac3a",
        "cursor": {
          "ref": "b887602d-5824-4507-a5a8-72dbcab3a802",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4932e442-8d82-4627-9b1b-0a99c04f9f0a"
        },
        "item": {
          "id": "11f23498-08cd-4323-b76a-e9706594ac3a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ada5d61f-e55c-402f-ab62-dd9b6a468def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7146bb8c-274c-4acb-9162-c75399f3f04d",
        "cursor": {
          "ref": "6de71983-3402-44e6-acb8-9840359f4b6f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "05396660-b492-4167-8d1d-b48ed77a7a3c"
        },
        "item": {
          "id": "7146bb8c-274c-4acb-9162-c75399f3f04d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9577455f-f433-42cc-b83c-7058877e8d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11702eec-0bae-4c94-ab53-15d645634e46",
        "cursor": {
          "ref": "3c3d4723-2250-4bf0-ac61-d20d4001140e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad3c3fc5-3e27-4afd-bd45-90867e4c7be3"
        },
        "item": {
          "id": "11702eec-0bae-4c94-ab53-15d645634e46",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "759d2a9e-1e74-435a-be85-bfd3d868b4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d027ab-bd1d-4155-9085-e19d0fd2f0ab",
        "cursor": {
          "ref": "6ebdb449-9340-4378-bda3-59f489c1387c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "78afa2e7-41ae-43a8-a02a-572564fe2aa6"
        },
        "item": {
          "id": "d8d027ab-bd1d-4155-9085-e19d0fd2f0ab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1e338f05-8149-4fb2-81d6-59875fef7f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6052d6a-14e4-4829-9daf-05374ed930ea",
        "cursor": {
          "ref": "fa52b19a-0492-4ea9-bff4-75d0f5a7ed05",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b1d4a197-435d-44a7-8c0a-1d1d6029b1ae"
        },
        "item": {
          "id": "f6052d6a-14e4-4829-9daf-05374ed930ea",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "aa776af7-ea47-4680-9a2e-40e3ac6d7f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82deb5d8-5acb-41d6-9e08-7ec0eeba2457",
        "cursor": {
          "ref": "a7f35285-2483-4c89-b21a-2c7f3049575e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "910c42f1-a823-4868-a657-b39559896dca"
        },
        "item": {
          "id": "82deb5d8-5acb-41d6-9e08-7ec0eeba2457",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f5ea7f17-417e-4d89-a5e7-733a92e8b266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d744a0f3-52cd-4e72-a02e-f3798d66063d",
        "cursor": {
          "ref": "06eba11a-84ae-4d3a-9c8f-228e9e092672",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "24cf78f9-cd6c-4762-95f5-0ae2cfa9c783"
        },
        "item": {
          "id": "d744a0f3-52cd-4e72-a02e-f3798d66063d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c3e7d80d-c77f-4f31-a32a-0b994df2b837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641ec4bf-b9ab-4197-8daa-09b2465b9b88",
        "cursor": {
          "ref": "f0779085-08a1-438b-9cb3-34a49ba313b4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a1d0234e-05a2-4baa-8904-8400f10c0763"
        },
        "item": {
          "id": "641ec4bf-b9ab-4197-8daa-09b2465b9b88",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a3cd2434-e0e1-41f4-a9bc-f5559cde6ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1549c2-7713-4a42-9746-ebb5c964864f",
        "cursor": {
          "ref": "40f0652c-e8c3-480f-923e-212917e281ad",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e87b681d-e8d6-45c2-b8e6-d463e1746262"
        },
        "item": {
          "id": "2e1549c2-7713-4a42-9746-ebb5c964864f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "403b6e1e-f97a-46d4-a088-fa268e55c7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0bb030-f484-4269-81f1-ef32cdeb061f",
        "cursor": {
          "ref": "ded133ea-aa31-49f8-9678-98c32ea1ee61",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7651376b-571c-493f-823d-82535aab251f"
        },
        "item": {
          "id": "3d0bb030-f484-4269-81f1-ef32cdeb061f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dfd995b3-546e-4f8c-b1d7-a703cc028ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9969bda2-82b2-4db1-99d5-ff29af70d255",
        "cursor": {
          "ref": "fc20748d-0fea-42ee-8e73-d71ca3ef437e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c3c3000b-2d4c-4fb4-8b7b-2305e9227366"
        },
        "item": {
          "id": "9969bda2-82b2-4db1-99d5-ff29af70d255",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7d1c6041-77ef-4df5-a90a-b83a0fa632a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b72e30-a80d-4191-a28f-b5a294fe5062",
        "cursor": {
          "ref": "645ee50f-07c8-43df-9bf3-e72e84b73fbc",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8bffd0dd-8f76-461f-8834-902eeb802de7"
        },
        "item": {
          "id": "38b72e30-a80d-4191-a28f-b5a294fe5062",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1b1d4f0d-9638-4ed5-a4ba-8c9cf033d0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404447c4-fb70-456d-a60f-a466dd13b02b",
        "cursor": {
          "ref": "d27ea066-2a42-4a9e-93c1-780341cf3d9c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cde19790-373d-4db0-b121-273d5107eca9"
        },
        "item": {
          "id": "404447c4-fb70-456d-a60f-a466dd13b02b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "44924dde-d41c-4048-8a5e-9ad070582f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c51a24-9381-4fee-9a32-46984561215c",
        "cursor": {
          "ref": "41c3e297-447d-4b85-ad10-e788c4ce2857",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6cda1abd-7d17-40f7-9c02-31f50dd7ca0d"
        },
        "item": {
          "id": "b8c51a24-9381-4fee-9a32-46984561215c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "16488f61-4456-4a01-9428-581629813602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5a2532-f3bb-48ea-bdee-c0ff2eda9e98",
        "cursor": {
          "ref": "60b31e6a-3ffc-491d-814d-d6f3dabeba3f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "151a5b88-c231-4c38-b512-994ce444bd30"
        },
        "item": {
          "id": "ba5a2532-f3bb-48ea-bdee-c0ff2eda9e98",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2d703d0b-096d-406e-ab8a-a8664256823c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6881629-17f3-47bf-9311-bca883c81020",
        "cursor": {
          "ref": "f2011195-7e9a-4cdd-ba22-4304524b2351",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "535b1dd7-21b6-42c2-95e1-c2e2f58ec590"
        },
        "item": {
          "id": "d6881629-17f3-47bf-9311-bca883c81020",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bdb7c211-52a7-4ab2-85b7-44e0ac37d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c498889d-58f6-4902-b53a-39341e5cb28f",
        "cursor": {
          "ref": "6f3485a2-729f-4650-b9d4-8358acaff1ae",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f9c826af-722f-43b3-87c8-d4129334dd6a"
        },
        "item": {
          "id": "c498889d-58f6-4902-b53a-39341e5cb28f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a4a8c545-4b41-4e15-902c-733b8ed0ca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97c6c58-2c3d-4a13-ac44-f1f9c103f894",
        "cursor": {
          "ref": "740d7cb3-be9d-4aa8-9eb2-c81de8c5eda9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2ef4b54f-56a3-4cba-83a8-cc4eb479e289"
        },
        "item": {
          "id": "e97c6c58-2c3d-4a13-ac44-f1f9c103f894",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "945c26e2-0846-4991-b969-1780a9e6000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e3d8d8-2cb3-457b-a2a2-684548d8a60f",
        "cursor": {
          "ref": "e7763121-1a79-486e-a694-4e52442a9c7b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b622ce2d-c259-4767-b756-d925ec48e550"
        },
        "item": {
          "id": "87e3d8d8-2cb3-457b-a2a2-684548d8a60f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "46e7b723-8308-432b-a3c4-4f7b1bd2cc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5936aa1-7a82-4241-9287-14db82de3fd7",
        "cursor": {
          "ref": "08262390-1e4e-4537-8434-fb2454c6a529",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4a2c0b9d-ddea-4b43-afd3-f9a221f208b4"
        },
        "item": {
          "id": "c5936aa1-7a82-4241-9287-14db82de3fd7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "027d641d-4d18-4e32-825f-524e2920adcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356b06c8-c86c-4df9-98f3-90b0df80c853",
        "cursor": {
          "ref": "5ceec1ba-7ee1-4897-9052-780fffadd161",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "773d9a13-abf9-4e5e-9ccc-b982eb0ad85c"
        },
        "item": {
          "id": "356b06c8-c86c-4df9-98f3-90b0df80c853",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9237b42d-0101-41be-8058-cf6c48efa33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196a49c1-a46a-41b4-8626-348dc7d12e30",
        "cursor": {
          "ref": "1b20e3b6-e2c5-4765-a8b3-2c4a53a0793f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c11be47-1a3b-4989-8b49-b6487d1764fe"
        },
        "item": {
          "id": "196a49c1-a46a-41b4-8626-348dc7d12e30",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cc2c571c-c2e3-41c6-865d-7ede1e804294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6f4cdd-3515-4246-a012-a489859e31bb",
        "cursor": {
          "ref": "0b03ffde-cd8c-42fd-899f-20970733322d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "76f26bdd-3e65-4d74-b9b4-04c0da40a5de"
        },
        "item": {
          "id": "7f6f4cdd-3515-4246-a012-a489859e31bb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "89112e25-1324-4907-94cd-9738acc4e128",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41a4099-508c-4ebe-aebd-94865f33160f",
        "cursor": {
          "ref": "a4ba95ea-7052-487e-9a05-239351177181",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ffa8dd24-0ea4-4646-9193-a11e2110dc1b"
        },
        "item": {
          "id": "f41a4099-508c-4ebe-aebd-94865f33160f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ccf58538-a7c2-433a-be2f-8b84f164569d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "aca26119-a052-41cd-a294-90957e31f841",
        "cursor": {
          "ref": "eb6f4aff-9432-4019-8680-013e375ce9eb",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b161cf51-fcd7-4e54-9262-38a8f738ac23"
        },
        "item": {
          "id": "aca26119-a052-41cd-a294-90957e31f841",
          "name": "credentials_issue"
        },
        "response": {
          "id": "32bd96f9-573a-4904-b728-bb06efe4159d",
          "status": "Created",
          "code": 201,
          "responseTime": 2838,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8087e109-8d3d-464e-afc7-ea15b79b54da",
        "cursor": {
          "ref": "359cb20e-a1c3-4029-9949-3c12ee3aa482",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "79730629-f68b-46c2-b9b9-c2ff372e5e2b"
        },
        "item": {
          "id": "8087e109-8d3d-464e-afc7-ea15b79b54da",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b80dd07d-8495-4912-9065-d7be4744f4e1",
          "status": "Created",
          "code": 201,
          "responseTime": 2235,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "70600535-844c-4164-b277-d8245a5924d5",
        "cursor": {
          "ref": "2c900f3b-826a-4cdb-be05-e8ca33f2773d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "07a8947c-db40-4c76-a410-2ddda64b5fe2"
        },
        "item": {
          "id": "70600535-844c-4164-b277-d8245a5924d5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d20d0a92-0222-4be7-8380-93c9b6a94653",
          "status": "Created",
          "code": 201,
          "responseTime": 2554,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c723202-f178-4d96-b42f-ebabfe2b4509",
        "cursor": {
          "ref": "af41374f-eb0f-4e98-9833-567a3104ce13",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "09ab3393-932a-4e31-a8b8-1bdfad6c0636"
        },
        "item": {
          "id": "9c723202-f178-4d96-b42f-ebabfe2b4509",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "075d03c2-19bd-4254-a361-b861b9727fa5",
          "status": "Created",
          "code": 201,
          "responseTime": 1938,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ea8102-c885-4759-aa58-467e74b8ff7a",
        "cursor": {
          "ref": "647b4ccf-e41b-4029-8ccf-423da6aa3e73",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b188330d-b6d3-418a-ae89-83543caf1abd"
        },
        "item": {
          "id": "f2ea8102-c885-4759-aa58-467e74b8ff7a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f5d847ca-88b2-46c8-a8a3-bace39ec9c3f",
          "status": "Created",
          "code": 201,
          "responseTime": 2045,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e09d3bb-c83a-4703-af46-56435d2554d0",
        "cursor": {
          "ref": "62432797-dd80-405c-9bde-9f47fb8a97b9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4a936c4f-97aa-49de-8c1c-f434e781eee6"
        },
        "item": {
          "id": "5e09d3bb-c83a-4703-af46-56435d2554d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "53220e6a-1245-493e-88a8-7a0cc2098567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "122de404-6336-460e-b874-22729fdc439c",
        "cursor": {
          "ref": "2433467f-117c-4774-9fe1-4f91002f9e2a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "898c243f-7051-4d76-84f0-e76dff6e66fc"
        },
        "item": {
          "id": "122de404-6336-460e-b874-22729fdc439c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c2b0080a-ac67-40af-89eb-045b95046340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534378d9-df7d-4719-b094-db34bcf30537",
        "cursor": {
          "ref": "d847a687-7f5e-42c2-a50f-43138103976c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3dec38de-6e88-4f40-ae53-4c5352978739"
        },
        "item": {
          "id": "534378d9-df7d-4719-b094-db34bcf30537",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7d625358-8f67-425f-b897-0b0a9b68c26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc2b155-1e57-4ae4-90c2-b793db0b835d",
        "cursor": {
          "ref": "5afdd2f2-a887-42c1-b06a-b6e3e7a8d1f9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d96a848f-46a2-4530-9a82-fe8ad270c26c"
        },
        "item": {
          "id": "ffc2b155-1e57-4ae4-90c2-b793db0b835d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "67604944-9eb8-434b-b400-63138efff2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fa091f-9ca3-46c7-81f7-7af675784675",
        "cursor": {
          "ref": "7abbd399-5dc9-427f-ae53-65c2ca26a10f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5be088da-465a-4cbb-93fc-bed7e9e9d209"
        },
        "item": {
          "id": "a9fa091f-9ca3-46c7-81f7-7af675784675",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7181840e-b638-4549-a380-045716be4e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da71f87-ce86-42a9-9f54-fe7393be344d",
        "cursor": {
          "ref": "79b65ba2-644c-40d7-a9f9-58c23ff5a02a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9f3eee22-4a21-4d7e-8436-b6a759c6339e"
        },
        "item": {
          "id": "1da71f87-ce86-42a9-9f54-fe7393be344d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9708f4c1-29cc-415f-8b50-020da6bad653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97f60d3-b7e9-4f8c-a016-1d30ab17a226",
        "cursor": {
          "ref": "178b21fe-b116-4e6d-aff0-6d6a4d8db5ed",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "74bb9ae8-0bf8-4059-a870-8e8db49c443c"
        },
        "item": {
          "id": "e97f60d3-b7e9-4f8c-a016-1d30ab17a226",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9014d3b3-5c3e-4239-a456-6f431de66e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8736d2-6b5d-431f-8bc0-a3136238ea4e",
        "cursor": {
          "ref": "4fc667e7-c113-4f3b-95d1-bb962a6ecbac",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1b08d624-dac4-47c9-ba0b-ecdca14ce113"
        },
        "item": {
          "id": "2b8736d2-6b5d-431f-8bc0-a3136238ea4e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1825fb18-6bf1-46db-9e5c-91994a858025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fb76a8-6506-45c9-9cd8-4bf6fe6c1e74",
        "cursor": {
          "ref": "5b269228-e841-40c3-919d-eadede8e253e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6c475521-f6fa-4fb9-ad19-ec0e5e113956"
        },
        "item": {
          "id": "72fb76a8-6506-45c9-9cd8-4bf6fe6c1e74",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c0cf9050-b0a7-4374-b3c3-a3769c5b99d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66b9a6b-9f0e-4118-baf4-9323ed851c73",
        "cursor": {
          "ref": "1fa8b9d7-4e01-4083-9294-77889cc8e406",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a7c9a98d-a09c-4640-9cf1-50b73f54bcf5"
        },
        "item": {
          "id": "f66b9a6b-9f0e-4118-baf4-9323ed851c73",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57bf17db-23a5-4a6c-81e9-cd1b9223c397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3e55f2-6cfe-434f-8dc9-bbd8588d0b3d",
        "cursor": {
          "ref": "9b9bdcd7-1c9e-4537-b78a-b81ad0637f40",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "15bf3231-c250-419c-9e7a-837eb705b423"
        },
        "item": {
          "id": "0a3e55f2-6cfe-434f-8dc9-bbd8588d0b3d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2d88c630-72b1-4d56-b0d8-8dfcf3fd3056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c226a650-5117-4615-8ae7-6aa71f0e86e8",
        "cursor": {
          "ref": "59ce3b24-3dbc-4361-9a64-41aa7077b620",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "519d7794-a4ff-4122-b46a-8411f2959449"
        },
        "item": {
          "id": "c226a650-5117-4615-8ae7-6aa71f0e86e8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c6c099e5-7b94-447c-bc01-3e8e06b29aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967067ac-d75b-487a-bfe6-4b19d516d044",
        "cursor": {
          "ref": "aaa4a009-8213-4ea1-be98-f92ccc65659a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "39381ff0-ef1a-40a4-a6dd-286fc52f8c09"
        },
        "item": {
          "id": "967067ac-d75b-487a-bfe6-4b19d516d044",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9bd261b6-de12-4365-b231-cee2d35b99b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3cbbc7-6926-4863-b360-0b9efc96b475",
        "cursor": {
          "ref": "c359cb8f-6676-4433-88a3-910783b4a75f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2ffd0045-b957-406a-ad69-25be51a8f406"
        },
        "item": {
          "id": "9e3cbbc7-6926-4863-b360-0b9efc96b475",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2b897920-fc62-47e8-a230-f55207620fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6f47e2-e108-40f4-a7fd-455f84ccad91",
        "cursor": {
          "ref": "e99c0277-5964-4b76-b172-af9f71b7eaf1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6ffd3f9c-1f3a-4228-96f6-e200327c4399"
        },
        "item": {
          "id": "fc6f47e2-e108-40f4-a7fd-455f84ccad91",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "379edf8e-a537-4884-8963-0bf724e7cb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bdaf7f-009e-4f4d-83b1-98b1bc1bf0d0",
        "cursor": {
          "ref": "259890f2-c8fd-4dd2-a8c7-51e2aee35862",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e6dfe1a9-a97e-4cf4-a2a2-7051e3c80c2a"
        },
        "item": {
          "id": "64bdaf7f-009e-4f4d-83b1-98b1bc1bf0d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d1a5b08c-10b5-43f5-ad75-e7c622d61306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bd614b-e35b-4a5e-9153-f0d0a15f736b",
        "cursor": {
          "ref": "cf9090a6-c16e-4228-9f5b-e711691fd887",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ab14fb00-cb4a-48b6-b82f-05b8d8d9e8b1"
        },
        "item": {
          "id": "e0bd614b-e35b-4a5e-9153-f0d0a15f736b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e5194409-6363-4983-9f9b-e038209435b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3add9b73-d007-4d13-a20b-26fb62431778",
        "cursor": {
          "ref": "9f95d290-68f4-48ae-9a73-29068f290d56",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9578b74b-16df-4e66-ba13-cacc902e2a36"
        },
        "item": {
          "id": "3add9b73-d007-4d13-a20b-26fb62431778",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "37672862-23db-4cd9-a8f6-cef1e2adb4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249d5845-929a-4fbc-bfa8-ce065bf1e6aa",
        "cursor": {
          "ref": "b2cb79e2-ea39-4c36-ab9f-ea5a46b5cede",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e2c4ac11-3115-47b5-b0b7-968f67d3697c"
        },
        "item": {
          "id": "249d5845-929a-4fbc-bfa8-ce065bf1e6aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "503906ca-4d63-44b9-9b79-27e85801f2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ad60a7-79e8-4c58-8ba3-008bc22033c2",
        "cursor": {
          "ref": "80297b21-c3e9-4ed0-8ced-c119b26f3836",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3c127a27-51aa-4ca4-b622-62bf7f8e352b"
        },
        "item": {
          "id": "e2ad60a7-79e8-4c58-8ba3-008bc22033c2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "94dac391-072b-4e04-ac1d-b707907738fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a552bf7c-da98-4878-881a-2e5c49192503",
        "cursor": {
          "ref": "d4b5b05c-5701-400d-968c-33146891ae28",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eb9aeaad-916d-4bec-92c6-4fd7dca2cdd0"
        },
        "item": {
          "id": "a552bf7c-da98-4878-881a-2e5c49192503",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8c8f1685-d6fd-405e-9565-a04c7d966e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085fd345-a2d1-4e56-a9f9-c6b0a6ac7c5f",
        "cursor": {
          "ref": "69bcc209-d016-498e-9bdb-841305ea7352",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4bb5c595-e5df-4cfa-8cbf-edb24e4da9dc"
        },
        "item": {
          "id": "085fd345-a2d1-4e56-a9f9-c6b0a6ac7c5f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cdbb168e-03fe-4868-befc-12e13adbcb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b52250-62e6-435c-aebb-abebff56903d",
        "cursor": {
          "ref": "0322138f-ed04-47a9-aa0e-83cb92c2fe21",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "11bdd17a-93c5-4aa7-bb43-a88660fb49bb"
        },
        "item": {
          "id": "08b52250-62e6-435c-aebb-abebff56903d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "760afc70-54ab-4604-8c1c-a48410d82f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceea553-3673-4c04-a23f-e11ef54668d6",
        "cursor": {
          "ref": "9fa5006d-e2a7-4db5-8b3c-3754e25e92da",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a295b4fc-f684-4ec7-a430-7381cd9a003c"
        },
        "item": {
          "id": "7ceea553-3673-4c04-a23f-e11ef54668d6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "76d243ed-b571-445b-9b85-ca83ea905827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b724ffb-fdd1-4b04-bc52-a047cd5ea8ac",
        "cursor": {
          "ref": "b8fd53ef-f9e1-4927-940f-379945eac585",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ad87ccaa-7099-46f7-93f0-b8aaf011704d"
        },
        "item": {
          "id": "9b724ffb-fdd1-4b04-bc52-a047cd5ea8ac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "149afc07-fe30-4283-a111-30c9cb9994a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55022a76-e529-4fb2-b39f-e438ad2d16d2",
        "cursor": {
          "ref": "b06d6ead-c1f8-4734-8be3-c7adabac4e9a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6070e5e6-2670-4673-ba2c-c261afa5f698"
        },
        "item": {
          "id": "55022a76-e529-4fb2-b39f-e438ad2d16d2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "76270c24-40b6-4d86-b126-727708a4297e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32c32e9-faac-4580-9212-0251aff44e53",
        "cursor": {
          "ref": "55dea90a-0487-4862-8045-5ebde45bb7d7",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6d981945-833b-4e01-953b-d2ad6d50d1fc"
        },
        "item": {
          "id": "a32c32e9-faac-4580-9212-0251aff44e53",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a3718de8-617c-47a2-94fb-4b6908ce667d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3abded-9447-4d0b-a161-914aacfe2195",
        "cursor": {
          "ref": "942ab915-842a-4ed8-82a2-8e5f21cc8dc8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4bf25936-658d-4221-a588-f1c5a2f294be"
        },
        "item": {
          "id": "cb3abded-9447-4d0b-a161-914aacfe2195",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9898c698-8ca8-4168-b53c-835335bbcd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11444d8-ef12-499d-9e87-09ce9f9de4d2",
        "cursor": {
          "ref": "3f175ac3-9087-4bcd-9141-edc531d2a962",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9a00e6b2-e860-4429-8f00-6dbd6e45f9e8"
        },
        "item": {
          "id": "e11444d8-ef12-499d-9e87-09ce9f9de4d2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9b6b13fc-2343-4fad-9467-21aa6fce8785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a516af-a5e6-4779-bf5d-58810c74546c",
        "cursor": {
          "ref": "a4c81669-0a0a-4e1d-a090-717b3bd5437a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "080c2196-04c0-4878-90de-b99790499481"
        },
        "item": {
          "id": "82a516af-a5e6-4779-bf5d-58810c74546c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b2a413eb-4b19-4a63-83f6-ecd361be6335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6dc59c-20c5-4f93-b84c-3cdf9ff05060",
        "cursor": {
          "ref": "08ce9a4d-15fe-4585-bcf9-15d6bab49229",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "70b8ac02-1f02-4719-94d4-e50933fb5ba5"
        },
        "item": {
          "id": "ac6dc59c-20c5-4f93-b84c-3cdf9ff05060",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "77a45d50-4732-444f-8d22-66e95c754f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ce9b4c-1f2b-43ee-918c-f3fd9f4f84ab",
        "cursor": {
          "ref": "c59c6ee7-3968-4e72-9571-fd5a81cf4050",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a92ff14a-899c-4002-885f-105af5a13a01"
        },
        "item": {
          "id": "f2ce9b4c-1f2b-43ee-918c-f3fd9f4f84ab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3c39198c-d55b-4845-be12-2f1b616dfb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8e1bc7-b4b0-4c7d-8d8a-bee13778b257",
        "cursor": {
          "ref": "8c9ea35c-d4d2-41df-952c-0c9ba242c882",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "657f42ed-2d28-4af8-9240-384ef915a628"
        },
        "item": {
          "id": "7e8e1bc7-b4b0-4c7d-8d8a-bee13778b257",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "259fffb2-77d8-48a1-8fa1-532da18d7892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cb48de-42aa-42a7-b555-071bb777a632",
        "cursor": {
          "ref": "53cb35b0-b951-458d-bfeb-f05190ab7239",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7cde6b16-9ec3-4a6d-ae97-1c3374584c6c"
        },
        "item": {
          "id": "38cb48de-42aa-42a7-b555-071bb777a632",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2cb11443-a4ff-44ca-8b41-85b202da0772",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b74325-b289-495b-8603-b05d77880d73",
        "cursor": {
          "ref": "7e971ac1-dced-42a4-bdc2-fe41d10ef1d8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "00fe6988-024d-4c83-b757-1952341b067a"
        },
        "item": {
          "id": "17b74325-b289-495b-8603-b05d77880d73",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c1808ac9-2174-45df-bccc-293d081b5cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b571814-78a9-42b6-b47a-b368eb3120d4",
        "cursor": {
          "ref": "b9ff21ad-c287-4447-bc03-ed3de5ab16ed",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cf28f038-2e46-444d-8353-754655dc4b2f"
        },
        "item": {
          "id": "0b571814-78a9-42b6-b47a-b368eb3120d4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e6ebdce5-6da0-45e0-ba76-4ac7182842ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f21b9-e00b-4c74-99a0-d6392ccc9c52",
        "cursor": {
          "ref": "5301f773-d8a4-4ca8-b61f-4ab0c6c46ab2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8c9b452d-5fca-42ee-811d-ebe1c442968f"
        },
        "item": {
          "id": "eb5f21b9-e00b-4c74-99a0-d6392ccc9c52",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b157a0fa-9465-430f-a8bd-778fd4b3661c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1f9130-1b31-45f7-b142-7951502bd21c",
        "cursor": {
          "ref": "f2759a14-70d4-4170-95fc-369ab4f05acf",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "86754993-6376-4175-820c-20ae8369e991"
        },
        "item": {
          "id": "3f1f9130-1b31-45f7-b142-7951502bd21c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f2c0760-de80-47d4-8d74-c88fa951a4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ebef3d-506e-42e0-a3a0-a875d62b524b",
        "cursor": {
          "ref": "ab643dd2-387e-4a7f-8946-8890a2c9ad46",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "220cd479-50b9-4c72-9f7c-899de28ea7af"
        },
        "item": {
          "id": "56ebef3d-506e-42e0-a3a0-a875d62b524b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6014c275-1b49-4df3-a375-f29e6144cf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6878a4e6-d9ed-41f7-bd81-14d7ec91b365",
        "cursor": {
          "ref": "8763a006-b38a-4314-a406-788ff368a48c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4683671d-8b28-4054-9070-6b8713e3b2fa"
        },
        "item": {
          "id": "6878a4e6-d9ed-41f7-bd81-14d7ec91b365",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3de313f7-3609-4ec6-9071-2ffcfbc5728b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1d64fa-aa21-4fce-9077-f6c3224eeb31",
        "cursor": {
          "ref": "783e8f52-7f06-4559-b291-c951d04d4dfd",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "be4597fe-de6f-4db6-a947-57d7dd87e5f1"
        },
        "item": {
          "id": "8f1d64fa-aa21-4fce-9077-f6c3224eeb31",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0ff84135-5577-414f-bd13-d53a770f26dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfc0a63-5125-4a94-ac28-60127aeae03d",
        "cursor": {
          "ref": "25d7e988-eb98-444e-9e30-1cea6dad7318",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8db90a0c-2374-4b3e-9cde-246d2f66d8b3"
        },
        "item": {
          "id": "3dfc0a63-5125-4a94-ac28-60127aeae03d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b5e0838d-34cd-42cb-a2e9-3115acb544a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d95403f-3be2-46cb-b859-e89964229e01",
        "cursor": {
          "ref": "c048746b-f669-4ba1-aa89-a7568bb62f7e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3623e3c9-5ecd-461e-9ba8-66a0595fc813"
        },
        "item": {
          "id": "9d95403f-3be2-46cb-b859-e89964229e01",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "35aea186-3307-4eaa-b482-a19e394e4fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdf4411-626b-414a-bfd0-5ccea8a09142",
        "cursor": {
          "ref": "36b5b8d7-8862-4b09-a841-632fbeb102c5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4ea95ffe-45b6-4bc7-8a03-49b3f7da18bc"
        },
        "item": {
          "id": "3cdf4411-626b-414a-bfd0-5ccea8a09142",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cdb80540-b53d-4e9a-af68-2d3299cef6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1f6098-ec8a-4a48-bad4-3a75c9d58568",
        "cursor": {
          "ref": "58a802f1-a146-49ce-a714-236e4abfeae9",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c5b303df-0830-4c66-bf3b-030f2bc7b5e1"
        },
        "item": {
          "id": "1a1f6098-ec8a-4a48-bad4-3a75c9d58568",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "85dfa5db-449d-44e1-aae9-cf28a1fcbdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9d167c-aac0-4d89-8937-9be8597818a4",
        "cursor": {
          "ref": "a01f0c83-4649-445f-a15f-0e25df57c654",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "90eb3ae7-da4a-4af0-85f2-019ad9c80d73"
        },
        "item": {
          "id": "0e9d167c-aac0-4d89-8937-9be8597818a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f942853-a9fc-4299-8e9b-f1480aeeb967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e4d8dd-ae44-4117-9dd4-9523703608db",
        "cursor": {
          "ref": "3666b355-dbee-4290-a977-ce303a68ff9f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "31d0d0ba-608c-4790-8675-4c315091051c"
        },
        "item": {
          "id": "69e4d8dd-ae44-4117-9dd4-9523703608db",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94e6e2f2-084f-4833-8936-aa62dab0c7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a013a0-9d52-45e5-b36a-0b7744139d3d",
        "cursor": {
          "ref": "7b8f8973-eae7-4638-8487-bd16a504d882",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9d8155a-8a08-4734-8b34-0c7044f4192b"
        },
        "item": {
          "id": "d7a013a0-9d52-45e5-b36a-0b7744139d3d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3f2a4252-d4e7-4dc4-94f9-c039feb3a137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a10b22-d320-47c0-933c-794dce4d39e8",
        "cursor": {
          "ref": "9decf7fd-4765-47b6-ab19-666f586a26d5",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f3cad471-a6a6-4b9c-838e-254c63ccad98"
        },
        "item": {
          "id": "64a10b22-d320-47c0-933c-794dce4d39e8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f66b9e98-2c39-4579-82fd-035ab91e0c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28badcd9-c4c6-4096-a656-fc2dd27e9d2d",
        "cursor": {
          "ref": "0418ffc0-0cb0-4c10-af40-d0b612c51843",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c84179ab-56bc-4313-b483-bf50e8e74340"
        },
        "item": {
          "id": "28badcd9-c4c6-4096-a656-fc2dd27e9d2d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5e45ca45-dadc-4c39-b0a2-b8b6acf48782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54553996-92e8-43a2-94cb-678e1e0d65b0",
        "cursor": {
          "ref": "7035966a-93a5-47d4-be93-93b812db030d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b179ddbd-a379-4b5a-ba6e-4f2971b35fa3"
        },
        "item": {
          "id": "54553996-92e8-43a2-94cb-678e1e0d65b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a0db54bd-dda7-452f-800d-9caa39bca7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfe1d36-0db2-4a65-aa02-87ddfc5dcca0",
        "cursor": {
          "ref": "7f257709-fa4e-43c3-af2e-00870d600c4e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6dfea40c-2c9f-4aeb-8c43-c6fd3426bfc4"
        },
        "item": {
          "id": "abfe1d36-0db2-4a65-aa02-87ddfc5dcca0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a0e2e30e-c4b4-451c-a46a-e68f3f0c3f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9934d78a-4806-44cf-b29c-a48f7e5e8c3e",
        "cursor": {
          "ref": "af31e9cc-e1d1-495c-8acc-124b85eb4fef",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c1784c87-b3ab-4c6f-a4d6-abd8f79d342c"
        },
        "item": {
          "id": "9934d78a-4806-44cf-b29c-a48f7e5e8c3e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb922517-361b-4313-a9d1-1aa5fc02fcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d509973-c7c4-4b72-a144-733b1d789073",
        "cursor": {
          "ref": "bdf0a6e8-a55a-4da0-b59e-39e6272043b9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5b740160-3518-4a1a-b9a2-e8745cf8a433"
        },
        "item": {
          "id": "5d509973-c7c4-4b72-a144-733b1d789073",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "97cc76e2-4f29-484d-847b-7530f2ed882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79114534-0f61-4039-846e-7028c592d4fb",
        "cursor": {
          "ref": "58e560b9-9f6d-4f19-8b3c-ca722eaeebb5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d112f1e2-6079-4a60-9629-385fb356c66a"
        },
        "item": {
          "id": "79114534-0f61-4039-846e-7028c592d4fb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "56717d64-b470-4bf0-a84f-a718926e1f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb534cc-2756-4d93-81c5-afb83197baa7",
        "cursor": {
          "ref": "d5dcf597-952e-48f9-bd51-81f98b939ef7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f9be1c91-17fd-439f-aea1-020258c42102"
        },
        "item": {
          "id": "2bb534cc-2756-4d93-81c5-afb83197baa7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6c57d17a-362b-43f9-8bec-bbed57a201cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474b7998-e0d2-45c8-afd8-45b5144ce78a",
        "cursor": {
          "ref": "c2fa8a44-b00d-42d9-8247-e51c79a238b3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cca83464-1e10-448e-90fe-356a5e0855ac"
        },
        "item": {
          "id": "474b7998-e0d2-45c8-afd8-45b5144ce78a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6d1dc1c4-df1b-4c9e-848e-15fcb9e729f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da84688-4b08-4f5c-9a56-b513bc398bb9",
        "cursor": {
          "ref": "767b7508-cb6e-4ea6-a47c-f0124a6e7d5f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "568341de-ae03-4bc0-8feb-a25e2d2cc0ae"
        },
        "item": {
          "id": "3da84688-4b08-4f5c-9a56-b513bc398bb9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3b3a3039-7ab0-4fa4-a09e-55be869e47d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b239e31-d185-4738-95e6-3ae3f1efaaca",
        "cursor": {
          "ref": "23a9fc72-9850-4545-a3c5-8da58d9d2f26",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c360adc0-8822-4deb-a477-5d349dec2854"
        },
        "item": {
          "id": "5b239e31-d185-4738-95e6-3ae3f1efaaca",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2e3ad8fe-bc52-4280-87b4-8e61347af8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b17d7c-1349-42fc-abca-4694e5298783",
        "cursor": {
          "ref": "c7992780-aacb-4b74-8c92-977f44571887",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9a57633b-79f5-41fa-8449-65d089e3f45a"
        },
        "item": {
          "id": "07b17d7c-1349-42fc-abca-4694e5298783",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "80b029ae-859e-4772-bcc0-9c50f5b31fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d29ac0-e7b4-4cd9-97dc-c75832b51ea3",
        "cursor": {
          "ref": "1b266d44-3cf2-465e-be2c-e7fb5d43ac21",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ac1904b4-cfd5-4bfb-9832-cd09c6a99107"
        },
        "item": {
          "id": "63d29ac0-e7b4-4cd9-97dc-c75832b51ea3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d1c6d9cb-434b-457c-ac4a-8efb017aa9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5f9c07-89d4-4e5c-bf70-3c09a994fe98",
        "cursor": {
          "ref": "df0795f7-b4d4-4992-9c2b-3c1304997390",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "220b4750-51fd-4a7c-8ddf-51ca0ec37326"
        },
        "item": {
          "id": "6a5f9c07-89d4-4e5c-bf70-3c09a994fe98",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "244aea23-c40b-4562-b2c6-90a84d3009e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b7b910-316a-4868-948b-4963065762a0",
        "cursor": {
          "ref": "71e82962-a986-4600-b481-01b237628603",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9d31f0fb-40b7-4872-ad33-9861edada9d7"
        },
        "item": {
          "id": "07b7b910-316a-4868-948b-4963065762a0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "50f51cd8-c490-4cb2-b601-155c2183fa2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311656d2-6655-4972-afde-68bc8307276f",
        "cursor": {
          "ref": "30af989b-15b4-4fb1-9842-4e12e408520e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "391a24aa-e071-441d-b711-60d482218a15"
        },
        "item": {
          "id": "311656d2-6655-4972-afde-68bc8307276f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "75ce665c-1a54-4828-af4a-0559ddacc9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5e9670-2f7f-4f6f-8f96-7f0133d97b33",
        "cursor": {
          "ref": "e06100e6-7d5e-4314-ac34-8ac50d568429",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "701e13ac-0e5d-4c5b-a954-04b564c4c8f2"
        },
        "item": {
          "id": "8f5e9670-2f7f-4f6f-8f96-7f0133d97b33",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9a922f74-eb11-43f2-b9b1-0a23961dc142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e75e34c-4a82-4382-af72-8e3511a9c2f9",
        "cursor": {
          "ref": "af63150c-d199-4486-a88e-c09ad42ce271",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dbedde33-0e3b-4e24-976e-c75bca09964c"
        },
        "item": {
          "id": "7e75e34c-4a82-4382-af72-8e3511a9c2f9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f71867a1-df2d-4e69-bf89-95e6fdb81297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ade9a7f-cfde-42ca-9a33-656c1a3abec1",
        "cursor": {
          "ref": "19f3bfce-b77b-45d8-9064-2c7998796534",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "591a2307-840e-4b24-b822-348fe17858ec"
        },
        "item": {
          "id": "2ade9a7f-cfde-42ca-9a33-656c1a3abec1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e11e5877-83f9-4e31-ab59-170b68814d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b4f793-e541-4d30-92f8-b6ebb8c4e65e",
        "cursor": {
          "ref": "b584eca4-59c3-461e-a24c-a80f34651daa",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0380fc41-8575-48d7-8d70-3036326cd8d3"
        },
        "item": {
          "id": "f2b4f793-e541-4d30-92f8-b6ebb8c4e65e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fe161ce7-0f57-462f-9deb-87a96abc48b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa539cf-c5db-4151-9dbc-d2c76b916ca4",
        "cursor": {
          "ref": "36ac21f5-8ad5-4b39-8164-f2b39c44df1a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a7ad7779-de5f-4ba5-8b9d-242230f06330"
        },
        "item": {
          "id": "4fa539cf-c5db-4151-9dbc-d2c76b916ca4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ec1acf75-d54d-4a54-8404-dc7cbb27239b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7093b9ba-f9d6-4a67-90fc-86ebc01ab480",
        "cursor": {
          "ref": "c6efa468-b02b-486d-b941-94951a880b06",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5d32ea2f-fb23-4a72-8659-da70e886ecea"
        },
        "item": {
          "id": "7093b9ba-f9d6-4a67-90fc-86ebc01ab480",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c6773194-dbc1-49b4-b354-3587c91d2949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6029fd0-fa3f-47c2-bfd5-4d25366f8ab1",
        "cursor": {
          "ref": "e45ceda1-aed8-486f-ba39-a9a97e657336",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "789255f7-29f0-4bdc-bc30-43c6e37d3a59"
        },
        "item": {
          "id": "e6029fd0-fa3f-47c2-bfd5-4d25366f8ab1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e37241c7-30a6-473d-a626-ea35f0ef0c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205f637a-880d-48c9-9319-028d90ebe3a9",
        "cursor": {
          "ref": "03322d22-8ea8-4bd0-82dd-75ed3ddaac5a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b00a6af8-3099-4450-b9b3-b6db02efdfef"
        },
        "item": {
          "id": "205f637a-880d-48c9-9319-028d90ebe3a9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f0f8223a-b953-421f-9be3-bad9006a0d1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daea795-97ca-4233-9b1b-d04e44288a24",
        "cursor": {
          "ref": "8db11c72-a346-424b-b3cd-01872422873b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5fecb753-f522-4d61-9518-3bd3552aa509"
        },
        "item": {
          "id": "8daea795-97ca-4233-9b1b-d04e44288a24",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6c149439-0543-4c5c-b556-75170642c91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0a0af2-1bd6-4ae8-b6c7-e2b4dd9f58a0",
        "cursor": {
          "ref": "5ab8b23e-1aa3-43d3-b897-295055dc9785",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "647a6983-9eab-495e-a08b-4619fc5fb800"
        },
        "item": {
          "id": "db0a0af2-1bd6-4ae8-b6c7-e2b4dd9f58a0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0d280d47-39a3-4ea5-827d-de76de4f16a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c86e5af-c04c-43f3-9ae7-ca13ac2eedb2",
        "cursor": {
          "ref": "0ccee3cd-8698-4b5f-b611-5dab88fa55c9",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5d7d92c4-fdbb-481e-a4bf-0f05c2e818d4"
        },
        "item": {
          "id": "7c86e5af-c04c-43f3-9ae7-ca13ac2eedb2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a0cfe306-ab09-4952-9c41-855f1e0ab0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108e9e4a-ac55-4eb8-a459-9e66cfe31721",
        "cursor": {
          "ref": "dba38c85-fe9a-4907-bd6d-b9973a9bcd3d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e2ec2b3f-5a7f-4ece-8e35-6f663f331ba9"
        },
        "item": {
          "id": "108e9e4a-ac55-4eb8-a459-9e66cfe31721",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9643c9c4-b4d8-4386-9a38-2852e5a9028b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2166ecaf-4e9d-40a4-84a3-e0b37fff3063",
        "cursor": {
          "ref": "33edf143-e68e-498b-a0db-092485751cc8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "88657979-c00c-4355-8969-08288e6c60f8"
        },
        "item": {
          "id": "2166ecaf-4e9d-40a4-84a3-e0b37fff3063",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f0d3bd62-c878-431e-933f-0fc473e298c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cf8d34-5d63-4c3e-aa48-7b6fcb8e181d",
        "cursor": {
          "ref": "cbfe103c-5dd5-4c93-a602-2f09d48890a0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f91877af-3331-43e3-9de6-0f3f2f1b0070"
        },
        "item": {
          "id": "60cf8d34-5d63-4c3e-aa48-7b6fcb8e181d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "feb6a25b-fa54-45dc-b374-4f3274659401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccd32fd-71a4-4c2a-8944-6f18766bac56",
        "cursor": {
          "ref": "ac9a6539-efe5-490f-97f4-6380aff1f59d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8ef3a4f9-55c8-4579-be0e-fbe9ce23a6f7"
        },
        "item": {
          "id": "1ccd32fd-71a4-4c2a-8944-6f18766bac56",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "59322341-ce96-4963-a37c-0fc9630b9e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c4de04-77e2-45f1-a8fd-b76e570a2457",
        "cursor": {
          "ref": "5b7a054a-bfa6-4039-9a7b-ff9a4f381135",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ec9a054c-3588-4042-8c14-4753faca09dd"
        },
        "item": {
          "id": "d5c4de04-77e2-45f1-a8fd-b76e570a2457",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "009b55b8-5b35-4251-ac12-784d5e067d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67c37ee-fe0c-4393-88f1-bec07666cebb",
        "cursor": {
          "ref": "ac5e73c0-303b-4105-b22c-ef53c30700fa",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e9a39057-f7fe-4119-90e4-29974237daed"
        },
        "item": {
          "id": "b67c37ee-fe0c-4393-88f1-bec07666cebb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "49cb3c21-6411-4942-b057-6fa15d4fedfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a9c9ac-82f3-4e35-8077-c151d59bfb32",
        "cursor": {
          "ref": "01b61616-1370-4d2e-b560-69652dca5747",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d1304947-96df-4e34-a070-15bed2507d9a"
        },
        "item": {
          "id": "84a9c9ac-82f3-4e35-8077-c151d59bfb32",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4dafa7bb-4be5-4b82-b566-1fc77a8410c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752f335d-87f1-44c9-9b8e-98e25944e724",
        "cursor": {
          "ref": "7b862fd0-5057-4643-a1ba-06592857e9f9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "249e9c2c-2784-49e6-85e0-06a893c48981"
        },
        "item": {
          "id": "752f335d-87f1-44c9-9b8e-98e25944e724",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e278ec80-26b4-47de-935c-eb448475c5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1d276f-6e16-4b29-b1b0-750b85319f59",
        "cursor": {
          "ref": "17bd3361-6396-4cc4-ab53-a833f29c934f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c5b7463-145d-45fe-b9b3-19c340d6645a"
        },
        "item": {
          "id": "5c1d276f-6e16-4b29-b1b0-750b85319f59",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bca41984-3ab3-460a-acf8-66931d3c3d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8030124b-38eb-444f-be92-56d5b890c5e0",
        "cursor": {
          "ref": "d9d6c127-6b99-4343-87a5-cda5137338fd",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9e2ac840-c040-4f9a-9fa0-6bf99edbdd96"
        },
        "item": {
          "id": "8030124b-38eb-444f-be92-56d5b890c5e0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "520b87df-013f-4caf-997f-e7f95ec4763f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d18be7-f922-4f9a-a316-c20d7f7354b9",
        "cursor": {
          "ref": "ea7236bb-193a-41e0-80ee-db3ecf14b72d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cf9ef4b2-7a1c-49ad-9f5b-70275b21a723"
        },
        "item": {
          "id": "14d18be7-f922-4f9a-a316-c20d7f7354b9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "84e013b7-8c48-491b-852e-91f2395c59aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baa2894-a4a7-4036-b69b-00ce88f0dda7",
        "cursor": {
          "ref": "0a39b5bc-ad81-4ff6-ac47-b29626cea5e9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "aa3dac30-a50c-4081-b174-50e6653f9423"
        },
        "item": {
          "id": "6baa2894-a4a7-4036-b69b-00ce88f0dda7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "35da5cc0-d1db-4a61-b028-5c395e5f5206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2710424-5742-4f84-a035-92d1413cebd3",
        "cursor": {
          "ref": "c06d0f6c-2cc9-461e-b497-113a9788dae7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3dfa6734-4cdc-4ab1-9a77-4e07e9b7e9b7"
        },
        "item": {
          "id": "f2710424-5742-4f84-a035-92d1413cebd3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d1022bdc-92b1-4e43-b593-0ac4df209a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a6ae6d-caaf-43ae-ac24-42de7711b8c1",
        "cursor": {
          "ref": "9fc7c44e-d254-42da-9b77-4366ff3deac3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "830c2dfb-0520-4d08-9899-18f61d73e817"
        },
        "item": {
          "id": "d5a6ae6d-caaf-43ae-ac24-42de7711b8c1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b87fd4a0-90bb-4197-b7cf-b3c123675909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51205584-a520-4866-9d72-5d4a2c2aebb1",
        "cursor": {
          "ref": "a55d2910-04b7-4dda-84e7-94b611c46b3d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8d94b76c-897e-4bf1-abdb-6f558bc73b59"
        },
        "item": {
          "id": "51205584-a520-4866-9d72-5d4a2c2aebb1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3c6185f0-ae70-4e60-9894-5993c418c8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959d7069-c4ae-4343-a07c-b749be04b892",
        "cursor": {
          "ref": "2f5b4d04-112b-496d-901f-7f16a3f31507",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3094d8ae-2278-47d4-b6a3-d1a9ac6fb537"
        },
        "item": {
          "id": "959d7069-c4ae-4343-a07c-b749be04b892",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "336bc9da-7609-42b1-a7fa-83df5381e88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17748f5c-f8b4-4787-8cfe-286e2654ea22",
        "cursor": {
          "ref": "412b13ab-0cfd-4e63-a0de-9c563917d5dc",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a960639d-5b97-4815-a1e6-bb9078c9a4b1"
        },
        "item": {
          "id": "17748f5c-f8b4-4787-8cfe-286e2654ea22",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0a3c3ce9-0f59-4ce8-a01a-45e602abce7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bada5140-46d6-48d1-849f-76c5110dfae0",
        "cursor": {
          "ref": "519dcff2-f787-4b62-9d60-1cbdab58e2d2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3a03d66d-c1d1-47b1-a433-69d19d9f3231"
        },
        "item": {
          "id": "bada5140-46d6-48d1-849f-76c5110dfae0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "149b87c1-5c98-4d95-97a4-b4cb53da033f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386a8b34-29bc-46fe-b569-7a86f4e4ac51",
        "cursor": {
          "ref": "489ce90a-d545-4a76-836f-27a0d2b0f79c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a9a11762-7ebf-43a4-a794-ab7f01b4c6d2"
        },
        "item": {
          "id": "386a8b34-29bc-46fe-b569-7a86f4e4ac51",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5232e326-5742-4252-ba91-9c92bb8dae14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628c15d6-91ce-4389-b570-668a21e55f91",
        "cursor": {
          "ref": "f43662cc-ee99-4e85-9e1c-b632ef4cf1d4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c6781beb-45b4-4e48-a6a2-16c6819166fc"
        },
        "item": {
          "id": "628c15d6-91ce-4389-b570-668a21e55f91",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e041690c-ee8c-4d1b-9686-9c0799a1ed59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc85506-6a6b-4453-a02b-6769f0a6e8de",
        "cursor": {
          "ref": "c49ca316-21f1-4766-a335-e83bba09cc0a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a6bc8676-3fa7-4072-a666-ed9738df6877"
        },
        "item": {
          "id": "adc85506-6a6b-4453-a02b-6769f0a6e8de",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b4a863b7-f5e3-430b-b2ae-0853e673dbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd49dadd-c102-4105-bec7-ce4cc3e9ea64",
        "cursor": {
          "ref": "7c45e021-dd9b-4ca4-97cd-f8cb49d823fc",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a6482daf-e8d3-4713-af14-872a5e014fd6"
        },
        "item": {
          "id": "bd49dadd-c102-4105-bec7-ce4cc3e9ea64",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "48ac3c9e-7bef-4ff9-9bc7-9dccc1466499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4e8cb1-c649-4ede-abeb-48cfcc92c9bc",
        "cursor": {
          "ref": "6dd1717d-39a8-4806-9699-362f7596a7cc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5993664d-93e6-4be0-8913-91315e1d8656"
        },
        "item": {
          "id": "fb4e8cb1-c649-4ede-abeb-48cfcc92c9bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a8a0a0df-1423-43f5-91ea-93f3312bd2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed342c02-89d2-4ea0-928f-26a319d9836f",
        "cursor": {
          "ref": "0c78609f-e5cf-4c4a-b06b-a57f9009ad0b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e040002b-79b6-4689-ae21-0a99d68b0616"
        },
        "item": {
          "id": "ed342c02-89d2-4ea0-928f-26a319d9836f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b4b7c35c-48fd-4d4c-bc09-a44a3a98f64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b21bee-c26c-47b3-b2fb-eded0ff5f5be",
        "cursor": {
          "ref": "8744520f-82f0-464c-ae54-bb24ab451ac8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "92d62239-99a8-40b5-8db9-81d93a7f9acb"
        },
        "item": {
          "id": "76b21bee-c26c-47b3-b2fb-eded0ff5f5be",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "806ca687-6ae3-4bf2-ad60-73f3f4840f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d49e66-b519-4929-aa58-f6577c5446de",
        "cursor": {
          "ref": "4925db6d-4d92-4548-80c5-ae0b66d0c2c5",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f87aa429-ee9a-45da-ab08-adc4ca6114c0"
        },
        "item": {
          "id": "a6d49e66-b519-4929-aa58-f6577c5446de",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "60d8f16a-fc97-4c56-b3cd-431698cfcb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755a95a2-de20-4b10-9c59-b9a78305f554",
        "cursor": {
          "ref": "df1d6233-f88d-45ac-88cb-c80082a2612a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "753dbb73-5f30-48ff-bcde-3d6a1fe2576e"
        },
        "item": {
          "id": "755a95a2-de20-4b10-9c59-b9a78305f554",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8478c0a8-9739-4b42-b8a8-f9b77df7c7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7e120d-0f8d-4a3b-baf1-78594f0d0b25",
        "cursor": {
          "ref": "3baeddec-caf5-469f-ae2b-491413053da9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "531bd2f8-2189-441e-b439-c0bdea452dc3"
        },
        "item": {
          "id": "0b7e120d-0f8d-4a3b-baf1-78594f0d0b25",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "46b950ca-c45e-4853-b491-15aedb979cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c42f04-235c-4da0-8fbe-3a9d5a2635fe",
        "cursor": {
          "ref": "37ceeb03-9eda-42a8-9cb5-862afed6cad5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "92cf1049-b389-4592-9393-58a4671a68ff"
        },
        "item": {
          "id": "16c42f04-235c-4da0-8fbe-3a9d5a2635fe",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "494753cb-99ed-4998-8d28-e2adb49b1406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84c01e2-f89f-4307-b30a-a8ef0d64d826",
        "cursor": {
          "ref": "5df74b68-c4bb-4885-b267-52e8c45b3cee",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2b535fd5-1f87-429d-b53e-5e145d58e027"
        },
        "item": {
          "id": "b84c01e2-f89f-4307-b30a-a8ef0d64d826",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b94039f7-959e-421f-8fa4-1611c4b79604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289162c5-6092-4f49-b204-ed50ddc83ed3",
        "cursor": {
          "ref": "9151097c-31e5-4259-895b-dffc59f157a2",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3dd00710-8f33-48b5-ba4d-96701dd291ab"
        },
        "item": {
          "id": "289162c5-6092-4f49-b204-ed50ddc83ed3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5a5f9dde-a106-4bad-845c-027b2581b07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ed4523-de86-4197-ac31-04b0ff87ec30",
        "cursor": {
          "ref": "076021b5-b946-41ef-949c-e03a7eafe5c5",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "44e213a3-4115-4700-bc60-387ee37749a0"
        },
        "item": {
          "id": "07ed4523-de86-4197-ac31-04b0ff87ec30",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ae4ba9fa-4b5d-4c3d-866b-a77afd2ecaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67ad783-e82a-4e49-8b22-8f21dd16b6d7",
        "cursor": {
          "ref": "1387f7df-918d-4f60-ae73-677737117689",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "db871909-02b7-4eea-9628-55559eb81645"
        },
        "item": {
          "id": "f67ad783-e82a-4e49-8b22-8f21dd16b6d7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7e8d49d8-b62d-4d15-9c7e-2698a96ee028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09c23df-019b-4f4b-a0b6-946f6a83a535",
        "cursor": {
          "ref": "e4c74f08-de52-4e73-844e-0b9d4ded14f2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "90fb16a4-bc88-4a57-b496-124ba2df74b6"
        },
        "item": {
          "id": "e09c23df-019b-4f4b-a0b6-946f6a83a535",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "77207905-20ae-4973-92ca-7c759e68ece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea920bd-79db-421e-885d-4d77e3e7ccff",
        "cursor": {
          "ref": "b87ba00d-22c4-492e-a015-737b501fd12b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "65e03f41-f22a-49e3-bce9-9ec6389c32ce"
        },
        "item": {
          "id": "dea920bd-79db-421e-885d-4d77e3e7ccff",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f375825a-690b-449e-8d74-8ff491196b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc7e874-dcc7-4bf5-bdd9-b0ee7b95bc7a",
        "cursor": {
          "ref": "3de7ea1d-c325-44a4-89a2-884293537ebc",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "72797163-d473-4bfa-b5bb-35e73c7b42a1"
        },
        "item": {
          "id": "1fc7e874-dcc7-4bf5-bdd9-b0ee7b95bc7a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dc15b4a6-67d2-4260-8e25-7d450a995e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5488fad1-abee-4151-88b3-e0fe681f4aaa",
        "cursor": {
          "ref": "6f934a05-3d03-4ee7-8b1d-02fa4c53629c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2440da69-0a23-475a-a2da-d3a281d9f86a"
        },
        "item": {
          "id": "5488fad1-abee-4151-88b3-e0fe681f4aaa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0d188e74-7f29-411a-9b3e-dd4e2a8e413a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d05176-3cbb-4e1e-8391-d114e852ea93",
        "cursor": {
          "ref": "a5645876-31c1-465e-9214-297f1a5a264f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1396505b-41f0-43e2-8380-1b63ebffa975"
        },
        "item": {
          "id": "17d05176-3cbb-4e1e-8391-d114e852ea93",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "565c7268-ce56-4adb-a1b5-ea4d70fa414b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259c5196-81f9-4618-916b-a45d083f188b",
        "cursor": {
          "ref": "26341032-6589-4405-9917-61be72d87648",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "332e02a7-30ac-4d86-a0b9-6f01ab5b2bf5"
        },
        "item": {
          "id": "259c5196-81f9-4618-916b-a45d083f188b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f7a03ea4-d607-4f7a-8acf-b1f5d89d233c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e2b9ec-42de-4f3b-b188-10ac396a58cb",
        "cursor": {
          "ref": "f4ae0efb-8e18-4d3a-8d8c-34832bb76696",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7a27ffb5-cc6c-4243-9c90-504609f0e933"
        },
        "item": {
          "id": "e7e2b9ec-42de-4f3b-b188-10ac396a58cb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a2bb6ce9-bcc7-485b-a03e-48557085e499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f995c5-95f6-4253-8572-5145f8146db5",
        "cursor": {
          "ref": "409ca775-2ace-4cf7-85ca-16de0723bae3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "18a6691f-16f0-48a8-80bc-aa4021dd178b"
        },
        "item": {
          "id": "14f995c5-95f6-4253-8572-5145f8146db5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "771d8af7-0ee0-4546-b0fa-b1b806a3b550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cdc9cf-da60-48a6-8d0f-bf975e1f2681",
        "cursor": {
          "ref": "cd879a0e-2a22-4f3f-9d33-ee5ff7869259",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b913d4f8-0d5c-4e1c-9559-cc9767ecf10d"
        },
        "item": {
          "id": "91cdc9cf-da60-48a6-8d0f-bf975e1f2681",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "03002c06-8380-491c-bba9-8edd6571bc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b942c541-19dd-4c0b-875a-cc32eab679ec",
        "cursor": {
          "ref": "453f7aab-2e1f-47cd-aa49-c8b93eb0fe3a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6ce5acfa-aa7c-434f-8780-36c10c2ce74f"
        },
        "item": {
          "id": "b942c541-19dd-4c0b-875a-cc32eab679ec",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d44b0eca-b084-442d-8eeb-712088a85eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c73d6b1-ce16-4e24-80b6-f58f4ac399f3",
        "cursor": {
          "ref": "5f87554c-944b-4c62-abc9-10885ff3758b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "91498000-2b78-47ae-b026-24007eba95ff"
        },
        "item": {
          "id": "6c73d6b1-ce16-4e24-80b6-f58f4ac399f3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ef452635-1786-4ed7-9fd4-7a5dddb08926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecb87f1-7546-4ff8-a95e-4051eac234d8",
        "cursor": {
          "ref": "a37f2e2f-c5f8-42fc-82f5-32b8807f5460",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f9858b27-8414-4afc-bc6f-8fcd6345a10a"
        },
        "item": {
          "id": "1ecb87f1-7546-4ff8-a95e-4051eac234d8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c05be6ab-6a1b-4ecc-9725-d48a32e6d6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb78195-4a2f-4bc6-88c8-a455d587f604",
        "cursor": {
          "ref": "f8e89854-6c56-40f8-8485-d81d281a7263",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4b6faa1b-649b-4a52-90b6-9915e7a813c1"
        },
        "item": {
          "id": "8eb78195-4a2f-4bc6-88c8-a455d587f604",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e782817f-fa18-4f24-a180-63d6400d7b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c07eda-7b94-45c1-b5d1-34a090e72bab",
        "cursor": {
          "ref": "7f4627d1-ee5a-4143-a186-538587a0aee0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9e3e195f-1986-4976-aa04-1a20c3be13af"
        },
        "item": {
          "id": "b1c07eda-7b94-45c1-b5d1-34a090e72bab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b31b2d0c-5b07-464d-9848-e1f75e93953c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac91d63e-9ab5-4607-a758-56e8ab1d95bb",
        "cursor": {
          "ref": "cdd91b43-e6c9-4db0-8366-cfad51508c86",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a4c35b2e-7d9d-41c0-821d-9a16bcce2fef"
        },
        "item": {
          "id": "ac91d63e-9ab5-4607-a758-56e8ab1d95bb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c2cffaf4-65cd-453b-9b37-936f2a00105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f9a14b-1a94-46c7-8ba0-95fe54376586",
        "cursor": {
          "ref": "fa3d868e-d875-4089-983b-498fae71c886",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fe0b9ba4-940e-4fdf-917f-895967c8013f"
        },
        "item": {
          "id": "07f9a14b-1a94-46c7-8ba0-95fe54376586",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dda5d8b0-bd62-4d30-b2d7-5523ffcb3bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143f9165-0ace-40de-beaa-68e07d069048",
        "cursor": {
          "ref": "9e4df291-5b81-40ad-b110-089cb31253ff",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5af24a66-3b05-4d62-b01f-d45b38ac06d1"
        },
        "item": {
          "id": "143f9165-0ace-40de-beaa-68e07d069048",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a902d54c-6806-47d4-b367-b0130f8a2be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd74ff54-4439-447d-a77f-58335cba3b19",
        "cursor": {
          "ref": "3e4729b8-fbfd-4aa5-9bed-f0e02fc66c3f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "907146de-99a4-447c-9702-25a73abbb36d"
        },
        "item": {
          "id": "fd74ff54-4439-447d-a77f-58335cba3b19",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "69402edb-09d7-4528-ac20-258496bc9f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a13dc9f-9f80-4f20-9512-a264bb8efc56",
        "cursor": {
          "ref": "920c70ee-cbde-41de-bfd2-10eac9008b68",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "10876cc9-10c4-4e53-9db8-d9e15329e357"
        },
        "item": {
          "id": "5a13dc9f-9f80-4f20-9512-a264bb8efc56",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c87919bb-cbb9-41d4-ba38-c280ad28fe40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08cc8ac-57ed-478f-891a-48c7416ed401",
        "cursor": {
          "ref": "063c6ce1-d63d-4d0a-b16c-dcb8afbd47fd",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "38102904-aabb-4ec9-b6b5-62ecf75e5137"
        },
        "item": {
          "id": "a08cc8ac-57ed-478f-891a-48c7416ed401",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c6f54ca3-6959-40bc-b0b1-5f720ec79144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a8c7ca-94d9-40c7-8860-7c546f135491",
        "cursor": {
          "ref": "48ac8d5b-c73d-4e19-b88d-b5852ca9c2ca",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "db9e02b7-d982-462b-9021-fa2d0a4308a5"
        },
        "item": {
          "id": "c8a8c7ca-94d9-40c7-8860-7c546f135491",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7761326b-d229-4542-9963-75c276971a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ff748c-80ae-4b65-91c0-7c5530baaa4f",
        "cursor": {
          "ref": "e19aa64d-b39b-43ac-baac-a2127bcd89b9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d165de90-5700-477b-9e93-801356deb83a"
        },
        "item": {
          "id": "c7ff748c-80ae-4b65-91c0-7c5530baaa4f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2b0e99a5-1107-4548-a127-a131aaf7ffc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fd4648-2594-4c45-86c5-32bcefd497df",
        "cursor": {
          "ref": "3ced90d7-3959-4ce6-b14f-fa84b8be1218",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9a89522e-e096-4be7-b0dd-90a42eabda87"
        },
        "item": {
          "id": "d2fd4648-2594-4c45-86c5-32bcefd497df",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4d49a390-050f-4e29-8ec6-8ac3f8ec9e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b483d138-632f-4b29-b174-6dfb2e6f2e1a",
        "cursor": {
          "ref": "67824e8a-b1da-456d-b94c-17fe5052e5c3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ec7c32ef-d9b2-4ac0-9d46-3e1fa35bd0d9"
        },
        "item": {
          "id": "b483d138-632f-4b29-b174-6dfb2e6f2e1a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f1fab668-02fe-403a-95a6-e6c408afa334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a96a66-77ba-47ae-8178-9b6bdcc032e5",
        "cursor": {
          "ref": "1914b82e-9263-4946-811f-bcbc478a2e50",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fe0d9f7e-706b-4f0c-aece-a9ca5b4a4cfa"
        },
        "item": {
          "id": "17a96a66-77ba-47ae-8178-9b6bdcc032e5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "22397d65-fe66-420e-9c70-4791f196a63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d398c3b5-3a4f-498f-b1e5-0301f7f4578c",
        "cursor": {
          "ref": "a3408a3b-083f-42ec-b93b-e76a1e8b973c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b9bcf333-4353-4a93-8d2b-465f761c4330"
        },
        "item": {
          "id": "d398c3b5-3a4f-498f-b1e5-0301f7f4578c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1aab8cf6-e88d-477e-8439-ee3b9c9fda49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7adaf14-5ead-4e97-9914-923ad9a99e63",
        "cursor": {
          "ref": "31133aba-ba03-4691-8471-958a58f32e11",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0761f746-5a79-430d-84fa-326a4f6bf72e"
        },
        "item": {
          "id": "e7adaf14-5ead-4e97-9914-923ad9a99e63",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "565d7b08-3c2a-4ff8-b553-c3ea5b8399e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad199a8-082b-4417-a5d4-eb708fb6c368",
        "cursor": {
          "ref": "ac1c0364-bf34-409c-98a3-8ac0440a1f7a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "95e7ddc1-4cb1-489c-aa45-70856213cf5a"
        },
        "item": {
          "id": "2ad199a8-082b-4417-a5d4-eb708fb6c368",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f2ea8c60-387e-4892-aaa5-4fd1ec73ee43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43139a6-fa04-4822-a9f9-9ea109239836",
        "cursor": {
          "ref": "260ee1a5-f426-47be-8c95-2e3d4d72adb0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d8c71d6e-7ba2-47cd-ad8f-f4b3b722747c"
        },
        "item": {
          "id": "d43139a6-fa04-4822-a9f9-9ea109239836",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af3c11c9-2371-443e-b7e5-f8ef9434e417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f665f1-3c56-405c-a0a5-8a48a51178c3",
        "cursor": {
          "ref": "83c2b24e-7214-4908-aa88-f0fed726ddfa",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5133f86b-50e6-4a69-bafd-5223ddf7c1a4"
        },
        "item": {
          "id": "42f665f1-3c56-405c-a0a5-8a48a51178c3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "56ae86ed-0500-4ec0-9db3-974763481bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbffe5f9-2153-425f-a828-f700811cefbc",
        "cursor": {
          "ref": "4d95fb51-a201-4f3b-9f07-a8273fbc1954",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "24d2cda0-7953-4075-b55d-388b0d2e7929"
        },
        "item": {
          "id": "dbffe5f9-2153-425f-a828-f700811cefbc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "39817290-fe3f-4854-ab19-0c47236ea43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e56b8-1c5c-4b58-ac71-51433077b0c8",
        "cursor": {
          "ref": "616623e4-9401-401f-9bd0-9f768cd09045",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "efaa85e0-b0fe-49f2-b562-1fa8418f3e15"
        },
        "item": {
          "id": "176e56b8-1c5c-4b58-ac71-51433077b0c8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8236aff1-189b-4274-b50f-35adeec3a2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e510ae2-d311-4361-a71a-2aefc8920893",
        "cursor": {
          "ref": "9ebb2a24-5f83-4b61-b7e4-29b37d14872a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "001f0611-27c3-4480-9958-5ce21c75a6be"
        },
        "item": {
          "id": "5e510ae2-d311-4361-a71a-2aefc8920893",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f5a96b0b-f02d-4145-a5c3-e3f8eecb4eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bf93cf-752c-4385-b876-a4cb7b8122af",
        "cursor": {
          "ref": "915bb51b-5027-4ce2-88f8-8805dbf4f06b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7231cf79-f6e9-4213-9ac1-4d5bc9e8c161"
        },
        "item": {
          "id": "12bf93cf-752c-4385-b876-a4cb7b8122af",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1416a31d-0836-4dde-a172-b935cf32d29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18895c9-8e6b-41b2-ad43-1916bd35f880",
        "cursor": {
          "ref": "a04b8daf-7e0d-4d16-9e2f-cb27a46d0b2c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1d334fd9-a65e-4624-8b5b-083b48890c89"
        },
        "item": {
          "id": "d18895c9-8e6b-41b2-ad43-1916bd35f880",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "aa69006b-113a-47cc-927a-688e0f4e9d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c9b80d-b57f-4050-98c4-52af1d777b80",
        "cursor": {
          "ref": "f65dfdd8-47e2-4f1d-941c-684a09aff4bc",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e301193b-212c-4215-9985-12315a64c322"
        },
        "item": {
          "id": "09c9b80d-b57f-4050-98c4-52af1d777b80",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5e3410a8-a9c8-4037-943c-1706905047c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c679720a-3557-46fa-b7c4-b7c74725a1f4",
        "cursor": {
          "ref": "8c1ce693-8c89-407d-9966-54e1365249fe",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e98d3f28-f721-4a40-8a0e-3cd9e60054e4"
        },
        "item": {
          "id": "c679720a-3557-46fa-b7c4-b7c74725a1f4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d13be11b-2074-4b7d-a084-175aaa6bc13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcff1e89-c7c6-4eac-825b-49eafda82312",
        "cursor": {
          "ref": "6f232a8c-b891-4cbf-95c0-2bed0757f9bc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "faaf8ff4-0943-49ac-8c3b-d9ebd33f730b"
        },
        "item": {
          "id": "dcff1e89-c7c6-4eac-825b-49eafda82312",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d3dddf93-fe87-47b6-aa49-ad9abf18efdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8114acf4-2fe8-474f-ab32-2b41362b0b90",
        "cursor": {
          "ref": "88a08273-a3be-4d9a-9e2c-fdf8c867f5eb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "da89f4cf-6ca1-4e1c-b1c2-6ad3e566ca1c"
        },
        "item": {
          "id": "8114acf4-2fe8-474f-ab32-2b41362b0b90",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cbc84501-16bf-4cc0-bf63-d14d8b782d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e022474-e1b8-4a57-8b39-ffa558c05f7c",
        "cursor": {
          "ref": "bf2de61b-f3e3-46d0-8756-ac1c78d67953",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "305441dd-c159-45e8-a63d-0ddeaad70b33"
        },
        "item": {
          "id": "8e022474-e1b8-4a57-8b39-ffa558c05f7c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0e41f09e-57d1-4778-91b0-fc0514e16dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5ca080-dc0c-47e1-9764-8ce3c2dae40d",
        "cursor": {
          "ref": "f0e271ef-78c0-4c91-8549-a83fad189b92",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "58b84a93-c508-4e71-8ffd-435cc55c25f4"
        },
        "item": {
          "id": "cc5ca080-dc0c-47e1-9764-8ce3c2dae40d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ba752d22-d7b6-4387-bda7-48ace802bd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e764a96b-6ca2-4e06-b97a-e590a5238b18",
        "cursor": {
          "ref": "677d696f-0049-4cb1-a601-13438d448b0f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2a3db83f-429b-4cd7-bde9-462d20da4129"
        },
        "item": {
          "id": "e764a96b-6ca2-4e06-b97a-e590a5238b18",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0b37c4bc-50e7-4e0d-9295-57b9aac959e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a701f93-0910-42c9-9ba2-4ddfb0915543",
        "cursor": {
          "ref": "cfc90b4e-6e4d-420b-99dd-c562ede5317f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "77560129-25ac-4421-812e-7ee09938a49c"
        },
        "item": {
          "id": "8a701f93-0910-42c9-9ba2-4ddfb0915543",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "75c6fc9d-6da9-4d65-8c2e-fdbfa1b7fc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c716dc8e-ff93-415e-bdf2-8565037fd59b",
        "cursor": {
          "ref": "5c8602d0-df7f-4242-a05e-e5361286e17a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "eb9fe22d-a48a-4365-bd0d-72b844201616"
        },
        "item": {
          "id": "c716dc8e-ff93-415e-bdf2-8565037fd59b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "43eb9715-ab73-41e3-8ad3-5e1f62d25f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80efe61-c2a2-4b44-94de-b091be393877",
        "cursor": {
          "ref": "369c8973-9904-4190-95c0-d37f145a3a91",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f3e9d756-5f95-46e2-a668-a45b8107e641"
        },
        "item": {
          "id": "d80efe61-c2a2-4b44-94de-b091be393877",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cba8943b-6585-4090-8c49-2dda6a3cf7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3e4b4c-859c-4bf6-8d75-bd8a4ac73175",
        "cursor": {
          "ref": "812862ea-072e-4e65-98bd-7e891b396c60",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2001daad-65c1-4d00-a888-66ae4f75e565"
        },
        "item": {
          "id": "bf3e4b4c-859c-4bf6-8d75-bd8a4ac73175",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fd9982a4-df7f-4b60-b2c0-bca568946501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18711e0-54a9-4316-befd-9254b69aa570",
        "cursor": {
          "ref": "128e7614-7ee9-4fd8-8620-8df289573dbb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f24ddede-159f-4cbd-ae95-d3351248dca7"
        },
        "item": {
          "id": "e18711e0-54a9-4316-befd-9254b69aa570",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "643a2419-43b8-4b26-96f2-cfde067e250a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fe0dc6-74e9-4227-aa73-8e4161bdd0d3",
        "cursor": {
          "ref": "26e6f4c0-aee9-4932-b963-55fff79c7476",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b2120cdf-73f2-453d-824c-c07f5cdc853f"
        },
        "item": {
          "id": "11fe0dc6-74e9-4227-aa73-8e4161bdd0d3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2347cd40-84de-4534-9211-e1b85ea29978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3745377-4afa-414e-9da2-7a379b6df645",
        "cursor": {
          "ref": "a02b0734-4e69-4d07-bfb4-96b12452c7c5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c2863f6c-9e39-4c3d-8872-cbf1f9e98600"
        },
        "item": {
          "id": "b3745377-4afa-414e-9da2-7a379b6df645",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b4b15944-006d-4152-be22-74f1ad52febe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39160d3a-48e5-4a70-8025-44f36cf3534d",
        "cursor": {
          "ref": "1e280112-fa7d-4f78-8d6c-ca5054887bbc",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c210ad2c-7937-4834-ba29-cf1e673463a2"
        },
        "item": {
          "id": "39160d3a-48e5-4a70-8025-44f36cf3534d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e88332f1-2fcd-49df-b104-fc20ca174362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e483f2-0a24-4b3d-bdc9-5c9a654e633f",
        "cursor": {
          "ref": "bb02e17b-5bb9-4270-93d8-925a718cb2d9",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9eb397c9-a5b6-457a-bfd1-6333a43b5701"
        },
        "item": {
          "id": "54e483f2-0a24-4b3d-bdc9-5c9a654e633f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "76a78f5b-ab4e-46fd-869f-e2e40abc4ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910e55bc-37a2-4a85-98da-3f3768f76a35",
        "cursor": {
          "ref": "26271b00-e529-4964-8736-de36756ccca4",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5e20e825-c6f7-4f75-b589-a9076f4c8aeb"
        },
        "item": {
          "id": "910e55bc-37a2-4a85-98da-3f3768f76a35",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c3235a6a-33d2-4894-b811-ee52d762b58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf302b9e-8371-48a0-a513-6e313ed0ebf2",
        "cursor": {
          "ref": "2101e2a5-e1a5-408f-9371-42fc9afc7e4d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6545f9cd-dbdf-4904-ae85-ca858129713d"
        },
        "item": {
          "id": "cf302b9e-8371-48a0-a513-6e313ed0ebf2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "11dffcec-8681-4c34-9fde-db4a9c90858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17533768-bb3e-4121-9d10-16086e3566b7",
        "cursor": {
          "ref": "83071808-3728-43e9-ae8e-a4d3d0468e65",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d033e103-b78b-428d-85c5-c524da523567"
        },
        "item": {
          "id": "17533768-bb3e-4121-9d10-16086e3566b7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "af201b8b-29e9-4d2e-b607-f2d216cb8e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfc82e1-095e-47e1-9991-a157cdd3f535",
        "cursor": {
          "ref": "e24d10bb-b547-4e58-98b1-bb56e679d8ac",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fbb42029-d88d-4ef1-ad06-b8c06e6c0e48"
        },
        "item": {
          "id": "ccfc82e1-095e-47e1-9991-a157cdd3f535",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4f9913c1-d7f0-4ca6-b54b-29f1a17d7ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d7890b-6caa-44b4-9a16-21df3d8fcfd2",
        "cursor": {
          "ref": "cf03653e-88da-40f2-bfff-5323b6d12682",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a461dae1-d08a-41f1-a879-7e0af4181ac8"
        },
        "item": {
          "id": "b4d7890b-6caa-44b4-9a16-21df3d8fcfd2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "22ac3054-788f-4da3-b7ab-cdceae7919ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2657443b-b56a-42c5-af09-f236b060a2c4",
        "cursor": {
          "ref": "3c5627ec-beff-4b78-b400-91a91bef6433",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5f4472d1-cbd2-491e-8242-c9c926d3a0a4"
        },
        "item": {
          "id": "2657443b-b56a-42c5-af09-f236b060a2c4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fe612f3c-137f-4409-8cf1-3f3636489358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7bc609-a42f-4a73-a882-2e1727425e47",
        "cursor": {
          "ref": "69bd326f-d28f-420e-aa91-726f11ba9ae9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "996495d6-63b0-4fa2-b634-b4a83237372e"
        },
        "item": {
          "id": "bc7bc609-a42f-4a73-a882-2e1727425e47",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7b2c0303-1627-4d2c-8ff7-fc92e6b15844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0151fd7-df2a-4b7f-b344-8034f86ea8b9",
        "cursor": {
          "ref": "63f0359d-5034-47e3-9dd3-d38fa1f14e18",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4725da82-17a8-411a-a7a2-7313c362232e"
        },
        "item": {
          "id": "a0151fd7-df2a-4b7f-b344-8034f86ea8b9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fdf0356a-4774-46b8-af62-04fb71e8b6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682fe2e-6d7d-4a38-b769-2da13233b117",
        "cursor": {
          "ref": "81689dbd-5b09-499a-9e1f-115767ed998a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2b172d01-8912-44b6-be60-40c3684d9c21"
        },
        "item": {
          "id": "6682fe2e-6d7d-4a38-b769-2da13233b117",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f96bcb5c-af1c-4a1d-85be-61c4a177f3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ece80ce-80d6-42a2-8299-9e31c1aa0223",
        "cursor": {
          "ref": "ffa7eccd-3bfa-48e3-bbe0-1b97f277ffd7",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4f96e3f9-e81b-4da4-8039-556e735e1731"
        },
        "item": {
          "id": "4ece80ce-80d6-42a2-8299-9e31c1aa0223",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a1978443-d5e4-4c44-bbfe-ad5ebec8ce37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b22dea-bbfb-490c-aabc-b06b43bad10f",
        "cursor": {
          "ref": "7bf38d4c-94ff-45f4-82fb-141711e37676",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bccc16e6-b5b4-4cfe-85ab-6a310d62e0a9"
        },
        "item": {
          "id": "85b22dea-bbfb-490c-aabc-b06b43bad10f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "739608f8-5ae1-495a-8332-e22cd717211c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e3a1f5-5753-4739-b6ff-6deefc711a5b",
        "cursor": {
          "ref": "b9c89c66-3515-40de-8bde-129c7cb8bc78",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2d630f32-2935-42fc-b6c3-88db3e729d43"
        },
        "item": {
          "id": "c9e3a1f5-5753-4739-b6ff-6deefc711a5b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "04688388-a121-4690-a96d-f2bd83138d87",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa78cf6-4d38-4c6e-8eeb-fb04874979b3",
        "cursor": {
          "ref": "73ddbc93-9d2e-49a8-8505-7b38657e4e2b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4df9afc5-529d-4138-9ddf-6e3a0ddd332b"
        },
        "item": {
          "id": "3aa78cf6-4d38-4c6e-8eeb-fb04874979b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f85030cb-fd8c-4f89-86ad-bdc7fb8bb858",
          "status": "OK",
          "code": 200,
          "responseTime": 1506,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd89328b-acf0-4b53-8122-f2f52280e26c",
        "cursor": {
          "ref": "848eb3b9-8cd0-4ba1-ada0-72524733b8db",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ac4baa0f-f3c3-4507-bc25-da1b45d91d0e"
        },
        "item": {
          "id": "dd89328b-acf0-4b53-8122-f2f52280e26c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6d2f4f2e-ac7f-4088-bcca-b983f296046a",
          "status": "OK",
          "code": 200,
          "responseTime": 1277,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe240f0-97f8-4943-88b6-096f98103234",
        "cursor": {
          "ref": "0b2b4688-c909-4d27-a25f-a7518fcc8a9e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b42a489f-fb6e-4b2e-868a-bd994fb69b57"
        },
        "item": {
          "id": "cfe240f0-97f8-4943-88b6-096f98103234",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c30a8252-ef01-49c5-8fac-2e82f2bdfe1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe240f0-97f8-4943-88b6-096f98103234",
        "cursor": {
          "ref": "0b2b4688-c909-4d27-a25f-a7518fcc8a9e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b42a489f-fb6e-4b2e-868a-bd994fb69b57"
        },
        "item": {
          "id": "cfe240f0-97f8-4943-88b6-096f98103234",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c30a8252-ef01-49c5-8fac-2e82f2bdfe1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a88ce51-a915-4a3a-a06e-a4432e946502",
        "cursor": {
          "ref": "efe7c4bc-5c1b-4dcf-86c6-ede36dd9a23e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1d9b4b92-488a-4655-a0e3-5a18149725ef"
        },
        "item": {
          "id": "6a88ce51-a915-4a3a-a06e-a4432e946502",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1e88a3ce-5ff5-460f-9ed7-144aed331441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafb61df-b931-44ee-be62-a66c4cc78f8f",
        "cursor": {
          "ref": "9e44f22c-64ea-4515-9244-68e24b656a53",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "82d4da9a-3031-4610-b4d4-6a0b3f330a10"
        },
        "item": {
          "id": "cafb61df-b931-44ee-be62-a66c4cc78f8f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "692e795b-ea21-47e3-a978-9b82478b3974",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}