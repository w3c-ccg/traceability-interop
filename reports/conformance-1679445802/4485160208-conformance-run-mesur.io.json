{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "28cc8ada-2928-4caf-89ae-edff9c73137c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1dda5332-d284-4333-a7c5-0c5780376cac",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "977c200a-55af-4709-86a9-4e39e57a9097",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7a581e33-d590-4d31-a9e8-94b4d3a6d1f2"
                }
              }
            ]
          },
          {
            "id": "8d405407-eacd-4eb3-a6bb-90cac364771a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0eedb3aa-ec45-47d1-9f57-c625e8ecb9b9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "de6e155a-0902-4aac-af29-9bd2db96ac6d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a65752b4-b2c0-4d8b-8d6b-fac2e70051fe",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a1bc863-2d24-494f-b0c3-b1b74e0b7a2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94835e47-d2cd-49e7-99bc-53e08183c2d6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25748fca-37fb-4356-945b-229d91bb99be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1476ec52-692c-4229-9ead-ff5dba5fc08a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9aef2e36-c138-475b-84f9-06f7f51fab26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a5f66dc-7701-4a89-9b3d-743bc6565fdf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8e23293-ce5e-4dd6-9487-7db943446b6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "134c4270-c50d-4c56-b66a-41519f046788"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c8c7e21-c4a7-45b1-8d13-38d5cea13060",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09511a18-70e4-4772-8dbf-5f40dd606843"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "605615a3-dabf-4779-a7d4-bb656a1179fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f729ba7-3c4b-4d99-92ef-a006c8e48d59"
            }
          }
        ]
      },
      {
        "id": "d8ae934a-3f3c-488c-93f9-0ce468927671",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "560f87f5-3dbd-4077-92b1-dc73c670f497",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7740ed9e-8ff5-4389-baa4-85f0e21b1255",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d8499f8-84db-41c9-b27b-89f6b61b9643",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680d413f-3cba-4ffb-b914-e5efcd91af90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "752989da-208b-4ace-a64e-91a2c9be8120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15f75a9-5c29-48db-9151-ccddbbd6abeb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92771267-de9b-42d7-bcd2-ae8db60be151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29f8168e-ef9d-4250-bac0-f216ac8be57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb5b699-5e04-4a8c-ab01-213293279544",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b70d89-b360-4a07-b48a-656fbccd7a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83199d29-7833-4643-aa8a-e19457c5160a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e9fcd1a-1858-465e-b72f-046988d8ea49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e27be8d4-7351-47d3-9a97-53a575854d28",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e36c0a9-f7d5-410c-8b35-accace1793f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "711f6cfd-af21-4b58-a0e5-9df648db68f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31867f3-4063-4cce-9c2f-b39fc55e3f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f59bcdb-d60f-49fc-b8f0-841e579daa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f677d12-434e-48a0-a023-91777e7911a6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6ca7fb-4da0-409a-ad5e-4b7ac2b1ad7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48f6f8c4-419e-483b-be20-94890b7ac205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e81143-a174-40a6-bd9e-5e8a13d2ab17",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "f906d46d-54d3-47ce-a5dc-428f2f1edc95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a91fcbbf-af4b-4c3b-8895-3dfa229212e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1aeaad09-62ed-4e72-8acb-ff1c4611e820",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "092696da-e936-4790-82f4-78f39be3c234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "358dd3ac-b957-4ad9-bf28-37635087a83e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e95adc5-fc8b-49e5-a879-ce7c3be00b22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "38ab02b9-759a-4c03-b17f-c3d428448fde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0def0bd6-672a-42ae-b26c-dd590474f2e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbe5d0c9-af20-4890-bb37-486a3d8c6a2b"
            }
          }
        ]
      },
      {
        "id": "a3dc2ec4-170b-4e05-8e0a-80cb201aacd0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6945a648-223b-4263-8b78-61a65e060fd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a867a6bd-4867-4a63-b8dd-825c259b7c4e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d204ff46-c729-498b-bf13-79d13e1fa899",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d791f49-2833-4c9e-aeeb-e02339c538ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aec52b7-efda-49fc-8e20-935c8a2fdcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc567a2-aa16-420a-850a-93eba6d9bb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "150137db-32d1-4c02-8d29-97a91c321e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aaccd12-1bc2-4229-a6d1-a92e67234e0b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20810f90-52fc-4b4c-8167-ffe47afcdaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fc29f9-09b7-4d84-817b-4d5736934b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4850db-73f3-454f-bc5c-362d043aef36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b9d136b-5b1d-4eeb-9fcc-ab21f45cd93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da30d529-f624-4bb0-8139-dd7c6f5de80e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f98bb5-69f6-4085-8cae-317305b2be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160139b4-91e6-4412-b5de-58b520b3e3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d373e8-8650-41db-8087-bd81309e2837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d861f4ce-9c86-4713-8c2b-2154806e06df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a00a091-e8c1-4393-ad0a-cd5a9288af00",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8f301b-b3fe-48bf-aea2-6a5d3f3c8a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6816133e-42f5-4673-98c6-c742115c5a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df394dc9-3e30-4bda-97d5-1732385c2493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff295678-b2fa-4661-b017-81739f9ad224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b92eab9-4ea2-42f0-ae6f-7b81b09dad57",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3897d253-5fc0-41d7-940c-df3642ca00da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49695ecf-3aea-4413-8e8c-93e9973cde4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa8c3e3-fb94-4043-b318-8024bbcc76d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb287e3f-035d-47a1-ab31-f9fb5ef14468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cb0651-1138-4c50-aa72-f6fd636a28e3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dd1fef-3b0e-4433-8452-569156864b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7404752a-60df-4ff1-a9a7-eea01ce199e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3053474b-aea2-4d28-8414-80a5dab32a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01c334dc-1528-4382-83e0-d9f888cff546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c26469-f60b-4326-ad01-e002d82d5619",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9393ba14-f301-4b3b-b89e-ee22cfd39b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f97134-27b3-4c45-a537-3c85cd882073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba36ca1-3684-4aa3-bd54-2f5d1297e948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daf8bae4-f49e-4683-a682-b9e6ebc5ce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a9ec2c-c8cf-402e-bb91-db0a0a8e6287",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be394c30-92f4-4334-9b6b-d939e8afba3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be16da9d-e416-44fd-a0c6-05ab3a7cffab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac977a72-5cfd-4894-b441-ebffc1d43844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "571043cc-ad8e-4d12-ad71-0d9a04029466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a9bce4-4054-4968-a706-d6ad277e0195",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfac8a9-5b53-4b5a-aaee-7379538a9336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101d6449-eda0-4032-8594-81d0d9c3ab5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa051cc4-8823-4c3b-bfe6-ca8fd56deff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "152961d4-d94e-4490-9fbe-2daf8188c460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b8e064-3205-4b7c-a55d-02ae21b2e0a7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183afdc5-03db-411e-b821-4a79b61d6e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc9c75e-1689-4432-a54a-8f50c49c3102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b9289f-b0c5-4cea-9a4d-e887022c1988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "484df3b0-e013-4492-ba7a-20262ae21711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a4c278-0742-4b02-8c3b-f4a550ca1a98",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cecafa7-e220-42b8-aad6-63ebb7bcdb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d4647d-2c30-4202-b66f-e7127de3c21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658a9756-8764-4901-9656-aaf8194cb647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96987afd-a9e1-4d37-a754-498a722d2d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc7e034-df75-4d7d-9f4f-0e4db9ad167a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6b9ef2-e3ce-438a-bb6f-1a7cdaac2e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07b8450-821f-4c70-bda6-de4ccf3332ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576c4e7f-a091-4ff3-92bf-287f2074f5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56e4507e-41f9-4980-85eb-66057d65aed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973e8b00-2c75-426e-a634-d022c7115bd6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d92a859-7ffd-4fee-982c-402cad131429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dd5b9a-cd0c-4c61-a252-ac02d0660f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdab80a-553c-430f-a77d-944473f016d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e259f2d-0d9b-48ae-9c4b-7204ea5671eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0f9197-fcc9-4a86-b928-65baf46d4868",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0924635e-df4a-475d-ab08-9bf7bd55f212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba9f9c8-bb59-4281-9b9a-caa72ba3c511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cc4355-ffcd-4da6-9a94-9a2d4fe7371f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22b2495b-2d0a-4882-9836-70d2b5533ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79362bfc-0507-40f6-9f13-2d546479284c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00714437-463c-4644-8261-bea234fba5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10d2e87-28fb-42bc-9464-594e3c0acf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6211298a-2bd5-42cd-a3a7-6a789913ca14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaf2b495-df44-4666-890f-eaf8b9907245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9585dea3-d046-4b91-b899-d9475f5508db",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed0c3d2-9c8c-448c-b319-76d9f073dfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19585fde-78be-4243-82ff-9c6db98b792e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7a082f-e745-440c-ae1b-c434e229a753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f958c53-11fa-4447-acc7-5435944feff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88202bda-3be2-4715-ba8e-b19f7b4a2551",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca2f7bb-5be1-4d30-9fdb-020a1a73bda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4968c546-562a-419b-8d34-66862fc289be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a8dafb-656f-439e-8e9c-cb0d799cffa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386ac772-567c-408f-8675-f323727635cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3e4918-2d8e-4139-908b-a9596d000ede",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1a89a1-ba64-4bab-bc08-8af7e5190838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a08d420-60a0-4f81-8a6a-05b42d211d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72886eec-706a-48f6-b849-f16a618a09dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4b7b68-a02f-4d46-af21-569b55edb014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc29e84-2e0e-45f9-8e02-9c7bfe662b21",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fbee56-7e8b-4571-9f53-497a874a5fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65991e86-95cc-4361-a46b-0bb242a2739b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08e98df-082f-4669-aa2b-d4a43fae38ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c034db-66d3-4c68-9c69-f5d793ad4dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0ce67e-19cb-4689-bb2b-eed8e4d50e80",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175bc68c-1393-4f26-ae75-0f313f5fad33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4d68bc-5134-4ec1-bd22-60bcf6145cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53044f99-e60a-4fd4-906b-fd1aa4334bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "170d8ee1-ace4-4a5e-a583-a4cb125a0a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9d8bfd-8ea6-4354-8956-556ac547aed1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e86149-36c2-4a95-9e36-a539146e0daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d77a7d5-208a-4fa8-b20c-10b2313ffe23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5ae3bc-4c75-4993-9e77-5c950a0ecf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63eb3788-5515-40e2-bf7f-a24ab7d79301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a7f8d6-53e6-49a6-883e-043c98803c16",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87437ef9-8490-49aa-a41c-1bdf14b8b9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62863a63-88cc-4e0b-9801-e3d3d2fe4a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5631d723-e7d5-426b-9ef8-c0fff8302db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8e548b-8b9b-4071-8ed8-82599d0e70a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f819b98-abfc-4488-a233-cae139947cac",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8824e915-fcbb-4b03-bc1f-c961c3710cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca01ca32-191a-4454-979f-d0ec8c9b5ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb0e308-0546-45cb-9a70-6811fc8f6ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9130b0a-b9be-418d-b68d-4053353d0b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672008c6-8e82-4892-aa84-7ba393bf4f4d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780d9098-2ac9-41a6-bcf4-e037644cfe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90523536-08b6-4294-b6e8-685d929c5314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cdda37-23ea-466f-b0cc-e9f0c17b60df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7260bc62-d32b-46b7-b5e9-f05098e8083e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74f6c10-77fb-4471-9377-ba82dec3fc4b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e80ef5-5142-4af3-ae01-a08f8a66ef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d047b4f-f40c-401c-851d-3140590eafa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d04d23-172f-41e8-99bf-aae73624682f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e2766d-eae4-452f-9a50-7bff86811289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc88eaf-4e79-4549-97ed-4e2620353930",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca12fdd-4c2b-45b3-aa98-66f317c322e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc35cd0e-3e01-49aa-a4a0-9193a6688604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3f71d7-cd30-4b2b-b4ed-919d1c32cf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b998d8f8-5fd3-4fc3-b760-020e4f678080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24269e0e-cae2-4b19-9a49-434994f6013f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96c43cb-28e7-4687-afb9-0fd28912456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b6fa99-4bc2-4d57-8c2f-a226ead0f105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd67cf5-12cc-43dc-8c72-24e44c2a0881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5aec74-7c35-47d5-85d3-040ff3c18621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7f47b0-755c-4154-8e59-af12f3629d34",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4801c6bb-66f9-45e2-aaa2-43f31d4e2625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaacc81-110e-4a86-a408-eb11435f58b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5403661a-64e9-4868-811b-7bb03f936c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b583e2-bc67-41af-a3ec-8bd43dca8b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd21acf7-bfce-4df9-a8d0-92cecb778d7f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2943fe45-bfbf-4511-9245-837c50aad7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b821946a-334f-4b47-8593-8baa7929d80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e95ffb-f213-4781-8ab2-cf744b1a05a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6fb6d5-4163-4049-9eed-a5100d4a65b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14b67ae-3282-4778-ba37-8337cb0de7a6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80e7e4f-5698-4046-8aac-59a94965c722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fafc59-2dde-4235-a180-98a7b305e500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae5c09b-dafe-472d-8a07-ac83fa554eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb410d3-8be2-4c8c-9f8e-4142d9fb4687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d286ef9-6b9e-410f-a4d3-c2c3104051ea",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca69259-8617-44b9-808a-f6617fd3a947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c388ac-e929-4897-b005-356374a31b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73acac43-b4b8-4613-9dde-65fd06cdd787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb5ff39-96d9-48e9-8667-8578d36d3437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def811cf-605e-4589-83d8-3cdcc5c83bdb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5904eca1-ee08-4e98-97c4-ce34fe35d1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61f0832-13e2-4c00-87c4-f0c4677dd25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb769cc4-0893-49b7-8a5d-2dc963bbca8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f8fef2-7a03-4b9c-9d7f-21d7610a4d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc8906d-0011-4734-8b9e-4bc5030ca220",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e856a521-7af1-4d0a-bc5b-84d3b62ca531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3a566c-9b46-4487-93f8-4c8ddacfce7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f32401-780a-453f-9585-d08796596902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcc5120-033a-4053-9e29-5437dae1acf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62030c86-7320-4c39-8f60-972e3bdbf5f2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea878998-7fc6-458f-9468-450feccac5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6cca3b-edc9-4a89-a6cf-707eeac77655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66a1707-991b-46df-91d5-e352117e9762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9d19e9-904d-4360-9fc6-49fb705f9101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e0cba9-5131-4449-b0fc-c2e8fb1f5b06",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2faa60-276d-4906-b9f8-359103bd4b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18540dc3-01ec-4eca-8721-8dc22f0b72a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bce267f-60c8-4ee7-982c-ee40e6e40a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "887bcca4-c60c-4b75-8e91-0c1b1940a074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41db4483-a1e7-423a-acfd-7a27615668a2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf95e43c-85b2-4342-a245-b109d93d464b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa2d6d41-9160-4819-8cc8-3e804bc13320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1421ebd-3a4b-480f-a24b-a3d78d4a2303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9e84a9-890b-4663-a954-bbde50693a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedabf0f-d7d3-45de-858e-792ee5525dab",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee515d8-138a-4d7c-8601-8c2b0fde247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2b32c1-9876-46ce-876c-f4ba14a2aa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7434a9b0-59dd-47d4-a651-24589b9fec3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74cb9f72-78df-4b1f-bd4a-050441097f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a50658-45ef-415f-a6a1-5a7177826ffc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7affcb-39a3-4650-b05d-aa2951f06240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf631ba-6fe6-4458-88fa-3c640efff83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb67f18-c3e4-4483-9252-ad93cf4e0808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c777e97-255e-4d1c-8798-0d399a8ed9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34121198-b737-411e-905f-fd8bd49ea666",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31891c5-d96f-44fd-89ca-cdbd24763552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cc448c-a33b-439a-8193-93801bd2b500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ab2078-b1d1-4e9d-874f-5db273ac455e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f90714-90a8-4a61-a7fb-85dfa454824f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb60e98b-5c67-4b26-97d4-7c3fc737a958",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0d783b-f29e-42f5-ad4c-1a04b8c4bcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d2b1d7-32de-4d22-ac28-680fff1454ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1c11ab-c05c-492f-b17b-e3d98ef8f173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f77708b8-99c4-4e29-a271-57025a9088a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de0b920-558c-46bc-85e9-f902e88a83f1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fdf434-3c66-4139-9951-348c705bdfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3525883-fc31-4b12-9194-4d9d75c51622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf331893-36a8-4a1d-9edf-18c51aaa2070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "022f9142-8c7a-4157-b958-b48eed20176d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630f736b-6970-46d6-b6b1-4713761880fa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa15f7c-3516-4d1c-b5c5-b7a1845ac77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5155c5ba-4f8d-4463-a872-4a9fd891b93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ad024b-254b-4024-bd87-65d6a428277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c9b1c3-b29e-47ca-ac09-ca95dfc552cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d824e87-eeb5-4b8f-87c9-7f2b55eccf9f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8281728d-2c9d-4c61-b56e-fbba271bd5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6deb0b-84cd-485f-a28b-93674c4b0e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2a7604-6f0e-4f79-a46d-97ba126495f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d6a49c-69d1-434a-8bbb-412bf2ccb97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf245cf-fc78-4622-8a29-1afc12b33b7f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5fa631-8f50-4ef4-b289-59944d6bb448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea6e98e-ee83-418a-b33d-11f9c0f58745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437312f0-c8c5-4c40-aa50-c927df81066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2b4163-1a3f-481c-af4f-ef8e2c83e18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200b3330-93dd-48bd-8bee-1196d2eb483f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71be247b-9a9c-4c8a-aca6-abc46c89868c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc76e2b-3b7c-4591-8074-f9d65cb66457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd5e9a6-8923-4f69-8661-73c592f0376d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d26ab444-960a-47df-abfe-4e95930ba80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae24896c-c762-4ac3-9dfd-9ad1da0c4b14",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4fa3a6-d475-4dff-9b0e-409101687df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69771603-c928-408a-8ffe-82ca64773e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8225b60-d30c-4171-9527-5df5ecdf2dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "877b55b0-8cef-449d-8f71-eb862b673dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3995d8b6-a8d0-46be-a2db-c790c39bc4fc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019a84b3-4050-4f25-b81b-51f167d43247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f6a1be-fb4c-4fd6-9693-aa9ca2a14a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55974e5-07ae-48d0-a88b-07e1363e55b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "814fb57c-6836-4330-af30-68c019e8090f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f6d7e3-8624-4d5d-8e11-b5a80b0a73d1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a248a57-8b63-4eac-88e8-979e12932c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d5f8f4-04d8-4826-816c-7abe87ffff02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd47db9a-ad68-4fce-b063-792b9b03418a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4008834-a3b5-4112-9fc2-a12daa77f2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873f3508-3703-4378-a7aa-c2d80f3d5f50",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1e069c-2562-4b2f-8e4b-a5c35afff1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e108772-c87e-455a-82b4-61682f35aa36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8289653f-8c5f-446c-bb28-7520bceedfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0acb52a9-69b2-4ba6-8879-3e9943fdeeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ed6212-41bd-474e-849d-f2c08387932a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfbf10d-395d-4aed-88a6-ce399dcedb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bff769-cde4-40f2-88c5-d5512e67de86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af037009-624f-4bb0-be28-48ef58083404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78f8145d-5f78-4273-ad6b-1dad35029c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf58cd59-0354-4959-9d60-379f416ec19b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6039c177-a353-4472-962c-1d41b8b23bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec466110-ee0b-4782-bfbb-c0339174a149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849d447e-86fb-45b5-b6e1-fa05567757e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a88aceea-d905-47f6-87f9-849de6e7dde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed36125f-a054-4040-9549-046b914cf6d4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7658a07-4698-4c63-ae71-2496a6ace5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5121360-9c95-4293-a847-4a38136ba786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79151ba2-a0c6-4d00-a3a5-c43087529574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3deced-4570-49d1-9184-4cd18e5cb76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa18509-eced-4765-b8e9-b6305e8d7d56",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d19e28-7dcb-448a-997d-147ad3ff6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735c1660-8c07-4ccf-bb8c-591556beea8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d628f5-6e1c-466d-a636-c9cecfa88cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a55a7bf4-300d-4fbf-b0a5-052b2b32c46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f91d59-33e6-45b4-8f46-2a1ddf864e69",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e00157-1baa-4da0-87a4-7e46adad3543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabeda88-babb-4e0d-9727-e2ee9b694143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5ea3b9-85b8-4acb-8932-508da3b25575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26bb7275-d7da-4e63-9aea-76e6ae067b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b11f43-d7a7-442f-9cc9-1a2a5414b5a9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316c048e-afcd-40d7-b77d-ffe7a06378a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f91eb1-a3b7-41c1-a38f-411827413d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b1ecf2-2514-4738-945e-0d422e3e7f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e64f23-6dfb-44e8-902c-bad6980b20ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8018a853-9c0f-4e97-b8a3-feff44c40698",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7482994-eb42-4aae-9142-81a6182cb428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4b83bf-65bf-45a1-9c6f-663de5690cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a7f910-2340-4dc0-ac6e-159193efc871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6129e46a-c0a7-4093-9b1f-5586b26a94b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa078970-9c55-4817-b06f-9ec3a0cbb504",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416c7bdb-858b-493b-bdd0-262bfcdc2848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ddf3bd2-7880-45f4-8a4f-23b9da6f38a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50999215-835b-419e-a10c-51ffa66ab808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88481ee5-885d-421a-8dca-331455b22521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15e9989-16c1-47f7-bf3a-e8c5599f84d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cb665d-c02f-4a3f-822a-23aee00a8825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c0005c-874e-4804-aaf3-078280060b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63383eb5-c356-4455-902f-d2193d627b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51ff3f7-ee6a-4570-9df9-acab8994946e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f523e8c2-3a52-4ca7-a6e4-a6cf3aa55409",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ad6854-34aa-4b13-8761-92758017f165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110f5660-17de-447c-92f9-16d7e9fc452e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa773f9-53f9-473c-8996-059beb1b2275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b35b6b2-fd63-48d9-ad25-6a082fd437d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2131c05-70cf-4541-8819-2d77b865c458",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd2b950-00e0-4dd8-aaec-8391be124267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad1dde9-b96e-41ab-a293-60c4862062d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5ab1c7-d9db-407a-adc2-71972a14d27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb12234e-bbb7-43cf-8b02-d12f1a48d1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac601b2-585f-426f-a55f-dde21ae13f40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5511c2-475f-4296-bd19-eea3f7ff144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d07944b-9198-4301-9258-e6a1ea31e25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3479e0d2-a39b-44b3-acd7-cd33dc23e596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb78ded0-d536-423a-b41b-44aea73b1fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b59b77-567b-43c7-a8aa-9fa8cdda0521",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a3b360-a16b-457e-88be-49c9ee1e4262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5abe07-9de5-4abc-b474-4f333b6ee583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97940ca5-9a63-4ddd-af85-890b4154ba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96ac202-e1b5-4e53-aa04-3a32468b532e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e379f72f-26ae-4fd0-ab75-fa223cec77d6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d665b68-510f-4228-86bf-30deea8fdc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0305d9f-2e51-4bad-b065-8b0ffbc94b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10541831-818f-4b39-9a60-61d005523e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c562ba42-0b67-48c7-bbb9-611b00990d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880be449-2519-42e9-9c4d-1a141f64ed52",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73ba564-1663-46d3-9a98-3fecadcb2e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b428d0-2962-4a6f-84cc-a7b884da1279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548d84a6-354e-4042-9efb-70202f9f1cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67df667b-ce80-49a8-955c-781a11c6b174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b344eb-9176-45ca-aa07-7e7d647154bd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e654b38-22c8-4d44-9017-5ec6a0e9f94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84237bcc-0912-435b-8fbb-8f1d3548fcf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed127321-b40d-4d01-842d-a1b1b40ce8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3baba3d5-3605-40e8-a0c0-16c386ffd5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0565f80a-b904-4f25-b09b-12e33f356217",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad87a816-f435-4d35-8dcf-e531c22cb0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dba9e76-b361-4626-8e6b-b26661c0fe53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6d1d3b-4e96-4c49-9f44-f0d44c0da7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "183b03ac-9063-4225-bc4b-da25430508d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebe92f6-f3d3-484e-b0c6-bedffa98d441",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c428a9a-4f95-43f2-b893-5874ef2ec3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d7dbf0-813c-4b7c-b3ad-b5eff5b9d4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dde836-ba87-495a-82e7-d53fca6664c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c49b425-b203-47aa-992d-cacf6c76e89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6678910c-d020-4e5f-873c-1cfbd24190e3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde6241e-2073-4136-b52d-491a9b2ad917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cffa39-6d73-4e80-8bc2-055c0dacbb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5bfc6f-8bc5-4ca9-a276-086bd0f7d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca80a9ec-4378-4069-8c8b-47f89e5e1a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850ec799-c4dc-472f-9e6a-c828ad4f55fe",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6704eb-73c4-465f-9a75-aba610fbfb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b25981-39d8-4c3a-ab44-a2c3ab752ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45f3148-fccd-42dc-963c-fc200fcfa5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c58e19-6fb1-4a20-88ef-79c86054ffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e45f69-f961-457d-b434-f157e409cf64",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0471a454-e6be-4eaa-b1de-c45b38d506d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87e8da1-10f0-40cb-bd40-3418f38bb638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d8a477-9974-4efb-bafb-73643964de0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8ac367-c519-4922-bce4-888fd6479dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855e20f5-bf12-4abc-80fe-9e36db99e6cf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aada97b-8126-46e0-8ede-24d50299677a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d15b0a-d2dd-45fe-af25-6516ea36f750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac90047-15c0-450f-b67d-44f8bf5a5fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c62ab78-5f93-4295-8b8b-617aee8bca45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67276a87-8f9b-4ee1-b08e-47a9e5a47c67",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21769d6e-9fd5-4d29-851e-bc2922c2fd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a15657e-9e4c-4c34-b077-f477c81b9c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70aa5e08-2712-4340-b828-2da74994ffd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b024ab73-4a2a-4799-85ae-eb3f7c79f51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363530c1-c0e0-48df-bdc2-7b728152949a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5986c102-d6fc-4e81-a108-fe80ddfe7663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6569eb-8b57-44d2-99d5-75438c3dcd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6d951c-11af-49ed-bcd5-192584010606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf1e26f-febd-48b7-be77-7cfc455ad0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5a7951-08bb-45dc-91c4-5ba955a29b39",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51757d7b-09ef-4c4b-8d07-f7496d95befa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a29616-21fd-48e9-927c-0bdbea861eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f564d5bf-c446-4062-b0fa-2d8173739d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6f93fb-db9f-41cf-b220-eb6cb8dfa211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930a23cc-7302-474a-9c34-aa9336061aa8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fd4453-a90d-41c3-9cd5-9f90b99e88e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6e7acd-813d-4e12-b9f2-b2600de67f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4275edcf-9967-4001-9cb9-0262af8eabd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89fa3a2f-4aea-4067-978f-02d62870fed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effcb35c-96dc-478d-b221-93f02f7013cd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6442476b-19b4-48b1-b9fc-7feef81b2829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670a9121-47a9-44ca-b936-836563e38675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c04de-b401-4fa6-a9dd-435ea5e01647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "169afd7c-3024-401f-a324-d54bb942c5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b128e01c-139e-43a4-b609-b5dbe4f53339",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1458a3c2-2ae9-49cf-950f-a442d764eb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4859555e-1350-4215-85ff-1ed5207707ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74783ed9-a912-4ad9-bf6c-79c288be4c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bb3f27-3f15-4eb7-a624-610f602011ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975d73f8-cdcc-4245-b3fe-941346c0f71e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7194dd-c540-4661-95d4-575067fd0a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31721da7-a6cb-46c5-9665-b72ffd66d562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb500f3a-0556-467e-b016-3bfbbd434bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0450dd20-559d-425d-bc2d-0b9357cca745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41748919-1204-41e0-ac57-dc46ceadf07c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b17296a-65c8-4b89-962b-dc2e838e957d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a599ab-a8ea-452d-a3c3-0be512c755e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8863a029-c764-4e9e-b9d5-7acc68473765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43d08332-925e-4717-a5fd-fc94ba94bbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b413e5-1bb5-4ffd-947d-a611c6899bc4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc48676-9a55-4ba7-856a-d16ef81189c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4389cf68-4e14-4847-9fb7-64e0145488d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f77a8f1-ab42-4c24-8aaa-f2f06e884bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76a21970-92a2-4d96-b805-36dd616c624e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12482810-c239-436b-bb49-521bf42fa516",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2c8ee0-e5b0-40a3-a548-c17f696e53d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cbe139-462e-49a8-b561-7b830da14ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd0359f-9079-4f68-95ff-668bfc875160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63002c00-270b-4247-959d-52c771209152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c76c03a-4f18-40de-a220-dcb0eb2f84c1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821a6a50-af0d-43dd-848f-e746ca987a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46bd08f-5342-4df3-a932-3b1a9e8b6efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a241642-099e-4571-8a8d-306a2edc4fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f0c171-cd08-4ada-9d8c-412b5c0d9ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea0dedc-46e6-4ec0-9b05-a92e3b93c995",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b04d59-b7a7-49b9-9eb1-e5af9f36dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfbac9b-9575-418f-96ef-ba3d1ac0ba2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f971ab6a-8989-47a7-b37f-11cd6303f7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11939602-f4d5-4555-b6d3-b2c31a1198d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511da8ce-e522-4ae6-a65f-b878cb914736",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef407679-02a3-4128-b2fa-df5f25375e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09392d40-2bd3-4922-b1db-483c75d4560c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b702787b-0f1e-48fc-8039-bf6305d77a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45dbee72-1a6b-423a-856e-f847e8201d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb00ec7-0bef-45bc-9ab6-dbbd62fa0b24",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de206b5-b931-4753-8c9f-d4e3097050bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3343d5e-44fa-4bc5-a18e-a3a644a37514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f880ca03-d4ad-41fa-a56a-f1cc49b33343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47cf8f9b-870d-4da3-be29-81e2dc5d69d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082bb151-8a21-436d-8bea-6d69668bdf36",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1674eff6-4820-4e2d-97b1-5038924a0df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac950d7-54dc-4a6c-acc2-209eda256b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4ef891-d1b9-41a8-ad4f-e68dbeebc4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f37dfc2e-e184-4390-8434-623df7a293ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348d0c93-dbe9-44d9-aebe-801a6f752e0e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd5f2cf-7a9e-4610-b992-11d7650b4561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe99207-351f-4ecc-afff-5f7d4832e3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55da2094-bda2-4082-9658-8e8d22e9df1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df8be87-1c06-4b47-a341-f9f20841b2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd90c2fe-2411-41e1-9404-fe7bb8420ecb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed5fd27-a708-4fc7-b7ab-cdc494a4051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fa7226-07bf-4553-b60e-a954a84e0be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b54d46-a0b3-404a-9494-47f226dfcd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc34445-db9e-4379-93fa-abb2d554195d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a54d6fb-df07-4419-8503-5522aee4954f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399ed72a-c055-4e00-93b4-eec609024b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ff3c6c-cd0a-4a68-8311-d5f7a74c680f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0d297d-351b-45fb-a392-b99584558a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbe84ae-88ba-40d4-8b3d-5af94707303a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e4d1fe-cec7-4912-96b8-7e348d5b1472",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e8c87f-7ec7-4eb4-8ab2-ed29b6a33795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb35425-dc40-4383-a174-6d818c8f2dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cfce5d-f490-458a-b103-d8588c74a8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f057299-51c4-483b-bed1-205ee546027b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59418de9-f299-4b38-a8fc-f0aadcf29678",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be410e5-864f-4872-96d3-8e12e8b6fcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d951cd-3300-41d6-a7eb-b81016fe96f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfd253e-ab1d-4686-88cd-d566070c67c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "522374db-6640-4045-9b6b-219e51a5250f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d4ae92-1781-4ba5-8346-4bc12de4e640",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84708ad-808b-4ae4-8ed5-6a16e1150d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e3fb7ec2-f9b2-42a8-b8f0-9a51e97ff33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bceb8ba-8e15-4d2a-ba11-aaf7caea65ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "35127232-a91a-46a4-9234-f358c1bd35a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b16d6d5-ae73-4b93-9cac-60ee74fdcff5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d6c5c6d-6de0-4209-9ab5-6b23a64ad95a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2990a64-ac97-40e0-adea-032940329bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6941ad2f-45d4-4c8d-92da-68af31fc4223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278e828f-ef3c-4d08-be84-9d22fe21da9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10ddc10f-21d8-4295-b844-0e8ac13bdfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c83bb2-5f38-412a-a1c1-89597b0b442d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e016357-dfb9-41dc-836b-7d107377a93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c63de1f3-9996-427e-a315-4614be4d484e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af20c076-503e-4e2d-9527-54fe759593f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac4268ce-e30c-4c1d-8b28-26c63cdafa6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d8ff9e4-0f40-42e0-90fa-d07e1fbb9635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b97d3874-987d-461a-9cb6-c04582c96ee0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6da7daf6-dff0-4c72-a9a4-7a96e710b583",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2031e252-83b1-4cc0-872a-a7457dde152e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c37384be-a534-47c6-bb31-42875358d235",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3965a8ac-12f4-40d8-a876-9f62acae5e38"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51cbd6d5-e841-4537-a26f-4f84f7d91f86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ee15b82-1606-4e41-8a09-a4a0a25cdde8"
                }
              }
            ]
          },
          {
            "id": "5622b2ab-4024-475a-af0f-01f5ba22bfd8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aef3a6d9-8859-4fbc-84db-ebbe783befec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e846a562-5185-46e4-8721-86ff976f23fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2d8a72f-5300-42d8-811d-6454ff1ea9a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3da8a6e-99fa-4ead-b1f7-2fccd52dd2c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "11f3c7b9-4309-4d8e-8ba4-b0b8e5eb69dc"
                    }
                  }
                ]
              },
              {
                "id": "39ccd8a2-4916-4c3d-9a28-e52d001e9392",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96062491-bda1-4523-ac92-27bc6ed564cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e34100a6-6ea0-4ce8-9ab1-0cebe9839482"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "763d518f-1209-4aa6-a03d-a64594b7452e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0b37ef5-63b5-4de7-9a65-6f18d89900c4"
                    }
                  }
                ]
              },
              {
                "id": "3bc576f8-8875-4ee3-afda-91ea018469d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81a97aeb-e793-496a-9283-5b71431cd52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ea1f468-0b00-46a3-ac59-8cadb34a7377"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17dd003e-e7dd-48e0-9d5b-31351844c6cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c9a09b8-3aaf-4a64-9357-4191955be862"
                    }
                  }
                ]
              },
              {
                "id": "fa6a9db8-4baa-4068-80a2-7446077faa2f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05740941-38ce-4406-a5e3-ceb0f085179f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9a3470a-4713-451e-9c7e-a27da28e628d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55bce2d7-0b0b-4c72-a994-ed3a1eb8ebc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "710381bd-2df7-47bb-a70f-9f1cfc65769e"
                    }
                  }
                ]
              },
              {
                "id": "4172a2f4-2fb3-4f98-9ca5-ce5352ec08fd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf6cae5f-6f8e-4568-bbe9-eb7cb1142a93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be96a28e-c02a-4c8e-b11b-a7b5d6b2d7ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7d4286e-a2a7-4ca0-985c-a38f4014ffce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b894ff90-063e-48b1-b285-8e1d519b3aea"
                    }
                  }
                ]
              },
              {
                "id": "17bc7623-834b-4617-b223-bb1d4e2cc50d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebc6ac2e-91a8-4df2-82f3-9c5686592360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ebeee05-ac50-44f7-bc75-92dfedad57b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c126a71-f310-40f3-9ef1-379255bfad22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57c59f4a-42a4-4911-84fe-0b9ec32e9b1f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56095c70-1337-4f40-ad06-911acb96053d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ee456d8-36b6-48a6-9e7b-1b7ce7bb04b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62438624-129b-46ab-86ac-0c05afb5e836",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb1572c2-45af-45fe-9e88-51414b940e4f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09724bf0-3793-474d-a7c0-ecd37902f15f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d7d10ec5-7501-4a8b-83b7-1fc881f735b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f8858ec-f6e8-4358-af40-e3df2a9b847c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d180e1d-ae53-485f-843b-0da67b412c08"
            }
          }
        ]
      },
      {
        "id": "2802a2df-a3f9-467d-89f8-0787e46ca1c2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cc732a76-d8ac-45bd-8273-60e60a55bc90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52d409bf-a988-41c2-9d4c-9da129b35487",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ae22de5-997c-46fe-aa81-ef2cd9df783e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d8936-a0a0-498c-9a1b-40ff27be98b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea879689-35e7-48cb-8a8f-130a64daff5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d190b8-f84c-4c8e-b417-fc27b9207dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4c0119-9b6d-4d1c-a453-6a3ac65f5ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190c3629-2a19-4cd5-9919-bb3b246ad4da",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ae63a4-6bba-4560-b843-54daf9936306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130c39d5-f87e-4320-a1a7-4a0b15bf8544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a254e02-f26d-44e4-b79f-2858f926109f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaeba2e-f7b1-423e-847f-8e4682a9e8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c230af11-517c-4179-9d04-a4ba2921ff56",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb14050-1eed-49db-a250-a474b98c0e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6e816f-e7db-449a-b978-eb0e1e0f2dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a20d4f-9b5e-4539-b2f6-bbc57edbfb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee77d796-8614-431a-b652-6dc5688a9ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f281ecc0-6a64-451b-be18-ba53ff022601",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f06a315-f72c-43fb-a336-2f7ac30c1e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10815f4-faee-443f-b456-1d4c4c90a66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1dd4fd-c127-45d0-bfa4-f3096388f01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5edaa476-4cf2-4f7c-8b37-594e1ef0c80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a10fb8b-991c-41e0-a768-08e6ac2c1b70",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a0805c-eb47-43fc-980a-9ad0bd7e6248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35655350-a1e5-4ade-b978-6eb1c9270950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d571ef-6437-40a1-b18c-032b14bbeb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "598c2c1f-569f-491e-a682-11c811b31f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264aeaa2-13b5-46d0-8eb0-527a210bc120",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db08ce3-a8f4-49ec-881d-c13a274f0acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcdda28-97e5-4391-85f0-fb7517430932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990aeb5e-4a4b-4c91-be74-c63b8ca5a2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12bad781-4f2a-454a-b198-ace851c58cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e20a683-b521-4b69-921e-6d344815f683",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f631ffed-ec6a-4f80-bd8e-0a96c7f6117f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba84976c-bea4-4c07-8fde-dad780c59c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956e0af0-1c60-427c-be24-ebc42443722b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ff3553-0ea0-46ec-848b-d7abeb856d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa1db47-7da2-4530-9650-6492e6eb6cab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d943d7-40f3-4745-bc14-805d370cc143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f6912d-9e3e-4e7f-8395-8c70d98e1f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ed98c1-4903-490a-a0c6-6dfa52cb4fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d01760ac-29b1-4f74-980d-fee4ec55a585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca398fb-624a-4817-bf54-1775e61121b5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf5b45f-f64a-4bed-a983-dfa3af076d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416e65ba-43f1-453a-bafa-c005ca6dc19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2acdb03-0fd4-43b4-944b-6c9a4294a052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c37ae6-4f0e-4723-a4c3-4db0aa5ca71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85841f30-2a2e-4c80-a970-64442c98ce8b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89a4d6f-5b20-45c3-9f49-c333ebfca343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d2bc37-e060-435f-b7e0-23d8c213ed17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc4bb15-6227-49d6-8393-364c285a7323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f9efa2-8ae6-462c-9635-d67d8978a257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cad518-7d20-425d-a419-300ff7f3608b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a398aaa-d976-4f8a-9781-ee9340be45e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcd54a4-1ad2-4145-bfe7-a6462a0e8c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24319cb-05fa-4635-940b-174e031d8188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d69af3b3-e1ae-44f4-b790-f572fedeea7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6898a322-116a-47b6-a3a7-d1007f4550a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ae7d03-2bd0-4700-8cd1-9ee3f9181004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ecfb9f-6762-4784-ac0c-f5b4220d7cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6fd180-86d4-4b04-b8e2-1fcec1dc48f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84f9f77b-536c-4ab5-a788-ada3d58c1e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dad18a-6390-4f25-a727-d2ddbd370ea5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89159998-f4a1-4085-928c-268d30ccfc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98b5949-c1f7-40b4-b6e9-d0c22d0a6f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9a2d3d-b948-446d-a37a-f547449fd810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1afca67-31ba-4e36-a943-1376302f5450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd11b80-c6c1-4489-b212-5788d54f0242",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68318ff-3de6-495d-add2-d50ba351ced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389684ff-5dcb-4a9f-a94d-28ffc1ee3ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a2d687-3b51-40ab-8c6f-87f02c485394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4da8231-d793-4cfa-868b-bacf941dc208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950deeff-1d28-4e1e-b3d2-814167e8fb51",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5166244a-abd3-4142-b9a4-dec056d62147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d6330f-dffc-4dc3-a6e6-8275e0d579b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d249591-a600-43a3-85ed-871b06a58afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28ba5a8-a02c-40ce-93d9-5c30ed6b90bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4834f539-ffaf-4291-894c-afe41f04ab2e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90139a7-bd0a-4491-8517-b260092eb166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ab849f-97d1-47de-bf62-bca6facc1270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f984f10c-fcca-4f4b-b4be-774acf9105b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff8be03-f4cb-4c1e-b2be-332cc5995810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3fb951-5e0b-4d01-b4b8-d3d26088dc80",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0f5181-763a-45d8-af0f-926245eb3d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb790260-f821-40cc-9d0f-5c2e9f654cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f157fdbe-1964-468d-a500-f05661b3743c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc691950-f930-425f-b7d2-51a33943f01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df68216-459f-42ff-b787-9f5bd03adb3e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9791aa-ee9c-46ed-aec2-843805b5545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b793d41c-22c4-48c9-baeb-45b2d2f8107b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db79342a-45bd-49c2-809a-ecfaf2a2087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b870e5f9-7089-44d3-b669-c0d10bd5f693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75234328-726a-4078-9e9b-1bfd60f3d6bd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188d9029-c4cf-4d27-936b-03a1f3f14542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6317dfb8-caeb-4245-85f9-66652fc44d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c3da86-f057-4f55-892f-07e34633394e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7826a4-e00f-4fcb-b0cc-83c1630d3f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133a3c46-881f-4d99-992b-84803e337576",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ff6b0c-0594-417a-af3b-dc7caf56f37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41661272-0553-4087-b7da-0dfb70494fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99df5588-afc7-4592-9025-ec2e56044314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb65ef7f-34a0-4104-968b-2fcbf32becc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9c2914-5853-4bb3-93bd-07b73601ce23",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55efedc8-3a5b-4158-bc19-851ad47839c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661695c7-7015-40db-9bca-153d78edecfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1aceaa1-86ec-4215-ac6d-ea45976fa016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abfd5fd4-9aa9-4410-8b39-e736913edbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3776d3c7-4619-4b46-83be-3221bf2a38fe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cdd320-e782-4ccc-8d08-a16c408a0be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205bf5b9-6a75-4e5c-93b1-7ba28ad5e36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38360d12-6cd1-44e1-9d2b-44e594b11528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6bbb33-ec7c-4431-a1ac-100a602728d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46261272-2c8f-411a-8378-2098b71209d4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a883b1c5-74ad-48bf-a595-91e0198e4656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decec6f4-d091-4469-aac0-c0a59d0ce3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5380e6e6-2c1d-4682-af7b-190e7ee352e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d2ed05-a1cc-4821-a603-a2ae77281f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf253de-dd7d-4753-a3f2-d46a3aef6523",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef34381-e104-4072-b476-e8deb3e8c085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0794a0a-9555-4dbe-a9c2-e7f20f2d8979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d2ff3c-1a1e-4748-9037-1418b163c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b0289c-5fe3-465c-8420-d7757e720c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943e2758-a92c-40a5-b038-d8c9975f9419",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd4806f-3fa7-4170-9d9e-4b38782c962a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b92f64-e787-4614-965b-a74bc3afcf9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a498f7c-2ea2-4163-b85b-8f3ab1f3b690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b974e369-d283-4f58-a2a7-347c84aa16e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161cd2d7-696f-4e83-8e48-a69e3c1134c7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0365ac-f5e0-442c-8d3a-df74c404a64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fd7c56-f51b-41cf-8e79-6b28b0879a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd11b97-6bd2-4764-b14c-a94ed89f56cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaf4cde-a47e-4f9a-9f84-1cb1b02464fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfc1bbd-d9c1-4f24-8cd2-bfd05c20a8dc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb174b0-3077-4a7d-944e-952c87c10d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03478cb0-f3f7-45a2-86e2-2513f2f0af44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd37890-5b6c-49a7-a7b0-440a03dd8bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9ec97c-361f-4be1-8f58-582f1b8bd294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2331776-0afa-403f-af29-763662b032ae",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd5a026-e754-439e-adb0-0a42c088c6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6f91db-f9f8-4744-8db2-ab0311a65967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186ecd7c-6ca5-40c0-a246-9d5574c7ddca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fec56d7-47e3-4a7b-a774-d4a4266f3bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e151ff-a773-4929-b7bd-db9ed890244d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3710e082-5371-4655-9ec5-067733e0d9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be5ef7e-3a50-4d9f-886d-515653e140e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbd9cfc-93e8-4290-a82b-8408f9a93fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f37f2d-7a97-4fc1-925b-5305dc552c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa91587-2500-4151-baea-74074fab0ea3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb40fcc0-61a8-4005-8ef2-794033cf0bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9268ac29-1543-4d61-a9b6-354aa787be8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2690b5-528c-48f4-a712-f6e921ac573c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "265024f0-6bda-41c8-8444-4ea5ef0de3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3d7756-be81-4407-8fdd-ca5e5263778f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfc7de4-8421-4eaa-8644-6c72b2aecdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9548b8-1790-4129-bb00-a591567bf572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bf9078-e517-40a9-a612-790d69b23f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "183f0312-4fe5-4817-b30c-1126d7784dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad979f2d-4462-42e1-aaec-fbf501ebfac4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1262e98e-4479-4159-9d7f-2e111b96e116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f772d1-3e1c-48cf-99c8-16a56703b6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643b7385-67e0-476c-a20a-a80eb27988b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7552f9-823e-40e3-872f-fdcf3f896a3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8be135f2-a674-4266-a132-aab4302eb1fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70e06f4b-5dc2-4d8b-a46a-d35f52299db6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94bc85a-a335-4254-8b0f-c7af25a7ca32",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6e22f783-9074-4cdd-afb5-a51fa680e15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af00199-b5a1-46dd-8287-88eefb502546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a5d9104-5bf0-46ca-bc91-4717ee072d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db60ef3d-73f1-40f5-9912-4a5afe43a1eb",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c7da35-6704-4c59-b8da-43f005ce65c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "97a0070b-2342-4891-adfa-c84f2df9678b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb192b7-9190-4768-a419-46252cbd8b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe21bf29-9338-433c-9d59-a0c606b7f8e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1767655d-9ed3-4cc7-9c98-1e6216dc3339",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9d45874-9f8a-46d6-846d-aaa441c077bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9d1a56-f27e-4c91-abe8-7c6a2c87e734",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "330472c0-c155-422e-a4ec-23ceeedf64fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d59d684-767d-4aff-944f-97d31ef0db1a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d7dbd57-1cc3-40c5-9ad1-2846cff71dfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb3684e4-9607-45d5-8ebc-5213455823d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acb44127-0176-4c65-a2f3-d59253841a1d"
            }
          }
        ]
      },
      {
        "id": "e99e7aca-bb32-400e-b50f-f9b6a5d37526",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "71e3c13c-92ac-4715-b8c0-05b818530eb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9d91abe-5872-4f00-9d7d-fbbc41a821a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5be06dce-c4e3-4d74-8e5e-e0cccb36b4d8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c111773-2606-4336-8a5f-514dc4d000dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0080b2bf-4717-4816-9d67-58f315170353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15424311-1c6e-40ba-8b72-dd2f81ef6ad8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f757a379-027c-42ec-a01e-4097c16aaf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96f2199-9072-4f00-a853-9e3d25b467c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e743bf1-a8cc-46bf-b6a8-8036d92ec262",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3bbd69-ea83-46ec-a2fe-4a86e23cc1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe54760c-a96f-4480-8cc6-2a47dda3674f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0ba6bf-b76f-4a21-925d-455052bc2067",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7397446-4fd0-4c6d-a5c4-1efcc11fb2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93ec373-2c30-4b72-81dd-381b66cdf9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337f168b-3ae5-4c12-a9d6-b52782468102",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cbc674-f931-4df8-a1e4-8b269d19f5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42da73a7-0e4d-44ee-b1ae-032e5261e2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87774fc-389f-42a4-9cbb-e0e01bdac639",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f87181-ed85-4563-ba68-0ffff683b405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f88ab90-831f-406e-abf4-4c5c8acd9b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7152adf-40cb-4bbe-8371-a74960e1df7b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba3ef21-fa1b-4acc-bd3a-b97ad6456a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d0f966-7ea5-4b8d-af53-4568b28da01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dfd778-b7fc-4001-931d-e78135d09c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9ad9fe-fec4-4b0a-af81-1cc080ddb9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf50dc7-544b-403f-9d2b-52f6080d8ea8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475343c0-b584-4996-9d7e-9d51d57f0ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463ad341-2486-4169-ac9b-f705537124b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219b649e-c061-464b-b16d-b8d9297f9285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bcec98-f937-4a5f-ba2d-58c75beb768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a462bbdb-59b5-4578-b0f9-ba39db429d84",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db6a799-52b8-4f00-9a75-41a2742664a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e539087-4e74-4417-8e6e-e294e761f686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c4def8-c168-46ba-b0e1-f2c6089d492d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be17a384-e965-4845-9741-24bd1b766772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d776e9f-62ff-4ce4-8a2d-fd49a73b046e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c13a01-4174-44a0-a774-dfb9951ec8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e4ca799-4391-47ba-84b8-24b3b98b322e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed86a5-1b49-4889-bec8-d08abf55c4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ee0b33-b72a-42d2-a21d-78e2745a8e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d70b6af-64ff-48d9-85ab-40bba407e947",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884b167a-98eb-41d0-a2cc-dded20d6a902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3a87a3-3175-4e15-8cfc-ac9fbb865306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4bea53-ae4b-4cd9-96e3-1c07c8239941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2fd7c5-8e4c-4384-99c6-d3595bcaacf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e81310-109a-4c91-bf13-1adc16596f9a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3f6c1e-e05c-4724-a3f5-6d1baeadfdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f0b323-0e33-4fbf-bbf7-dc557fa322ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30203250-7d21-4ded-b0fd-d882d5e1c8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b85335-118c-438d-88c3-ee30d424354e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb99220-8ef4-4ef1-8718-bf833eb578a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9223f244-2439-4554-87cf-3d527260e4a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7c4045-9b26-40ed-968b-f401066cd3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5411a9-ff0e-4bdf-906b-05cd44689b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060849ba-d94c-4a58-9872-30b7db9bbe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95454f9-1200-442f-9846-6b7ffada730b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26558ebe-b921-495a-8f53-5fd14b95ec43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed944a2-a334-49f8-aa69-c739074ea2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4316d4b-9f2c-43f3-8f87-9b0e6e8545fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1243be-bac0-499a-abbc-73987a3d15a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97c4c71-96ab-4b04-816f-8b11b8d56efc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78622928-50d4-4e7d-8d16-47624d6c3774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f04c6a71-5155-4305-81bf-5ed0922d456b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbcecf2-a993-4374-a422-3c90fd4d6bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6625b9fd-caba-4d7a-8c0f-d7ab675c6e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010c68e6-5a2b-44e4-9856-213e3dd5b8f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72ddbb6-761a-4d43-aead-ed8e659b30dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df57f7f-0f69-4f50-9769-d4656228a5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7901396-89b2-42ec-a8f6-31d2aa127874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c19801d-aff7-4705-bf37-96f46225258f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81db685-5a20-4895-9e36-04adf9c91a7e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968a664b-3e4f-4f2b-a16d-a9902953807d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc86e9a-f5af-4218-8935-a8698875bcb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87bebf0-3cf4-41a0-813e-cb37a7944e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78d2ede-5ac0-40ba-8879-5b2d30531482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b80f4f-bad5-4606-8b72-97e11b34fa3e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed3865b-3872-4a70-bf7c-c642e4a3ac2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f3666b-20df-4afa-824f-5dfb7333b5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebba79a-3a67-4740-b6d9-029c3020f055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662bbcb8-c33d-4f0c-bdbd-f04141ec6d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f6be46-5f90-4b81-86b9-658e729c230b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737f28e8-a22c-4fb2-9997-6b2f7b7858a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b556cc7a-f0c2-46fe-8fb8-7480b3babcec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b219904e-13ac-413c-b4fd-1869eb8342ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49866938-ede2-4814-9916-d5367f60aaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92d17a9-ef3b-4c0a-9ea1-86f3c1278013",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64b4e70-8538-4db3-b62e-6893823468fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e8d791-69b8-4b2e-8917-8b3f31885f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad09a7e0-18ac-4b82-954a-ccba0c51bc40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1436df-5406-4437-bdce-d2847f114049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc04387e-b6fb-45df-a023-0c1a74eaa32b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71776a82-73c5-4367-ba79-c9b0c12cade0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15ebb92-f8d1-4293-959d-ab112a445176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc670fe-da3b-47e0-a2d5-df816de36bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6d348d-3479-45fd-be34-4249d09a30af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce0e9d8-0cdd-4ab0-a226-f556b776fefd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f432d734-ed6c-421f-bd59-618d767a38ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecbb551-74dc-4987-ac25-5eba941a71e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98807bb5-b8ab-45e0-ac6b-48136c4907ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3317a5a4-8dc9-4ee6-badf-2f600e08201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dd8a6b-ada2-4580-94cc-05ab50a0d04d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878a2c52-f02e-4700-975c-9fba3db90a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eefc3c8-4333-443a-ba0d-e4223f39a36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611153f8-e2f8-4e4d-bc19-d10859e26799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78310f7d-2a2d-44d3-bb6d-b664816f473e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204dc57d-0cff-4a49-913e-d82fcb6324e4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b136926a-291b-4399-b9a8-84663445cc57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0010bb-3d4e-4f25-bf2d-4949cb88465b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bc6d1b-63cd-4d51-a465-f7b2fa045789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5413b176-47fa-4115-9f8a-77868e900c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3bed4a-4e86-4d92-bd9d-1082066fdd21",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a137a6-a24c-4e5c-873e-f06bc154845a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b657e8-df6d-4a9c-8437-67cc8a08e484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4362ed1f-dbe3-4c9d-8fbb-67af4ad0ec76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885143cc-d13e-481a-974b-0011d86887ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df13e25c-c31c-4cbf-b681-0cb8f381ec54",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345515d4-a0d0-4b35-a467-bc51fcdc485f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c43e142c-bdc8-4141-95b3-a96d36262c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01388c4a-5715-4c40-b090-a67ed5d6ae67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9eaa736-059c-42a4-beed-73c3b7f8d983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b89c69-0eda-4c26-9ab2-6c79a1e6d2c9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6deb28-6740-4551-8355-933c749bf441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0454a61-1385-4364-a84c-1e8f481cea97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa47aa7c-3250-490f-aa84-edb19f5be2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea303ac-1028-4c18-b529-27c14539e974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39945f1b-9f61-4287-a088-6653af268f41",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68de130a-b929-4324-9ff6-80115a13e4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e535b7b7-428f-4497-be22-15da596ebde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e4c764-d2cf-4b19-ab6b-565761320e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e056fe-bec7-4662-86a1-65ef3b1b1129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98c2f76-3ef4-41fb-987a-8775254eb7a4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e39f7e4-8d34-436f-9a4b-55a3d064b52c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d467fa-7894-45f0-9eb1-565829136d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b262d8a-3d82-4b46-9fcf-2209f8b32eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8e975c-4bb7-40d4-a3b9-925198776b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514e661c-a20f-430b-946f-eb0ba179d066",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f91dab-d6c8-45eb-841c-0e131995fbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3d7757-1fb7-4d37-8543-9e130133d494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603494ef-fac3-4cb7-942a-821f014ae49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66371b19-ba6d-49bb-ab23-80c1e5146fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb04da42-5c1e-4c1f-b632-516fc9b3b84c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a286536-2aae-4fd5-bf1f-2382667cd2b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8412edf6-d142-4d9e-a5bb-1e51cc87a16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d70d3b8-04de-4358-8141-282115231b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65059f8-d071-4554-8bbe-b664f3510d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6f2a65-6e7a-4843-a123-c5b64f0c82c3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c40e5cd-9a0b-4fa3-b4ee-fdab1cea7768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b59280-f063-4e8b-bc14-c19de3e69a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaea4ab-b8aa-44a9-aed9-b5af7c5efd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4492c28e-5486-4854-9a74-4b4f1ce7dc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d784f9fb-159b-458e-a3c6-6a866fdedfb9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73e5207-63d7-4406-9c8c-a681e272eea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130f0f63-fec2-4a3c-8c22-2d1c7eaeca33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad9a39d-e3fe-4b3d-8d98-861a68c8ccbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dccc9e2-a763-4a3b-bb11-917a32e1138b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d432c5-b72b-4753-ac1f-d7c5ac2d1918",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dd26d0-0897-4c61-893e-16e8e66d31ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7b4ab6a-47ef-41bc-a5da-9e766ad51085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d749b51c-4bb4-4f90-a888-20d352c06f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279c9059-811d-4b3f-a2ba-ec5cf2ccd9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fad0e3b-dd86-40db-b6ad-d062abc9753c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af64eb9-d4dd-4c92-aedf-0ec1e394f002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f89a7b0-aec6-4ffd-9cf6-32570d5c7e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3966cc1c-e8a6-4c04-a4dc-75f412e82ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ccf822-7f31-40bb-959d-7754fa78dfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9903d0f-7e96-4ebc-b399-fd07470b0853",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc781fe-872d-4979-9d8c-e0df4f4035f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ca2a6c-0976-4b22-b493-d0194a89f5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0462e0f4-584f-4c4d-93e7-de4863391bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab93457-77ff-425c-8916-e697f9fc6561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe39a31b-520a-4c89-8543-07c60e5d6128",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e8ed04-bd81-4a6c-b76d-4b5352cf6f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce656f05-2d39-4192-bbbe-5d35b7239e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d967e32e-962a-4bd7-91fd-6960f0741837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b0818b-9fa1-4b8d-91f7-1c0f49bc64c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e271799-95dc-403a-8086-0c8859225b22",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1984f6-b416-44f7-b89e-2c61f86d48bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a8e84f-d78c-45d8-8b95-2dcb5b629e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b1e7b6-5df7-4fef-a2da-dd6a7943b2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1957347a-723c-44fa-86ce-75fe5dd11af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e48cc6-97c6-4bcd-8919-7da61041e684",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c5d875-592a-475e-a59f-427e4debb06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5d2f84-5df2-4653-98d3-9eed914f2a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6620e1e1-e764-4ee9-9cec-644e47659319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8664f7c0-72b1-41b9-af0c-37f4919028a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973b8a17-e76d-4eca-810b-81cc5f440e7d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb53389-49ea-4047-864a-5025fc10342f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6195bf16-ff5c-4c67-ba1c-5388841747e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baee38ba-c5f7-4b0e-9e30-a950a1d1bd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ae504c-a859-47ab-9008-f6ca9057d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eefc54c-607e-46da-9e82-e62c9166a6b8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04acbec7-dcdc-4aea-8cb8-d765dea5f17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b20d26-8159-4c14-aeca-9be94450547d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a51d3b-76bb-4548-8885-1cddb8a25c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bedeca4-0bbd-446c-86a5-e3267ca7f1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4b86d9-cba4-45a7-acfa-c694a4ebff8f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe14e38d-c21b-409e-9978-d81cb6eb4af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5283b1-c7b0-44b8-a905-bcd7702cb437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b471864b-cba4-40b8-8c90-810c3b498025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3517f547-4bd6-48c2-985f-1efd96d59f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a1220c-9f16-4d4a-842d-7fd2b4194b47",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b933225-3d05-4cc3-99c3-461402c9de8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d9e019-67f9-4982-8591-1dea50d63eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f9836-260e-419b-abf7-560a25b20b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283ba9d8-1585-4a65-9cab-b5e754de5fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f714bc2-f23b-467a-9475-8c72da0a00ed",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f8d2d3-8d2d-4066-bce1-15f720b2ee7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98e6912-8d2f-4497-85ec-a22a0309d364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd38540-983c-4c94-aad4-c736e8cba3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cdd229-231f-4b66-885e-04db3162f892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ad3985-f140-4fa3-8433-cc1c2fdcedb2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e007bb-23f1-4fb3-bb09-82576c235312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5bc19b-5f19-47eb-b48c-a177c97b21b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3d89eb-3af9-4d95-8c9c-135acc7bab17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff42eb3-bce8-4eab-b54b-d38a367ca3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01902d92-3c77-48f8-9457-4048fadd4906",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c58e634-6bf3-4072-8926-80dc3bcbc262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba7e88d-cd17-4b8c-918e-e2177fae478a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cb6ef0-dbe5-4aa7-9cf9-b8ebe90d5b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12ca5da-f706-41b9-860b-ee5b163da4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d735f0-9016-41b8-878c-82be9220b929",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b269e4d-2d48-4a89-9586-a4d534dab9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b113e4c3-46a0-4eab-8e4d-818100d7359e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e9b49c-8157-4abe-866d-0328922c05f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78e6f34-3e74-48e6-865d-c9dc34ff985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862bae31-fa2e-405c-b17c-0a52646fba02",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514d14cd-0b4e-436f-8411-8235cda82403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0117f4-52f6-409a-8758-418599dc2fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2092eb9-4304-4ac7-8d77-8fd016cd6473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfeaf0e-6b17-4d45-8a37-6b30e5b0e009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee07c2a0-7e0a-424e-87d2-e21998299037",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9577ca3b-8181-4ba6-a757-284856d68284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa47bfaa-fe74-4784-b676-80b7c0243c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf76714e-66b1-4517-86c0-c559774d323f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02de609d-1d7b-4abd-831b-7055cb110020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c548c9dd-e652-47b9-ac06-17ad7b0fe0cf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21343159-cd25-41ca-b423-9d7c471a9b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20766c5b-fe14-4bae-9664-56619c46e168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cf432d-1508-4d9a-a150-a94005349342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e429b84-5c46-4aac-b4e7-bb1e85dd8deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bb3e66-f78e-4b52-bff9-5a37ec54cbf8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e568f73b-5dc0-41a7-9ff2-ff9c4a76a113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f63280-d4cd-49b9-b4bc-ab15fa6bd0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438d9d17-299a-40cf-8043-5993a8b4552b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cbdafb-2f26-47c8-8c63-ca84763e62fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f95c6e-d701-4307-aacc-84d2b3173435",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba310398-fefe-49e9-ae84-7ed6501ec7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a9313b-0190-48a0-914d-a9701ecd0892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eb7290-3f4b-47b4-8443-c2f9b06e02da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1cf72f-164f-413c-8827-aa5fa1b8d228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e997d5-5060-4066-b4b7-f072a947bd72",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1ab8dd-ea99-428b-b9c2-126545564946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c93fb6-66a0-4ff9-bd06-6f8c412e7afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06b247e-ec37-49df-9d90-17b6390cae7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd7154a-bfac-484b-a6be-3c3a71f5aca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10324903-7929-4397-bac2-9d929508a1ff",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00bc545-b824-4a14-be69-df2afdf8e2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72c393b-9807-46fd-80ab-cbc2ff03a1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3111a77-f53b-4da7-bd65-1ffa17035cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5f2758-0a7e-4ad5-aa15-648d4fbea377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba74a4d-0963-4459-bd28-935dc3cafec4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd7b5ae-76d3-468a-bdb1-2019f262170b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3877f1d5-17cc-4d79-8a6b-f3ca1abcbd0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf26364-1ad2-4050-b29d-4e9424bdd5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab214524-fe70-404a-b15d-13de4bc5f0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4b87dd-f009-495a-98ef-69dadc36200a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86585b14-93fe-45ab-a217-37b3033d6fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8faa276c-7061-462f-8e5e-467d3c212e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acd21f0-1cc0-4bda-bfcf-ff97b15693c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7315754-5114-43cc-9d4a-be7e105de52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4c332e-31d0-4c22-a94d-ea4a79836456",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a480318b-98d1-4291-832d-03d48980aa5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c7c01d-e72c-465c-825b-a561a5ba19c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7cba4d-a5bf-4b84-8e2a-08ea0aa8d2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b392c5-7f54-4f36-bb20-8decb6dd9b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0674dc8b-1be5-4c02-8d72-4637b3a4a553",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75991980-4944-4644-9ec1-3a3f0ac3307e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1120df5-cbc3-499b-a7f7-6299925ea146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579ab9c2-b3ec-4fec-a9ac-7d24436b3d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9539fbf4-3455-4170-95e2-9c8170f15345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca54f7be-069d-4558-b634-1c03c62eafa0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d094e751-9e3e-49d8-b3cc-f0fa6c21a709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8009c4-e1b1-4514-a2c2-e25525b5a078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba19f0ca-4410-435a-99b2-ff9c54a3a3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ca2df2-c15d-4b29-bb8d-bd3afb296dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20218faf-236d-40c5-90fd-50969a943120",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e781ab-2be6-4d43-8fa8-feeb042e469a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404e7939-bf4e-43bb-b84d-6e2a75d4c8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd2f50f-02c7-4a9e-866d-3afbe656e446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb79b8c3-240b-4848-9e5c-d631005b7f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c8f886-1c02-45e1-8f58-f22192afdd43",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a4b5f2-eece-4e8f-8073-2c9257014161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18a20dc-339e-45b1-bbb7-7e3e0b621003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304d61bf-8231-478d-bef3-dc2cfc3725e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd8f6b6-b168-4027-9693-292fcd6e71ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b267a1d-2190-43ce-9614-3fea0ffc5425",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49dfd30-7893-4275-99af-3eb487f85135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e5fda3-e4ba-4017-a353-289b2acdc5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708995d0-3200-4ef5-a3e7-25a4a7ca2d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fb7a04-af43-4539-9fd7-a10352d56f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c15b26-b2bf-4ddf-b9c5-9734e7f97369",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2030c9-d096-4383-82ee-b458b76f77d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da334e1-a24b-43fb-8997-b4f5a668443f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cbb203-8557-4e06-a326-e991a4c9ff36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03978767-9311-4c4f-8223-4014afee785a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212c54cf-7825-4cd0-bf65-eca15179d69d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21600b9-d6e8-4406-b79f-8dd04273e1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0755cf3-61a8-4046-a1ea-8bd26900331a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceddb4ac-1df1-4c75-b3c6-d83b40b742bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6d5a35-5004-4f1a-b68b-da0b6b8c24a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76045367-299c-4480-a085-cc498981653a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a99dbb-fbfa-449d-b3be-9c4ff9407be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61742f3c-6fe5-450a-b3d0-e9474ca5ee1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35762a7d-90fb-4005-884c-9097dbb3990a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e056a4b0-5415-4d93-998c-7ef2b94f2d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dd6c5e-dc7a-4729-a1c8-d5f8b3425311",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3352c5b-524f-4c3f-a878-9d65e582e90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e410b8eb-3196-415a-887d-a11fcc51c6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dd42af-88bf-45be-81c7-b50cefee240e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e1455e-ce4f-4733-ab1f-fdcb39d56d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4404b8bb-3c35-4a1f-b0b9-c65a9c25fd4d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36902d71-6498-46b0-b1d3-eea4cd3fa1b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591f18c1-dfd0-490a-8549-69c890f5cb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3a50b8-dce4-44cd-861b-7b666eb8834f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e0d46c-7605-4da1-8f3d-28d9f896edba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2443c9b4-6d56-4692-a15e-778fe8c1f302",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfad6ba-55eb-4534-b7f5-6195889ebd7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff4dcffb-4704-4725-80fe-e30368a5bd50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48860b6-f1d8-4e8b-84f5-111f10254ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0dda48-e6c6-4442-8c4d-aafcd5b97489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d8fa60-d9c0-4fe0-8f51-d579002029e4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfc76e7-0397-45d3-beb5-20e2e407d963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6840902e-6ef3-4a95-bee5-fcd6c1bfbdc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858383d8-ab8d-48ae-a562-3a606c0839e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b94c789-1c7c-43c0-ae85-7056fa94e48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2f817c-b9a8-48b2-9916-f7f573cf8ab1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9289d60d-9c29-49ae-8cd1-829213136ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5ad582c-836c-41bd-9df2-1192c2987371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14221b5-d04d-47ee-9710-6ede52495a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d66e1a-10a4-4cb1-98b8-393001677dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba8632d-2f8b-4f5e-8746-7cccd6f90521",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab5a99b-5d25-45d3-b848-cc81e680ee9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8f7b9c2-2f36-489a-b097-c07b38dc0fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54a5ef8-a48b-4611-a662-d1faa1dccc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b7524d-6450-4de5-8be5-0dc03e5dc408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bdc744-4482-4ebd-ae39-d46a3a5cd4a4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfa041b-de17-496b-b3f2-53a867b3cdbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29489de-ee5e-474d-99ad-f7f96a65ab57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3133694-4a61-48cd-9d12-272563a424f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a81278-8f11-4636-b7d1-ac9841aa4b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3605a023-e145-4c9b-a7df-78c41601de0c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90d855c-3575-4b61-9676-2611a4592e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8e9071-da7a-4d4f-9eb9-29e0e28bdcb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366602da-30fa-4bed-8e20-0d8b674f7d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0177fea-621b-4df0-8519-d2a5bc6c02d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804fc278-6386-43cf-bd89-e812f0615dca",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d986c56b-5272-46df-9a36-ab86d75a805e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682cadb4-f559-43e9-8f9b-de6902763c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d1d83f-ecf6-4abb-bfa0-faa35237fe79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f0c7bb-7b2c-47c9-9f44-0b4bf9c4ee0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950c8768-9ba3-40f7-850f-3cd915e1bb5f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f03d0d2-d2cc-4a8c-b1a1-e277df62197f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f4a6d4-0340-43c1-99f0-31fd0491ba88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b45396-e9c8-476b-94ae-918795e0392c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770d65ea-01cd-45e7-88c2-6b3f3bbe2d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9451bd5-b6eb-411d-890a-f11e13d058fa",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2007ed94-55c8-4610-b023-059cb4e8f2c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ede4e32-1c4f-4116-9a99-afeeb53a7325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bac363-c65d-4251-aa23-7549f5b098e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a8bb93-8587-45fa-a11a-95da8a96caa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f46eda-ee4a-450c-b869-a6fea970d481",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576dafb5-1f03-44cb-8280-dcdbf3c7ad3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d839726-4fad-4c21-8668-9808ccfb1612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8c0e70-98ab-4cdb-a3bd-03480d5f0c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7007d55c-e38d-4ae8-bce2-94c9a5b1c438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745d9406-ef0b-4cd3-8f57-464c833c1666",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29492ec-245b-4e35-b1b0-8e524507a30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a643c822-b576-4f73-a84d-1823e783033d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82df43bd-0b2f-410b-b09d-07c38f507607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c768c63-7d60-430d-af47-a67f646155ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74327b91-2dd7-461e-8927-c9c31efb7920",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c9512a-19b3-4eb4-9e75-fd27985b9dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3228949d-613f-4476-aa76-e59a97c54f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cc96f1-f500-48e6-96b7-6bee00d37f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534c7073-dadf-4a5c-826f-7efcdf85f2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc625c50-f08b-43a6-b43b-86803bc30182",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772f07ec-dcd2-4dc6-a04d-079372e7d08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "458c86ce-18ea-49ef-a835-4b54f5900a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092e313a-020a-45fa-8e0a-a85439bfd03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0ef710-fd8f-4f89-aef4-8ee1078294e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25367b1f-8c81-4064-b535-7eecd63243b7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738cf6b2-c56b-4f77-9cae-9bf1b6f98bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3b7787-f244-440f-8f15-fb8b425e2de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae20cef3-750d-4f6b-ba83-c54e4d8b17d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cc7642-2cd3-43dd-a4f2-ec081612cd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a3f221-b933-4c40-8801-0597b221260e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39034472-b4e8-41f6-ab75-f469202cd6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc9bd3a-fad2-4b7e-ac82-ebf438e94ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ee3007-925e-4169-a83f-3304024bdf7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b981a2-0c74-4ec4-8116-0d539346274b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7471ac1-873e-463b-b4bb-5b4a95ce10bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc4a2a4-2a61-44d7-94ac-592ed2c44435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1140c35c-15f1-4d97-bf47-77abaa2d683f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee39a4f-eac1-413b-a55f-e588453bc644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8f253b-5044-4d43-b49b-f828ac684787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8ba0f6-90bf-4e63-bfb4-e16eefb312f7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d11432-4c77-45b3-bc89-e4b32442232f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3394d04f-e1f7-44c6-8b2f-5f8258ea6ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c7ab46-6c39-431c-9112-d9da8fa01aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62beab50-6129-4774-868d-2f9575e6e39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d068193-0040-479d-ae2a-cf26a4bc0efe",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2edf1ef-13c5-406e-9e55-5f422fec1e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ee7c6f-037c-4a78-ada6-1cb9cbee98e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37294ef-984b-4d1f-81ba-f33f35ed5b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cbf85a-9aac-4038-806c-f434986a9849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f71c7c-97bb-4e1f-9db8-05af1665aeb3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1348a6a8-9649-4a37-81f3-d1a4f148f420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7da19d-ea8c-46d5-8362-22da423a85f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ce297f-55e8-49ca-a393-1f82e058a57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce8c3ea-9e73-4a31-b898-f42d2719d204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3161896e-6ea6-42fa-a144-80d2220b733a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d05630f-61ba-467e-8e9b-75b5b4648c1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f0ed64-1cd8-4384-a469-af4005c7c4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36442d3a-1b77-4130-9ae5-3e69c92a4d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8505946b-e91c-45c0-a4f6-22e5d5d13b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cce080-0a10-4e2b-af2e-7859906506d7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90818b17-939d-42f5-a25b-31e0908fdce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc77345-aa55-4a41-80ab-29f776e646fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b02fdc-1c88-421d-9a3e-9067ca3af6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4f6155-d76e-4361-8424-ea36a16ba48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c054255a-4105-4c66-9598-8f947018892f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b8a3fc-e2fe-43f9-bdc7-b5a020600229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebb45bd-8083-4d3e-9490-18297ed2df73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1d2191-d906-4cdc-8a9c-39aa7b4890cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0e6bb1-c05d-4cdd-9512-6d089c303cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9bbd70-cf7a-4975-b9a4-332f65fb2db3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70bae88-a982-445e-84b7-65a905c1f184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bdb797a-63c0-4bb7-82aa-163cb1e37e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a164dcbf-605d-4d68-8175-6ced218ec126",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa2168a-01e1-4013-8f13-249e860416a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a68578-cdb6-4579-aa50-1080edb319f4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d728c4b-6740-4fa4-84f5-b90459fe2b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfead125-54ab-4b04-8f24-cd78e6ba5979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9886de9-e831-4c49-9e84-04e691734ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36c0d9a-aded-4491-b528-394436f6d2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300cea3e-34cb-4ebf-a8f0-e0c5a2a830d8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc77398b-423c-4979-a2b0-169e4c573131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658d8697-742f-4123-922f-3bb53e659226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bfa0eb-c233-490e-8a9c-264110a6dfe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9976c6ed-8df8-4fbd-bb72-cfb844d70af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a233b8f5-5be0-4433-bdbb-9b90ad1553b1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef32677-fede-44ff-be72-5a5c0fdd1581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01fee941-54fe-4631-9fc9-bbdae6950854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde78654-2a14-494d-9b64-bbb76d950aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f831e8-9598-4844-a347-336cb9f106b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3637fa1a-d849-41e6-9bbc-8c3a49399f3e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e88103-f73c-4122-9410-8cbbc15dd0b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0774b9f7-f2b8-45ae-bfb7-22a4bbad8fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bee737-73d5-49e7-b95b-98978bdc7029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b744405-d5cc-4de1-954b-e30c04062765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086c33f2-9dc5-4ba0-8296-d67508f99297",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e3defa-d749-49d0-a8fa-bc286d133955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f56f9c6-8901-4bbd-b3d2-bad05fe6c38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5210ef58-1aa5-4f32-95eb-3afb34d3a514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0bcb83-e656-4030-a111-04890d339218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f404bc1c-e596-4449-9410-6d20cc8795ae",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d495d7-0a2c-4734-94ee-87464671855d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229ae771-78a8-49dc-8e6a-862216dbcf66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70340632-1a7f-49ff-b168-0df03b279903",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c5c1cf-56ae-46d2-8bca-9037cb62b9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72927083-0066-4009-ae48-293bc8929e47",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7f8453-b9f2-4d8a-8e18-9f37ee244cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14de1973-7098-4cfe-92b1-e5befe874e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e45d2b-6048-4678-b0a4-fa17e93c2af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbabb129-538f-4039-8f3e-c0860cf7c19f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a8d133d-e32d-469c-a26d-9832dd378f80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11dabd69-f9d6-4ddb-8d41-dc06906cbd53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91af9266-c3dd-4fa3-a5fa-ba23b1822a60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a36a1503-8f41-446c-8f0b-c55bd55df53a"
                    }
                  }
                ]
              },
              {
                "id": "606d6baa-5918-4076-82fc-f4bb53cca0df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb84f943-de60-4dcb-b8fb-95088940e392",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716b5b11-1f15-4db2-93a5-bbf51bac1df4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5a61f4de-8e36-40c5-85f0-d68ace802a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70ea36b-ac91-4ecd-8376-8387a2722207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaa8fae6-85a3-490c-9da6-aa4e9a4afc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b24f6f7-3aea-4bfc-a6eb-207c8cb31403",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1be80d-6585-4c39-b965-e301909da8b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8f8699c9-2dd0-4851-ba0f-cdeabc5e2cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5933d96c-4e5d-4674-9739-8a3444e1ca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c58fa16-63dc-4452-8751-4114e792d18d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91276834-44ff-400b-9fb1-f805a95f67c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5600265a-7163-49ba-b953-298c9dcc8808"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e06bf2a-0f06-407a-9d1f-8b7b4216a459",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6ae2ec0-5f2c-484e-8b3b-d9e6e2b2d2bf"
                    }
                  }
                ]
              },
              {
                "id": "c558f0f8-f621-4159-914f-dffa9aa87fca",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9fe033ea-420f-4f8e-924b-22f3c45f4d02",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a0d47c-3fa7-4e37-90aa-0c6391571179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "46df64d6-e532-47b0-a70e-f8e5b6b1b627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c3abf-4eff-4531-b637-f73d47caf1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea971370-4aa4-4495-8bb2-a38a8b61efeb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fe2cc82e-4fe8-46d2-bbdf-46b89a128498",
            "name": "Positive Testing",
            "item": [
              {
                "id": "725cf614-1095-48cb-aeae-edfffad35f7b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03ecb7a3-3c80-4dd1-8a73-d726cc2a5d9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0d6d6405-7184-41d4-b0bd-5c6bafa75740"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e48baba-b78d-4f99-9377-49a4408cadcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ebabf0d-3438-4027-89ea-4cf57445aa07"
                    }
                  }
                ]
              },
              {
                "id": "82c3cbba-4df9-428b-b604-c2722c2f6333",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b53588b-5cda-43b3-9c22-7ff401da1707",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ddf2cbe6-0917-407a-a456-08188baff9f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1c1b06b-32a6-4c28-a6a4-4b89524b87a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2051d117-1a80-4df4-8e59-84484dcee398"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24d488e8-fe23-4a90-aad1-0253ad1e29c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dd6db766-a851-4955-8405-83cc5b8352b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "418af4be-9197-49f3-b0c0-a797a8bef916",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3374b0d-a4bb-49d7-899e-7aeb496332a2"
            }
          }
        ]
      },
      {
        "id": "11447958-81a2-4fed-bfb8-7ac61e3d9415",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "53e7b42b-051a-4b51-ae8d-13dbd324bdda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da6d4b48-37ae-4d2d-b1f4-7aa8d5b44e9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "964c9a2c-0bb9-4422-86bb-570baab28e82",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57f87ef-5a1b-4afb-9690-1b467155482b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ede38b43-2216-43eb-ba08-954f4f2185f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfab4b8-66a6-47c3-b547-87fa5d417a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe705d5e-7338-4db3-85f7-6cf0eb087785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc8c08e-349d-48b8-8049-a8eea493ed4b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cae85f-1a72-4efa-a25d-0e822da9ae9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "39620d94-4fe2-4964-a4b9-72cbfd812790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7085e627-a784-446a-a1de-e98de694d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2092911-f35c-4a28-8a26-a42ed0c0b456"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b2a17ce-3347-4a8c-85f4-9c5f2a8e1a9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e25075d3-8eb7-4a72-b4c6-2dd9a724b9ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1c9693f-6f9d-464f-9fa8-8c7bf2bc531a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dd14e4d-4412-4a1e-8d9c-bddd3b0ec19e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6d71f7f-a5f2-4389-85dc-fdfd5732081e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "96a75927-3946-4787-b424-1ae4e2d94817"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36ff8702-cd01-4061-9044-a7653aa0ee54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "295bc528-051f-455d-9f16-8bb725d7a0c2"
            }
          }
        ]
      },
      {
        "id": "4dfce737-b634-4ad1-b2dd-8bbe49c7fa5f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "320e49da-0d87-4486-a17b-b7b68385f7fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdc0b568-4346-4090-ae8f-44a11a76c9a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d0f65db-6a1d-4037-b40e-62db8fdf55a1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad9d5d6-cafd-4526-8a98-880059f0ccfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17f839fc-d026-4b6c-955d-ec4899a886fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d608087-7f26-4296-b063-e191c0328ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c146fa5-f317-47a0-9ec7-4488ed179eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e31233-e8ec-4ca8-8b1c-fcb624e5f507",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90afb67-0e67-44b6-8988-83f5aac7ebf2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b32094b5-a53a-4b33-8d80-b5989f6e5666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff50445-e6b3-4f9c-84a1-71b75711481b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b418f69-61a1-4e36-8307-4cf1f483c801"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff486218-01ca-4264-8a29-2fc05612c773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e743729b-54af-4ce1-9cd1-112bda28cab2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d08d8cef-e391-4c7f-b749-c934ad8e2005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c5063dc-d52e-4f1c-9779-e14836e9bc3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12143baa-7c46-4949-a3bb-7ca19eccfd96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d90f456d-0173-4c7a-a67c-f48e182ce9a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d34be699-2877-47bb-8a6d-c660db1b2be0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcfc2319-1bd4-4ea4-beb8-0b848aac8511"
            }
          }
        ]
      },
      {
        "id": "127e6996-8342-484f-b485-2c590e60c1e7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5235b2e4-e505-4f15-a7d6-1732eee87f21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2ff2506-6406-48fa-886a-1e53e4ef302f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a11530d-9350-4b64-a3e6-0c85566b31f8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d42a01-75f6-46a7-aa24-fae5445e9cde",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "825cb601-fbc3-48ee-92a1-f126c0b43e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2794a092-270f-479c-99da-eeeccb509d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7492d55-d5b3-45de-a704-23cf0cba1d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb19cd5-11c7-4f75-921e-e3f502e59ad8",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d20a891-e804-41fc-8b18-878d3bea1eba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa98dd9-099e-484e-9f91-3214de772dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cfe2a8-92e5-4a1c-a1da-9910771936ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62be2407-2cce-4a7b-91b4-2d1a8cb9e7ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9df9872-8ae4-4ba8-b7dc-1f58d2748308",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e1a6d56-5d94-4a0b-99d1-58359d62dc37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d384f2af-faa4-4b4e-9bf5-fc4d8e4c45cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7142d969-a08f-49b2-9386-c529f488b5d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5a66fb5-6d21-4d6a-bbc8-437dbe727481",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f31394b-d758-4a4a-801c-49b2a2c01466"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fa9db1f-0e04-4672-87c5-edd8e1050bbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3a45133-35fc-49c2-a8c7-fbde121370fe"
            }
          }
        ]
      },
      {
        "id": "0d91af1e-0c64-4f09-b3c4-603600104b69",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2963a4ec-24d7-4fe3-a958-aeb628199de9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b33f6fd-3bd3-4e34-84f9-9b0044a0af89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bd1158cc-72a5-4caf-bead-baa57cdbedb2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97d2d3da-46fa-4156-ba47-3b7b2bf72d4b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76bd15e9-b45b-43d3-a03a-6c611a8a11f4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.53461538461538,
      "responseMin": 9,
      "responseMax": 246,
      "responseSd": 25.842175460753673,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679445433722,
      "completed": 1679445466468
    },
    "executions": [
      {
        "id": "1dda5332-d284-4333-a7c5-0c5780376cac",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f9e79807-2678-4368-8cca-84817ef47149",
          "httpRequestId": "d6bcddd9-790e-4217-82ac-c6df1c42d3d0"
        },
        "item": {
          "id": "1dda5332-d284-4333-a7c5-0c5780376cac",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b651b36b-6026-4ef7-ad07-aa847954aa50",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "8d405407-eacd-4eb3-a6bb-90cac364771a",
        "cursor": {
          "ref": "34b50f47-3727-4f52-a078-1ca8204b25e2",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5e03d18e-6854-41a3-bd89-5d74fadab322"
        },
        "item": {
          "id": "8d405407-eacd-4eb3-a6bb-90cac364771a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2e330268-eb79-4d87-9040-960b07f6f04f",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "94835e47-d2cd-49e7-99bc-53e08183c2d6",
        "cursor": {
          "ref": "f9fa5005-7aeb-47ab-9d15-ccabe499af53",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a56441b1-82f7-4dce-bac3-3c70232a37b4"
        },
        "item": {
          "id": "94835e47-d2cd-49e7-99bc-53e08183c2d6",
          "name": "did_json"
        },
        "response": {
          "id": "341ede54-1006-4d29-bfc5-b8c66e9c5aee",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8499f8-84db-41c9-b27b-89f6b61b9643",
        "cursor": {
          "ref": "c40228cb-5903-49bf-bb28-af51ed521f51",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "decc1316-ebc0-4fd6-bb42-31cddfc61cf2"
        },
        "item": {
          "id": "4d8499f8-84db-41c9-b27b-89f6b61b9643",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6d2ca23-cb80-4c09-883f-8bbaeaf4aed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8499f8-84db-41c9-b27b-89f6b61b9643",
        "cursor": {
          "ref": "c40228cb-5903-49bf-bb28-af51ed521f51",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "decc1316-ebc0-4fd6-bb42-31cddfc61cf2"
        },
        "item": {
          "id": "4d8499f8-84db-41c9-b27b-89f6b61b9643",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6d2ca23-cb80-4c09-883f-8bbaeaf4aed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15f75a9-5c29-48db-9151-ccddbbd6abeb",
        "cursor": {
          "ref": "f30ca984-8cca-43b4-b82d-7967500d55ee",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4701b55a-63c5-4377-8a37-ecae8988846a"
        },
        "item": {
          "id": "a15f75a9-5c29-48db-9151-ccddbbd6abeb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9a59da1d-feb0-4903-8596-dad93bf6dc70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb5b699-5e04-4a8c-ab01-213293279544",
        "cursor": {
          "ref": "c0cb3ad7-fa47-4240-a1f7-10f401a9f41a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "58ee5e09-f648-43cf-8281-09f178a158b4"
        },
        "item": {
          "id": "2eb5b699-5e04-4a8c-ab01-213293279544",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "101a8fd9-fd75-448a-b34d-8c1990165f96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27be8d4-7351-47d3-9a97-53a575854d28",
        "cursor": {
          "ref": "ce31fcdd-7e1d-430a-988d-2ad468c39792",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bf44d42c-3d12-412f-8452-d8701dba3f6e"
        },
        "item": {
          "id": "e27be8d4-7351-47d3-9a97-53a575854d28",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "781b6cd9-0a31-4e10-b69c-0ccebd69a03d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f677d12-434e-48a0-a023-91777e7911a6",
        "cursor": {
          "ref": "7e78656d-a303-44ce-a002-943664e11ee3",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "434df1e0-426c-4b7b-802a-5295c66279f5"
        },
        "item": {
          "id": "7f677d12-434e-48a0-a023-91777e7911a6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d8ded2f1-0ce1-4432-b613-74b9408932c7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f677d12-434e-48a0-a023-91777e7911a6",
        "cursor": {
          "ref": "7e78656d-a303-44ce-a002-943664e11ee3",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "434df1e0-426c-4b7b-802a-5295c66279f5"
        },
        "item": {
          "id": "7f677d12-434e-48a0-a023-91777e7911a6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d8ded2f1-0ce1-4432-b613-74b9408932c7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeaad09-62ed-4e72-8acb-ff1c4611e820",
        "cursor": {
          "ref": "0c8d547f-f350-40b8-b440-b726ee29f70a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "acdb5fcc-bfd6-488f-8410-6dfe7af7cd63"
        },
        "item": {
          "id": "1aeaad09-62ed-4e72-8acb-ff1c4611e820",
          "name": "identifiers"
        },
        "response": {
          "id": "d19088a3-5f64-46e9-bf80-4d2d1d676e1c",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d204ff46-c729-498b-bf13-79d13e1fa899",
        "cursor": {
          "ref": "91d9df77-1a7a-40d5-a094-254e69110110",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "55110d77-ac89-4ad9-93ab-ebba50a5f794"
        },
        "item": {
          "id": "d204ff46-c729-498b-bf13-79d13e1fa899",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "64909b0c-d794-4aac-bb88-5cdebbe9cb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d204ff46-c729-498b-bf13-79d13e1fa899",
        "cursor": {
          "ref": "91d9df77-1a7a-40d5-a094-254e69110110",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "55110d77-ac89-4ad9-93ab-ebba50a5f794"
        },
        "item": {
          "id": "d204ff46-c729-498b-bf13-79d13e1fa899",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "64909b0c-d794-4aac-bb88-5cdebbe9cb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aaccd12-1bc2-4229-a6d1-a92e67234e0b",
        "cursor": {
          "ref": "7a2d0f69-b736-4105-87b3-d4952a9f8762",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "427b0afa-0b74-43d5-b149-1775b0d7c7aa"
        },
        "item": {
          "id": "6aaccd12-1bc2-4229-a6d1-a92e67234e0b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9984fde8-d25b-4d8e-9564-784d7d560f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da30d529-f624-4bb0-8139-dd7c6f5de80e",
        "cursor": {
          "ref": "a60b82e7-4c06-4826-85b8-b9b9b375a09f",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "50f5ff86-1058-45cf-9dbd-35b5203562d5"
        },
        "item": {
          "id": "da30d529-f624-4bb0-8139-dd7c6f5de80e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ccfa2995-aa36-4093-8a54-6506c948c0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a00a091-e8c1-4393-ad0a-cd5a9288af00",
        "cursor": {
          "ref": "2f2fca92-5ab5-475e-9cb1-25e6a709fe62",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "986949c7-e7a9-4084-8c50-e1f7e0affb57"
        },
        "item": {
          "id": "3a00a091-e8c1-4393-ad0a-cd5a9288af00",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "afac488a-331f-4782-b949-29b033162fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b92eab9-4ea2-42f0-ae6f-7b81b09dad57",
        "cursor": {
          "ref": "20e21ab4-0262-4a6f-a7a3-e51d6f76f7cb",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "94938c14-2912-4df6-9037-b2e956b77e5d"
        },
        "item": {
          "id": "4b92eab9-4ea2-42f0-ae6f-7b81b09dad57",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2f1ac9be-c53d-4ab6-9d31-0f395eade28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cb0651-1138-4c50-aa72-f6fd636a28e3",
        "cursor": {
          "ref": "03b1b81d-fafe-4dab-9c49-5fb8566fc4d1",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "89ccff4a-9acb-4645-848f-921051ebbf9f"
        },
        "item": {
          "id": "08cb0651-1138-4c50-aa72-f6fd636a28e3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9adaecfc-d012-41a8-806b-cc60a028e190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c26469-f60b-4326-ad01-e002d82d5619",
        "cursor": {
          "ref": "dcbd163b-b655-451c-b7a7-bb57da2df932",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "99c3e1e4-d871-4e5f-a4e3-28d77819857d"
        },
        "item": {
          "id": "95c26469-f60b-4326-ad01-e002d82d5619",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f6b4ff96-3818-41d3-b267-6c18cab8e6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a9ec2c-c8cf-402e-bb91-db0a0a8e6287",
        "cursor": {
          "ref": "45bfb9c3-154b-4b2b-b029-b9b0ad20662f",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a02d097b-da0d-4d87-a8c6-d3f0d8b7ea81"
        },
        "item": {
          "id": "79a9ec2c-c8cf-402e-bb91-db0a0a8e6287",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "81a47f81-d919-4343-b084-2244d7bfd141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a9bce4-4054-4968-a706-d6ad277e0195",
        "cursor": {
          "ref": "04ff1707-1f30-40c3-a8d2-dd2b46c824a5",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7bab9feb-a32b-42e9-939a-dccaf47200c2"
        },
        "item": {
          "id": "57a9bce4-4054-4968-a706-d6ad277e0195",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7aaf5071-acca-4418-9941-b532b313fb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b8e064-3205-4b7c-a55d-02ae21b2e0a7",
        "cursor": {
          "ref": "6d3ff2de-8d58-429e-90b2-1e05e8f0e1e2",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7945bdd4-7bc9-4008-854a-a53f6a173958"
        },
        "item": {
          "id": "80b8e064-3205-4b7c-a55d-02ae21b2e0a7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d06d2600-5cd4-4f8e-83d4-d13da445a1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a4c278-0742-4b02-8c3b-f4a550ca1a98",
        "cursor": {
          "ref": "02a67621-f287-4550-ae3d-881f42280ce3",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8045c76d-9989-4f1f-9cbd-8d24e93fec74"
        },
        "item": {
          "id": "49a4c278-0742-4b02-8c3b-f4a550ca1a98",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e10e53b8-1a85-4f68-952e-f1ee288c279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc7e034-df75-4d7d-9f4f-0e4db9ad167a",
        "cursor": {
          "ref": "63bbf0ed-3c90-4c09-8918-6b33f361328b",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "612474ab-5f77-471f-afcf-90a3aa5889ed"
        },
        "item": {
          "id": "adc7e034-df75-4d7d-9f4f-0e4db9ad167a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1eb78a13-b41f-458d-be14-e88f0fb251ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973e8b00-2c75-426e-a634-d022c7115bd6",
        "cursor": {
          "ref": "013ef35e-e055-48c8-a367-00804d879a39",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a70d43b5-0add-447e-905c-d89fd4991d9d"
        },
        "item": {
          "id": "973e8b00-2c75-426e-a634-d022c7115bd6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8a609fea-a128-48c9-b299-0f2e6f5455e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0f9197-fcc9-4a86-b928-65baf46d4868",
        "cursor": {
          "ref": "49e1a982-db45-4244-9c6a-eaa1d576224f",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e47c0e29-699e-4223-8a4a-a68035c20485"
        },
        "item": {
          "id": "5a0f9197-fcc9-4a86-b928-65baf46d4868",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1162aa3c-7171-4a2e-84bf-ec160318da9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79362bfc-0507-40f6-9f13-2d546479284c",
        "cursor": {
          "ref": "cdc200a6-c5bf-49a8-9fb3-33fcebfbb6c2",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b2673560-8503-489b-8132-28ee56819cff"
        },
        "item": {
          "id": "79362bfc-0507-40f6-9f13-2d546479284c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4ff631c2-309d-46d1-9e78-7dd3c1132a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9585dea3-d046-4b91-b899-d9475f5508db",
        "cursor": {
          "ref": "8e94cd38-5328-446a-901e-011fef5669b8",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7f1d2388-e533-4f71-80b4-331bc6668498"
        },
        "item": {
          "id": "9585dea3-d046-4b91-b899-d9475f5508db",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "af6f29aa-8d3f-4330-a6a8-3801e4b7f9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88202bda-3be2-4715-ba8e-b19f7b4a2551",
        "cursor": {
          "ref": "7b78ce5c-2b25-45e2-9640-f9dc258ea0b0",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0042fa80-ee23-440b-a8e2-84bc4f3675ac"
        },
        "item": {
          "id": "88202bda-3be2-4715-ba8e-b19f7b4a2551",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f374c3a4-2e44-4589-8d10-a9ecd4a0bd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3e4918-2d8e-4139-908b-a9596d000ede",
        "cursor": {
          "ref": "410feb05-bcca-4cc5-82db-c81850f01f10",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5c4b2376-e944-445a-bcf0-2d701748a858"
        },
        "item": {
          "id": "fa3e4918-2d8e-4139-908b-a9596d000ede",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "471eabce-5a64-431a-8491-fd96b648641b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc29e84-2e0e-45f9-8e02-9c7bfe662b21",
        "cursor": {
          "ref": "8182b065-d0ef-4cb8-9748-2d9d8cfdb214",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8540ecc1-a552-460e-843e-f481b2de7647"
        },
        "item": {
          "id": "3dc29e84-2e0e-45f9-8e02-9c7bfe662b21",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "856fceb1-364a-4729-9c42-bc1697779751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0ce67e-19cb-4689-bb2b-eed8e4d50e80",
        "cursor": {
          "ref": "59c02203-3473-40ca-be28-052256a2bae9",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f710baba-f469-4429-bb60-16b079edf67c"
        },
        "item": {
          "id": "8d0ce67e-19cb-4689-bb2b-eed8e4d50e80",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4008ec59-4259-400f-be6b-a94ea013dcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9d8bfd-8ea6-4354-8956-556ac547aed1",
        "cursor": {
          "ref": "9a263f19-e2d7-4d09-830b-395a98027fc4",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "64dd2b0b-1cd8-4644-8e65-f4496ebfea8d"
        },
        "item": {
          "id": "ff9d8bfd-8ea6-4354-8956-556ac547aed1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "763b1d3a-489d-4f03-b6af-994150aa6787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a7f8d6-53e6-49a6-883e-043c98803c16",
        "cursor": {
          "ref": "9555fe67-2810-486f-93d6-a5eda019e8dd",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6f4d8c27-f3a6-4ece-a0c7-8512f2cdf7a3"
        },
        "item": {
          "id": "84a7f8d6-53e6-49a6-883e-043c98803c16",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0bc60533-2f2b-475a-8352-ede2944a8bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f819b98-abfc-4488-a233-cae139947cac",
        "cursor": {
          "ref": "456862df-8836-4801-babe-3eb54a536fb1",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "100afaca-76de-421f-b0f4-eb77b262b897"
        },
        "item": {
          "id": "4f819b98-abfc-4488-a233-cae139947cac",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "69f932f6-e286-4e23-94e6-a6beec70090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672008c6-8e82-4892-aa84-7ba393bf4f4d",
        "cursor": {
          "ref": "2da73064-b937-4ad4-9e30-b4102f466f98",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3959333d-9a94-47b8-bf5f-bca44153875d"
        },
        "item": {
          "id": "672008c6-8e82-4892-aa84-7ba393bf4f4d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "425abaf7-a443-47ec-ac94-a4f6073524db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74f6c10-77fb-4471-9377-ba82dec3fc4b",
        "cursor": {
          "ref": "89149599-1438-4c28-964a-f6c612a1ba7a",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "54b9f670-39c5-4147-b098-7085700c775c"
        },
        "item": {
          "id": "f74f6c10-77fb-4471-9377-ba82dec3fc4b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a8516f08-339f-4c64-b97b-4bd0504f6007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc88eaf-4e79-4549-97ed-4e2620353930",
        "cursor": {
          "ref": "bfd156dd-a6f6-4c5e-8233-4ff3ea5b2660",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "40691d75-2a82-4791-83ab-a06f66bcbacf"
        },
        "item": {
          "id": "8cc88eaf-4e79-4549-97ed-4e2620353930",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4045f0de-c38f-4f0c-92fd-7dbb68adabc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24269e0e-cae2-4b19-9a49-434994f6013f",
        "cursor": {
          "ref": "602ebf1d-d98f-4f01-8082-d7cb91a095a2",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c990259d-26fd-4ae3-bbd3-03c6d72c41fd"
        },
        "item": {
          "id": "24269e0e-cae2-4b19-9a49-434994f6013f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f5f55fe4-98c8-4882-9d86-fb96f930fd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7f47b0-755c-4154-8e59-af12f3629d34",
        "cursor": {
          "ref": "17dd6109-fd2b-45d5-bc11-fbee23813756",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bb44333e-78ad-4e30-a62c-9f4f18f20351"
        },
        "item": {
          "id": "6b7f47b0-755c-4154-8e59-af12f3629d34",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c34199fa-f760-4c76-8cc2-2249609e49a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd21acf7-bfce-4df9-a8d0-92cecb778d7f",
        "cursor": {
          "ref": "2bd430cd-a368-4766-910e-8ce2e7622cfb",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "51cffc5f-fec4-4ea8-9bb4-e47ca5cfb120"
        },
        "item": {
          "id": "cd21acf7-bfce-4df9-a8d0-92cecb778d7f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f90bc51d-568a-471e-8e76-ecf1fffe0fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14b67ae-3282-4778-ba37-8337cb0de7a6",
        "cursor": {
          "ref": "455a6a6c-6070-40f8-b328-11cd94ccd9be",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2bc53686-0f78-4d02-a3d1-8e1f493bb449"
        },
        "item": {
          "id": "d14b67ae-3282-4778-ba37-8337cb0de7a6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8229b2c6-21bf-43c3-8624-f0ff0cf42fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d286ef9-6b9e-410f-a4d3-c2c3104051ea",
        "cursor": {
          "ref": "67bd4965-be24-4484-bdbd-1ffb5d118733",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "13f46f9f-5fcf-4ac3-ba70-de79f20ec157"
        },
        "item": {
          "id": "8d286ef9-6b9e-410f-a4d3-c2c3104051ea",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "47c07da7-df92-48c7-8bf6-e6cac7879730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def811cf-605e-4589-83d8-3cdcc5c83bdb",
        "cursor": {
          "ref": "94c78577-0d02-4645-8616-3b98d47d81ac",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "90682783-c1aa-4e45-a356-93218ff8eb5a"
        },
        "item": {
          "id": "def811cf-605e-4589-83d8-3cdcc5c83bdb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a2d43fb4-74af-487f-9a00-553ae1034bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc8906d-0011-4734-8b9e-4bc5030ca220",
        "cursor": {
          "ref": "faa478c4-352f-4fc8-814e-f7a9d5921b76",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "74acdf3f-f982-4eb4-ad09-7a2e52311616"
        },
        "item": {
          "id": "edc8906d-0011-4734-8b9e-4bc5030ca220",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0f36ad06-37be-43a2-9a9b-4199465afb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62030c86-7320-4c39-8f60-972e3bdbf5f2",
        "cursor": {
          "ref": "e3bff1d6-31a9-40bf-bbbf-1819762c538c",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c0e8eb44-508b-48d5-8898-77a2294472d9"
        },
        "item": {
          "id": "62030c86-7320-4c39-8f60-972e3bdbf5f2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8327a0b1-bb01-4437-9743-93adfecafce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e0cba9-5131-4449-b0fc-c2e8fb1f5b06",
        "cursor": {
          "ref": "9373aea6-6f9f-48b6-be86-5009ba6aa51f",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "daf34b54-f2d8-423d-85d7-5a61299a1643"
        },
        "item": {
          "id": "64e0cba9-5131-4449-b0fc-c2e8fb1f5b06",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "433127f3-e3c7-4650-97b0-7046f9fe2da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41db4483-a1e7-423a-acfd-7a27615668a2",
        "cursor": {
          "ref": "52caf24b-9c08-4993-ab4a-07de6ba01add",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c42f33ba-841d-41fc-a222-a25c3424bd71"
        },
        "item": {
          "id": "41db4483-a1e7-423a-acfd-7a27615668a2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb2cc80f-15db-4b33-a56a-092b3c19d400",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedabf0f-d7d3-45de-858e-792ee5525dab",
        "cursor": {
          "ref": "cd433714-54a3-4df3-9d33-496b6cacbd6a",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a338dacd-66c8-47d0-bb6f-c00ee8e20ec4"
        },
        "item": {
          "id": "fedabf0f-d7d3-45de-858e-792ee5525dab",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fa492260-850d-449a-a8ca-edb7306e141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a50658-45ef-415f-a6a1-5a7177826ffc",
        "cursor": {
          "ref": "6e815624-e6d2-4f7a-8e71-d5d64e761aca",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "97799907-4747-4de6-98f8-a3d29ab907dd"
        },
        "item": {
          "id": "13a50658-45ef-415f-a6a1-5a7177826ffc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c70f2246-f0c9-4fde-af13-a0572cb2204a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34121198-b737-411e-905f-fd8bd49ea666",
        "cursor": {
          "ref": "1ec106e0-1e44-4b85-b170-8fd437824ca8",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c5f8a153-052c-4101-a5b4-53ebfa8afa4d"
        },
        "item": {
          "id": "34121198-b737-411e-905f-fd8bd49ea666",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "21cb4216-8e59-4612-a31e-1a1d0fff2e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb60e98b-5c67-4b26-97d4-7c3fc737a958",
        "cursor": {
          "ref": "667463cd-1503-40a2-a302-a15d6bbd6797",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "13ae7467-b7e4-4208-ac93-42008f8cde4d"
        },
        "item": {
          "id": "eb60e98b-5c67-4b26-97d4-7c3fc737a958",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "35b8e374-37d2-4ae5-ba79-ed235a950e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de0b920-558c-46bc-85e9-f902e88a83f1",
        "cursor": {
          "ref": "eef4e255-6542-48cc-bbe6-aff7feb60ff5",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ee03ab62-c952-4c57-8eab-8dc91c226c3c"
        },
        "item": {
          "id": "4de0b920-558c-46bc-85e9-f902e88a83f1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e629da4d-9bf5-470f-aa48-591eefc18a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630f736b-6970-46d6-b6b1-4713761880fa",
        "cursor": {
          "ref": "839d47c8-decf-42cf-8feb-f1a3e2b1e031",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fde5f5ab-9b7a-460f-b2a5-9ef90c37bdc3"
        },
        "item": {
          "id": "630f736b-6970-46d6-b6b1-4713761880fa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "41609cf1-e957-429f-8b38-299e9259dda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d824e87-eeb5-4b8f-87c9-7f2b55eccf9f",
        "cursor": {
          "ref": "7c7727b5-2b96-401f-98d2-e0209c7a4368",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6829b0e8-d2c5-438c-98fe-a51559441290"
        },
        "item": {
          "id": "1d824e87-eeb5-4b8f-87c9-7f2b55eccf9f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dc97ab58-5489-4064-866d-647c848fe95e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf245cf-fc78-4622-8a29-1afc12b33b7f",
        "cursor": {
          "ref": "a8c6e7f1-a0f1-4ab7-8bb3-a6b3af7819a1",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c3407818-34ca-4f5d-84aa-68879084322b"
        },
        "item": {
          "id": "eaf245cf-fc78-4622-8a29-1afc12b33b7f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ba8a24f2-c940-46c2-bdbd-3fdf81ee5e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200b3330-93dd-48bd-8bee-1196d2eb483f",
        "cursor": {
          "ref": "d2679cbe-470f-4f84-87a5-68ff7f7f14cc",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c0d66a35-a344-49db-bf1b-d54cabca9ebe"
        },
        "item": {
          "id": "200b3330-93dd-48bd-8bee-1196d2eb483f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "95dd6de6-7ca7-4683-9732-661b2cf4692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae24896c-c762-4ac3-9dfd-9ad1da0c4b14",
        "cursor": {
          "ref": "20cd55ae-22cf-41bf-8069-f052dc5d37dc",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0bed00bc-bd78-4ca6-9cfb-657f875cd0f5"
        },
        "item": {
          "id": "ae24896c-c762-4ac3-9dfd-9ad1da0c4b14",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "01ec78ba-3119-4ac6-9422-fb4166f47c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3995d8b6-a8d0-46be-a2db-c790c39bc4fc",
        "cursor": {
          "ref": "7a143ed2-b3b3-44b6-9371-4e5424058326",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8c9e6d92-f897-49bb-958a-4c5e51f4a387"
        },
        "item": {
          "id": "3995d8b6-a8d0-46be-a2db-c790c39bc4fc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ca88282c-e3ad-45df-a120-0d6abc0232b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f6d7e3-8624-4d5d-8e11-b5a80b0a73d1",
        "cursor": {
          "ref": "db0c801a-bb97-40fb-88bd-de7e290c699a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8b874d7c-6302-4435-a53e-4406e0080551"
        },
        "item": {
          "id": "06f6d7e3-8624-4d5d-8e11-b5a80b0a73d1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1957edf0-63aa-4321-b188-4e3de307128b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873f3508-3703-4378-a7aa-c2d80f3d5f50",
        "cursor": {
          "ref": "2ff58b58-5ff3-47dc-95d4-e1031985f516",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d9e10a6c-cc47-485e-8b52-cae062d0d604"
        },
        "item": {
          "id": "873f3508-3703-4378-a7aa-c2d80f3d5f50",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "890f190c-6647-4f9e-820d-cefa647d6a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ed6212-41bd-474e-849d-f2c08387932a",
        "cursor": {
          "ref": "08f2104f-f6b9-47af-93b3-24a5e6c86490",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7401cc2c-baa2-4a9e-9bc8-93bf60031074"
        },
        "item": {
          "id": "28ed6212-41bd-474e-849d-f2c08387932a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b19eaad8-dd0c-4059-98b0-699721eb22ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf58cd59-0354-4959-9d60-379f416ec19b",
        "cursor": {
          "ref": "7048d395-6359-4dc2-b997-72218b5d1a05",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f9dccb9a-a6c7-47d3-9052-253a6bbb0085"
        },
        "item": {
          "id": "bf58cd59-0354-4959-9d60-379f416ec19b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2011ae4c-5ea3-4d53-9ab7-1061a93ba5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed36125f-a054-4040-9549-046b914cf6d4",
        "cursor": {
          "ref": "29567b0e-e4cd-4235-85d2-b0ed9af0e4b9",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "37b56396-89d1-48ee-bb3d-9847efbee89b"
        },
        "item": {
          "id": "ed36125f-a054-4040-9549-046b914cf6d4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bd1e4208-052b-442a-b998-8bb385b0f42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa18509-eced-4765-b8e9-b6305e8d7d56",
        "cursor": {
          "ref": "94a31932-e21b-4575-9e63-7a44a0ff8c81",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "35d567b1-9b40-4139-b7e2-e2731f328203"
        },
        "item": {
          "id": "8aa18509-eced-4765-b8e9-b6305e8d7d56",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "51a1f213-2af3-4d7e-8d37-9516091aaa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f91d59-33e6-45b4-8f46-2a1ddf864e69",
        "cursor": {
          "ref": "c17cfad4-35ff-4b13-b25d-089c630c417d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fa737da2-1202-46e9-9fc1-5ddfc45ac861"
        },
        "item": {
          "id": "d5f91d59-33e6-45b4-8f46-2a1ddf864e69",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "77dd4d87-4bb7-47ce-85f0-809bb4653806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b11f43-d7a7-442f-9cc9-1a2a5414b5a9",
        "cursor": {
          "ref": "e9956ec6-0fe8-4d2b-b138-721fc957d059",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c78af157-996a-4551-97de-b1bd52b6fb25"
        },
        "item": {
          "id": "24b11f43-d7a7-442f-9cc9-1a2a5414b5a9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a99a5713-7718-408c-8d65-97a33f327f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8018a853-9c0f-4e97-b8a3-feff44c40698",
        "cursor": {
          "ref": "5b617668-cfcd-4536-afea-3948cce7b68d",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "75765a96-bf26-4d18-8e97-2399d5e3fa63"
        },
        "item": {
          "id": "8018a853-9c0f-4e97-b8a3-feff44c40698",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "96abe994-e468-49e7-85f1-1a543fd43857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa078970-9c55-4817-b06f-9ec3a0cbb504",
        "cursor": {
          "ref": "0abb94e3-4b92-4bce-85c9-e848618c004a",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9012308b-5308-4afb-a260-19dfb0d8a7da"
        },
        "item": {
          "id": "fa078970-9c55-4817-b06f-9ec3a0cbb504",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fbf9db8b-d39d-400e-9733-1ba73c7f6c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15e9989-16c1-47f7-bf3a-e8c5599f84d8",
        "cursor": {
          "ref": "c810206f-656e-480e-8b56-2c74290c6dc9",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "edd34ab2-6a22-435b-9eb2-73e35765b434"
        },
        "item": {
          "id": "c15e9989-16c1-47f7-bf3a-e8c5599f84d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7b597fe5-dbe5-4738-a972-9c44e25278d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f523e8c2-3a52-4ca7-a6e4-a6cf3aa55409",
        "cursor": {
          "ref": "a37d18ae-c6e0-4314-bd87-21ef702c5a2a",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9b5fb891-c57e-472c-a13a-b0359eb66a69"
        },
        "item": {
          "id": "f523e8c2-3a52-4ca7-a6e4-a6cf3aa55409",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4285b89b-50c3-47c9-a712-109621b0bb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2131c05-70cf-4541-8819-2d77b865c458",
        "cursor": {
          "ref": "0b11c7fe-6839-495c-a6db-8df21e1d5adf",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "aa752398-e20c-4673-9fe3-45e1055b7203"
        },
        "item": {
          "id": "c2131c05-70cf-4541-8819-2d77b865c458",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6283e8f7-06c4-4a9a-89d9-88d29a63bae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac601b2-585f-426f-a55f-dde21ae13f40",
        "cursor": {
          "ref": "ebed7afa-af90-4846-b489-516616109a64",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b6b4dd96-0952-44f7-a5c0-6ff290f40b82"
        },
        "item": {
          "id": "8ac601b2-585f-426f-a55f-dde21ae13f40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "21329364-3ffa-4126-9fb2-f9564a1a631d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b59b77-567b-43c7-a8aa-9fa8cdda0521",
        "cursor": {
          "ref": "9959775f-2790-4d52-8df3-5e9d9a523ea6",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6bb177c7-6a86-4d63-8fca-0d2368e4df27"
        },
        "item": {
          "id": "66b59b77-567b-43c7-a8aa-9fa8cdda0521",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "932c4f53-8450-430d-9b9c-ceffba80a06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e379f72f-26ae-4fd0-ab75-fa223cec77d6",
        "cursor": {
          "ref": "efac0435-d143-42c4-8e59-e40224080858",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cda31e22-e2c7-44e6-b7a0-1ad19a9d9c8a"
        },
        "item": {
          "id": "e379f72f-26ae-4fd0-ab75-fa223cec77d6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0d37c8b9-3810-4661-82fa-dcb06451dca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880be449-2519-42e9-9c4d-1a141f64ed52",
        "cursor": {
          "ref": "22877e6f-df27-4187-9458-bbe933f43bf9",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "75f026c2-88ba-4747-b712-fdede1189ea2"
        },
        "item": {
          "id": "880be449-2519-42e9-9c4d-1a141f64ed52",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7261d501-6847-42b1-8e9b-103268c329f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b344eb-9176-45ca-aa07-7e7d647154bd",
        "cursor": {
          "ref": "8b2942d1-2b50-4069-9395-583baecab4b2",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b3bf487b-ebfa-444e-b430-6b4640f612be"
        },
        "item": {
          "id": "41b344eb-9176-45ca-aa07-7e7d647154bd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8885ded3-d913-472d-ab12-a29791426828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0565f80a-b904-4f25-b09b-12e33f356217",
        "cursor": {
          "ref": "3915c5da-53d4-4900-8c88-0d1c08c2966d",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c546d138-576c-4d67-97aa-b6238459e24a"
        },
        "item": {
          "id": "0565f80a-b904-4f25-b09b-12e33f356217",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "61dc17ae-d994-40c8-926f-dbef89baecf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebe92f6-f3d3-484e-b0c6-bedffa98d441",
        "cursor": {
          "ref": "f811d0ca-ecb5-4ba6-932f-db1b0d760855",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d0d4b334-d6f6-4665-b3e4-8a62c5a01698"
        },
        "item": {
          "id": "cebe92f6-f3d3-484e-b0c6-bedffa98d441",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a414aa24-f7cc-4225-9279-1a530311e47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6678910c-d020-4e5f-873c-1cfbd24190e3",
        "cursor": {
          "ref": "acc2c609-0a32-4865-800d-ef6e6fcb98fa",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "54abf9f7-2496-410a-a45b-07b003c6cb26"
        },
        "item": {
          "id": "6678910c-d020-4e5f-873c-1cfbd24190e3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2295cd7f-6e9e-42cd-a3ac-81a208438a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850ec799-c4dc-472f-9e6a-c828ad4f55fe",
        "cursor": {
          "ref": "c4b67aa6-f7de-4e83-aa46-4d339def95a2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ed1b02ff-ee59-4493-ba1f-433bd8a24c16"
        },
        "item": {
          "id": "850ec799-c4dc-472f-9e6a-c828ad4f55fe",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "be1271da-04dd-4513-adf4-0dae72db9f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e45f69-f961-457d-b434-f157e409cf64",
        "cursor": {
          "ref": "bfa6c031-7493-4489-94d5-6e3faffbe7be",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f4ba5261-1735-432b-9548-c4becb54f26a"
        },
        "item": {
          "id": "e8e45f69-f961-457d-b434-f157e409cf64",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6dd949da-f3ac-47f3-a269-6d64816b1c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855e20f5-bf12-4abc-80fe-9e36db99e6cf",
        "cursor": {
          "ref": "6aac0c9a-b1b7-4ec8-9ec6-38b042362900",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cf3bff3c-ecbf-4b62-a3c8-9fac30f05e47"
        },
        "item": {
          "id": "855e20f5-bf12-4abc-80fe-9e36db99e6cf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6afae0e1-0901-44b9-b29c-4d9b46a479be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67276a87-8f9b-4ee1-b08e-47a9e5a47c67",
        "cursor": {
          "ref": "51e4ca95-18bb-4be4-b651-93f8d7eda729",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6986701c-907b-44e8-9bb5-11df8acb8446"
        },
        "item": {
          "id": "67276a87-8f9b-4ee1-b08e-47a9e5a47c67",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0bd9ab40-15f6-46c2-af7c-6ed66292b7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363530c1-c0e0-48df-bdc2-7b728152949a",
        "cursor": {
          "ref": "827d4271-5ef4-416f-b03e-794f228023d4",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "56bca725-ec6d-44bc-ac90-9242e0f835b3"
        },
        "item": {
          "id": "363530c1-c0e0-48df-bdc2-7b728152949a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cd9ed58f-f749-4f62-b196-00c3b35d292d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5a7951-08bb-45dc-91c4-5ba955a29b39",
        "cursor": {
          "ref": "83815bfa-289a-4901-aae8-a05d618b34a2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f023ddc1-325a-46f4-814f-d3638e0a8d42"
        },
        "item": {
          "id": "db5a7951-08bb-45dc-91c4-5ba955a29b39",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0a2dfe79-9f36-4a4a-9fd1-dd34ad4f5dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930a23cc-7302-474a-9c34-aa9336061aa8",
        "cursor": {
          "ref": "b3267f9f-2b96-4124-ae3b-1a545b913c7b",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "89f43a7f-7a9f-490b-8a78-f05acdcf6478"
        },
        "item": {
          "id": "930a23cc-7302-474a-9c34-aa9336061aa8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d6497899-c75b-47d6-886b-85a6de3a79e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effcb35c-96dc-478d-b221-93f02f7013cd",
        "cursor": {
          "ref": "ff96ae8a-8ab1-4a78-bf29-cb7448cea8ab",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1bb453f4-bd57-4a45-ad9a-c489f6e96eeb"
        },
        "item": {
          "id": "effcb35c-96dc-478d-b221-93f02f7013cd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6fcb5927-0c9f-46ba-b91b-b5307ee0a300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b128e01c-139e-43a4-b609-b5dbe4f53339",
        "cursor": {
          "ref": "3ccba5e9-d767-4330-becc-cdcd6d9e93a8",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c4407fc0-008e-4816-a3b9-ccf146f25c00"
        },
        "item": {
          "id": "b128e01c-139e-43a4-b609-b5dbe4f53339",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fbfc005d-ffdd-410d-8304-bd2bc8d1f6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975d73f8-cdcc-4245-b3fe-941346c0f71e",
        "cursor": {
          "ref": "f89634a0-391b-4b95-9c6a-252f2c973515",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "63103fe0-cea4-4a25-bbb4-42c842d76451"
        },
        "item": {
          "id": "975d73f8-cdcc-4245-b3fe-941346c0f71e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1561744b-cdbc-458f-ba1a-5e689acc6642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41748919-1204-41e0-ac57-dc46ceadf07c",
        "cursor": {
          "ref": "ce8734ce-4751-422e-a0f1-7c9448288831",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b61a26fd-0bfd-41b2-9a88-e6c9b3d02c55"
        },
        "item": {
          "id": "41748919-1204-41e0-ac57-dc46ceadf07c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4d0bccb7-918f-4148-9fe1-3f0964958752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b413e5-1bb5-4ffd-947d-a611c6899bc4",
        "cursor": {
          "ref": "39f60772-077e-4bd3-af66-9f96ac699046",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "555736a1-b337-444c-917e-b070ba968807"
        },
        "item": {
          "id": "60b413e5-1bb5-4ffd-947d-a611c6899bc4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cbc3e8b6-5eda-4bb3-b3f5-fda560fa3bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12482810-c239-436b-bb49-521bf42fa516",
        "cursor": {
          "ref": "93e7ae4c-2d49-4c13-ad42-c3d3b400f3e7",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be8a0438-ea3b-44c1-9731-4486b319b3cc"
        },
        "item": {
          "id": "12482810-c239-436b-bb49-521bf42fa516",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "378d7611-7ff5-4bf2-a038-64ca1fbdcfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c76c03a-4f18-40de-a220-dcb0eb2f84c1",
        "cursor": {
          "ref": "bc5b868d-1ddc-41fc-bd46-f8770570fb87",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c4092cc3-fd6c-4f4e-a71d-16709bedf30c"
        },
        "item": {
          "id": "7c76c03a-4f18-40de-a220-dcb0eb2f84c1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "960ecc04-2c8a-4ce1-b2fb-a795c523c3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea0dedc-46e6-4ec0-9b05-a92e3b93c995",
        "cursor": {
          "ref": "c0ed7a8f-46a0-477b-8af8-b6960cf3e4f5",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "15fbfe2d-b001-4ff3-aba5-543efd461098"
        },
        "item": {
          "id": "6ea0dedc-46e6-4ec0-9b05-a92e3b93c995",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3aac00de-d32a-4046-b350-dd8722b3a743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511da8ce-e522-4ae6-a65f-b878cb914736",
        "cursor": {
          "ref": "7639ecc1-a9bd-4130-978c-5b268b326884",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2c3f029c-cbcb-4fb1-b2fa-1a9c1b992018"
        },
        "item": {
          "id": "511da8ce-e522-4ae6-a65f-b878cb914736",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8ea3fdba-3fa1-4fcc-8c38-2ddbb137c5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb00ec7-0bef-45bc-9ab6-dbbd62fa0b24",
        "cursor": {
          "ref": "36d92e24-82c1-4026-83a6-f51b5f7247f6",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "13a181c1-c075-4b43-aa1d-865a36b1b32d"
        },
        "item": {
          "id": "aeb00ec7-0bef-45bc-9ab6-dbbd62fa0b24",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "24c9e2e0-2175-4fba-a5fa-2dacf706f122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082bb151-8a21-436d-8bea-6d69668bdf36",
        "cursor": {
          "ref": "94ac8ccd-36a6-4f27-b8fd-e86a7bad4ce1",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd22ece4-fa62-4adc-ba4c-9126468fde70"
        },
        "item": {
          "id": "082bb151-8a21-436d-8bea-6d69668bdf36",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "297d16d7-c1b7-40cf-91fc-0db35b942a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348d0c93-dbe9-44d9-aebe-801a6f752e0e",
        "cursor": {
          "ref": "0ad91cd8-0153-4f3e-91aa-a7fab3e3b67b",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "43caade6-ecd7-437b-8b6e-e7dd4a984507"
        },
        "item": {
          "id": "348d0c93-dbe9-44d9-aebe-801a6f752e0e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3170d8ae-3dd8-407e-afc6-e832e35a2168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd90c2fe-2411-41e1-9404-fe7bb8420ecb",
        "cursor": {
          "ref": "9fa2e692-2919-4336-809d-177aab26c59b",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "90b20fce-c5ad-481b-bbb6-bbced8e8b995"
        },
        "item": {
          "id": "dd90c2fe-2411-41e1-9404-fe7bb8420ecb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dbc963d8-8296-43e8-8001-5a417af2b4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a54d6fb-df07-4419-8503-5522aee4954f",
        "cursor": {
          "ref": "17ac7f03-f2eb-415b-b22b-1a6816579586",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a09e50fa-d428-455a-aa38-077071f96133"
        },
        "item": {
          "id": "9a54d6fb-df07-4419-8503-5522aee4954f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e4ae9fc6-c2ff-40b2-8a6d-a0166dbc682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e4d1fe-cec7-4912-96b8-7e348d5b1472",
        "cursor": {
          "ref": "49a30b2d-1e68-4708-8ea8-1378fa245c4c",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ffb6db3e-f88c-424b-a871-8eb20dac9a65"
        },
        "item": {
          "id": "a4e4d1fe-cec7-4912-96b8-7e348d5b1472",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5292da77-fa6c-450d-99e9-11e61c7ee304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59418de9-f299-4b38-a8fc-f0aadcf29678",
        "cursor": {
          "ref": "da9337e6-0cc1-4a85-8bba-61b56ae07432",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "138ccdc9-1833-4fcb-ba32-509c48ecba90"
        },
        "item": {
          "id": "59418de9-f299-4b38-a8fc-f0aadcf29678",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7eb8bb51-3048-4b4e-bdfb-1218317c1f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d4ae92-1781-4ba5-8346-4bc12de4e640",
        "cursor": {
          "ref": "d871a2f9-8583-456c-9262-abb8f4e4a531",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "76ee079d-c13e-4cac-9d92-935fb3dd5e0a"
        },
        "item": {
          "id": "e3d4ae92-1781-4ba5-8346-4bc12de4e640",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8167edbb-8e26-4236-8a9e-e1ea17cfada8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6c5c6d-6de0-4209-9ab5-6b23a64ad95a",
        "cursor": {
          "ref": "27868ac0-00e6-4624-9012-102195872b25",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "620b2994-d19d-4463-b69c-77087d0bfbc8"
        },
        "item": {
          "id": "2d6c5c6d-6de0-4209-9ab5-6b23a64ad95a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fa0ea76b-0f12-45a7-92f8-556aba49bb34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c83bb2-5f38-412a-a1c1-89597b0b442d",
        "cursor": {
          "ref": "be1486c3-74ed-4a8b-89f3-babbcef127da",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ab229f9f-7fab-4440-b6a8-53145b5273ba"
        },
        "item": {
          "id": "54c83bb2-5f38-412a-a1c1-89597b0b442d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4914da0f-ae0d-4916-b07d-aeda99b1364b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 213,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef3a6d9-8859-4fbc-84db-ebbe783befec",
        "cursor": {
          "ref": "e4492ddb-b617-48b1-a297-9d335de32b97",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1c00f89b-1c7f-4f25-8731-299ac6390685"
        },
        "item": {
          "id": "aef3a6d9-8859-4fbc-84db-ebbe783befec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6d8bcf6a-147a-47a0-97b2-8357d48e7554",
          "status": "Created",
          "code": 201,
          "responseTime": 114,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ccd8a2-4916-4c3d-9a28-e52d001e9392",
        "cursor": {
          "ref": "a675cb79-5d06-4b95-b8f1-5ccfa075d27e",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e4b048d5-f76d-45ba-b29e-e59131068189"
        },
        "item": {
          "id": "39ccd8a2-4916-4c3d-9a28-e52d001e9392",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ad928799-a2ed-4a1f-9ab2-54becba35366",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc576f8-8875-4ee3-afda-91ea018469d9",
        "cursor": {
          "ref": "ef01d3f9-a4b1-4ca0-ae33-39f13a7c0f58",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "55046de0-edeb-4fa2-a970-d36e5fc0863b"
        },
        "item": {
          "id": "3bc576f8-8875-4ee3-afda-91ea018469d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "566cc37b-529d-4f82-8380-2f693369e360",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6a9db8-4baa-4068-80a2-7446077faa2f",
        "cursor": {
          "ref": "4b395891-5988-4fbb-9200-42b33d2aea91",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6d1d7b11-b2bb-41f4-b0db-362bca16a4a8"
        },
        "item": {
          "id": "fa6a9db8-4baa-4068-80a2-7446077faa2f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4397b80d-b682-4233-ac18-53bafffb3172",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4172a2f4-2fb3-4f98-9ca5-ce5352ec08fd",
        "cursor": {
          "ref": "f2c6f86e-ca37-49b7-ba91-5f414d1e8e68",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "94d5b719-4e15-45d7-aa5d-a5a9c0679c04"
        },
        "item": {
          "id": "4172a2f4-2fb3-4f98-9ca5-ce5352ec08fd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cb6c6c2e-f1d3-4082-bf30-2f0e7922a00a",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bc7623-834b-4617-b223-bb1d4e2cc50d",
        "cursor": {
          "ref": "8310cf2f-1a36-46af-9e6a-2e0b533b4baa",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ece36d3-0a79-4856-bec9-237b6707b520"
        },
        "item": {
          "id": "17bc7623-834b-4617-b223-bb1d4e2cc50d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "050f5ef9-021e-430b-be50-fd8454cfdb9e",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae22de5-997c-46fe-aa81-ef2cd9df783e",
        "cursor": {
          "ref": "dae0920d-98bc-4933-9667-5fa49503f6c0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77fef92e-2d1b-4a86-97f1-ca024d881922"
        },
        "item": {
          "id": "3ae22de5-997c-46fe-aa81-ef2cd9df783e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0bb9ac67-da82-4c0e-abae-2f4f38893c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae22de5-997c-46fe-aa81-ef2cd9df783e",
        "cursor": {
          "ref": "dae0920d-98bc-4933-9667-5fa49503f6c0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77fef92e-2d1b-4a86-97f1-ca024d881922"
        },
        "item": {
          "id": "3ae22de5-997c-46fe-aa81-ef2cd9df783e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0bb9ac67-da82-4c0e-abae-2f4f38893c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190c3629-2a19-4cd5-9919-bb3b246ad4da",
        "cursor": {
          "ref": "89f8cd3d-5642-491b-9eb3-d3cea1d4711c",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "04ed63bb-a3eb-41e2-9123-a5d14befe2a1"
        },
        "item": {
          "id": "190c3629-2a19-4cd5-9919-bb3b246ad4da",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aeca7bab-2533-457e-bcf7-8dfc265bfc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c230af11-517c-4179-9d04-a4ba2921ff56",
        "cursor": {
          "ref": "49a99b7e-95c6-4427-92c7-baee7e02ea68",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4c208124-6178-4856-982b-6b602a7a0094"
        },
        "item": {
          "id": "c230af11-517c-4179-9d04-a4ba2921ff56",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dd0f505c-4c9f-4ccd-a618-7f5b1e00dfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f281ecc0-6a64-451b-be18-ba53ff022601",
        "cursor": {
          "ref": "93630142-ca48-4db5-a64e-eb21b57c75b1",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e3f51442-08f7-4ebc-b3d3-ec6de7ece366"
        },
        "item": {
          "id": "f281ecc0-6a64-451b-be18-ba53ff022601",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "619a1e67-a684-4a0e-b5ac-ab83bc245e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a10fb8b-991c-41e0-a768-08e6ac2c1b70",
        "cursor": {
          "ref": "5f76f009-64c9-4bbc-b35e-a16546a3d533",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e97a42f2-9592-4802-b9e7-39b99c0d93d7"
        },
        "item": {
          "id": "3a10fb8b-991c-41e0-a768-08e6ac2c1b70",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eca0088e-c4f6-4903-85bb-7649160a6e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264aeaa2-13b5-46d0-8eb0-527a210bc120",
        "cursor": {
          "ref": "a205a91d-74ba-4f0e-b1b7-aadece92d3ce",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cb2d40e9-9383-4cdc-8608-b11bf7a92d19"
        },
        "item": {
          "id": "264aeaa2-13b5-46d0-8eb0-527a210bc120",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "af32c1c5-8eb0-4f68-9269-59a1dcf4f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e20a683-b521-4b69-921e-6d344815f683",
        "cursor": {
          "ref": "d020cc31-9759-40cf-bed4-9ff0cc2a508a",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d2f5208b-47e4-4dd6-8b0b-8908fba6ebf1"
        },
        "item": {
          "id": "5e20a683-b521-4b69-921e-6d344815f683",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "04d19bda-2123-435b-80ee-aee3adb76357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa1db47-7da2-4530-9650-6492e6eb6cab",
        "cursor": {
          "ref": "b19ddac8-1f22-40b3-9a81-02447a5be52d",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b4ea78b1-3048-4da6-8dd5-997f21568e19"
        },
        "item": {
          "id": "2aa1db47-7da2-4530-9650-6492e6eb6cab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "35edfa2d-9150-45dc-a7f0-eaf085fb9e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca398fb-624a-4817-bf54-1775e61121b5",
        "cursor": {
          "ref": "068b5c81-e890-47f3-9f51-0d7d76924d02",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "36465eec-1afc-4a4e-9167-a67d4fb88f76"
        },
        "item": {
          "id": "1ca398fb-624a-4817-bf54-1775e61121b5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e81a1e3b-8566-4665-bcc0-52e105cdba68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85841f30-2a2e-4c80-a970-64442c98ce8b",
        "cursor": {
          "ref": "7d19ba29-1c60-4253-9cda-7d04ea195ee4",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "41e388c6-c633-418e-ac05-28724cccfb9b"
        },
        "item": {
          "id": "85841f30-2a2e-4c80-a970-64442c98ce8b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d943110a-83cb-42f0-a4b9-1162f26c59aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cad518-7d20-425d-a419-300ff7f3608b",
        "cursor": {
          "ref": "609bfc01-220b-4d2b-862e-8224e7362eb9",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a0402e3a-ece9-443c-8c36-d0533f8cf54a"
        },
        "item": {
          "id": "d1cad518-7d20-425d-a419-300ff7f3608b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d7708f7a-dbca-4098-9aea-4ad0f70bb580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6898a322-116a-47b6-a3a7-d1007f4550a3",
        "cursor": {
          "ref": "ea93b3b6-89a9-40ea-90ee-b88132dd9949",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ea18a604-eb5f-4d88-980a-e79c5fb3c5db"
        },
        "item": {
          "id": "6898a322-116a-47b6-a3a7-d1007f4550a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f5150f1c-8101-445d-a87f-45a23881a12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dad18a-6390-4f25-a727-d2ddbd370ea5",
        "cursor": {
          "ref": "0c41ca56-185c-4dd5-826b-d0fd9f300f3d",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "232c663f-1522-4001-922b-37c274c5c361"
        },
        "item": {
          "id": "50dad18a-6390-4f25-a727-d2ddbd370ea5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68fc2d11-6d75-4e51-8a07-79e5a89f3dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd11b80-c6c1-4489-b212-5788d54f0242",
        "cursor": {
          "ref": "0fafe44b-8203-43fd-b13f-43af2e32f6ce",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cb7315b8-dc38-4de3-8d55-30f460163d61"
        },
        "item": {
          "id": "ddd11b80-c6c1-4489-b212-5788d54f0242",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "04f6de99-3615-4c51-8629-e736dd79f23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950deeff-1d28-4e1e-b3d2-814167e8fb51",
        "cursor": {
          "ref": "8b7ecdbd-4ed1-4624-b9f4-0370e16bafa5",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9aa6ed71-e882-4be8-8e8a-96776edcc831"
        },
        "item": {
          "id": "950deeff-1d28-4e1e-b3d2-814167e8fb51",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d6bbb0fe-1ed4-4838-a9d7-7987ac3a491e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4834f539-ffaf-4291-894c-afe41f04ab2e",
        "cursor": {
          "ref": "9b704d54-2f85-4ecf-8b30-6b8866122be1",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1de476e5-0edc-481e-8e03-15133721beb2"
        },
        "item": {
          "id": "4834f539-ffaf-4291-894c-afe41f04ab2e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c1a9a568-cc34-4886-abab-040293fbaaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3fb951-5e0b-4d01-b4b8-d3d26088dc80",
        "cursor": {
          "ref": "cb3e1194-5507-4e04-97c1-9195ac583e2b",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "25993c18-11ce-4c4f-ab6d-ed28badbac7e"
        },
        "item": {
          "id": "ef3fb951-5e0b-4d01-b4b8-d3d26088dc80",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "83c8d98f-a3f3-4700-903f-b9906e0a3ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df68216-459f-42ff-b787-9f5bd03adb3e",
        "cursor": {
          "ref": "11ee766a-256e-4039-8406-020fbf663536",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a5f2ab28-999c-4d01-8d0e-f4c509ccc033"
        },
        "item": {
          "id": "2df68216-459f-42ff-b787-9f5bd03adb3e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c04b68a5-ad7c-477b-ab2c-1b4199046dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75234328-726a-4078-9e9b-1bfd60f3d6bd",
        "cursor": {
          "ref": "a6009171-e0bc-488c-bed9-85f27948f5bc",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8d7ddd3a-9a8e-4ba5-b98a-3e48e1db67fe"
        },
        "item": {
          "id": "75234328-726a-4078-9e9b-1bfd60f3d6bd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d851e72c-cbc1-46e8-892f-143de11f44e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133a3c46-881f-4d99-992b-84803e337576",
        "cursor": {
          "ref": "480959e2-4a43-4761-b961-70512174005b",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "48e40169-a551-467a-bade-641dd888eb0b"
        },
        "item": {
          "id": "133a3c46-881f-4d99-992b-84803e337576",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "62c39563-1a08-4511-b1bd-ae3f741f0d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9c2914-5853-4bb3-93bd-07b73601ce23",
        "cursor": {
          "ref": "b08c47f9-247e-468d-8375-82f22469c80d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b41c58a2-1cbc-42aa-834c-f5c3a7ed34fe"
        },
        "item": {
          "id": "3f9c2914-5853-4bb3-93bd-07b73601ce23",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e3951ede-49fa-4004-8c71-960b2c3f511a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3776d3c7-4619-4b46-83be-3221bf2a38fe",
        "cursor": {
          "ref": "d8162db5-d65e-4507-81d2-9119fd331ab1",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "726630bc-4c7a-4d1c-8369-c62a40af0222"
        },
        "item": {
          "id": "3776d3c7-4619-4b46-83be-3221bf2a38fe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ace99bc5-974d-4b16-844c-397b5d61cbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46261272-2c8f-411a-8378-2098b71209d4",
        "cursor": {
          "ref": "b3b2e7dc-be76-445e-aefa-e0df17cbfb06",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "68bfc5ac-e77e-4d7e-95f3-7a182d22606a"
        },
        "item": {
          "id": "46261272-2c8f-411a-8378-2098b71209d4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cf9427f6-f808-4277-8465-fe67d801292f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf253de-dd7d-4753-a3f2-d46a3aef6523",
        "cursor": {
          "ref": "4452adff-2ae9-4aac-96fc-ec7bb55be85f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "99754ec6-da7c-4d5d-a506-0d3a4fd15f33"
        },
        "item": {
          "id": "fbf253de-dd7d-4753-a3f2-d46a3aef6523",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "09eec603-ba37-4f84-a9bd-0711f5608379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943e2758-a92c-40a5-b038-d8c9975f9419",
        "cursor": {
          "ref": "7a45520e-73a4-4992-a14f-e0c302ec6f8c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dccee864-5167-4d36-b867-b602fde88c44"
        },
        "item": {
          "id": "943e2758-a92c-40a5-b038-d8c9975f9419",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9b396308-4de4-49a3-b794-71f29a0dab2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161cd2d7-696f-4e83-8e48-a69e3c1134c7",
        "cursor": {
          "ref": "caab870f-48c0-456d-b934-07603ab67a22",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6e01974c-d0e6-40cf-8d3f-5c591081baee"
        },
        "item": {
          "id": "161cd2d7-696f-4e83-8e48-a69e3c1134c7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e7fb2640-78d7-458b-b9d1-a0254b1161ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfc1bbd-d9c1-4f24-8cd2-bfd05c20a8dc",
        "cursor": {
          "ref": "a4b00f94-0b1f-4556-8275-cf84138a6bef",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "03c16d48-eae3-445e-b31e-fa33b52944b9"
        },
        "item": {
          "id": "0cfc1bbd-d9c1-4f24-8cd2-bfd05c20a8dc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "37126cf2-1256-4017-bc14-c52bb114e007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2331776-0afa-403f-af29-763662b032ae",
        "cursor": {
          "ref": "6a4aa56c-8b1e-4bdb-a912-f49d79fa6542",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b1814c78-c76e-46bc-82e7-5471d5348b2c"
        },
        "item": {
          "id": "d2331776-0afa-403f-af29-763662b032ae",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "db8750e5-cb97-40c4-9117-bf070f000f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e151ff-a773-4929-b7bd-db9ed890244d",
        "cursor": {
          "ref": "8238e1d0-98f5-419f-ab84-5ceec2296867",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e16d0c96-63e9-41e8-8a07-06a2ae5fddf1"
        },
        "item": {
          "id": "a0e151ff-a773-4929-b7bd-db9ed890244d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "67cbc451-24d9-4cf0-9413-1ad98875445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa91587-2500-4151-baea-74074fab0ea3",
        "cursor": {
          "ref": "b7cdc1ad-e39b-45e0-b6e1-8e309c2f62d6",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f205dd61-809a-4e99-8297-ce11a666c1c0"
        },
        "item": {
          "id": "6aa91587-2500-4151-baea-74074fab0ea3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a5256125-84f4-49f0-9a49-b1b861a8ef30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3d7756-be81-4407-8fdd-ca5e5263778f",
        "cursor": {
          "ref": "3a68b71a-0e5f-4d90-af97-965711bf6a78",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7b428f85-8ec8-40eb-bc95-4bf1a030f4a1"
        },
        "item": {
          "id": "7a3d7756-be81-4407-8fdd-ca5e5263778f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bcff167f-7b90-4d21-ae33-8c9f765b0643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad979f2d-4462-42e1-aaec-fbf501ebfac4",
        "cursor": {
          "ref": "95f503b6-a8db-43a7-91c4-f1200cf852e3",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a350af71-cfd7-4c6f-a6bf-cb2e3f8bbace"
        },
        "item": {
          "id": "ad979f2d-4462-42e1-aaec-fbf501ebfac4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9f2adf6b-57c3-4ff4-be9b-ec4a2bf32ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e06f4b-5dc2-4d8b-a46a-d35f52299db6",
        "cursor": {
          "ref": "089a076b-7a05-4115-bdd3-56471a586cdf",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bb4376a6-ac1e-4b82-97e3-53914b964314"
        },
        "item": {
          "id": "70e06f4b-5dc2-4d8b-a46a-d35f52299db6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e903f935-3269-4f12-a8b6-b94152bfd8bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db60ef3d-73f1-40f5-9912-4a5afe43a1eb",
        "cursor": {
          "ref": "3d0aff88-451c-426a-bf46-fa23ebb0a921",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c9a1624b-a43c-4cc4-b5ec-ba859c82011b"
        },
        "item": {
          "id": "db60ef3d-73f1-40f5-9912-4a5afe43a1eb",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8011f5c9-0366-4663-8d41-887b17e80e85",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be06dce-c4e3-4d74-8e5e-e0cccb36b4d8",
        "cursor": {
          "ref": "ff0ca5f2-d944-4e4d-9170-6fc38aa3be2b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "552ae71b-52ad-4cbb-90bf-aa0ac920173e"
        },
        "item": {
          "id": "5be06dce-c4e3-4d74-8e5e-e0cccb36b4d8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b2dbd060-3bdc-4cf1-936d-2383cf08e9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be06dce-c4e3-4d74-8e5e-e0cccb36b4d8",
        "cursor": {
          "ref": "ff0ca5f2-d944-4e4d-9170-6fc38aa3be2b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "552ae71b-52ad-4cbb-90bf-aa0ac920173e"
        },
        "item": {
          "id": "5be06dce-c4e3-4d74-8e5e-e0cccb36b4d8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b2dbd060-3bdc-4cf1-936d-2383cf08e9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15424311-1c6e-40ba-8b72-dd2f81ef6ad8",
        "cursor": {
          "ref": "769719a8-730c-4f06-b518-f590c5ad14bd",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1daa08b3-dcb3-45af-9f2a-fef235a0c46e"
        },
        "item": {
          "id": "15424311-1c6e-40ba-8b72-dd2f81ef6ad8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e11032b4-384c-4ba7-b20d-1afd151f02dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e743bf1-a8cc-46bf-b6a8-8036d92ec262",
        "cursor": {
          "ref": "d3339d4d-11d9-46e1-8001-9f84ae3d5541",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "91ca721e-808e-4c3e-8e9b-5e6208ee8f4c"
        },
        "item": {
          "id": "2e743bf1-a8cc-46bf-b6a8-8036d92ec262",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "51cbbcaf-9684-46ed-812b-2d4e5b4087b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0ba6bf-b76f-4a21-925d-455052bc2067",
        "cursor": {
          "ref": "e8b1f597-bfb6-4829-bf25-109a34004bdd",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ac28a6af-e1f5-447c-a893-63ba8e3a36fe"
        },
        "item": {
          "id": "5d0ba6bf-b76f-4a21-925d-455052bc2067",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f209a249-b37e-41c4-b804-029e274a9469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337f168b-3ae5-4c12-a9d6-b52782468102",
        "cursor": {
          "ref": "f3b5a260-b472-4239-a3de-79232f170660",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7e824fd4-84f9-488b-8420-ecdd3887778b"
        },
        "item": {
          "id": "337f168b-3ae5-4c12-a9d6-b52782468102",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7204b1fa-a4c1-4247-af53-61fddf9d8840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87774fc-389f-42a4-9cbb-e0e01bdac639",
        "cursor": {
          "ref": "82dfd1f3-a855-48b6-acbd-16f317030a9d",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3bee8549-0a40-465c-aad1-7df0fed0d160"
        },
        "item": {
          "id": "c87774fc-389f-42a4-9cbb-e0e01bdac639",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "868fcfc7-0e0b-4ce0-9919-f0a916a0c81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7152adf-40cb-4bbe-8371-a74960e1df7b",
        "cursor": {
          "ref": "f06fe0a8-f5e8-428c-9ece-80690060a539",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "60245e1f-18e8-4e3b-bf77-571546b0ac85"
        },
        "item": {
          "id": "d7152adf-40cb-4bbe-8371-a74960e1df7b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c8db3a3d-cccf-4112-a08b-4dfc109e75cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf50dc7-544b-403f-9d2b-52f6080d8ea8",
        "cursor": {
          "ref": "181f9c68-bbf5-4d2a-b94d-0758e8d7d7b2",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "044cbb90-4438-47ff-93e6-44e04b0f9154"
        },
        "item": {
          "id": "9bf50dc7-544b-403f-9d2b-52f6080d8ea8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4b122621-cc58-4308-b254-1871df02d495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a462bbdb-59b5-4578-b0f9-ba39db429d84",
        "cursor": {
          "ref": "16f778f9-2a63-4bde-8511-cf6fd10a6762",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "74dbcfc2-5787-4aae-96ee-959ed9023489"
        },
        "item": {
          "id": "a462bbdb-59b5-4578-b0f9-ba39db429d84",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "395a4eb1-819f-49ad-ac5f-29ea043ffa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d776e9f-62ff-4ce4-8a2d-fd49a73b046e",
        "cursor": {
          "ref": "2416548b-5343-4ecf-ae69-b5737308e2d2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd1d2568-b6be-4bc1-852f-f57b4dac6259"
        },
        "item": {
          "id": "0d776e9f-62ff-4ce4-8a2d-fd49a73b046e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6feb7e37-0033-4c0a-97b2-c83994e39fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d70b6af-64ff-48d9-85ab-40bba407e947",
        "cursor": {
          "ref": "909d55e5-30a8-461d-9a91-181ca09a0ac3",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f2ba5cf2-36e1-42a4-bb97-8f13b398a6f9"
        },
        "item": {
          "id": "1d70b6af-64ff-48d9-85ab-40bba407e947",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "30e6501a-dc78-48f8-b731-cadc47d380a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e81310-109a-4c91-bf13-1adc16596f9a",
        "cursor": {
          "ref": "0fc1f4a7-6ae6-407d-855b-c3dbaf94bd72",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "59647030-c7c8-4897-a352-0ac76d748818"
        },
        "item": {
          "id": "d9e81310-109a-4c91-bf13-1adc16596f9a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f5ad000e-c3e2-4299-ae4c-ed39afbe4af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb99220-8ef4-4ef1-8718-bf833eb578a6",
        "cursor": {
          "ref": "0c89c8af-3add-4e98-ab7f-e589dd8c5461",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a3a2bfe6-fea7-488f-9f65-b22794e4ff4e"
        },
        "item": {
          "id": "beb99220-8ef4-4ef1-8718-bf833eb578a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7f8d6461-e772-4cd9-94c9-6b1f1061c2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95454f9-1200-442f-9846-6b7ffada730b",
        "cursor": {
          "ref": "81b05467-6ab5-4df2-9ef3-d6cfc8811d47",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "df898863-a79b-48d2-89f5-228b228e1d64"
        },
        "item": {
          "id": "f95454f9-1200-442f-9846-6b7ffada730b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "33892d4c-d036-494e-9626-85a93dfa7466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97c4c71-96ab-4b04-816f-8b11b8d56efc",
        "cursor": {
          "ref": "2ca4cf6a-d01e-4c87-9cda-f4b05b8663b8",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4f35b9b1-14b0-43cc-bf01-e324a68bf73f"
        },
        "item": {
          "id": "e97c4c71-96ab-4b04-816f-8b11b8d56efc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d401b55f-2d94-40a0-9e51-be8e51f9ece4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010c68e6-5a2b-44e4-9856-213e3dd5b8f4",
        "cursor": {
          "ref": "886cae07-d282-4416-886e-c4df1c440c12",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f771cc9f-2c05-43a9-80b6-f92c2843b9b1"
        },
        "item": {
          "id": "010c68e6-5a2b-44e4-9856-213e3dd5b8f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "27e7eb2e-3f31-4499-a68a-c18e204d02b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81db685-5a20-4895-9e36-04adf9c91a7e",
        "cursor": {
          "ref": "222169a6-aaaa-4f6f-b8f4-6f69a2c2aa83",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5ede203c-5263-4d22-823c-7e3884560cca"
        },
        "item": {
          "id": "d81db685-5a20-4895-9e36-04adf9c91a7e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "061e7526-b6fa-418e-bb75-88f12d83e589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b80f4f-bad5-4606-8b72-97e11b34fa3e",
        "cursor": {
          "ref": "eeb64c91-4353-43f8-8bf4-25c0138cc4f0",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "af9cf5c9-8e4e-44ab-80c1-3344fbdbb4d0"
        },
        "item": {
          "id": "24b80f4f-bad5-4606-8b72-97e11b34fa3e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6cdc955b-7982-47a6-9c38-f64ea21fbc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f6be46-5f90-4b81-86b9-658e729c230b",
        "cursor": {
          "ref": "0a7dcb74-b70e-4fd9-bd21-a6ab7c7847bb",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d8e2eba9-2e66-4bf2-8440-f05c2f3e4def"
        },
        "item": {
          "id": "49f6be46-5f90-4b81-86b9-658e729c230b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a96da5f1-8e9f-4296-b39e-eecfc29afef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92d17a9-ef3b-4c0a-9ea1-86f3c1278013",
        "cursor": {
          "ref": "0476b557-055b-463b-b7cf-847f845db875",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c5cafd7e-fd55-4b1f-84ec-6cb4f9c5198e"
        },
        "item": {
          "id": "b92d17a9-ef3b-4c0a-9ea1-86f3c1278013",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "39851319-9026-4111-acc4-ffa4a3b389fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc04387e-b6fb-45df-a023-0c1a74eaa32b",
        "cursor": {
          "ref": "6fc7d06b-02a0-4591-952b-cbc0792787ce",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3daad0f6-a13d-42b6-b87e-daae1b80022a"
        },
        "item": {
          "id": "cc04387e-b6fb-45df-a023-0c1a74eaa32b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "81fbc1cd-a2d9-4e21-9481-269d95f24107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce0e9d8-0cdd-4ab0-a226-f556b776fefd",
        "cursor": {
          "ref": "13c58050-1274-4fa1-a8bd-f7cc2c245306",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "eb73bbe9-78bc-4c1a-9a59-cbe7263d49ac"
        },
        "item": {
          "id": "0ce0e9d8-0cdd-4ab0-a226-f556b776fefd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "29e51783-b206-4277-93d8-6a7ab814c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dd8a6b-ada2-4580-94cc-05ab50a0d04d",
        "cursor": {
          "ref": "3bdcfe67-faf1-4263-9570-8f7553bff70e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "72bc755f-8499-4e44-a740-e134c3751106"
        },
        "item": {
          "id": "c6dd8a6b-ada2-4580-94cc-05ab50a0d04d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a1e2c5ca-f4e6-4353-88ad-b32ead6c49fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204dc57d-0cff-4a49-913e-d82fcb6324e4",
        "cursor": {
          "ref": "4adcb4f1-37d8-4a17-915e-b688ce691a08",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c5593fb7-cb2c-4546-9f74-9200c45e4128"
        },
        "item": {
          "id": "204dc57d-0cff-4a49-913e-d82fcb6324e4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "592d6796-fc7c-4fd3-89dd-876ce731ff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3bed4a-4e86-4d92-bd9d-1082066fdd21",
        "cursor": {
          "ref": "1dfaafd6-5818-4f5e-8ab3-b98a4345cc1a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3c06638a-8700-44e6-b851-b77bdb8d93ac"
        },
        "item": {
          "id": "5f3bed4a-4e86-4d92-bd9d-1082066fdd21",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9e0e30fe-04ad-4f79-b397-3f1bd083983e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df13e25c-c31c-4cbf-b681-0cb8f381ec54",
        "cursor": {
          "ref": "d682a84a-f306-454c-af4c-2159132ca3b3",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a5bf0701-28af-4c33-8d9d-faf1e7ccc994"
        },
        "item": {
          "id": "df13e25c-c31c-4cbf-b681-0cb8f381ec54",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "241e7ac1-825b-482e-a7db-cb56042f225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b89c69-0eda-4c26-9ab2-6c79a1e6d2c9",
        "cursor": {
          "ref": "21c12aad-b138-44bd-971d-df60e8494d0d",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "19c2bb32-86d5-432b-88b6-d15bd2fd2f2d"
        },
        "item": {
          "id": "71b89c69-0eda-4c26-9ab2-6c79a1e6d2c9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "94b68327-9304-4770-8d9e-e27e20185cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39945f1b-9f61-4287-a088-6653af268f41",
        "cursor": {
          "ref": "fba4f4b9-f9d5-4344-a374-6bd4f0d74bd0",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b1dc7ca2-f89e-452a-b94a-3c5ba5a5d84d"
        },
        "item": {
          "id": "39945f1b-9f61-4287-a088-6653af268f41",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "218e804a-cbfb-4b8e-838e-8a9f5c86e735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98c2f76-3ef4-41fb-987a-8775254eb7a4",
        "cursor": {
          "ref": "3f1fe00a-6275-42d2-990e-c25c6e580ad6",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "99b4f121-e1a2-41ea-b0e9-0029b245d95a"
        },
        "item": {
          "id": "c98c2f76-3ef4-41fb-987a-8775254eb7a4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0ed5a686-856c-4949-a6b5-87a58caa85f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514e661c-a20f-430b-946f-eb0ba179d066",
        "cursor": {
          "ref": "3dd85bf4-5dde-4111-b725-ac0631cab6b5",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "116d3435-8a7d-4d55-b4c5-b1cd0bfff55d"
        },
        "item": {
          "id": "514e661c-a20f-430b-946f-eb0ba179d066",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "677a837c-51e9-4391-8170-83cc8b967556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb04da42-5c1e-4c1f-b632-516fc9b3b84c",
        "cursor": {
          "ref": "8ce18370-345d-4cbd-ae2c-af6cf8adcc9c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "160da1f9-2823-4241-bb60-ea81cb2073ee"
        },
        "item": {
          "id": "cb04da42-5c1e-4c1f-b632-516fc9b3b84c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3e4263c0-23af-469c-bd08-6f83f241a6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6f2a65-6e7a-4843-a123-c5b64f0c82c3",
        "cursor": {
          "ref": "3759c19e-7944-458b-8b3e-930e82cc8909",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c36e4e17-1d85-4c3c-996f-2bdcca954bb3"
        },
        "item": {
          "id": "2d6f2a65-6e7a-4843-a123-c5b64f0c82c3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fc8282d1-7f1a-428e-aced-662c69f00347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d784f9fb-159b-458e-a3c6-6a866fdedfb9",
        "cursor": {
          "ref": "22cc9412-26a0-4603-b086-3fe5e830e509",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a542f6ef-e754-47b2-8e61-8dbd438aa5b7"
        },
        "item": {
          "id": "d784f9fb-159b-458e-a3c6-6a866fdedfb9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2d84ddb7-d7a9-4239-b319-95185306235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d432c5-b72b-4753-ac1f-d7c5ac2d1918",
        "cursor": {
          "ref": "edfa82f5-6588-4f18-b07b-9e3506180856",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8a3860e4-b910-4b57-9857-0ec26010f93c"
        },
        "item": {
          "id": "34d432c5-b72b-4753-ac1f-d7c5ac2d1918",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dea0c622-5456-4d08-b39b-691f76fa7a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fad0e3b-dd86-40db-b6ad-d062abc9753c",
        "cursor": {
          "ref": "059d15cc-4069-4ffe-a896-a9a44979de32",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9bd675dd-669f-4c88-abf9-c7d15ab47f48"
        },
        "item": {
          "id": "8fad0e3b-dd86-40db-b6ad-d062abc9753c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9544d193-347d-4d43-9a1d-c7cd6ace9327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9903d0f-7e96-4ebc-b399-fd07470b0853",
        "cursor": {
          "ref": "5b63de4d-81db-45d9-a7ec-38d2d829cd6b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4250ecc0-ca39-4f8f-b8e0-c08caa04e68b"
        },
        "item": {
          "id": "c9903d0f-7e96-4ebc-b399-fd07470b0853",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5c392ef3-89fc-4c57-a533-1c3de1427513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe39a31b-520a-4c89-8543-07c60e5d6128",
        "cursor": {
          "ref": "e60f196c-27d3-41d2-9638-ab97961ba189",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c26d0905-656c-4d21-a678-c51258ef4164"
        },
        "item": {
          "id": "fe39a31b-520a-4c89-8543-07c60e5d6128",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1a46dac3-a604-4a36-9143-1f005793594b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e271799-95dc-403a-8086-0c8859225b22",
        "cursor": {
          "ref": "9d77d5f1-41f4-4151-9b2a-c94569d628bc",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fb708ad2-3f06-4342-818d-d47d2318aeb9"
        },
        "item": {
          "id": "4e271799-95dc-403a-8086-0c8859225b22",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5687fb43-133b-4232-b2e6-24eda7a08ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e48cc6-97c6-4bcd-8919-7da61041e684",
        "cursor": {
          "ref": "17f09fbe-efa3-4f95-8d24-3b853d7486ff",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "63b1c821-5333-42ae-a1eb-81c105a880f8"
        },
        "item": {
          "id": "b4e48cc6-97c6-4bcd-8919-7da61041e684",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "68763569-80e8-4b31-8d79-5aed86cf88cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973b8a17-e76d-4eca-810b-81cc5f440e7d",
        "cursor": {
          "ref": "a8dfa0c6-e9ca-4048-b188-efe431a6b9c9",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "192cc946-a735-4f4f-b0aa-07b356aff55b"
        },
        "item": {
          "id": "973b8a17-e76d-4eca-810b-81cc5f440e7d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "18f3dcb9-7dda-4c37-b17a-ae7db7945ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eefc54c-607e-46da-9e82-e62c9166a6b8",
        "cursor": {
          "ref": "860c5ed9-791a-45fb-b5b0-a93552b6f92f",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d7a2fdad-55cc-415b-b599-aa2d20b47ec7"
        },
        "item": {
          "id": "0eefc54c-607e-46da-9e82-e62c9166a6b8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3ec22ac1-d9b8-4cbe-ac39-99529994a787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b86d9-cba4-45a7-acfa-c694a4ebff8f",
        "cursor": {
          "ref": "6fd84b81-b670-4464-8507-8a2d4cf2f4b5",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "953ebf16-afe5-4103-9b11-c09b80a95a08"
        },
        "item": {
          "id": "ae4b86d9-cba4-45a7-acfa-c694a4ebff8f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dd36f79e-7e8a-4607-bc3f-6d34d7fabeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a1220c-9f16-4d4a-842d-7fd2b4194b47",
        "cursor": {
          "ref": "344791d7-8ff6-4652-9c56-80389118c9b8",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7d5d1224-0133-4685-ad02-1524dd3932a9"
        },
        "item": {
          "id": "40a1220c-9f16-4d4a-842d-7fd2b4194b47",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2f1856bb-e16d-4fe5-8a77-7a8b8ef2c954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f714bc2-f23b-467a-9475-8c72da0a00ed",
        "cursor": {
          "ref": "8b84902e-31cf-4167-8f73-7cf199049399",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d85c4bcf-0d0c-4b4b-a846-7a08d08f67c0"
        },
        "item": {
          "id": "8f714bc2-f23b-467a-9475-8c72da0a00ed",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1ae8a4b3-8f6b-4b4f-8115-b744002e4362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ad3985-f140-4fa3-8433-cc1c2fdcedb2",
        "cursor": {
          "ref": "cefc5a4c-0c7c-4f17-83bd-e59536c92edf",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2dc4c3f2-a1e3-41b3-a9a7-36a924a6e152"
        },
        "item": {
          "id": "e5ad3985-f140-4fa3-8433-cc1c2fdcedb2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cba4662f-0e21-469c-b008-7ba640395504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01902d92-3c77-48f8-9457-4048fadd4906",
        "cursor": {
          "ref": "989de989-cabb-4bf2-9c3d-34d801a42922",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "87864013-8b52-4136-9880-2e1431d2c44c"
        },
        "item": {
          "id": "01902d92-3c77-48f8-9457-4048fadd4906",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3763b4c8-2a06-4965-8a31-272fc2227170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d735f0-9016-41b8-878c-82be9220b929",
        "cursor": {
          "ref": "ad68a8ae-cdb8-4938-b014-54ea45d3ec2c",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ebd86ca6-771d-48a2-9678-b5d6400808d5"
        },
        "item": {
          "id": "03d735f0-9016-41b8-878c-82be9220b929",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4fcd9ea9-7124-4a2b-a855-8891402d74ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862bae31-fa2e-405c-b17c-0a52646fba02",
        "cursor": {
          "ref": "e4324705-5037-4684-bcf7-2fd7181e3511",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4fc0666c-566a-4f38-8b09-533f45d44c9d"
        },
        "item": {
          "id": "862bae31-fa2e-405c-b17c-0a52646fba02",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f5a41e0b-90b9-4811-9f40-f3a381a9e092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee07c2a0-7e0a-424e-87d2-e21998299037",
        "cursor": {
          "ref": "6fe46665-3919-4bd9-99ea-59c61cdc1730",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8c769860-0a25-4bfb-82b3-bac96066ab0b"
        },
        "item": {
          "id": "ee07c2a0-7e0a-424e-87d2-e21998299037",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "af553ae8-8db9-472f-805a-9d3c7934accf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c548c9dd-e652-47b9-ac06-17ad7b0fe0cf",
        "cursor": {
          "ref": "9e326a9b-99b8-41e4-8334-b4271e49cd39",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7d1330ed-4cdf-47d3-9103-a95a8f650535"
        },
        "item": {
          "id": "c548c9dd-e652-47b9-ac06-17ad7b0fe0cf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eb1b27a5-a05d-4524-a9e4-629abd5c4da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bb3e66-f78e-4b52-bff9-5a37ec54cbf8",
        "cursor": {
          "ref": "2ef22321-3ed7-4dcd-9288-5318c10d53d1",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "22f6237a-f89f-4f68-8a7e-f9d389f52fe4"
        },
        "item": {
          "id": "54bb3e66-f78e-4b52-bff9-5a37ec54cbf8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8ab78ec1-caec-4f1f-83b5-c6960ffe1b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f95c6e-d701-4307-aacc-84d2b3173435",
        "cursor": {
          "ref": "4c987dd9-140f-425f-a7b8-fc738d33f964",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "422e1f88-9f00-444a-bdb1-1d1c2596ac0a"
        },
        "item": {
          "id": "23f95c6e-d701-4307-aacc-84d2b3173435",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b493c631-da5e-4adf-b5b2-cceadedd566c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e997d5-5060-4066-b4b7-f072a947bd72",
        "cursor": {
          "ref": "278c2fe5-dd9a-4639-b978-61e0317ea2c1",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fd3ecc46-f102-4b52-ac82-b15c47e8c8f3"
        },
        "item": {
          "id": "78e997d5-5060-4066-b4b7-f072a947bd72",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5978931d-daae-4196-8cab-8dee8d917ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10324903-7929-4397-bac2-9d929508a1ff",
        "cursor": {
          "ref": "4e916e2c-3ddf-43b9-9e00-261fef8a17f3",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7da47f7e-6433-4410-8fa0-aa247acf24f0"
        },
        "item": {
          "id": "10324903-7929-4397-bac2-9d929508a1ff",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "82f27944-d029-4de0-9023-8ffab2007ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba74a4d-0963-4459-bd28-935dc3cafec4",
        "cursor": {
          "ref": "b787c545-5e1f-4690-aaa4-b725df4759b1",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c2cf3c3-3b04-4ae4-b105-e2eff487c32d"
        },
        "item": {
          "id": "9ba74a4d-0963-4459-bd28-935dc3cafec4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c58eb719-ba5f-4be0-aa2d-75f8416629b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4b87dd-f009-495a-98ef-69dadc36200a",
        "cursor": {
          "ref": "e8c0e6da-726b-4462-bf0d-8cbbe4cfcde1",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e0294fd0-0763-410f-ab8a-a373e0eb01f9"
        },
        "item": {
          "id": "4b4b87dd-f009-495a-98ef-69dadc36200a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "440b2c50-53cb-43d2-8a61-6300e896baa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4c332e-31d0-4c22-a94d-ea4a79836456",
        "cursor": {
          "ref": "104704d2-64f8-4451-8919-814cf2724592",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b41aebf2-e43e-4bbe-9e7a-9737f8c3a4db"
        },
        "item": {
          "id": "fd4c332e-31d0-4c22-a94d-ea4a79836456",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e2ef17d1-01d4-46af-93d3-bb7f5915a6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0674dc8b-1be5-4c02-8d72-4637b3a4a553",
        "cursor": {
          "ref": "84174bbd-0286-4869-bee8-f572849f305e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "31def523-01b1-4573-ac01-0355cd86c7af"
        },
        "item": {
          "id": "0674dc8b-1be5-4c02-8d72-4637b3a4a553",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0d21e168-5b2b-4fc7-88e7-4725fec9c414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca54f7be-069d-4558-b634-1c03c62eafa0",
        "cursor": {
          "ref": "fde4ed89-37d1-4730-982f-f1824663c44a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1076b7ff-23c4-4d04-9a6a-c79e18b7620e"
        },
        "item": {
          "id": "ca54f7be-069d-4558-b634-1c03c62eafa0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0e1ab416-3e12-451c-b1f6-52de676c3e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20218faf-236d-40c5-90fd-50969a943120",
        "cursor": {
          "ref": "46c9f69a-4928-4d27-870e-02567b085983",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fe987e5c-c81b-4c3f-8cfb-3a4e2da0bf18"
        },
        "item": {
          "id": "20218faf-236d-40c5-90fd-50969a943120",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3da2e0fe-6c6f-4064-b748-01a637dbdea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c8f886-1c02-45e1-8f58-f22192afdd43",
        "cursor": {
          "ref": "e31efc1c-51f0-4c65-95e3-0d75cb603a14",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c8fa9be9-2cca-4a7e-844b-ecbd09589161"
        },
        "item": {
          "id": "d0c8f886-1c02-45e1-8f58-f22192afdd43",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "36e55a2c-4f97-4f5d-b017-1c78513c3623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b267a1d-2190-43ce-9614-3fea0ffc5425",
        "cursor": {
          "ref": "fd6f199c-9a36-462c-9c45-7c25f531978c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b79b4c2b-d859-4a64-a4a3-cef67c34bc3c"
        },
        "item": {
          "id": "2b267a1d-2190-43ce-9614-3fea0ffc5425",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b7a94b5f-2d93-41a0-8630-236dc1855b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c15b26-b2bf-4ddf-b9c5-9734e7f97369",
        "cursor": {
          "ref": "fd08a1e5-11fa-4c9f-8876-9d643e73e372",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f03ffbcf-a273-41c4-8c5f-226e8758393e"
        },
        "item": {
          "id": "18c15b26-b2bf-4ddf-b9c5-9734e7f97369",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2d457226-e895-471a-93d2-b21fc499ed81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212c54cf-7825-4cd0-bf65-eca15179d69d",
        "cursor": {
          "ref": "9daa77b2-7871-46d7-8607-cd0d62b51da4",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6342ef6a-276a-46f4-af9a-45774fdc54cd"
        },
        "item": {
          "id": "212c54cf-7825-4cd0-bf65-eca15179d69d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "60ccbe17-fc20-4e8f-a5c9-5b75a1e53c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76045367-299c-4480-a085-cc498981653a",
        "cursor": {
          "ref": "b0b3be88-31f8-4d88-a4b7-c0c0eea3daf2",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1b0a73e7-0b8f-4bf9-8d25-6852223b4bf8"
        },
        "item": {
          "id": "76045367-299c-4480-a085-cc498981653a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ec75a9f2-596c-4e80-b7fd-6ecd88790c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dd6c5e-dc7a-4729-a1c8-d5f8b3425311",
        "cursor": {
          "ref": "cc03f896-f8f5-4eab-b1ff-fa91a0dd3e78",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "361a4c5e-743c-4340-8157-14fb5b22fc7d"
        },
        "item": {
          "id": "27dd6c5e-dc7a-4729-a1c8-d5f8b3425311",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5c8ad336-027e-44c2-88e1-155b232df014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4404b8bb-3c35-4a1f-b0b9-c65a9c25fd4d",
        "cursor": {
          "ref": "be75dde3-7f23-447c-ac6e-339bdbce9989",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2777dfe4-1626-49ad-96cd-05339c3806b1"
        },
        "item": {
          "id": "4404b8bb-3c35-4a1f-b0b9-c65a9c25fd4d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "91381787-f56e-4ceb-a548-b1977a6620cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2443c9b4-6d56-4692-a15e-778fe8c1f302",
        "cursor": {
          "ref": "fe12d659-45b2-4920-87fc-dfaa6d452bf2",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dd369ea5-5a82-4a19-9805-97ab64797112"
        },
        "item": {
          "id": "2443c9b4-6d56-4692-a15e-778fe8c1f302",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d079decd-2540-4125-b258-67a49f1f520c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d8fa60-d9c0-4fe0-8f51-d579002029e4",
        "cursor": {
          "ref": "e61caf07-6417-466d-8a50-ff12537db4ba",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5bdf4faa-fad7-43c5-9803-64d05c6c7198"
        },
        "item": {
          "id": "d8d8fa60-d9c0-4fe0-8f51-d579002029e4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c3dc01c0-d606-4edd-a971-4e2f15c4d8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2f817c-b9a8-48b2-9916-f7f573cf8ab1",
        "cursor": {
          "ref": "ad42073a-93d0-4f12-8778-ab6a6d7194e9",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "68f52435-a2bc-46d7-a606-92bede2de692"
        },
        "item": {
          "id": "7b2f817c-b9a8-48b2-9916-f7f573cf8ab1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fc52e72e-1d20-4676-8a8a-554b11663a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba8632d-2f8b-4f5e-8746-7cccd6f90521",
        "cursor": {
          "ref": "340e0529-8a31-4dfb-88ef-53a37fc53367",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "192cf94a-7417-48d8-9af4-4fb20d943205"
        },
        "item": {
          "id": "dba8632d-2f8b-4f5e-8746-7cccd6f90521",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b24f8701-707b-49f3-b0e2-a4e45189b92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bdc744-4482-4ebd-ae39-d46a3a5cd4a4",
        "cursor": {
          "ref": "0e915f16-c770-4bda-98ab-10ad6576f50b",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "af336349-6028-4e61-8ec5-d6195db52c85"
        },
        "item": {
          "id": "53bdc744-4482-4ebd-ae39-d46a3a5cd4a4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "29285593-b41b-409b-9ceb-ae89a00fc9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3605a023-e145-4c9b-a7df-78c41601de0c",
        "cursor": {
          "ref": "0561d76a-e41b-4860-94a2-6c38491a0b7c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c0826b18-dc9d-4c0f-a7ce-8cc868bcee1b"
        },
        "item": {
          "id": "3605a023-e145-4c9b-a7df-78c41601de0c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "abdcde2e-6e9f-45f4-aa7d-b108f654c1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804fc278-6386-43cf-bd89-e812f0615dca",
        "cursor": {
          "ref": "66d7cbaa-7712-4257-91f6-0623a4b79772",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aa8659fe-74b2-4b3f-9560-9bb3db041649"
        },
        "item": {
          "id": "804fc278-6386-43cf-bd89-e812f0615dca",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e57cc43a-de67-4c78-90e7-3fa72c1b8f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950c8768-9ba3-40f7-850f-3cd915e1bb5f",
        "cursor": {
          "ref": "354c20e3-4507-4b4c-a130-cb273dc1e687",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "25613803-9193-4e24-a4a5-f38f164db3be"
        },
        "item": {
          "id": "950c8768-9ba3-40f7-850f-3cd915e1bb5f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d6f8ef73-dbd6-4ac6-aa68-1e66eb8ba6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9451bd5-b6eb-411d-890a-f11e13d058fa",
        "cursor": {
          "ref": "53730b50-d3c8-4150-b255-1460ffdc739e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a93ecd1b-7f58-4b90-a419-7b4adf2f2116"
        },
        "item": {
          "id": "c9451bd5-b6eb-411d-890a-f11e13d058fa",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c2dc50f8-a98e-4e77-88f9-5db88ca4dea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f46eda-ee4a-450c-b869-a6fea970d481",
        "cursor": {
          "ref": "4baa968f-252c-45d2-9f15-4d081307ce4a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fce6dada-c691-421b-91dc-b75fe5b71a2c"
        },
        "item": {
          "id": "47f46eda-ee4a-450c-b869-a6fea970d481",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f474cecb-5007-4eae-b194-9dbcd70a0201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745d9406-ef0b-4cd3-8f57-464c833c1666",
        "cursor": {
          "ref": "7637463b-660e-45d5-9f8b-757f15bd6f20",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3a3cdf84-a17b-4745-89b8-198d3da5fd10"
        },
        "item": {
          "id": "745d9406-ef0b-4cd3-8f57-464c833c1666",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d6df8ad5-3425-45fa-8e71-cdd5f9a3c8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74327b91-2dd7-461e-8927-c9c31efb7920",
        "cursor": {
          "ref": "708ba850-260b-4be9-a149-4a101d5b5896",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1937751b-7422-415f-86d7-b30b55be8c9a"
        },
        "item": {
          "id": "74327b91-2dd7-461e-8927-c9c31efb7920",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4ae00f58-caf7-40f3-a265-814d3f9b456a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc625c50-f08b-43a6-b43b-86803bc30182",
        "cursor": {
          "ref": "ccd52df2-0364-4f02-b2f3-41fbc267e606",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "272663ad-54fd-4d36-baf8-24eb2fec614c"
        },
        "item": {
          "id": "bc625c50-f08b-43a6-b43b-86803bc30182",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4587be5c-b5b4-4222-975e-6b5a89274b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25367b1f-8c81-4064-b535-7eecd63243b7",
        "cursor": {
          "ref": "c0977cc1-d3c4-4ade-98ee-d84412a88b4e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "44a950a1-c592-4aac-a578-fa76dcf834d9"
        },
        "item": {
          "id": "25367b1f-8c81-4064-b535-7eecd63243b7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6758bfdf-f2d9-49a9-a16b-c5901630184a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a3f221-b933-4c40-8801-0597b221260e",
        "cursor": {
          "ref": "afcebf95-8254-467e-af5c-44cec040a855",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "52dc6cd6-8ec1-43a2-bc30-dce784d31e8f"
        },
        "item": {
          "id": "49a3f221-b933-4c40-8801-0597b221260e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bfbcc98a-23e8-4cfe-b765-3a0a58eb0fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7471ac1-873e-463b-b4bb-5b4a95ce10bd",
        "cursor": {
          "ref": "65503f83-6d52-4dd5-b068-3e1b2aaaf5c8",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b6dca8e6-bc99-4333-8ffb-f5c9799b90c6"
        },
        "item": {
          "id": "b7471ac1-873e-463b-b4bb-5b4a95ce10bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "594d147f-46ff-4e8f-81cb-be37816ae7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8ba0f6-90bf-4e63-bfb4-e16eefb312f7",
        "cursor": {
          "ref": "022def00-ae6a-4eb6-b207-f1a25ba552e8",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a9f19dc9-332d-4d7f-8127-84abc0bed9c9"
        },
        "item": {
          "id": "da8ba0f6-90bf-4e63-bfb4-e16eefb312f7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fba17d5c-2960-488d-8294-3d18c86aa402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d068193-0040-479d-ae2a-cf26a4bc0efe",
        "cursor": {
          "ref": "a5c1da15-f962-484e-bd33-716626b6f8ba",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cf0f298f-1914-4e95-b3fc-c79e6bdc82ff"
        },
        "item": {
          "id": "3d068193-0040-479d-ae2a-cf26a4bc0efe",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9d0997a0-7ed1-427b-b019-f2b9fa42783c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f71c7c-97bb-4e1f-9db8-05af1665aeb3",
        "cursor": {
          "ref": "df1be78f-bffe-4f66-805f-aaf3e5673b45",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ed4df972-5a52-420b-b978-0535c648970a"
        },
        "item": {
          "id": "82f71c7c-97bb-4e1f-9db8-05af1665aeb3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "90f28da4-8f75-46b0-8b9b-5ec6c1ae9a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3161896e-6ea6-42fa-a144-80d2220b733a",
        "cursor": {
          "ref": "b3a9eeb5-4773-4f54-a42b-062e087b1376",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "650fdfdc-b1f9-477a-a731-805184394a3f"
        },
        "item": {
          "id": "3161896e-6ea6-42fa-a144-80d2220b733a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "58cc1227-daf0-4077-a1a1-f5a642ddd3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cce080-0a10-4e2b-af2e-7859906506d7",
        "cursor": {
          "ref": "90d823ea-9c85-4ae4-aefb-ecbf12c4aab1",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "03c083fb-e4cc-44ec-9c1c-7adb6fae2406"
        },
        "item": {
          "id": "96cce080-0a10-4e2b-af2e-7859906506d7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3d282bd7-e69b-4f97-950d-21238c12795f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c054255a-4105-4c66-9598-8f947018892f",
        "cursor": {
          "ref": "2874a13c-8354-4214-8d5f-d08dca7bf7fe",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9bb39bf2-bd9f-4783-abd1-ff59f2f1f8b5"
        },
        "item": {
          "id": "c054255a-4105-4c66-9598-8f947018892f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9ff143f4-ef0d-4301-a63e-7451d02dcc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9bbd70-cf7a-4975-b9a4-332f65fb2db3",
        "cursor": {
          "ref": "b5b21bee-673c-4e3f-97a5-ab49bc1502c4",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3119a952-06af-41d2-90ac-77fcadefb8f6"
        },
        "item": {
          "id": "5b9bbd70-cf7a-4975-b9a4-332f65fb2db3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b01b1155-c8e1-4463-9f5a-c43d0c94dc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a68578-cdb6-4579-aa50-1080edb319f4",
        "cursor": {
          "ref": "9d90e173-1a50-46c4-a0e3-4d2edea44104",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "16f33b8c-24c6-40fc-90fc-42c3cf57b84b"
        },
        "item": {
          "id": "63a68578-cdb6-4579-aa50-1080edb319f4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "afbed68a-7391-49a8-be2d-40250a88583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300cea3e-34cb-4ebf-a8f0-e0c5a2a830d8",
        "cursor": {
          "ref": "fd937bef-70b0-45eb-85e7-cd280f863c07",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e7290fb7-f21e-4ab7-b51a-e1434b510131"
        },
        "item": {
          "id": "300cea3e-34cb-4ebf-a8f0-e0c5a2a830d8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cf3f82f9-45ad-4d02-84b5-c1c735208465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a233b8f5-5be0-4433-bdbb-9b90ad1553b1",
        "cursor": {
          "ref": "15ab3594-5423-427a-bf3e-2dcc95e73dc0",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1555f2dd-85e9-4a95-b9f2-51758b1089f2"
        },
        "item": {
          "id": "a233b8f5-5be0-4433-bdbb-9b90ad1553b1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aa9b4057-85b1-4bc1-9781-dc58bce29da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3637fa1a-d849-41e6-9bbc-8c3a49399f3e",
        "cursor": {
          "ref": "dd4933de-e826-46a5-9334-35f6d5912908",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "69bf20e2-f924-49c4-96a6-e1b30cfadbcf"
        },
        "item": {
          "id": "3637fa1a-d849-41e6-9bbc-8c3a49399f3e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "03a7878d-731d-4ed0-9d01-c2a6e868f359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086c33f2-9dc5-4ba0-8296-d67508f99297",
        "cursor": {
          "ref": "15a50c79-8902-4b2a-958e-bccb7c2e589d",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5b44fa45-5225-4b5f-b8bc-5ad5b80d7009"
        },
        "item": {
          "id": "086c33f2-9dc5-4ba0-8296-d67508f99297",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7c3493da-45ca-45c3-9ea8-b9a72c840f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f404bc1c-e596-4449-9410-6d20cc8795ae",
        "cursor": {
          "ref": "e1aad83d-6d40-4122-a396-e0d10bfc9154",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2988bcc8-3460-4cdc-ab92-dce8a93339f9"
        },
        "item": {
          "id": "f404bc1c-e596-4449-9410-6d20cc8795ae",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "df4d0308-de1c-4f96-9abe-eecd42279e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72927083-0066-4009-ae48-293bc8929e47",
        "cursor": {
          "ref": "16b65e02-fe8c-4832-8837-80fdb4e8aa6a",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6cadce92-334e-4a40-850b-7d9ab27cb41c"
        },
        "item": {
          "id": "72927083-0066-4009-ae48-293bc8929e47",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a2980f1d-a72c-40b3-bc23-3ec23167e9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb84f943-de60-4dcb-b8fb-95088940e392",
        "cursor": {
          "ref": "f43b08b7-cc14-4eeb-b3b4-59e2f0ea604f",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "74c2abf1-6863-44d1-9d05-bc07a5a2ceaa"
        },
        "item": {
          "id": "eb84f943-de60-4dcb-b8fb-95088940e392",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "21c51ebb-f682-4104-bf80-29bf24374258",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b24f6f7-3aea-4bfc-a6eb-207c8cb31403",
        "cursor": {
          "ref": "6bd08ffb-3c6b-4cf1-a3bb-9d7bf6919909",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "44e4a4c9-38cf-455f-8465-8c9b52b0c30d"
        },
        "item": {
          "id": "3b24f6f7-3aea-4bfc-a6eb-207c8cb31403",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e78e7df7-ff7b-4926-a97b-c06089881818",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe033ea-420f-4f8e-924b-22f3c45f4d02",
        "cursor": {
          "ref": "ca714890-8db5-4bad-a959-e8716f6079b9",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1fa0abb6-2b8a-42e3-b5c7-a70917e1c64b"
        },
        "item": {
          "id": "9fe033ea-420f-4f8e-924b-22f3c45f4d02",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5864ca07-53ab-4ae3-b498-38e1caaac031",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "725cf614-1095-48cb-aeae-edfffad35f7b",
        "cursor": {
          "ref": "b0a448a7-e37c-418e-884c-bafed4c65b18",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9c004604-b069-44c9-9a5e-b1a0b1a7f651"
        },
        "item": {
          "id": "725cf614-1095-48cb-aeae-edfffad35f7b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8b6d9b41-0cfc-4da4-9001-ea323be18fd6",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c3cbba-4df9-428b-b604-c2722c2f6333",
        "cursor": {
          "ref": "588adc31-d681-4812-980d-665c40e8bcd7",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8642406a-f51c-46b1-95e5-f83cac621cf4"
        },
        "item": {
          "id": "82c3cbba-4df9-428b-b604-c2722c2f6333",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0890bbb7-20ce-41b5-b40f-da63f63dab38",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c9a2c-0bb9-4422-86bb-570baab28e82",
        "cursor": {
          "ref": "cf6831b6-8a36-40ab-b1d1-56838c74bc14",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1e854ec2-b9fe-459d-bd67-85874b42fcab"
        },
        "item": {
          "id": "964c9a2c-0bb9-4422-86bb-570baab28e82",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b0de73e8-8e59-4fe0-947b-688ee90133c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c9a2c-0bb9-4422-86bb-570baab28e82",
        "cursor": {
          "ref": "cf6831b6-8a36-40ab-b1d1-56838c74bc14",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1e854ec2-b9fe-459d-bd67-85874b42fcab"
        },
        "item": {
          "id": "964c9a2c-0bb9-4422-86bb-570baab28e82",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b0de73e8-8e59-4fe0-947b-688ee90133c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c9a2c-0bb9-4422-86bb-570baab28e82",
        "cursor": {
          "ref": "cf6831b6-8a36-40ab-b1d1-56838c74bc14",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1e854ec2-b9fe-459d-bd67-85874b42fcab"
        },
        "item": {
          "id": "964c9a2c-0bb9-4422-86bb-570baab28e82",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b0de73e8-8e59-4fe0-947b-688ee90133c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc8c08e-349d-48b8-8049-a8eea493ed4b",
        "cursor": {
          "ref": "ad5e7b1e-d5f8-4657-af5f-5925e3d3d6bb",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fbce41e8-8374-4724-a162-ea9de2205fcc"
        },
        "item": {
          "id": "5cc8c08e-349d-48b8-8049-a8eea493ed4b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8390f66d-6db6-4b73-b63d-b76e76cae349",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0f65db-6a1d-4037-b40e-62db8fdf55a1",
        "cursor": {
          "ref": "f5d59bf6-42c1-433d-88c5-160a9bef1430",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "43baa6f0-88a1-485e-8395-ef241a036d83"
        },
        "item": {
          "id": "3d0f65db-6a1d-4037-b40e-62db8fdf55a1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ce8a74b0-0f61-44a2-8f3e-6e4a140fb2f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0f65db-6a1d-4037-b40e-62db8fdf55a1",
        "cursor": {
          "ref": "f5d59bf6-42c1-433d-88c5-160a9bef1430",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "43baa6f0-88a1-485e-8395-ef241a036d83"
        },
        "item": {
          "id": "3d0f65db-6a1d-4037-b40e-62db8fdf55a1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ce8a74b0-0f61-44a2-8f3e-6e4a140fb2f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e31233-e8ec-4ca8-8b1c-fcb624e5f507",
        "cursor": {
          "ref": "2ccb0ec6-9f17-42cc-8cad-334d423bb301",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9f77a1d3-cf22-49a7-9f1f-471eda7dc43b"
        },
        "item": {
          "id": "82e31233-e8ec-4ca8-8b1c-fcb624e5f507",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "132e8841-f805-4a97-b0b2-731f6164e817",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a11530d-9350-4b64-a3e6-0c85566b31f8",
        "cursor": {
          "ref": "371c4580-c479-465d-ab7b-6d07beacb04f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eb76833e-e02c-44c9-8be9-5a06ae5c6c6d"
        },
        "item": {
          "id": "6a11530d-9350-4b64-a3e6-0c85566b31f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0bb150f6-f929-4584-9e68-94370e989d57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a11530d-9350-4b64-a3e6-0c85566b31f8",
        "cursor": {
          "ref": "371c4580-c479-465d-ab7b-6d07beacb04f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eb76833e-e02c-44c9-8be9-5a06ae5c6c6d"
        },
        "item": {
          "id": "6a11530d-9350-4b64-a3e6-0c85566b31f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0bb150f6-f929-4584-9e68-94370e989d57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb19cd5-11c7-4f75-921e-e3f502e59ad8",
        "cursor": {
          "ref": "a3d1d90c-0e00-4e2e-99f2-56274957787d",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8dcc1aa5-a39c-485a-837d-85def2e9fc7e"
        },
        "item": {
          "id": "9bb19cd5-11c7-4f75-921e-e3f502e59ad8",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ff26e145-afac-4951-9878-fdc20415c83b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}